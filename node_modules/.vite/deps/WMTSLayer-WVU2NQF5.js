import {
  o as o4
} from "./chunk-HV6PC35G.js";
import {
  e as e2
} from "./chunk-MQXPIPUN.js";
import {
  L as L2,
  p as p3
} from "./chunk-N2V6CKSK.js";
import {
  o as o2
} from "./chunk-IUXYWQJG.js";
import {
  o as o3
} from "./chunk-PODY5IF6.js";
import {
  j as j3
} from "./chunk-P46VVEIN.js";
import {
  p
} from "./chunk-X34I34RW.js";
import {
  a as a4
} from "./chunk-5NBE4HDI.js";
import "./chunk-4NLQ63FV.js";
import "./chunk-Y7HVH6RU.js";
import {
  t as t2
} from "./chunk-2HDAD5Q3.js";
import {
  c
} from "./chunk-PPU6QR6F.js";
import {
  O as O2
} from "./chunk-PCVJI7J2.js";
import "./chunk-HZHMZHPT.js";
import "./chunk-JDYLSHC3.js";
import "./chunk-NYLF7BL2.js";
import "./chunk-32JSK7KN.js";
import {
  j as j2,
  p as p2
} from "./chunk-PX3FFFQ5.js";
import "./chunk-Y2ZDD3I4.js";
import "./chunk-42RWGG3D.js";
import "./chunk-OO4A3EBQ.js";
import "./chunk-SO6DBMQG.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-QXGO5RRL.js";
import "./chunk-EIE3W25Z.js";
import "./chunk-7KM4XBUC.js";
import "./chunk-OZXJDVTE.js";
import {
  b
} from "./chunk-XU2Q4SCK.js";
import "./chunk-KIEN3CY2.js";
import "./chunk-7E3Q7HTF.js";
import "./chunk-GJ5WE5D3.js";
import "./chunk-Y2CLYMXQ.js";
import {
  V
} from "./chunk-4RFFPIT2.js";
import "./chunk-UKJF25H6.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-D5MIJ6WT.js";
import "./chunk-7KX64CAH.js";
import "./chunk-J4R3XNTP.js";
import "./chunk-Y6FRAP2R.js";
import "./chunk-BVNZ3ETW.js";
import "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import {
  U,
  a as a3,
  l as l2
} from "./chunk-XN5VV437.js";
import "./chunk-WBSPL6CJ.js";
import "./chunk-N5ULYWRU.js";
import "./chunk-LQVUN6IS.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-MOIETNWJ.js";
import {
  M
} from "./chunk-3GSONYPC.js";
import {
  O,
  o2 as o,
  r,
  r2,
  x2 as x
} from "./chunk-SFV6XLDZ.js";
import "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import "./chunk-2YSHZRCT.js";
import {
  j
} from "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import {
  L,
  v
} from "./chunk-O3CHVGVF.js";
import {
  f
} from "./chunk-HNHXEGH2.js";
import "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-W2N7YT6I.js";
import {
  a,
  t
} from "./chunk-I5JT24BO.js";
import {
  R
} from "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/support/TileMatrixSet.js
var l3;
var n = l3 = class extends l {
  constructor(t3) {
    super(t3), this.fullExtent = null, this.id = null, this.tileInfo = null;
  }
  clone() {
    const t3 = new l3();
    return this.hasOwnProperty("fullExtent") && (t3.fullExtent = this.fullExtent && this.fullExtent.clone()), this.hasOwnProperty("id") && (t3.id = this.id), this.hasOwnProperty("tileInfo") && (t3.tileInfo = this.tileInfo && this.tileInfo.clone()), t3;
  }
};
e([y({ type: M, json: { read: { source: "fullExtent" } } })], n.prototype, "fullExtent", void 0), e([y({ type: String, json: { read: { source: "id" } } })], n.prototype, "id", void 0), e([y({ type: j2, json: { read: { source: "tileInfo" } } })], n.prototype, "tileInfo", void 0), n = l3 = e([a2("esri.layer.support.TileMatrixSet")], n);
var p4 = n;

// node_modules/@arcgis/core/layers/support/WMTSStyle.js
var o5;
var i = o5 = class extends l {
  constructor(r3) {
    super(r3), this.id = null, this.title = null, this.description = null, this.legendUrl = null;
  }
  clone() {
    const r3 = new o5();
    return this.hasOwnProperty("description") && (r3.description = this.description), this.hasOwnProperty("id") && (r3.id = this.id), this.hasOwnProperty("isDefault") && (r3.isDefault = this.isDefault), this.hasOwnProperty("keywords") && (r3.keywords = this.keywords && this.keywords.slice()), this.hasOwnProperty("legendUrl") && (r3.legendUrl = this.legendUrl), this.hasOwnProperty("title") && (r3.title = this.title), r3;
  }
};
e([y({ json: { read: { source: "id" } } })], i.prototype, "id", void 0), e([y({ json: { read: { source: "title" } } })], i.prototype, "title", void 0), e([y({ json: { read: { source: "abstract" } } })], i.prototype, "description", void 0), e([y({ json: { read: { source: "legendUrl" } } })], i.prototype, "legendUrl", void 0), e([y({ json: { read: { source: "isDefault" } } })], i.prototype, "isDefault", void 0), e([y({ json: { read: { source: "keywords" } } })], i.prototype, "keywords", void 0), i = o5 = e([a2("esri.layer.support.WMTSStyle")], i);
var p5 = i;

// node_modules/@arcgis/core/layers/support/WMTSSublayer.js
var p6;
var m = p6 = class extends l {
  constructor(t3) {
    super(t3), this.description = null, this.fullExtent = null, this.fullExtents = null, this.id = null, this.imageFormats = null, this.layer = null, this.parent = null, this.styles = null, this.title = null, this.tileMatrixSetId = null, this.tileMatrixSets = null;
  }
  readFullExtent(t3, e3) {
    return (t3 = e3.fullExtent) ? M.fromJSON(t3) : null;
  }
  readFullExtents(t3, e3) {
    var _a, _b;
    return ((_a = e3.fullExtents) == null ? void 0 : _a.length) ? e3.fullExtents.map((t4) => M.fromJSON(t4)) : ((_b = e3.tileMatrixSets) == null ? void 0 : _b.map((t4) => M.fromJSON(t4.fullExtent)).filter((t4) => t4)) ?? [];
  }
  get imageFormat() {
    let t3 = this._get("imageFormat");
    return t3 || (t3 = this.imageFormats && this.imageFormats.length ? this.imageFormats[0] : ""), t3;
  }
  set imageFormat(t3) {
    const e3 = this.imageFormats;
    t3 && (t3.includes("image/") || e3 && !e3.includes(t3)) && (t3.includes("image/") || (t3 = "image/" + t3), e3 && !e3.includes(t3)) ? console.error("The layer doesn't support the format of " + t3) : this._set("imageFormat", t3);
  }
  get styleId() {
    var _a, _b;
    let t3 = this._get("styleId");
    return t3 || (t3 = ((_b = (_a = this.styles) == null ? void 0 : _a.at(0)) == null ? void 0 : _b.id) ?? ""), t3;
  }
  set styleId(t3) {
    this._set("styleId", t3);
  }
  get tileMatrixSet() {
    return this.tileMatrixSets ? this.tileMatrixSets.find((t3) => t3.id === this.tileMatrixSetId) : null;
  }
  clone() {
    var _a;
    const t3 = new p6();
    return this.hasOwnProperty("description") && (t3.description = this.description), this.hasOwnProperty("imageFormats") && (t3.imageFormats = this.imageFormats && this.imageFormats.slice()), this.hasOwnProperty("imageFormat") && (t3.imageFormat = this.imageFormat), this.hasOwnProperty("fullExtent") && (t3.fullExtent = this.fullExtent && this.fullExtent.clone()), this.hasOwnProperty("id") && (t3.id = this.id), this.hasOwnProperty("layer") && (t3.layer = this.layer), this.hasOwnProperty("styleId") && (t3.styleId = this.styleId), this.hasOwnProperty("styles") && (t3.styles = this.styles && this.styles.clone()), this.hasOwnProperty("tileMatrixSetId") && (t3.tileMatrixSetId = this.tileMatrixSetId), this.hasOwnProperty("tileMatrixSets") && (t3.tileMatrixSets = (_a = this.tileMatrixSets) == null ? void 0 : _a.clone()), this.hasOwnProperty("title") && (t3.title = this.title), t3;
  }
};
e([y()], m.prototype, "description", void 0), e([y()], m.prototype, "fullExtent", void 0), e([o("fullExtent", ["fullExtent"])], m.prototype, "readFullExtent", null), e([y({ readOnly: true })], m.prototype, "fullExtents", void 0), e([o("fullExtents", ["fullExtents", "tileMatrixSets"])], m.prototype, "readFullExtents", null), e([y()], m.prototype, "id", void 0), e([y()], m.prototype, "imageFormat", null), e([y({ json: { read: { source: "formats" } } })], m.prototype, "imageFormats", void 0), e([y()], m.prototype, "layer", void 0), e([y()], m.prototype, "parent", void 0), e([y()], m.prototype, "styleId", null), e([y({ type: V.ofType(p5), json: { read: { source: "styles" } } })], m.prototype, "styles", void 0), e([y({ json: { write: { ignoreOrigin: true } } })], m.prototype, "title", void 0), e([y()], m.prototype, "tileMatrixSetId", void 0), e([y({ readOnly: true })], m.prototype, "tileMatrixSet", null), e([y({ type: V.ofType(p4), json: { read: { source: "tileMatrixSets" } } })], m.prototype, "tileMatrixSets", void 0), m = p6 = e([a2("esri.layers.support.WMTSSublayer")], m);
var h = m;

// node_modules/@arcgis/core/layers/support/wmtsUtils.js
var u = 90.71428571428571;
function p7(e3) {
  const n2 = e3.replaceAll(/ows:/gi, "");
  if (!g("Contents", new DOMParser().parseFromString(n2, "text/xml").documentElement))
    throw new s("wmtslayer:wmts-capabilities-xml-is-not-valid", "the wmts get capabilities response is not compliant", { text: e3 });
}
function f2(e3, n2) {
  var _a;
  e3 = e3.replaceAll(/ows:/gi, "");
  const i2 = new DOMParser().parseFromString(e3, "text/xml").documentElement, r3 = /* @__PURE__ */ new Map(), l4 = /* @__PURE__ */ new Map(), o6 = g("Contents", i2);
  if (!o6)
    throw new s("wmtslayer:wmts-capabilities-xml-is-not-valid");
  const s2 = g("OperationsMetadata", i2), a5 = s2 == null ? void 0 : s2.querySelector("[name='GetTile']"), c2 = a5 == null ? void 0 : a5.getElementsByTagName("Get"), u2 = c2 && Array.prototype.slice.call(c2), p8 = (_a = n2.url) == null ? void 0 : _a.indexOf("https"), f3 = void 0 !== p8 && p8 > -1;
  let d2, m3, h3 = n2.serviceMode, T2 = n2 == null ? void 0 : n2.url;
  if (u2 && u2.length && u2.some((e4) => {
    const t3 = g("Constraint", e4);
    return !t3 || C("AllowedValues", "Value", h3, t3) ? (T2 = e4.attributes[0].nodeValue, true) : (!t3 || C("AllowedValues", "Value", "RESTful", t3) || C("AllowedValues", "Value", "REST", t3) ? m3 = e4.attributes[0].nodeValue : t3 && !C("AllowedValues", "Value", "KVP", t3) || (d2 = e4.attributes[0].nodeValue), false);
  }), !T2)
    if (m3)
      T2 = m3, h3 = "RESTful";
    else if (d2)
      T2 = d2, h3 = "KVP";
    else {
      const e4 = g("ServiceMetadataURL", i2);
      T2 = e4 == null ? void 0 : e4.getAttribute("xlink:href");
    }
  const y3 = T2.indexOf("1.0.0/");
  -1 === y3 && "RESTful" === h3 ? T2 += "/" : y3 > -1 && (T2 = T2.substring(0, y3)), "KVP" === h3 && (T2 += y3 > -1 ? "" : "?"), f3 && (T2 = T2.replace(/^http:/i, "https:"));
  const R3 = w("ServiceIdentification>ServiceTypeVersion", i2), S2 = w("ServiceIdentification>AccessConstraints", i2), A2 = S2 && /^none$/i.test(S2) ? null : S2, V4 = x2("Layer", o6), b3 = x2("TileMatrixSet", o6), E2 = V4.map((e4) => {
    const t3 = w("Identifier", e4);
    return r3.set(t3, e4), M2(t3, e4, b3, f3, R3);
  });
  return { copyright: A2, dimensionMap: l4, layerMap: r3, layers: E2, serviceMode: h3, tileUrl: T2 };
}
function d(e3) {
  return e3.layers.forEach((e4) => {
    var _a;
    (_a = e4.tileMatrixSets) == null ? void 0 : _a.forEach((e5) => {
      var _a2;
      const t3 = e5.tileInfo;
      t3 && 96 !== t3.dpi && ((_a2 = t3.lods) == null ? void 0 : _a2.forEach((n2) => {
        var _a3;
        n2.scale = 96 * n2.scale / t3.dpi, n2.resolution = j4((_a3 = t3.spatialReference) == null ? void 0 : _a3.wkid, n2.scale * u / 96, e5.id);
      }), t3.dpi = 96);
    });
  }), e3;
}
function m2(e3) {
  return e3.nodeType === Node.ELEMENT_NODE;
}
function g(e3, t3) {
  for (let n2 = 0; n2 < t3.childNodes.length; n2++) {
    const i2 = t3.childNodes[n2];
    if (m2(i2) && i2.nodeName === e3)
      return i2;
  }
  return null;
}
function x2(e3, t3) {
  const n2 = [];
  for (let i2 = 0; i2 < t3.childNodes.length; i2++) {
    const r3 = t3.childNodes[i2];
    m2(r3) && r3.nodeName === e3 && n2.push(r3);
  }
  return n2;
}
function h2(t3, n2) {
  const i2 = [];
  for (let e3 = 0; e3 < n2.childNodes.length; e3++) {
    const r3 = n2.childNodes[e3];
    m2(r3) && r3.nodeName === t3 && i2.push(r3);
  }
  return i2.map((e3) => e3.textContent).filter(R);
}
function w(e3, t3) {
  return e3.split(">").forEach((e4) => {
    t3 && (t3 = g(e4, t3));
  }), t3 && t3.textContent;
}
function C(e3, t3, n2, i2) {
  let r3;
  return Array.prototype.slice.call(i2.childNodes).some((i3) => {
    if (i3.nodeName.includes(e3)) {
      const e4 = g(t3, i3), l4 = e4 && e4.textContent;
      if (l4 === n2 || n2.split(":") && n2.split(":")[1] === l4)
        return r3 = i3, true;
    }
    return false;
  }), r3;
}
function M2(e3, t3, n2, i2, r3) {
  const l4 = w("Abstract", t3), o6 = h2("Format", t3);
  return { id: e3, fullExtent: A(t3), fullExtents: V2(t3), description: l4, formats: o6, styles: b2(t3, i2), title: w("Title", t3), tileMatrixSets: E(r3, t3, n2) };
}
function T(e3, t3) {
  var _a;
  const n2 = [], i2 = (_a = e3.layerMap) == null ? void 0 : _a.get(t3);
  if (!i2)
    return null;
  const r3 = x2("ResourceURL", i2), l4 = x2("Dimension", i2);
  let o6, s2, a5, c2;
  return l4.length && (o6 = w("Identifier", l4[0]), s2 = h2("Default", l4[0]) || h2("Value", l4[0])), l4.length > 1 && (a5 = w("Identifier", l4[1]), c2 = h2("Default", l4[1]) || h2("Value", l4[1])), e3.dimensionMap.set(t3, { dimensions: s2, dimensions2: c2 }), r3.forEach((e4) => {
    let t4 = e4.getAttribute("template");
    if ("tile" === e4.getAttribute("resourceType")) {
      if (o6 && s2.length)
        if (t4.includes("{" + o6 + "}"))
          t4 = t4.replace("{" + o6 + "}", "{dimensionValue}");
        else {
          const e5 = t4.toLowerCase().indexOf("{" + o6.toLowerCase() + "}");
          e5 > -1 && (t4 = t4.substring(0, e5) + "{dimensionValue}" + t4.substring(e5 + o6.length + 2));
        }
      if (a5 && c2.length)
        if (t4.includes("{" + a5 + "}"))
          t4 = t4.replace("{" + a5 + "}", "{dimensionValue2}");
        else {
          const e5 = t4.toLowerCase().indexOf("{" + a5.toLowerCase() + "}");
          e5 > -1 && (t4 = t4.substring(0, e5) + "{dimensionValue2}" + t4.substring(e5 + a5.length + 2));
        }
      n2.push({ template: t4, format: e4.getAttribute("format"), resourceType: "tile" });
    }
  }), n2;
}
function y2(e3, t3, n2, i2, r3, l4, o6, s2) {
  var _a, _b;
  const a5 = R2(e3, t3, i2);
  if (!((a5 == null ? void 0 : a5.length) > 0))
    return "";
  const { dimensionMap: c2 } = e3, u2 = (_a = c2.get(t3).dimensions) == null ? void 0 : _a[0], p8 = (_b = c2.get(t3).dimensions2) == null ? void 0 : _b[0];
  return a5[o6 % a5.length].template.replaceAll(/\{Style\}/gi, r3 ?? "").replaceAll(/\{TileMatrixSet\}/gi, n2 ?? "").replaceAll(/\{TileMatrix\}/gi, l4).replaceAll(/\{TileRow\}/gi, "" + o6).replaceAll(/\{TileCol\}/gi, "" + s2).replaceAll(/\{dimensionValue\}/gi, u2).replaceAll(/\{dimensionValue2\}/gi, p8);
}
function R2(e3, t3, n2) {
  const i2 = T(e3, t3), r3 = i2 == null ? void 0 : i2.filter((e4) => e4.format === n2);
  return ((r3 == null ? void 0 : r3.length) ? r3 : i2) ?? [];
}
function S(e3, t3, n2, i2) {
  const { dimensionMap: r3 } = e3, l4 = T(e3, t3);
  let o6 = "";
  if (l4 && l4.length > 0) {
    const e4 = r3.get(t3).dimensions && r3.get(t3).dimensions[0], s2 = r3.get(t3).dimensions2 && r3.get(t3).dimensions2[0];
    o6 = l4[0].template, o6.indexOf(".xxx") === o6.length - 4 && (o6 = o6.slice(0, o6.length - 4)), o6 = o6.replaceAll(/\{Style\}/gi, i2), o6 = o6.replaceAll(/\{TileMatrixSet\}/gi, n2), o6 = o6.replaceAll(/\{TileMatrix\}/gi, "{level}"), o6 = o6.replaceAll(/\{TileRow\}/gi, "{row}"), o6 = o6.replaceAll(/\{TileCol\}/gi, "{col}"), o6 = o6.replaceAll(/\{dimensionValue\}/gi, e4), o6 = o6.replaceAll(/\{dimensionValue2\}/gi, s2);
  }
  return o6;
}
function A(e3) {
  const t3 = g("WGS84BoundingBox", e3), n2 = t3 ? w("LowerCorner", t3).split(" ") : ["-180", "-90"], i2 = t3 ? w("UpperCorner", t3).split(" ") : ["180", "90"];
  return { xmin: parseFloat(n2[0]), ymin: parseFloat(n2[1]), xmax: parseFloat(i2[0]), ymax: parseFloat(i2[1]), spatialReference: { wkid: 4326 } };
}
function V2(e3) {
  const t3 = [];
  return o3(e3, { BoundingBox: (e4) => {
    if (!e4.getAttribute("crs"))
      return;
    const n2 = e4.getAttribute("crs").toLowerCase(), i2 = I(n2), r3 = n2.includes("epsg") && o4(i2.wkid);
    let l4, a5, c2, u2;
    o3(e4, { LowerCorner: (e5) => {
      [l4, a5] = e5.textContent.split(" ").map((e6) => Number.parseFloat(e6)), r3 && ([l4, a5] = [a5, l4]);
    }, UpperCorner: (e5) => {
      [c2, u2] = e5.textContent.split(" ").map((e6) => Number.parseFloat(e6)), r3 && ([c2, u2] = [u2, c2]);
    } }), t3.push({ xmin: l4, ymin: a5, xmax: c2, ymax: u2, spatialReference: i2 });
  } }), t3;
}
function b2(e3, t3) {
  return x2("Style", e3).map((e4) => {
    const n2 = g("LegendURL", e4), i2 = g("Keywords", e4), r3 = i2 ? h2("Keyword", i2) : [];
    let l4 = n2 && n2.getAttribute("xlink:href");
    t3 && (l4 = l4 && l4.replace(/^http:/i, "https:"));
    return { abstract: w("Abstract", e4), id: w("Identifier", e4), isDefault: "true" === e4.getAttribute("isDefault"), keywords: r3, legendUrl: l4, title: w("Title", e4) };
  });
}
function E(e3, t3, n2) {
  return x2("TileMatrixSetLink", t3).map((t4) => L3(e3, t4, n2));
}
function L3(e3, t3, n2) {
  const i2 = g("TileMatrixSet", t3).textContent, r3 = h2("TileMatrix", t3), l4 = n2.find((e4) => {
    const t4 = g("Identifier", e4), n3 = t4 && t4.textContent;
    return !!(n3 === i2 || i2.split(":") && i2.split(":")[1] === n3);
  }), o6 = g("TileMatrixSetLimits", t3), s2 = o6 && x2("TileMatrixLimits", o6), a5 = /* @__PURE__ */ new Map();
  if (s2 == null ? void 0 : s2.length)
    for (const c2 of s2) {
      const e4 = g("TileMatrix", c2).textContent, t4 = +g("MinTileRow", c2).textContent, n3 = +g("MaxTileRow", c2).textContent, i3 = +g("MinTileCol", c2).textContent, r4 = +g("MaxTileCol", c2).textContent;
      a5.set(e4, { minCol: i3, maxCol: r4, minRow: t4, maxRow: n3 });
    }
  const u2 = w("SupportedCRS", l4).toLowerCase(), p8 = N(l4, u2), f3 = p8.spatialReference, d2 = g("TileMatrix", l4), m3 = [parseInt(w("TileWidth", d2), 10), parseInt(w("TileHeight", d2), 10)], M3 = [];
  if (r3.length)
    r3.forEach((e4, t4) => {
      const n3 = C("TileMatrix", "Identifier", e4, l4);
      M3.push(k(n3, u2, t4, i2, a5));
    });
  else {
    x2("TileMatrix", l4).forEach((e4, t4) => {
      M3.push(k(e4, u2, t4, i2, a5));
    });
  }
  const T2 = F(e3, l4, p8, m3, M3[0]).toJSON(), y3 = new j2({ dpi: 96, spatialReference: f3, size: m3, origin: p8, lods: M3 }).toJSON();
  return { id: i2, fullExtent: T2, tileInfo: y3 };
}
function I(e3) {
  e3 = e3.toLowerCase();
  let t3 = parseInt(e3.split(":").pop(), 10);
  900913 !== t3 && 3857 !== t3 || (t3 = 102100);
  const n2 = D(e3);
  return null != n2 && (t3 = n2), { wkid: t3 };
}
function N(e3, t3) {
  return v2(g("TileMatrix", e3), t3);
}
function v2(e3, t3) {
  const n2 = I(t3), [i2, l4] = w("TopLeftCorner", e3).split(" ").map((e4) => parseFloat(e4)), s2 = t3.includes("epsg") && o4(n2.wkid);
  return new x(s2 ? { x: l4, y: i2, spatialReference: n2 } : { x: i2, y: l4, spatialReference: n2 });
}
function F(e3, t3, n2, r3, l4) {
  const o6 = g("BoundingBox", t3);
  let s2, a5, c2, u2, p8, f3;
  if (o6 && (s2 = w("LowerCorner", o6).split(" "), a5 = w("UpperCorner", o6).split(" ")), s2 && s2.length > 1 && a5 && a5.length > 1)
    c2 = parseFloat(s2[0]), p8 = parseFloat(s2[1]), u2 = parseFloat(a5[0]), f3 = parseFloat(a5[1]);
  else {
    const e4 = g("TileMatrix", t3), i2 = parseInt(w("MatrixWidth", e4), 10), o7 = parseInt(w("MatrixHeight", e4), 10);
    c2 = n2.x, f3 = n2.y, u2 = c2 + i2 * r3[0] * l4.resolution, p8 = f3 - o7 * r3[1] * l4.resolution;
  }
  return O3(e3, n2.spatialReference, n2) ? new M(p8, c2, f3, u2, n2.spatialReference) : new M(c2, p8, u2, f3, n2.spatialReference);
}
function O3(e3, t3, n2) {
  return "1.0.0" === e3 && o4(t3.wkid) && !(n2.spatialReference.isGeographic && n2.x < -90 && n2.y >= -90);
}
var U2;
function D(e3) {
  return e3.includes("crs84") || e3.includes("crs:84") ? U2.CRS84 : e3.includes("crs83") || e3.includes("crs:83") ? U2.CRS83 : e3.includes("crs27") || e3.includes("crs:27") ? U2.CRS27 : null;
}
function k(e3, t3, n2, i2, r3) {
  const l4 = I(t3), o6 = w("Identifier", e3);
  let s2 = parseFloat(w("ScaleDenominator", e3));
  const c2 = j4(l4.wkid, s2, i2);
  s2 *= 96 / u;
  const p8 = +w("MatrixWidth", e3), f3 = +w("MatrixHeight", e3), { maxCol: d2 = p8 - 1, maxRow: m3 = f3 - 1, minCol: g2 = 0, minRow: x3 = 0 } = r3.get(o6) ?? {}, { x: h3, y: C2 } = v2(e3, t3);
  return new p2({ cols: [g2, d2], level: n2, levelValue: o6, origin: [h3, C2], scale: s2, resolution: c2, rows: [x3, m3] });
}
function j4(e3, t3, i2) {
  let r3;
  return r3 = r2.hasOwnProperty("" + e3) ? r2.values[r2[e3]] : "default028mm" === i2 ? 6370997 * Math.PI / 180 : O(e3).metersPerDegree, 7 * t3 / 25e3 / r3;
}
!function(e3) {
  e3[e3.CRS84 = 4326] = "CRS84", e3[e3.CRS83 = 4269] = "CRS83", e3[e3.CRS27 = 4267] = "CRS27";
}(U2 || (U2 = {}));

// node_modules/@arcgis/core/layers/WMTSLayer.js
var W;
var F2 = { "image/png": ".png", "image/png8": ".png", "image/png24": ".png", "image/png32": ".png", "image/jpg": ".jpg", "image/jpeg": ".jpeg", "image/gif": ".gif", "image/bmp": ".bmp", "image/tiff": ".tif", "image/jpgpng": "", "image/jpegpng": "", "image/unknown": "" };
var V3 = /* @__PURE__ */ new Set(["version", "service", "request", "layer", "style", "format", "tilematrixset", "tilematrix", "tilerow", "tilecol"]);
var $ = W = class extends a4(p(t2(c(j3(O2(b)))))) {
  constructor(...e3) {
    super(...e3), this.activeLayer = null, this.copyright = "", this.customParameters = null, this.customLayerParameters = null, this.fullExtent = null, this.operationalLayerType = "WebTiledLayer", this.resourceInfo = null, this.serviceMode = "RESTful", this.sublayers = null, this.type = "wmts", this.version = "1.0.0", this.addHandles([l2(() => this.activeLayer, (e4, t3) => {
      var _a;
      t3 && !((_a = this.sublayers) == null ? void 0 : _a.includes(t3)) && (t3.layer = null, t3.parent = null), e4 && (e4.layer = this, e4.parent = this);
    }, U), a3(() => this.sublayers, "after-add", ({ item: e4 }) => {
      e4.layer = this, e4.parent = this;
    }, U), a3(() => this.sublayers, "after-remove", ({ item: e4 }) => {
      e4.layer = null, e4.parent = null;
    }, U), l2(() => this.sublayers, (e4, t3) => {
      if (t3)
        for (const r3 of t3)
          r3.layer = null, r3.parent = null;
      if (e4)
        for (const r3 of e4)
          r3.layer = this, r3.parent = this;
    }, U)]);
  }
  normalizeCtorArgs(e3, t3) {
    return "string" == typeof e3 ? { url: e3, ...t3 } : e3;
  }
  load(e3) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WMTS"] }, e3).catch(f).then(() => this._fetchService(e3)).catch((e4) => {
      throw f(e4), new s("wmtslayer:unsupported-service-data", "Invalid response from the WMTS service.", { error: e4 });
    })), Promise.resolve(this);
  }
  readActiveLayerFromService(e3, t3, r3) {
    this.activeLayer || (this.activeLayer = new h());
    let i2 = t3.layers.find((e4) => e4.id === this.activeLayer.id);
    return i2 || (i2 = t3.layers[0]), this.activeLayer.read(i2, r3), this.activeLayer;
  }
  readActiveLayerFromItemOrWebDoc(e3, t3) {
    const { templateUrl: r3, wmtsInfo: i2 } = t3, s2 = r3 ? this._getLowerCasedUrlParams(r3) : null, a5 = i2 == null ? void 0 : i2.layerIdentifier;
    let o6 = null;
    const l4 = i2 == null ? void 0 : i2.tileMatrixSet;
    l4 && (Array.isArray(l4) ? l4.length && (o6 = l4[0]) : o6 = l4);
    const n2 = s2 == null ? void 0 : s2.format, m3 = s2 == null ? void 0 : s2.style;
    return new h({ id: a5, imageFormat: n2, styleId: m3, tileMatrixSetId: o6 });
  }
  writeActiveLayer(e3, t3, r3, i2) {
    const s2 = this.activeLayer;
    t3.templateUrl = this.getUrlTemplate(s2.id, s2.tileMatrixSetId, s2.imageFormat, s2.styleId);
    const a5 = t("tileMatrixSet.tileInfo", s2);
    t3.tileInfo = a5 ? a5.toJSON(i2) : null, t3.wmtsInfo = { ...t3.wmtsInfo, layerIdentifier: s2.id, tileMatrixSet: s2.tileMatrixSetId };
  }
  readCustomParameters(e3, t3) {
    const r3 = t3.wmtsInfo;
    return r3 ? this._mergeParams(r3.customParameters, r3.url) : null;
  }
  get fullExtents() {
    return this.activeLayer.fullExtents;
  }
  readServiceMode(e3, t3) {
    return t3.templateUrl.includes("?") ? "KVP" : "RESTful";
  }
  readSublayersFromService(e3, t3, r3) {
    return B(t3.layers, r3);
  }
  get supportedSpatialReferences() {
    var _a;
    return ((_a = this.activeLayer.tileMatrixSets) == null ? void 0 : _a.map((e3) => {
      var _a2;
      return (_a2 = e3.tileInfo) == null ? void 0 : _a2.spatialReference;
    }).toArray().filter(R)) ?? [];
  }
  get tilemapCache() {
    var _a, _b;
    const e3 = (_b = (_a = this.activeLayer) == null ? void 0 : _a.tileMatrixSet) == null ? void 0 : _b.tileInfo;
    return e3 ? new e2(e3) : void 0;
  }
  get title() {
    var _a;
    return ((_a = this.activeLayer) == null ? void 0 : _a.title) ?? "Layer";
  }
  set title(e3) {
    this._overrideIfSome("title", e3);
  }
  get url() {
    return this._get("url");
  }
  set url(e3) {
    e3 && "/" === e3.substr(-1) ? this._set("url", e3.slice(0, -1)) : this._set("url", e3);
  }
  createWebTileLayer(e3) {
    const t3 = this.getUrlTemplate(this.activeLayer.id, this.activeLayer.tileMatrixSetId, this.activeLayer.imageFormat, this.activeLayer.styleId), r3 = this._getTileMatrixSetById(e3.tileMatrixSetId), i2 = r3 == null ? void 0 : r3.tileInfo, s2 = e3.fullExtent, a5 = new p3({ layerIdentifier: e3.id, tileMatrixSet: e3.tileMatrixSetId, url: this.url });
    return this.customLayerParameters && (a5.customLayerParameters = this.customLayerParameters), this.customParameters && (a5.customParameters = this.customParameters), new L2({ fullExtent: s2, urlTemplate: t3, tileInfo: i2, wmtsInfo: a5 });
  }
  async fetchTile(e3, r3, i2, s2 = {}) {
    const { signal: a5 } = s2, o6 = this.getTileUrl(e3, r3, i2), { data: l4 } = await j(o6, { responseType: "image", signal: a5 });
    return l4;
  }
  async fetchImageBitmapTile(e3, r3, i2, s2 = {}) {
    const { signal: a5 } = s2;
    if (this.fetchTile !== W.prototype.fetchTile) {
      const t3 = await this.fetchTile(e3, r3, i2, s2);
      return o2(t3, e3, r3, i2, a5);
    }
    const o6 = this.getTileUrl(e3, r3, i2), { data: l4 } = await j(o6, { responseType: "blob", signal: a5 });
    return o2(l4, e3, r3, i2, a5);
  }
  findSublayerById(e3) {
    var _a;
    return (_a = this.sublayers) == null ? void 0 : _a.find((t3) => t3.id === e3);
  }
  getTileUrl(e3, t3, r3) {
    var _a;
    const i2 = this._getTileMatrixSetById(this.activeLayer.tileMatrixSetId), s2 = (_a = i2 == null ? void 0 : i2.tileInfo) == null ? void 0 : _a.lods[e3], a5 = s2 ? s2.levelValue || `${s2.level}` : `${e3}`;
    let o6 = this.resourceInfo ? "" : y2({ dimensionMap: this.dimensionMap, layerMap: this.layerMap }, this.activeLayer.id, this.activeLayer.tileMatrixSetId, this.activeLayer.imageFormat, this.activeLayer.styleId, a5, t3, r3);
    if (!o6) {
      o6 = this.getUrlTemplate(this.activeLayer.id, this.activeLayer.tileMatrixSetId, this.activeLayer.imageFormat, this.activeLayer.styleId).replaceAll(/\{level\}/gi, a5).replaceAll(/\{row\}/gi, `${t3}`).replaceAll(/\{col\}/gi, `${r3}`);
    }
    return o6 = this._appendCustomLayerParameters(o6), o6;
  }
  getUrlTemplate(e3, t3, r3, i2) {
    if (!this.resourceInfo) {
      const r4 = S({ dimensionMap: this.dimensionMap, layerMap: this.layerMap }, e3, t3, i2);
      if (r4)
        return r4;
    }
    if ("KVP" === this.serviceMode)
      return this.url + "?SERVICE=WMTS&VERSION=" + this.version + "&REQUEST=GetTile&LAYER=" + e3 + "&STYLE=" + i2 + "&FORMAT=" + r3 + "&TILEMATRIXSET=" + t3 + "&TILEMATRIX={level}&TILEROW={row}&TILECOL={col}";
    if ("RESTful" === this.serviceMode) {
      let s2 = "";
      return F2[r3.toLowerCase()] && (s2 = F2[r3.toLowerCase()]), this.url + e3 + "/" + i2 + "/" + t3 + "/{level}/{row}/{col}" + s2;
    }
    return "";
  }
  async _fetchService(e3) {
    let t3;
    if (this.resourceInfo)
      "KVP" === this.resourceInfo.serviceMode && (this.url += this.url.includes("?") ? "" : "?"), t3 = { ssl: false, data: this.resourceInfo };
    else
      try {
        t3 = await this._getCapabilities(this.serviceMode, e3), p7(t3.data);
      } catch {
        const i2 = "KVP" === this.serviceMode ? "RESTful" : "KVP";
        try {
          t3 = await this._getCapabilities(i2, e3), p7(t3.data), this.serviceMode = i2;
        } catch (r3) {
          throw new s("wmtslayer:unsupported-service-data", "Services does not support RESTful or KVP service modes.", { error: r3 });
        }
      }
    this.resourceInfo ? t3.data = d(t3.data) : t3.data = f2(t3.data, { serviceMode: this.serviceMode, url: this.url }), t3.data && this.read(t3.data, { origin: "service" });
  }
  async _getCapabilities(e3, r3) {
    const i2 = this._getCapabilitiesUrl(e3);
    return await j(i2, { ...r3, responseType: "text" });
  }
  _getTileMatrixSetById(e3) {
    var _a;
    const t3 = this.findSublayerById(this.activeLayer.id), r3 = (_a = t3 == null ? void 0 : t3.tileMatrixSets) == null ? void 0 : _a.find((t4) => t4.id === e3);
    return r3;
  }
  _appendCustomParameters(e3) {
    return this._appendParameters(e3, this.customParameters);
  }
  _appendCustomLayerParameters(e3) {
    return this._appendParameters(e3, { ...a(this.customParameters), ...this.customLayerParameters });
  }
  _appendParameters(e3, t3) {
    const r3 = L(e3), i2 = { ...r3.query, ...t3 }, s2 = v(i2);
    return "" === s2 ? r3.path : `${r3.path}?${s2}`;
  }
  _getCapabilitiesUrl(e3) {
    this.url = this.url.split("?")[0];
    const t3 = "KVP" === e3 ? `${this.url}?request=GetCapabilities&service=WMTS&version=${this.version}` : `${this.url}/${this.version}/WMTSCapabilities.xml`;
    return this._appendCustomParameters(t3);
  }
  _getLowerCasedUrlParams(e3) {
    if (!e3)
      return null;
    const t3 = L(e3).query;
    if (!t3)
      return null;
    const r3 = {};
    return Object.keys(t3).forEach((e4) => {
      r3[e4.toLowerCase()] = t3[e4];
    }), r3;
  }
  _mergeParams(e3, t3) {
    const r3 = this._getLowerCasedUrlParams(t3);
    if (r3) {
      const t4 = Object.keys(r3);
      t4.length && (e3 = e3 ? a(e3) : {}, t4.forEach((t5) => {
        e3.hasOwnProperty(t5) || V3.has(t5) || (e3[t5] = r3[t5]);
      }));
    }
    return e3;
  }
};
function B(e3, t3) {
  return e3.map((e4) => {
    const r3 = new h();
    return r3.read(e4, t3), r3;
  });
}
e([y()], $.prototype, "dimensionMap", void 0), e([y()], $.prototype, "layerMap", void 0), e([y({ type: h, json: { origins: { "web-document": { write: { ignoreOrigin: true } } } } })], $.prototype, "activeLayer", void 0), e([o("service", "activeLayer", ["layers"])], $.prototype, "readActiveLayerFromService", null), e([o(["web-document", "portal-item"], "activeLayer", ["wmtsInfo"])], $.prototype, "readActiveLayerFromItemOrWebDoc", null), e([r(["web-document", "portal-item"], "activeLayer", { templateUrl: { type: String }, tileInfo: { type: j2 }, "wmtsInfo.layerIdentifier": { type: String }, "wmtsInfo.tileMatrixSet": { type: String } })], $.prototype, "writeActiveLayer", null), e([y({ type: String, value: "", json: { write: true } })], $.prototype, "copyright", void 0), e([y({ type: ["show", "hide"] })], $.prototype, "listMode", void 0), e([y({ json: { read: true, write: true } })], $.prototype, "blendMode", void 0), e([y({ json: { origins: { "web-document": { read: { source: ["wmtsInfo.customParameters", "wmtsInfo.url"] }, write: { target: "wmtsInfo.customParameters" } }, "portal-item": { read: { source: ["wmtsInfo.customParameters", "wmtsInfo.url"] }, write: { target: "wmtsInfo.customParameters" } } } } })], $.prototype, "customParameters", void 0), e([o(["portal-item", "web-document"], "customParameters")], $.prototype, "readCustomParameters", null), e([y({ json: { origins: { "web-document": { read: { source: "wmtsInfo.customLayerParameters" }, write: { target: "wmtsInfo.customLayerParameters" } }, "portal-item": { read: { source: "wmtsInfo.customLayerParameters" }, write: { target: "wmtsInfo.customLayerParameters" } } } } })], $.prototype, "customLayerParameters", void 0), e([y({ type: M, json: { write: { ignoreOrigin: true }, origins: { "web-document": { read: { source: "fullExtent" } }, "portal-item": { read: { source: "fullExtent" } } } } })], $.prototype, "fullExtent", void 0), e([y({ readOnly: true })], $.prototype, "fullExtents", null), e([y({ type: ["WebTiledLayer"] })], $.prototype, "operationalLayerType", void 0), e([y()], $.prototype, "resourceInfo", void 0), e([y()], $.prototype, "serviceMode", void 0), e([o(["portal-item", "web-document"], "serviceMode", ["templateUrl"])], $.prototype, "readServiceMode", null), e([y({ type: V.ofType(h) })], $.prototype, "sublayers", void 0), e([o("service", "sublayers", ["layers"])], $.prototype, "readSublayersFromService", null), e([y({ readOnly: true })], $.prototype, "supportedSpatialReferences", null), e([y({ readOnly: true })], $.prototype, "tilemapCache", null), e([y({ json: { read: { source: "title" } } })], $.prototype, "title", null), e([y({ json: { read: false }, readOnly: true, value: "wmts" })], $.prototype, "type", void 0), e([y({ json: { origins: { service: { read: { source: "tileUrl" } }, "web-document": { read: { source: "wmtsInfo.url" }, write: { target: "wmtsInfo.url" } }, "portal-item": { read: { source: "wmtsInfo.url" }, write: { target: "wmtsInfo.url" } } } } })], $.prototype, "url", null), e([y()], $.prototype, "version", void 0), $ = W = e([a2("esri.layers.WMTSLayer")], $);
var K = $;
export {
  K as default
};
//# sourceMappingURL=WMTSLayer-WVU2NQF5.js.map
