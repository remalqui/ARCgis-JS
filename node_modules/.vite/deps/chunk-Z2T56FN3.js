import {
  b,
  c as c3,
  j as j2
} from "./chunk-ZMKH5ZRU.js";
import {
  a as a6
} from "./chunk-NU5WEWCI.js";
import {
  p
} from "./chunk-UIVGJZCT.js";
import {
  a as a4
} from "./chunk-QAWS7Y22.js";
import {
  c as c2,
  l as l3
} from "./chunk-UX5D32RO.js";
import {
  F,
  M,
  P,
  S,
  j2 as j,
  u as u3
} from "./chunk-VFQINJTY.js";
import {
  a as a5
} from "./chunk-HB3KZNZ3.js";
import {
  c,
  i
} from "./chunk-OO4A3EBQ.js";
import {
  i as i2
} from "./chunk-KTEJJM3A.js";
import {
  I,
  T as T2,
  i as i3
} from "./chunk-7KM4XBUC.js";
import {
  n as n2,
  r as r2
} from "./chunk-GJ5WE5D3.js";
import {
  j as j3
} from "./chunk-7KX64CAH.js";
import {
  o as o2
} from "./chunk-4H5JODOT.js";
import {
  l as l2
} from "./chunk-XN5VV437.js";
import {
  o2 as o,
  r
} from "./chunk-SFV6XLDZ.js";
import {
  s as s5
} from "./chunk-3PLRSFLA.js";
import {
  s as s4
} from "./chunk-VBD33VNW.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  m,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a3,
  s2 as s3,
  u as u2
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  T,
  a as a2,
  d,
  u
} from "./chunk-2YSHZRCT.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-W2N7YT6I.js";
import {
  a,
  n
} from "./chunk-I5JT24BO.js";
import {
  R
} from "./chunk-I4U7MQNO.js";

// node_modules/@arcgis/core/renderers/Renderer.js
var n3 = new s4({ simple: "simple", uniqueValue: "unique-value", classBreaks: "class-breaks", heatmap: "heatmap", dotDensity: "dot-density", dictionary: "dictionary", pieChart: "pie-chart" }, { ignoreUnknown: true });
var a7 = class extends l {
  constructor(r3) {
    super(r3), this.authoringInfo = null, this.type = null;
  }
  async getRequiredFields(r3) {
    if (!this.collectRequiredFields)
      return [];
    const e3 = /* @__PURE__ */ new Set();
    return await this.collectRequiredFields(e3, r3), Array.from(e3).sort();
  }
  getSymbol(r3, e3) {
  }
  async getSymbolAsync(r3, e3) {
  }
  getSymbols() {
    return [];
  }
  getAttributeHash() {
    return JSON.stringify(this);
  }
  getMeshHash() {
    return JSON.stringify(this);
  }
};
e([y({ type: j2, json: { write: true } })], a7.prototype, "authoringInfo", void 0), e([y({ type: n3.apiValues, readOnly: true, json: { type: n3.jsonValues, read: false, write: { writer: n3.write, ignoreOrigin: true } } })], a7.prototype, "type", void 0), a7 = e([a3("esri.renderers.Renderer")], a7);
var p2 = a7;

// node_modules/@arcgis/core/renderers/support/randomRotationExpression.js
function e2(e3) {
  var _a, _b;
  return ((_b = (_a = e3.match(t)) == null ? void 0 : _a[1]) == null ? void 0 : _b.replace(/\\'/g, "'")) ?? null;
}
var t = /^hash\(\$feature\['((\\'|[^'])+)'\]\) \* 8\.381e-8$/;

// node_modules/@arcgis/core/renderers/visualVariables/ColorVariable.js
var i4;
var p3 = i4 = class extends c3 {
  constructor(t2) {
    super(t2), this.type = "color", this.normalizationField = null;
  }
  get cache() {
    return { ipData: this._interpolateData(), hasExpression: !!this.valueExpression, compiledFunc: null };
  }
  set stops(t2) {
    t2 && Array.isArray(t2) && (t2 = t2.filter((t3) => !!t3)).sort((t3, s6) => t3.value - s6.value), this._set("stops", t2);
  }
  clone() {
    return new i4({ field: this.field, normalizationField: this.normalizationField, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, stops: this.stops && this.stops.map((t2) => t2.clone()), legendOptions: this.legendOptions && this.legendOptions.clone() });
  }
  getAttributeHash() {
    return `${super.getAttributeHash()}-${this.normalizationField}`;
  }
  _interpolateData() {
    return this.stops && this.stops.map((t2) => t2.value || 0);
  }
};
e([y({ readOnly: true })], p3.prototype, "cache", null), e([y({ type: ["color"], json: { type: ["colorInfo"] } })], p3.prototype, "type", void 0), e([y({ type: String, json: { write: true } })], p3.prototype, "normalizationField", void 0), e([y({ type: [a6], json: { write: true } })], p3.prototype, "stops", null), p3 = i4 = e([a3("esri.renderers.visualVariables.ColorVariable")], p3);
var a8 = p3;

// node_modules/@arcgis/core/renderers/visualVariables/support/OpacityStop.js
var l4;
var u4 = l4 = class extends l {
  constructor(r3) {
    super(r3), this.label = null, this.opacity = null, this.value = null;
  }
  readOpacity(r3, t2) {
    return r2(t2.transparency);
  }
  writeOpacity(r3, t2, o3) {
    t2[o3] = n2(r3);
  }
  clone() {
    return new l4({ label: this.label, opacity: this.opacity, value: this.value });
  }
};
e([y({ type: String, json: { write: true } })], u4.prototype, "label", void 0), e([y({ type: Number, json: { type: T, write: { target: "transparency" } } })], u4.prototype, "opacity", void 0), e([o("opacity", ["transparency"])], u4.prototype, "readOpacity", null), e([r("opacity")], u4.prototype, "writeOpacity", null), e([y({ type: Number, json: { write: true } })], u4.prototype, "value", void 0), u4 = l4 = e([a3("esri.renderers.visualVariables.support.OpacityStop")], u4);
var y2 = u4;

// node_modules/@arcgis/core/renderers/visualVariables/OpacityVariable.js
var i5;
var p4 = i5 = class extends c3 {
  constructor(t2) {
    super(t2), this.type = "opacity", this.normalizationField = null;
  }
  get cache() {
    return { ipData: this._interpolateData(), hasExpression: !!this.valueExpression, compiledFunc: null };
  }
  set stops(t2) {
    t2 && Array.isArray(t2) && (t2 = t2.filter((t3) => !!t3)).sort((t3, s6) => t3.value - s6.value), this._set("stops", t2);
  }
  clone() {
    return new i5({ field: this.field, normalizationField: this.normalizationField, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, stops: this.stops && this.stops.map((t2) => t2.clone()), legendOptions: this.legendOptions && this.legendOptions.clone() });
  }
  getAttributeHash() {
    return `${super.getAttributeHash()}-${this.normalizationField}`;
  }
  _interpolateData() {
    return this.stops && this.stops.map((t2) => t2.value || 0);
  }
};
e([y({ readOnly: true })], p4.prototype, "cache", null), e([y({ type: ["opacity"], json: { type: ["transparencyInfo"] } })], p4.prototype, "type", void 0), e([y({ type: String, json: { write: true } })], p4.prototype, "normalizationField", void 0), e([y({ type: [y2], json: { write: true } })], p4.prototype, "stops", null), p4 = i5 = e([a3("esri.renderers.visualVariables.OpacityVariable")], p4);
var a9 = p4;

// node_modules/@arcgis/core/renderers/visualVariables/RotationVariable.js
var p5;
var a10 = p5 = class extends c3 {
  constructor(e3) {
    super(e3), this.axis = null, this.type = "rotation", this.rotationType = "geographic", this.valueExpressionTitle = null;
  }
  get cache() {
    return { hasExpression: !!this.valueExpression, compiledFunc: null };
  }
  writeValueExpressionTitleWebScene(e3, s6, o3, r3) {
    if (r3 && r3.messages) {
      const e4 = `visualVariables[${this.index}]`;
      r3.messages.push(new s2("property:unsupported", this.type + "VisualVariable.valueExpressionTitle is not supported in Web Scene. Please remove this property to save the Web Scene.", { instance: this, propertyName: e4 + ".valueExpressionTitle", context: r3 }));
    }
  }
  clone() {
    return new p5({ axis: this.axis, rotationType: this.rotationType, field: this.field, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, legendOptions: this.legendOptions && this.legendOptions.clone() });
  }
};
e([y({ readOnly: true })], a10.prototype, "cache", null), e([y({ type: ["heading", "tilt", "roll"], json: { origins: { "web-scene": { default: "heading", write: true } } } })], a10.prototype, "axis", void 0), e([y({ type: ["rotation"], json: { type: ["rotationInfo"] } })], a10.prototype, "type", void 0), e([y({ type: ["geographic", "arithmetic"], json: { write: true, origins: { "web-document": { write: true, default: "geographic" } } } })], a10.prototype, "rotationType", void 0), e([y({ type: String, json: { write: true } })], a10.prototype, "valueExpressionTitle", void 0), e([r("web-scene", "valueExpressionTitle")], a10.prototype, "writeValueExpressionTitleWebScene", null), a10 = p5 = e([a3("esri.renderers.visualVariables.RotationVariable")], a10);
var n4 = a10;

// node_modules/@arcgis/core/renderers/visualVariables/VisualVariableFactory.js
var u5 = { color: a8, size: b, opacity: a9, rotation: n4 };
var b2 = new s4({ colorInfo: "color", transparencyInfo: "opacity", rotationInfo: "rotation", sizeInfo: "size" });
var h = /^\[([^\]]+)\]$/i;
var m2 = class extends m {
  constructor() {
    super(...arguments), this.colorVariables = null, this.opacityVariables = null, this.rotationVariables = null, this.sizeVariables = null;
  }
  set visualVariables(r3) {
    if (this._resetVariables(), (r3 = r3 && r3.filter((r4) => !!r4)) && r3.length) {
      for (const s6 of r3)
        switch (s6.type) {
          case "color":
            this.colorVariables.push(s6);
            break;
          case "opacity":
            this.opacityVariables.push(s6);
            break;
          case "rotation":
            this.rotationVariables.push(s6);
            break;
          case "size":
            this.sizeVariables.push(s6);
        }
      if (this.sizeVariables.length) {
        this.sizeVariables.some((r4) => !!r4.target) && r3.sort((r4, s6) => {
          let e3 = null;
          return e3 = r4.target === s6.target ? 0 : r4.target ? 1 : -1, e3;
        });
      }
      for (let s6 = 0; s6 < r3.length; s6++) {
        r3[s6].index = s6;
      }
      this._set("visualVariables", r3);
    } else
      this._set("visualVariables", r3);
  }
  readVariables(r3, s6, e3) {
    const { rotationExpression: a12, rotationType: i8 } = s6, l8 = a12 && a12.match(h), n7 = l8 && l8[1];
    if (n7 && (r3 || (r3 = []), r3.push({ type: "rotationInfo", rotationType: i8, field: n7 })), r3)
      return r3.map((r4) => {
        const s7 = b2.read(r4.type), a13 = u5[s7];
        a13 || (s.getLogger(this).warn(`Unknown variable type: ${s7}`), e3 && e3.messages && e3.messages.push(new s3("visual-variable:unsupported", `visualVariable of type '${s7}' is not supported`, { definition: r4, context: e3 })));
        const i9 = new a13();
        return i9.read(r4, e3), i9;
      });
  }
  writeVariables(r3, s6) {
    const e3 = [];
    for (const o3 of r3) {
      const r4 = o3.toJSON(s6);
      r4 && e3.push(r4);
    }
    return e3;
  }
  _resetVariables() {
    this.colorVariables = [], this.opacityVariables = [], this.rotationVariables = [], this.sizeVariables = [];
  }
};
e([y()], m2.prototype, "visualVariables", null), m2 = e([a3("esri.renderers.visualVariables.VisualVariableFactory")], m2);
var V = m2;

// node_modules/@arcgis/core/renderers/mixins/VisualVariablesMixin.js
var m3 = { base: c3, key: "type", typeMap: { opacity: a9, color: a8, rotation: n4, size: b } };
var v = (l8) => {
  let u8 = class extends l8 {
    constructor() {
      super(...arguments), this._vvFactory = new V();
    }
    set visualVariables(r3) {
      this._vvFactory.visualVariables = r3, this._set("visualVariables", this._vvFactory.visualVariables);
    }
    readVisualVariables(r3, a12, s6) {
      return this._vvFactory.readVariables(r3, a12, s6);
    }
    writeVisualVariables(r3, a12, s6, i8) {
      a12[s6] = this._vvFactory.writeVariables(r3, i8);
    }
    get arcadeRequiredForVisualVariables() {
      if (!this.visualVariables)
        return false;
      for (const r3 of this.visualVariables)
        if (r3.arcadeRequired)
          return true;
      return false;
    }
    hasVisualVariables(r3, a12) {
      return r3 ? this.getVisualVariablesForType(r3, a12).length > 0 : this.getVisualVariablesForType("size", a12).length > 0 || this.getVisualVariablesForType("color", a12).length > 0 || this.getVisualVariablesForType("opacity", a12).length > 0 || this.getVisualVariablesForType("rotation", a12).length > 0;
    }
    getVisualVariablesForType(r3, a12) {
      const s6 = this.visualVariables;
      return s6 ? s6.filter((s7) => s7.type === r3 && ("string" == typeof a12 ? s7.target === a12 : false !== a12 || !s7.target)) : [];
    }
    async collectVVRequiredFields(r3, a12) {
      let s6 = [];
      this.visualVariables && (s6 = s6.concat(this.visualVariables));
      for (const i8 of s6)
        i8 && (i8.field && I(r3, a12, i8.field), i8.normalizationField && I(r3, a12, i8.normalizationField), i8.valueExpression && (y3(i8.valueExpression, r3, a12) || await T2(r3, a12, i8.valueExpression)));
    }
  };
  return e([y({ types: [m3], value: null, json: { write: true } })], u8.prototype, "visualVariables", null), e([o("visualVariables", ["visualVariables", "rotationType", "rotationExpression"])], u8.prototype, "readVisualVariables", null), e([r("visualVariables")], u8.prototype, "writeVisualVariables", null), u8 = e([a3("esri.renderers.mixins.VisualVariablesMixin")], u8), u8;
};
function y3(r3, a12, s6) {
  const i8 = e2(r3);
  return null != i8 && (I(a12, s6, i8), true);
}

// node_modules/@arcgis/core/renderers/support/commonProperties.js
var l5 = { types: M, json: { write: { writer: l3 }, origins: { "web-scene": { types: F, write: { writer: l3 }, read: { reader: u2({ types: F }) } } } } };
var y4 = { types: { base: a5, key: "type", typeMap: { "simple-fill": j.typeMap["simple-fill"], "picture-fill": j.typeMap["picture-fill"], "polygon-3d": j.typeMap["polygon-3d"] } }, json: { write: { writer: l3 }, origins: { "web-scene": { type: S, write: { writer: l3 } } } } };
var m4 = { cast: (e3) => null == e3 || "string" == typeof e3 || "number" == typeof e3 ? e3 : `${e3}`, json: { type: String, write: { writer: (e3, r3) => {
  r3.value = e3 == null ? void 0 : e3.toString();
} } } };

// node_modules/@arcgis/core/renderers/support/ClassBreakInfo.js
var i6;
var l6 = i6 = class extends l {
  constructor(s6) {
    super(s6), this.description = null, this.label = null, this.minValue = null, this.maxValue = 0, this.symbol = null;
  }
  clone() {
    return new i6({ description: this.description, label: this.label, minValue: this.minValue, maxValue: this.maxValue, symbol: this.symbol ? this.symbol.clone() : null });
  }
  getMeshHash() {
    const s6 = JSON.stringify(this.symbol);
    return `${this.minValue}.${this.maxValue}.${s6}`;
  }
};
e([y({ type: String, json: { write: true } })], l6.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], l6.prototype, "label", void 0), e([y({ type: Number, json: { read: { source: "classMinValue" }, write: { target: "classMinValue" } } })], l6.prototype, "minValue", void 0), e([y({ type: Number, json: { read: { source: "classMaxValue" }, write: { target: "classMaxValue" } } })], l6.prototype, "maxValue", void 0), e([y(l5)], l6.prototype, "symbol", void 0), l6 = i6 = e([a3("esri.renderers.support.ClassBreakInfo")], l6);
var a11 = l6;

// node_modules/@arcgis/core/renderers/ClassBreaksRenderer.js
var B;
var S2 = "log";
var F2 = "percent-of-total";
var V2 = "field";
var E = new s4({ esriNormalizeByLog: S2, esriNormalizeByPercentOfTotal: F2, esriNormalizeByField: V2 });
var j4 = d(a11);
var z = B = class extends v(p2) {
  constructor(e3) {
    super(e3), this._compiledValueExpression = { valueExpression: null, compiledFunction: null }, this.backgroundFillSymbol = null, this.classBreakInfos = null, this.defaultLabel = null, this.defaultSymbol = null, this.field = null, this.isMaxInclusive = true, this.legendOptions = null, this.normalizationField = null, this.normalizationTotal = null, this.type = "class-breaks", this.valueExpression = null, this.valueExpressionTitle = null, this._set("classBreakInfos", []);
  }
  readClassBreakInfos(e3, s6, t2) {
    if (!Array.isArray(e3))
      return;
    let o3 = s6.minValue;
    return e3.map((e4) => {
      const s7 = new a11();
      return s7.read(e4, t2), null == s7.minValue && (s7.minValue = o3), null == s7.maxValue && (s7.maxValue = s7.minValue), o3 = s7.maxValue, s7;
    });
  }
  writeClassBreakInfos(e3, s6, t2, o3) {
    const i8 = e3.map((e4) => e4.write({}, o3));
    this._areClassBreaksConsecutive() && i8.forEach((e4) => delete e4.classMinValue), s6[t2] = i8;
  }
  castField(e3) {
    return null == e3 ? e3 : "function" == typeof e3 ? (s.getLogger(this).error(".field: field must be a string value"), null) : u(e3);
  }
  get minValue() {
    return this.classBreakInfos && this.classBreakInfos[0] && this.classBreakInfos[0].minValue || 0;
  }
  get normalizationType() {
    let e3 = this._get("normalizationType");
    const s6 = !!this.normalizationField, t2 = null != this.normalizationTotal;
    return s6 || t2 ? (e3 = s6 && V2 || t2 && F2 || null, s6 && t2 && s.getLogger(this).warn("warning: both normalizationField and normalizationTotal are set!")) : e3 !== V2 && e3 !== F2 || (e3 = null), e3;
  }
  set normalizationType(e3) {
    this._set("normalizationType", e3);
  }
  addClassBreakInfo(e3, t2, i8) {
    let r3 = null;
    r3 = "number" == typeof e3 ? new a11({ minValue: e3, maxValue: t2, symbol: P(i8) }) : j4(a(e3)), this.classBreakInfos.push(r3), 1 === this.classBreakInfos.length && this.notifyChange("minValue");
  }
  removeClassBreakInfo(e3, s6) {
    const t2 = this.classBreakInfos.length;
    for (let o3 = 0; o3 < t2; o3++) {
      const t3 = [this.classBreakInfos[o3].minValue, this.classBreakInfos[o3].maxValue];
      if (t3[0] === e3 && t3[1] === s6) {
        this.classBreakInfos.splice(o3, 1);
        break;
      }
    }
  }
  getBreakIndex(e3, s6) {
    return !this.valueExpression || null != s6 && null != s6.arcade || s.getLogger(this).warn(""), this.valueExpression ? this._getBreakIndexForExpression(e3, s6) : this._getBreakIndexForField(e3);
  }
  async getClassBreakInfo(e3, s6) {
    let t2 = s6;
    !this.valueExpression || null != s6 && null != s6.arcade || (t2 = { ...t2, arcade: await i3() });
    const o3 = this.getBreakIndex(e3, t2);
    return -1 !== o3 ? this.classBreakInfos[o3] : null;
  }
  getSymbol(e3, s6) {
    if (this.valueExpression && (null == s6 || null == s6.arcade))
      return void s.getLogger(this).error("#getSymbol()", "Please use getSymbolAsync if valueExpression is used");
    const t2 = this.getBreakIndex(e3, s6);
    return t2 > -1 ? this.classBreakInfos[t2].symbol : this.defaultSymbol;
  }
  async getSymbolAsync(e3, s6) {
    let t2 = s6;
    if (this.valueExpression && (null == s6 || null == s6.arcade)) {
      const e4 = await i3(), { arcadeUtils: s7 } = e4;
      s7.hasGeometryOperations(this.valueExpression) && await s7.enableGeometryOperations(), t2 = { ...t2, arcade: e4 };
    }
    const o3 = this.getBreakIndex(e3, t2);
    return o3 > -1 ? this.classBreakInfos[o3].symbol : this.defaultSymbol;
  }
  getSymbols() {
    const e3 = [];
    return this.classBreakInfos.forEach((s6) => {
      s6.symbol && e3.push(s6.symbol);
    }), this.defaultSymbol && e3.push(this.defaultSymbol), e3;
  }
  getAttributeHash() {
    return this.visualVariables && this.visualVariables.reduce((e3, s6) => e3 + s6.getAttributeHash(), "");
  }
  getMeshHash() {
    const e3 = JSON.stringify(this.backgroundFillSymbol), s6 = JSON.stringify(this.defaultSymbol), t2 = `${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;
    return `${e3}.${s6}.${this.classBreakInfos.reduce((e4, s7) => e4 + s7.getMeshHash(), "")}.${t2}.${this.field}.${this.valueExpression}`;
  }
  get arcadeRequired() {
    return this.arcadeRequiredForVisualVariables || !!this.valueExpression;
  }
  clone() {
    return new B({ field: this.field, backgroundFillSymbol: this.backgroundFillSymbol && this.backgroundFillSymbol.clone(), defaultLabel: this.defaultLabel, defaultSymbol: this.defaultSymbol && this.defaultSymbol.clone(), valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, classBreakInfos: a(this.classBreakInfos), isMaxInclusive: this.isMaxInclusive, normalizationField: this.normalizationField, normalizationTotal: this.normalizationTotal, normalizationType: this.normalizationType, visualVariables: a(this.visualVariables), legendOptions: a(this.legendOptions), authoringInfo: this.authoringInfo && this.authoringInfo.clone() });
  }
  async collectRequiredFields(e3, s6) {
    const t2 = [this.collectVVRequiredFields(e3, s6), this.collectSymbolFields(e3, s6)];
    await Promise.all(t2);
  }
  async collectSymbolFields(e3, s6) {
    const t2 = [...this.getSymbols().map((t3) => t3.collectRequiredFields(e3, s6)), T2(e3, s6, this.valueExpression)];
    I(e3, s6, this.field), I(e3, s6, this.normalizationField), await Promise.all(t2);
  }
  _getBreakIndexForExpression(e3, s6) {
    const { viewingMode: t2, scale: o3, spatialReference: i8, arcade: r3 } = s6 ?? {}, { valueExpression: a12 } = this;
    let l8 = this._compiledValueExpression.valueExpression === a12 ? this._compiledValueExpression.compiledFunction : null;
    const n7 = r3.arcadeUtils;
    if (!l8) {
      const e4 = n7.createSyntaxTree(a12);
      l8 = n7.createFunction(e4), this._compiledValueExpression.compiledFunction = l8;
    }
    this._compiledValueExpression.valueExpression = a12;
    const u8 = n7.executeFunction(l8, n7.createExecContext(e3, n7.getViewInfo({ viewingMode: t2, scale: o3, spatialReference: i8 })));
    return this._getBreakIndexfromInfos(u8);
  }
  _getBreakIndexForField(e3) {
    const s6 = this.field, t2 = e3.attributes, o3 = this.normalizationType;
    let i8 = parseFloat(t2[s6]);
    if (o3) {
      const e4 = this.normalizationTotal, s7 = parseFloat(this.normalizationField ? t2[this.normalizationField] : void 0);
      if (o3 === S2)
        i8 = Math.log(i8) * Math.LOG10E;
      else if (o3 !== F2 || null == e4 || isNaN(e4)) {
        if (o3 === V2 && !isNaN(s7)) {
          if (isNaN(i8) || isNaN(s7))
            return -1;
          i8 /= s7;
        }
      } else
        i8 = i8 / e4 * 100;
    }
    return this._getBreakIndexfromInfos(i8);
  }
  _getBreakIndexfromInfos(e3) {
    const s6 = this.isMaxInclusive;
    if (null != e3 && "number" == typeof e3 && !isNaN(e3))
      for (let t2 = 0; t2 < this.classBreakInfos.length; t2++) {
        const o3 = [this.classBreakInfos[t2].minValue, this.classBreakInfos[t2].maxValue];
        if (o3[0] <= e3 && (s6 ? e3 <= o3[1] : e3 < o3[1]))
          return t2;
      }
    return -1;
  }
  _areClassBreaksConsecutive() {
    const e3 = this.classBreakInfos, s6 = e3.length;
    for (let t2 = 1; t2 < s6; t2++)
      if (e3[t2 - 1].maxValue !== e3[t2].minValue)
        return false;
    return true;
  }
};
e([y(y4)], z.prototype, "backgroundFillSymbol", void 0), e([y({ type: [a11] })], z.prototype, "classBreakInfos", void 0), e([o("classBreakInfos")], z.prototype, "readClassBreakInfos", null), e([r("classBreakInfos")], z.prototype, "writeClassBreakInfos", null), e([y({ type: String, json: { write: true } })], z.prototype, "defaultLabel", void 0), e([y(l5)], z.prototype, "defaultSymbol", void 0), e([y({ type: String, json: { write: true } })], z.prototype, "field", void 0), e([s5("field")], z.prototype, "castField", null), e([y({ type: Boolean })], z.prototype, "isMaxInclusive", void 0), e([y({ type: p, json: { write: true } })], z.prototype, "legendOptions", void 0), e([y({ type: Number, readOnly: true, value: null, json: { read: false, write: { overridePolicy() {
  return 0 !== this.classBreakInfos.length && this._areClassBreaksConsecutive() ? { enabled: true } : { enabled: false };
} } } })], z.prototype, "minValue", null), e([y({ type: String, json: { write: true } })], z.prototype, "normalizationField", void 0), e([y({ type: Number, cast: (e3) => a2(e3), json: { write: true } })], z.prototype, "normalizationTotal", void 0), e([y({ type: E.apiValues, value: null, json: { type: E.jsonValues, read: E.read, write: E.write } })], z.prototype, "normalizationType", null), e([o2({ classBreaks: "class-breaks" })], z.prototype, "type", void 0), e([y({ type: String, json: { write: true } })], z.prototype, "valueExpression", void 0), e([y({ type: String, json: { write: true } })], z.prototype, "valueExpressionTitle", void 0), z = B = e([a3("esri.renderers.ClassBreaksRenderer")], z);
var w = z;

// node_modules/@arcgis/core/renderers/support/UniqueValue.js
var c4 = class extends i2(l) {
  constructor(o3) {
    super(o3), this.value = null, this.value2 = null, this.value3 = null;
  }
};
e([y(m4)], c4.prototype, "value", void 0), e([y(m4)], c4.prototype, "value2", void 0), e([y(m4)], c4.prototype, "value3", void 0), c4 = e([a3("esri.renderers.support.UniqueValue")], c4);
var u6 = c4;

// node_modules/@arcgis/core/renderers/support/UniqueValueClass.js
var n5 = class extends i2(l) {
  constructor(r3) {
    super(r3), this.description = null, this.label = null, this.symbol = null, this.values = null;
  }
  castValues(r3) {
    if (null == r3)
      return null;
    const o3 = typeof (r3 = Array.isArray(r3) ? r3 : [r3])[0];
    return "string" === o3 || "number" === o3 ? r3.map((r4) => new u6({ value: r4 })) : "object" === o3 ? r3[0] instanceof u6 ? r3 : r3.map((r4) => new u6(r4)) : null;
  }
};
e([y({ type: String, json: { write: true } })], n5.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], n5.prototype, "label", void 0), e([y(l5)], n5.prototype, "symbol", void 0), e([y({ type: [u6], json: { type: [[String]], read: { reader: (r3) => r3 ? r3.map((r4) => new u6({ value: r4[0], value2: r4[1], value3: r4[2] })) : null }, write: { writer: (r3, e3) => {
  const t2 = [];
  for (const s6 of r3) {
    const r4 = [s6.value, s6.value2, s6.value3].filter(R).map((r5) => r5.toString());
    t2.push(r4);
  }
  e3.values = t2;
} } } })], n5.prototype, "values", void 0), e([s5("values")], n5.prototype, "castValues", null), n5 = e([a3("esri.renderers.support.UniqueValueClass")], n5);
var u7 = n5;

// node_modules/@arcgis/core/renderers/support/UniqueValueGroup.js
var c5 = class extends i2(l) {
  constructor(r3) {
    super(r3), this.heading = null, this.classes = null;
  }
};
e([y({ type: String, json: { write: true } })], c5.prototype, "heading", void 0), e([y({ type: [u7], json: { write: true } })], c5.prototype, "classes", void 0), c5 = e([a3("esri.renderers.support.UniqueValueGroup")], c5);
var i7 = c5;

// node_modules/@arcgis/core/renderers/support/UniqueValueInfo.js
var l7;
var p6 = l7 = class extends l {
  constructor(o3) {
    super(o3), this.description = null, this.label = null, this.symbol = null, this.value = null;
  }
  clone() {
    return new l7({ value: this.value, description: this.description, label: this.label, symbol: this.symbol ? this.symbol.clone() : null });
  }
  getMeshHash() {
    const o3 = JSON.stringify(this.symbol && this.symbol.toJSON());
    return `${this.value}.${o3}`;
  }
};
e([y({ type: String, json: { write: true } })], p6.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], p6.prototype, "label", void 0), e([y(l5)], p6.prototype, "symbol", void 0), e([y(m4)], p6.prototype, "value", void 0), p6 = l7 = e([a3("esri.renderers.support.UniqueValueInfo")], p6);
var n6 = p6;

// node_modules/@arcgis/core/renderers/UniqueValueRenderer.js
var E2;
var M2 = "esri.renderers.UniqueValueRenderer";
var N = s.getLogger(M2);
var R2 = "uvInfos-watcher";
var P2 = "uvGroups-watcher";
var C = ",";
var $ = d(n6);
function z2(e3) {
  const { field1: t2, field2: s6, field3: i8, fieldDelimiter: o3, uniqueValueInfos: l8, valueExpression: r3 } = e3, u8 = !(!t2 || !s6);
  return [{ classes: (l8 ?? []).map((e4) => {
    var _a;
    const { symbol: l9, label: n7, value: a12, description: p7 } = e4, [f, d2, c6] = u8 ? ((_a = a12 == null ? void 0 : a12.toString()) == null ? void 0 : _a.split(o3 || "")) || [] : [a12], h2 = [];
    return (t2 || r3) && h2.push(f), s6 && h2.push(d2), i8 && h2.push(c6), { symbol: l9, label: n7, values: [h2], description: p7 };
  }) }];
}
var k = E2 = class extends v(p2) {
  constructor(e3) {
    super(e3), this._valueInfoMap = {}, this._isDefaultSymbolDerived = false, this._isInfosSource = null, this.type = "unique-value", this.backgroundFillSymbol = null, this.orderByClassesEnabled = false, this.valueExpressionTitle = null, this.legendOptions = null, this.defaultLabel = null, this.portal = null, this.styleOrigin = null, this.diff = { uniqueValueInfos(e4, t2) {
      if (!e4 && !t2)
        return;
      if (!e4 || !t2)
        return { type: "complete", oldValue: e4, newValue: t2 };
      let s6 = false;
      const i8 = { type: "collection", added: [], removed: [], changed: [], unchanged: [] };
      for (let o3 = 0; o3 < t2.length; o3++) {
        const l8 = e4.find((e5) => e5.value === t2[o3].value);
        l8 ? a4(l8, t2[o3]) ? (i8.changed.push({ type: "complete", oldValue: l8, newValue: t2[o3] }), s6 = true) : i8.unchanged.push({ oldValue: l8, newValue: t2[o3] }) : (i8.added.push(t2[o3]), s6 = true);
      }
      for (let o3 = 0; o3 < e4.length; o3++) {
        t2.find((t3) => t3.value === e4[o3].value) || (i8.removed.push(e4[o3]), s6 = true);
      }
      return s6 ? i8 : void 0;
    } }, this._set("uniqueValueInfos", []), this._set("uniqueValueGroups", []);
  }
  get _cache() {
    return { compiledFunc: null };
  }
  set field(e3) {
    this._set("field", e3), this._updateFieldDelimiter(), this._updateUniqueValues();
  }
  castField(e3) {
    return null == e3 || "function" == typeof e3 ? e3 : u(e3);
  }
  writeField(e3, t2, i8, o3) {
    "string" == typeof e3 ? t2[i8] = e3 : o3 && o3.messages ? o3.messages.push(new s2("property:unsupported", "UniqueValueRenderer.field set to a function cannot be written to JSON")) : N.error(".field: cannot write field to JSON since it's not a string value");
  }
  set field2(e3) {
    this._set("field2", e3), this._updateFieldDelimiter(), this._updateUniqueValues();
  }
  set field3(e3) {
    this._set("field3", e3), this._updateUniqueValues();
  }
  set valueExpression(e3) {
    this._set("valueExpression", e3), this._updateUniqueValues();
  }
  set defaultSymbol(e3) {
    this._isDefaultSymbolDerived = false, this._set("defaultSymbol", e3);
  }
  set fieldDelimiter(e3) {
    this._set("fieldDelimiter", e3), this._updateUniqueValues();
  }
  readPortal(e3, t2, s6) {
    return s6.portal || j3.getDefault();
  }
  readStyleOrigin(e3, t2, s6) {
    if (t2.styleName)
      return Object.freeze({ styleName: t2.styleName });
    if (t2.styleUrl) {
      const e4 = i(t2.styleUrl, s6);
      return Object.freeze({ styleUrl: e4 });
    }
  }
  writeStyleOrigin(e3, t2, s6, i8) {
    e3.styleName ? t2.styleName = e3.styleName : e3.styleUrl && (t2.styleUrl = c(e3.styleUrl, i8));
  }
  set uniqueValueGroups(e3) {
    this.styleOrigin ? N.error("#uniqueValueGroups=", "Cannot modify unique value groups of a UniqueValueRenderer created from a web style") : (this._set("uniqueValueGroups", e3), this._updateInfosFromGroups(), this._isInfosSource = false, this._watchUniqueValueGroups());
  }
  set uniqueValueInfos(e3) {
    this.styleOrigin ? N.error("#uniqueValueInfos=", "Cannot modify unique value infos of a UniqueValueRenderer created from a web style") : (this._set("uniqueValueInfos", e3), this._updateValueInfoMap(), this._updateGroupsFromInfos(), this._isInfosSource = true, this._watchUniqueValueInfos());
  }
  addUniqueValueInfo(e3, s6) {
    var _a;
    if (this.styleOrigin)
      return void N.error("#addUniqueValueInfo()", "Cannot modify unique value infos of a UniqueValueRenderer created from a web style");
    let i8;
    i8 = "object" == typeof e3 ? $(e3) : new n6({ value: e3, symbol: P(s6) }), (_a = this.uniqueValueInfos) == null ? void 0 : _a.push(i8), this._valueInfoMap[i8.value] = i8, this._updateGroupsFromInfos(), this._isInfosSource = true, this._watchUniqueValueInfos();
  }
  removeUniqueValueInfo(e3) {
    if (this.styleOrigin)
      return void N.error("#removeUniqueValueInfo()", "Cannot modify unique value infos of a UniqueValueRenderer created from a web style");
    const t2 = this.uniqueValueInfos;
    if (t2)
      for (let s6 = 0; s6 < t2.length; s6++) {
        if (t2[s6].value === e3 + "") {
          delete this._valueInfoMap[e3], t2.splice(s6, 1);
          break;
        }
      }
    this._updateGroupsFromInfos(), this._isInfosSource = true, this._watchUniqueValueInfos();
  }
  async getUniqueValueInfo(e3, t2) {
    let s6 = t2;
    return !this.valueExpression || null != t2 && null != t2.arcade || (s6 = { ...s6, arcade: await i3() }), this._getUniqueValueInfo(e3, s6);
  }
  getSymbol(e3, t2) {
    if (this.valueExpression && (null == t2 || null == t2.arcade))
      return void N.error("#getSymbol()", "Please use getSymbolAsync if valueExpression is used");
    const s6 = this._getUniqueValueInfo(e3, t2);
    return s6 && s6.symbol || this.defaultSymbol;
  }
  async getSymbolAsync(e3, t2) {
    let s6 = t2;
    if (this.valueExpression && (null == s6 || null == s6.arcade)) {
      const e4 = await i3(), { arcadeUtils: t3 } = e4;
      t3.hasGeometryOperations(this.valueExpression) && await t3.enableGeometryOperations(), s6 = { ...s6, arcade: e4 };
    }
    const i8 = this._getUniqueValueInfo(e3, s6);
    return i8 && i8.symbol || this.defaultSymbol;
  }
  getSymbols() {
    const e3 = [];
    for (const t2 of this.uniqueValueInfos ?? [])
      t2.symbol && e3.push(t2.symbol);
    return this.defaultSymbol && e3.push(this.defaultSymbol), e3;
  }
  getAttributeHash() {
    return this.visualVariables && this.visualVariables.reduce((e3, t2) => e3 + t2.getAttributeHash(), "");
  }
  getMeshHash() {
    var _a;
    const e3 = JSON.stringify(this.backgroundFillSymbol), t2 = JSON.stringify(this.defaultSymbol), s6 = (_a = this.uniqueValueInfos) == null ? void 0 : _a.reduce((e4, t3) => e4 + t3.getMeshHash(), "");
    return `${e3}.${t2}.${s6}.${`${this.field}.${this.field2}.${this.field3}.${this.fieldDelimiter}`}.${this.valueExpression}`;
  }
  clone() {
    const e3 = new E2({ field: this.field, field2: this.field2, field3: this.field3, defaultLabel: this.defaultLabel, defaultSymbol: a(this.defaultSymbol), orderByClassesEnabled: this.orderByClassesEnabled, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, fieldDelimiter: this.fieldDelimiter, visualVariables: a(this.visualVariables), legendOptions: a(this.legendOptions), authoringInfo: this.authoringInfo && this.authoringInfo.clone(), backgroundFillSymbol: a(this.backgroundFillSymbol) });
    this._isDefaultSymbolDerived && (e3._isDefaultSymbolDerived = true), e3._set("portal", this.portal);
    const t2 = a(this.uniqueValueInfos), s6 = a(this.uniqueValueGroups);
    return this.styleOrigin && (e3._set("styleOrigin", Object.freeze(a(this.styleOrigin))), Object.freeze(t2), Object.freeze(s6)), e3._set("uniqueValueInfos", t2), e3._updateValueInfoMap(), e3._set("uniqueValueGroups", s6), e3._isInfosSource = this._isInfosSource, e3._watchUniqueValueInfosAndGroups(), e3;
  }
  get arcadeRequired() {
    return this.arcadeRequiredForVisualVariables || !!this.valueExpression;
  }
  async collectRequiredFields(e3, t2) {
    const s6 = [this.collectVVRequiredFields(e3, t2), this.collectSymbolFields(e3, t2)];
    await Promise.all(s6);
  }
  async collectSymbolFields(e3, t2) {
    const s6 = [...this.getSymbols().map((s7) => s7.collectRequiredFields(e3, t2)), T2(e3, t2, this.valueExpression)];
    I(e3, t2, this.field), I(e3, t2, this.field2), I(e3, t2, this.field3), await Promise.all(s6);
  }
  populateFromStyle() {
    return c2(this.styleOrigin, { portal: this.portal }).then((e3) => {
      var _a;
      const t2 = [];
      return this._valueInfoMap = {}, e3 && e3.data && Array.isArray(e3.data.items) && e3.data.items.forEach((s6) => {
        const i8 = new u3({ styleUrl: e3.styleUrl, styleName: e3.styleName, portal: this.portal, name: s6.name });
        this.defaultSymbol || s6.name !== e3.data.defaultItem || (this.defaultSymbol = i8, this._isDefaultSymbolDerived = true);
        const o3 = new n6({ value: s6.name, symbol: i8 });
        t2.push(o3), this._valueInfoMap[s6.name] = o3;
      }), this._set("uniqueValueInfos", Object.freeze(t2)), this._updateGroupsFromInfos(true), this._isInfosSource = null, this._watchUniqueValueInfos(), !this.defaultSymbol && ((_a = this.uniqueValueInfos) == null ? void 0 : _a.length) && (this.defaultSymbol = this.uniqueValueInfos[0].symbol, this._isDefaultSymbolDerived = true), this;
    });
  }
  _updateFieldDelimiter() {
    this.field && this.field2 && !this.fieldDelimiter && this._set("fieldDelimiter", C);
  }
  _updateUniqueValues() {
    null != this._isInfosSource && (this._isInfosSource ? this._updateGroupsFromInfos() : this._updateInfosFromGroups());
  }
  _updateValueInfoMap() {
    this._valueInfoMap = {};
    const { uniqueValueInfos: e3 } = this;
    if (e3)
      for (const t2 of e3)
        this._valueInfoMap[t2.value + ""] = t2;
  }
  _watchUniqueValueInfosAndGroups() {
    this._watchUniqueValueInfos(), this._watchUniqueValueGroups();
  }
  _watchUniqueValueInfos() {
    this.removeHandles(R2);
    const { uniqueValueInfos: e3 } = this;
    if (e3) {
      const t2 = [];
      for (const s6 of e3)
        t2.push(l2(() => ({ symbol: s6.symbol, value: s6.value, label: s6.label, description: s6.description }), (e4, t3) => {
          e4 !== t3 && (this._updateGroupsFromInfos(), this._isInfosSource = true);
        }, { sync: true }));
      this.addHandles(t2, R2);
    }
  }
  _watchUniqueValueGroups() {
    this.removeHandles(P2);
    const { uniqueValueGroups: e3 } = this;
    if (e3) {
      const t2 = [];
      for (const s6 of e3) {
        t2.push(l2(() => ({ classes: s6.classes }), (e4, t3) => {
          e4 !== t3 && (this._updateInfosFromGroups(), this._isInfosSource = false);
        }, { sync: true }));
        for (const e4 of s6.classes ?? [])
          t2.push(l2(() => ({ symbol: e4.symbol, values: e4.values, label: e4.label, description: e4.description }), (e5, t3) => {
            e5 !== t3 && (this._updateInfosFromGroups(), this._isInfosSource = false);
          }, { sync: true }));
      }
      this.addHandles(t2, P2);
    }
  }
  _updateInfosFromGroups() {
    if (!this.uniqueValueGroups)
      return this._set("uniqueValueInfos", null), this._updateValueInfoMap(), void this._watchUniqueValueInfos();
    const e3 = [], { field: t2, field2: s6, field3: i8, fieldDelimiter: o3, uniqueValueGroups: l8, valueExpression: r3 } = this;
    if (!t2 && !r3)
      return this._set("uniqueValueInfos", e3), this._updateValueInfoMap(), void this._watchUniqueValueInfos();
    const u8 = !(!t2 || !s6);
    for (const n7 of l8)
      for (const t3 of n7.classes ?? []) {
        const { symbol: l9, label: r4, values: n8, description: a12 } = t3;
        for (const t4 of n8 ?? []) {
          const { value: n9, value2: p7, value3: f } = t4, d2 = [n9];
          s6 && d2.push(p7), i8 && d2.push(f);
          const c6 = u8 ? d2.join(o3 || "") : d2[0];
          e3.push(new n6({ symbol: l9, label: r4, value: c6, description: a12 }));
        }
      }
    this._set("uniqueValueInfos", e3), this._updateValueInfoMap(), this._watchUniqueValueInfos();
  }
  _updateGroupsFromInfos(e3 = false) {
    if (!this.uniqueValueInfos)
      return this._set("uniqueValueGroups", null), void this._watchUniqueValueGroups();
    const { field: t2, field2: s6, valueExpression: i8, fieldDelimiter: o3, uniqueValueInfos: l8 } = this;
    if (!t2 && !i8 || !l8.length)
      return this._set("uniqueValueGroups", []), void this._watchUniqueValueGroups();
    const r3 = !(!t2 || !s6), u8 = l8.map((e4) => {
      var _a;
      const { symbol: t3, label: s7, value: i9, description: l9 } = e4, [u9, n8, a12] = r3 ? ((_a = i9 == null ? void 0 : i9.toString()) == null ? void 0 : _a.split(o3 || "")) || [] : [i9];
      return new u7({ symbol: t3, label: s7, description: l9, values: [new u6({ value: u9, value2: n8, value3: a12 })] });
    }), n7 = [new i7({ classes: u8 })];
    e3 && Object.freeze(n7), this._set("uniqueValueGroups", n7), this._watchUniqueValueGroups();
  }
  _getUniqueValueInfo(e3, t2) {
    return this.valueExpression ? this._getUnqiueValueInfoForExpression(e3, t2) : this._getUnqiueValueInfoForFields(e3);
  }
  _getUnqiueValueInfoForExpression(e3, t2) {
    const { viewingMode: s6, scale: i8, spatialReference: o3, arcade: l8 } = t2 ?? {};
    let r3 = this._cache.compiledFunc;
    const u8 = l8.arcadeUtils;
    if (!r3) {
      const e4 = u8.createSyntaxTree(this.valueExpression);
      r3 = u8.createFunction(e4), this._cache.compiledFunc = r3;
    }
    const n7 = u8.executeFunction(r3, u8.createExecContext(e3, u8.getViewInfo({ viewingMode: s6, scale: i8, spatialReference: o3 })));
    return this._valueInfoMap[n7 + ""];
  }
  _getUnqiueValueInfoForFields(e3) {
    const t2 = this.field, s6 = e3.attributes;
    let i8;
    if ("function" != typeof t2 && this.field2) {
      const e4 = this.field2, o3 = this.field3, l8 = [];
      t2 && l8.push(s6[t2]), e4 && l8.push(s6[e4]), o3 && l8.push(s6[o3]), i8 = l8.join(this.fieldDelimiter || "");
    } else
      "function" == typeof t2 ? i8 = t2(e3) : t2 && (i8 = s6[t2]);
    return this._valueInfoMap[i8 + ""];
  }
  static fromPortalStyle(e3, t2) {
    const s6 = new E2(t2 && t2.properties);
    s6._set("styleOrigin", Object.freeze({ styleName: e3 })), s6._set("portal", t2 && t2.portal || j3.getDefault());
    const i8 = s6.populateFromStyle();
    return i8.catch((t3) => {
      N.error(`#fromPortalStyle('${e3}'[, ...])`, "Failed to create unique value renderer from style name", t3);
    }), i8;
  }
  static fromStyleUrl(e3, t2) {
    const s6 = new E2(t2 && t2.properties);
    s6._set("styleOrigin", Object.freeze({ styleUrl: e3 }));
    const i8 = s6.populateFromStyle();
    return i8.catch((t3) => {
      N.error(`#fromStyleUrl('${e3}'[, ...])`, "Failed to create unique value renderer from style URL", t3);
    }), i8;
  }
};
e([y({ readOnly: true })], k.prototype, "_cache", null), e([o2({ uniqueValue: "unique-value" })], k.prototype, "type", void 0), e([y(y4)], k.prototype, "backgroundFillSymbol", void 0), e([y({ value: null, json: { type: String, read: { source: "field1" }, write: { target: "field1" } } })], k.prototype, "field", null), e([s5("field")], k.prototype, "castField", null), e([r("field")], k.prototype, "writeField", null), e([y({ type: String, value: null, json: { write: true } })], k.prototype, "field2", null), e([y({ type: String, value: null, json: { write: true } })], k.prototype, "field3", null), e([y({ type: Boolean, json: { name: "drawInClassOrder", default: false, write: true, origins: { "web-scene": { write: false } } } })], k.prototype, "orderByClassesEnabled", void 0), e([y({ type: String, value: null, json: { write: true } })], k.prototype, "valueExpression", null), e([y({ type: String, json: { write: true } })], k.prototype, "valueExpressionTitle", void 0), e([y({ type: p, json: { write: true } })], k.prototype, "legendOptions", void 0), e([y({ type: String, json: { write: true } })], k.prototype, "defaultLabel", void 0), e([y(n({ ...l5 }, { json: { write: { overridePolicy() {
  return { enabled: !this._isDefaultSymbolDerived };
} }, origins: { "web-scene": { write: { overridePolicy() {
  return { enabled: !this._isDefaultSymbolDerived };
} } } } } }))], k.prototype, "defaultSymbol", null), e([y({ type: String, value: null, json: { write: true } })], k.prototype, "fieldDelimiter", null), e([y({ type: j3, readOnly: true })], k.prototype, "portal", void 0), e([o("portal", ["styleName"])], k.prototype, "readPortal", null), e([y({ readOnly: true, json: { write: { enabled: false, overridePolicy: () => ({ enabled: true }) } } })], k.prototype, "styleOrigin", void 0), e([o("styleOrigin", ["styleName", "styleUrl"])], k.prototype, "readStyleOrigin", null), e([r("styleOrigin", { styleName: { type: String }, styleUrl: { type: String } })], k.prototype, "writeStyleOrigin", null), e([y({ type: [i7], json: { read: { source: ["uniqueValueGroups", "uniqueValueInfos"], reader: (e3, t2, s6) => (t2.uniqueValueGroups || z2(t2)).map((e4) => i7.fromJSON(e4, s6)) }, write: { overridePolicy() {
  return this.styleOrigin ? { enabled: false } : { enabled: true };
} } } })], k.prototype, "uniqueValueGroups", null), e([y({ type: [n6], json: { read: false, write: { overridePolicy() {
  return this.styleOrigin ? { enabled: false } : { enabled: true };
} } } })], k.prototype, "uniqueValueInfos", null), k = E2 = e([a3(M2)], k);
var A = k;

export {
  p2 as p,
  n4 as n,
  v,
  l5 as l,
  a11 as a,
  w,
  n6 as n2,
  A
};
//# sourceMappingURL=chunk-Z2T56FN3.js.map
