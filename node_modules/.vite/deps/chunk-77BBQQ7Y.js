import {
  c as c2
} from "./chunk-CNCZBOLJ.js";
import {
  c,
  g
} from "./chunk-42RWGG3D.js";
import {
  i
} from "./chunk-KTEJJM3A.js";
import {
  p
} from "./chunk-7KM4XBUC.js";
import {
  o as o3
} from "./chunk-4H5JODOT.js";
import {
  o2,
  r
} from "./chunk-SFV6XLDZ.js";
import {
  o
} from "./chunk-VBD33VNW.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";

// node_modules/@arcgis/core/portal/timeUnitKebabDictionary.js
var e2 = o()({ esriTimeUnitsMilliseconds: "milliseconds", esriTimeUnitsSeconds: "seconds", esriTimeUnitsMinutes: "minutes", esriTimeUnitsHours: "hours", esriTimeUnitsDays: "days", esriTimeUnitsWeeks: "weeks", esriTimeUnitsMonths: "months", esriTimeUnitsYears: "years", esriTimeUnitsDecades: "decades", esriTimeUnitsCenturies: "centuries", esriTimeUnitsUnknown: void 0 });

// node_modules/@arcgis/core/TimeInterval.js
var a2 = class extends i(l) {
  constructor(o4) {
    super(o4), this.unit = "milliseconds", this.value = 0;
  }
  toMilliseconds() {
    return g(this.value, this.unit, "milliseconds");
  }
};
e([o3(e2, { nonNullable: true })], a2.prototype, "unit", void 0), e([y({ type: Number, json: { write: true }, nonNullable: true })], a2.prototype, "value", void 0), a2 = e([a("esri.TimeInterval")], a2);
var l2 = a2;

// node_modules/@arcgis/core/layers/support/TimeInfo.js
function p2(e3, t) {
  return l2.fromJSON({ value: e3, unit: t });
}
var u = class extends i(l) {
  constructor(e3) {
    super(e3), this.cumulative = false, this.endField = null, this.fullTimeExtent = null, this.hasLiveData = false, this.interval = null, this.startField = null, this.timeReference = null, this.trackIdField = null, this.useTime = true;
  }
  readFullTimeExtent(e3, r2) {
    if (!r2.timeExtent || !Array.isArray(r2.timeExtent) || 2 !== r2.timeExtent.length)
      return null;
    const l3 = new Date(r2.timeExtent[0]), i2 = new Date(r2.timeExtent[1]);
    return new c({ start: l3, end: i2 });
  }
  writeFullTimeExtent(e3, t) {
    e3 && null != e3.start && null != e3.end ? t.timeExtent = [e3.start.getTime(), e3.end.getTime()] : t.timeExtent = null;
  }
  readInterval(e3, t) {
    return t.timeInterval && t.timeIntervalUnits ? p2(t.timeInterval, t.timeIntervalUnits) : t.defaultTimeInterval && t.defaultTimeIntervalUnits ? p2(t.defaultTimeInterval, t.defaultTimeIntervalUnits) : null;
  }
  writeInterval(e3, t) {
    t.timeInterval = (e3 == null ? void 0 : e3.toJSON().value) ?? null, t.timeIntervalUnits = (e3 == null ? void 0 : e3.toJSON().unit) ?? null;
  }
};
e([y({ type: Boolean, json: { name: "exportOptions.timeDataCumulative", write: true } })], u.prototype, "cumulative", void 0), e([y({ type: String, json: { name: "endTimeField", write: { enabled: true, allowNull: true } } })], u.prototype, "endField", void 0), e([y({ type: c, json: { write: { enabled: true, allowNull: true } } })], u.prototype, "fullTimeExtent", void 0), e([o2("fullTimeExtent", ["timeExtent"])], u.prototype, "readFullTimeExtent", null), e([r("fullTimeExtent")], u.prototype, "writeFullTimeExtent", null), e([y({ type: Boolean, json: { write: true } })], u.prototype, "hasLiveData", void 0), e([y({ type: l2, json: { write: { enabled: true, allowNull: true } } })], u.prototype, "interval", void 0), e([o2("interval", ["timeInterval", "timeIntervalUnits", "defaultTimeInterval", "defaultTimeIntervalUnits"])], u.prototype, "readInterval", null), e([r("interval")], u.prototype, "writeInterval", null), e([y({ type: String, json: { name: "startTimeField", write: { enabled: true, allowNull: true } } })], u.prototype, "startField", void 0), e([y({ type: c2, json: { write: { enabled: true, allowNull: true } } })], u.prototype, "timeReference", void 0), e([y({ type: String, json: { write: { enabled: true, allowNull: true } } })], u.prototype, "trackIdField", void 0), e([y({ type: Boolean, json: { name: "exportOptions.useTime", write: true } })], u.prototype, "useTime", void 0), u = e([a("esri.layers.support.TimeInfo")], u);
var d = u;

// node_modules/@arcgis/core/layers/mixins/TemporalLayer.js
var a3 = (a4) => {
  let f = class extends a4 {
    constructor() {
      super(...arguments), this.timeExtent = null, this.timeOffset = null, this.useViewTime = true;
    }
    readOffset(e3, t) {
      const o4 = t.timeInfo.exportOptions;
      if (!o4)
        return null;
      const s = o4.timeOffset, i2 = e2.fromJSON(o4.timeOffsetUnits);
      return s && i2 ? new l2({ value: s, unit: i2 }) : null;
    }
    set timeInfo(e3) {
      p(e3, this.fieldsIndex), this._set("timeInfo", e3);
    }
  };
  return e([y({ type: c, json: { write: false } })], f.prototype, "timeExtent", void 0), e([y({ type: l2 })], f.prototype, "timeOffset", void 0), e([o2("service", "timeOffset", ["timeInfo.exportOptions"])], f.prototype, "readOffset", null), e([y({ value: null, type: d, json: { write: true, origins: { "web-document": { read: false, write: false }, "portal-item": { read: false, write: false } } } })], f.prototype, "timeInfo", null), e([y({ type: Boolean, json: { read: { source: "timeAnimation" }, write: { target: "timeAnimation" }, origins: { "web-scene": { read: false, write: false } } } })], f.prototype, "useViewTime", void 0), f = e([a("esri.layers.mixins.TemporalLayer")], f), f;
};

export {
  d,
  a3 as a
};
//# sourceMappingURL=chunk-77BBQQ7Y.js.map
