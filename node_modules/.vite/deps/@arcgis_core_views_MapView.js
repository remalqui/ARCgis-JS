import {
  a as a7,
  c as c8,
  e as e9,
  r as r8,
  s as s8
} from "./chunk-2DUJBWMF.js";
import {
  _ as _3,
  d as d6,
  i as i8,
  o as o6
} from "./chunk-L6LEC3UI.js";
import {
  D,
  J,
  K,
  Rt,
  Y as Y2,
  Z,
  bt,
  ct,
  e as e8,
  et,
  ft,
  it,
  l as l6,
  lt,
  mt,
  pt,
  st,
  wt,
  xt,
  yt
} from "./chunk-34BWOTUS.js";
import {
  c as c9
} from "./chunk-RADYXGQH.js";
import {
  t as t9
} from "./chunk-JTFWLA4D.js";
import {
  n as n13
} from "./chunk-KKBQS7Z3.js";
import {
  i as i7,
  l as l5,
  p as p4
} from "./chunk-4U2D3HFL.js";
import {
  e as e7
} from "./chunk-D5NSNTGJ.js";
import {
  n as n12
} from "./chunk-OMDLZQUU.js";
import {
  l as l4
} from "./chunk-X5SMFNYP.js";
import "./chunk-JUHOAKXP.js";
import {
  r as r7,
  t as t8
} from "./chunk-O62OS3ME.js";
import {
  v as v3
} from "./chunk-5WXPQVZD.js";
import {
  c as c7
} from "./chunk-AF36K5Y6.js";
import {
  d as d5
} from "./chunk-OSBD2NL4.js";
import "./chunk-5K6FTFN4.js";
import "./chunk-FQZ2JEHK.js";
import {
  c as c5
} from "./chunk-CNCZBOLJ.js";
import "./chunk-DTEODQ6R.js";
import "./chunk-E2DURSMR.js";
import "./chunk-4YNW7QZY.js";
import "./chunk-E2BBTG5C.js";
import {
  n as n9
} from "./chunk-QNFDBY7V.js";
import {
  e as e6,
  f as f4,
  i as i6,
  r as r6
} from "./chunk-EL72ISXP.js";
import {
  t as t7
} from "./chunk-5KLICR5E.js";
import "./chunk-PNA6D76Z.js";
import {
  h as h4
} from "./chunk-NDQCNJMM.js";
import "./chunk-R2HXL6HT.js";
import "./chunk-2PAQQUAG.js";
import "./chunk-QXPTMFGZ.js";
import {
  h as h6
} from "./chunk-4SARN32Z.js";
import "./chunk-QA4FMJA6.js";
import "./chunk-VFQINJTY.js";
import "./chunk-4J6R7QH6.js";
import "./chunk-HB3KZNZ3.js";
import {
  n as n8
} from "./chunk-VZAEQ6CY.js";
import {
  M as M2,
  h as h3,
  i as i5,
  r as r5,
  s as s7
} from "./chunk-SS33L3LC.js";
import {
  a as a5,
  m as m4,
  o as o5,
  r as r4,
  z
} from "./chunk-X4Y5OF5X.js";
import {
  j as j3,
  p as p2
} from "./chunk-PX3FFFQ5.js";
import "./chunk-Y2ZDD3I4.js";
import "./chunk-MUO4EIZP.js";
import {
  c as c4
} from "./chunk-42RWGG3D.js";
import {
  p as p3
} from "./chunk-G5WJIWPP.js";
import {
  a as a6,
  c as c6,
  d as d4
} from "./chunk-LNMNRMVX.js";
import "./chunk-OO4A3EBQ.js";
import {
  F,
  I
} from "./chunk-ITRH3PGV.js";
import "./chunk-BRDC7DKL.js";
import "./chunk-ZBWBCN2I.js";
import "./chunk-GZTLZ6RD.js";
import "./chunk-KTEJJM3A.js";
import {
  $,
  Cn,
  Y,
  nn,
  r as r3
} from "./chunk-SO6DBMQG.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-QXGO5RRL.js";
import {
  c as c3
} from "./chunk-EIE3W25Z.js";
import "./chunk-7KM4XBUC.js";
import "./chunk-OZXJDVTE.js";
import {
  j as j4
} from "./chunk-UWRLWNKW.js";
import "./chunk-WUGSUFWO.js";
import {
  n as n11
} from "./chunk-7MIGED3W.js";
import "./chunk-FDJHJMFJ.js";
import {
  n as n10
} from "./chunk-PXHKLVGZ.js";
import "./chunk-AFZS4SWK.js";
import {
  r
} from "./chunk-CGK6BJQA.js";
import "./chunk-XR4HIGQP.js";
import "./chunk-XU2Q4SCK.js";
import {
  i as i4
} from "./chunk-KIEN3CY2.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7E3Q7HTF.js";
import "./chunk-FXDEKQIL.js";
import "./chunk-GJ5WE5D3.js";
import {
  h as h5
} from "./chunk-KKGH4SRQ.js";
import "./chunk-Y2CLYMXQ.js";
import {
  V
} from "./chunk-4RFFPIT2.js";
import {
  _ as _2,
  d as d2
} from "./chunk-UKJF25H6.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-D5MIJ6WT.js";
import "./chunk-7KX64CAH.js";
import {
  _
} from "./chunk-J4R3XNTP.js";
import "./chunk-Y6FRAP2R.js";
import "./chunk-BVNZ3ETW.js";
import "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-4H5JODOT.js";
import {
  j as j2,
  o as o4
} from "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import {
  i as i3,
  m as m3
} from "./chunk-MOPR7RFH.js";
import {
  g as g3
} from "./chunk-KW3ZNPTA.js";
import {
  r as r2
} from "./chunk-TJB4CGOM.js";
import {
  W,
  e as e4,
  e2 as e5,
  i,
  n as n5,
  n3 as n7,
  o as o3,
  t as t5
} from "./chunk-65NFKTSD.js";
import {
  h as h2,
  i as i2,
  n2 as n6
} from "./chunk-KUQPXYNJ.js";
import "./chunk-XUY2GLHG.js";
import "./chunk-JYZSPYYW.js";
import "./chunk-5EXFDBQJ.js";
import "./chunk-4NOOGA4U.js";
import "./chunk-CWQ6Q3PH.js";
import {
  U,
  a as a4,
  f as f2,
  h,
  j,
  l as l3,
  w as w2
} from "./chunk-XN5VV437.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-74O2T7JC.js";
import {
  n as n4
} from "./chunk-WBSPL6CJ.js";
import {
  m as m2,
  p
} from "./chunk-N5ULYWRU.js";
import "./chunk-LQVUN6IS.js";
import {
  c as c2,
  s as s5
} from "./chunk-JZM5YUHA.js";
import "./chunk-MOIETNWJ.js";
import {
  M,
  f as f3,
  t as t6
} from "./chunk-3GSONYPC.js";
import {
  S2 as S,
  d2 as d3,
  f,
  g as g2,
  x2 as x
} from "./chunk-SFV6XLDZ.js";
import {
  s as s6
} from "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import {
  l as l2
} from "./chunk-7A5C2EQ3.js";
import {
  A,
  m,
  n3 as n2,
  o,
  t as t2,
  t2 as t3,
  v,
  y3 as y2
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a3,
  e as e3,
  s2 as s4
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  t
} from "./chunk-SHJI4PR4.js";
import {
  n as n3,
  v as v2
} from "./chunk-2YSHZRCT.js";
import "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import "./chunk-O3CHVGVF.js";
import {
  C,
  P,
  T,
  a as a2,
  c,
  d,
  g,
  s as s3,
  t as t4,
  w,
  y
} from "./chunk-HNHXEGH2.js";
import {
  e as e2,
  l,
  n,
  o as o2
} from "./chunk-DWOEYHKS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-W2N7YT6I.js";
import {
  a
} from "./chunk-I5JT24BO.js";
import {
  R,
  has
} from "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/BreakpointsOwner.js
var n14 = { widthBreakpoint: { getValue(e16) {
  const i26 = e16.viewSize[0], s19 = e16.breakpoints, a31 = this.values;
  return i26 <= s19.xsmall ? a31.xsmall : i26 <= s19.small ? a31.small : i26 <= s19.medium ? a31.medium : i26 <= s19.large ? a31.large : a31.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", small: "esri-view-width-small esri-view-width-greater-than-xsmall esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", medium: "esri-view-width-medium esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-less-than-large esri-view-width-less-than-xlarge", large: "esri-view-width-large esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-less-than-xlarge", xlarge: "esri-view-width-xlarge esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-greater-than-large" } }, heightBreakpoint: { getValue(e16) {
  const i26 = e16.viewSize[1], s19 = e16.breakpoints, a31 = this.values;
  return i26 <= s19.xsmall ? a31.xsmall : i26 <= s19.small ? a31.small : i26 <= s19.medium ? a31.medium : i26 <= s19.large ? a31.large : a31.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", small: "esri-view-height-small esri-view-height-greater-than-xsmall esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", medium: "esri-view-height-medium esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-less-than-large esri-view-height-less-than-xlarge", large: "esri-view-height-large esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-less-than-xlarge", xlarge: "esri-view-height-xlarge esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-greater-than-large" } }, orientation: { getValue(e16) {
  const i26 = e16.viewSize, s19 = i26[0], a31 = i26[1], t23 = this.values;
  return a31 >= s19 ? t23.portrait : t23.landscape;
}, values: { portrait: "portrait", landscape: "landscape" }, valueToClassName: { portrait: "esri-view-orientation-portrait", landscape: "esri-view-orientation-landscape" } } };
var o7 = { xsmall: 544, small: 768, medium: 992, large: 1200 };
function m5(e16) {
  const i26 = e16;
  return i26 && i26.xsmall < i26.small && i26.small < i26.medium && i26.medium < i26.large;
}
function g4(e16, i26) {
  return i26 ? n14[e16].valueToClassName[i26].split(" ") : [];
}
var w3 = (w9) => {
  let d16 = class extends w9 {
    constructor(...e16) {
      super(...e16), this._breakpointsHandles = new t3(), this.orientation = null, this.widthBreakpoint = null, this.heightBreakpoint = null, this.breakpoints = o7;
    }
    initialize() {
      this._breakpointsHandles.add(l3(() => [this.breakpoints, this.size], () => this._updateClassNames(), h));
    }
    destroy() {
      this.destroyed || (this._removeActiveClassNames(), this._breakpointsHandles = l(this._breakpointsHandles));
    }
    set breakpoints(e16) {
      if (e16 === this._get("breakpoints"))
        return;
      const i26 = m5(e16);
      if (!i26) {
        const e17 = JSON.stringify(o7, null, 2);
        console.warn("provided breakpoints are not valid, using defaults:" + e17);
      }
      e16 = i26 ? e16 : o7, this._set("breakpoints", { ...e16 });
    }
    _updateClassNames() {
      if (!this.container)
        return;
      const e16 = t.acquire(), s19 = t.acquire();
      let a31, t23 = false;
      for (a31 in n14) {
        const i26 = this[a31], r19 = n14[a31].getValue({ viewSize: this.size, breakpoints: this.breakpoints });
        i26 !== r19 && (t23 = true, this[a31] = r19, g4(a31, i26).forEach((e17) => s19.push(e17)), g4(a31, r19).forEach((i27) => e16.push(i27)));
      }
      t23 && (this._applyClassNameChanges(e16, s19), t.release(e16), t.release(s19));
    }
    _applyClassNameChanges(e16, i26) {
      const s19 = this.container;
      s19 && (i26.forEach((e17) => s19.classList.remove(e17)), e16.forEach((e17) => s19.classList.add(e17)));
    }
    _removeActiveClassNames() {
      const e16 = this.container;
      if (!e16)
        return;
      let i26;
      for (i26 in n14)
        g4(i26, this[i26]).forEach((i27) => e16.classList.remove(i27));
    }
  };
  return e([y2()], d16.prototype, "breakpoints", null), e([y2()], d16.prototype, "orientation", void 0), e([y2()], d16.prototype, "widthBreakpoint", void 0), e([y2()], d16.prototype, "heightBreakpoint", void 0), d16 = e([a3("esri.views.BreakpointsOwner")], d16), d16;
};

// node_modules/@arcgis/core/views/overlay/ViewOverlay.js
var a8 = class extends m {
  constructor() {
    super(...arguments), this.items = new V(), this._watchUpdatingTracking = new c6(), this._callbacks = /* @__PURE__ */ new Map(), this._projector = i2(), this._hiddenProjector = i2();
  }
  get needsRender() {
    return this.items.length > 0;
  }
  get updating() {
    var _a;
    return ((_a = this._watchUpdatingTracking) == null ? void 0 : _a.updating) ?? false;
  }
  initialize() {
    const t23 = document.createElement("div");
    t23.className = "esri-overlay-surface", this._set("surface", t23), this._hiddenSurface = document.createElement("div"), this._hiddenSurface.setAttribute("style", "visibility: hidden;"), t23.appendChild(this._hiddenSurface), this._watchUpdatingTracking.addOnCollectionChange(() => this.items, (t24) => {
      for (const e16 of t24.added) {
        const t25 = () => e16.render();
        this._callbacks.set(e16, t25), this._projector.append(this.surface, t25);
      }
      for (const e16 of t24.removed) {
        const t25 = this._projector.detach(this._callbacks.get(e16));
        this.surface.removeChild(t25.domNode), this._callbacks.delete(e16);
      }
    });
  }
  addItem(t23) {
    this.items.add(t23);
  }
  removeItem(t23) {
    this.items.remove(t23);
  }
  destroy() {
    this.items.removeAll(), this._callbacks.forEach((t23) => this._projector.detach(t23)), this._callbacks = null, this._projector = null, this._watchUpdatingTracking.destroy();
  }
  render() {
    this._projector.renderNow();
  }
  computeBoundingRect(t23) {
    const e16 = this._hiddenSurface, r19 = this._hiddenProjector;
    let o20;
    const s19 = () => (o20 = t23.render(), o20);
    r19.append(e16, s19), r19.renderNow();
    const i26 = { left: 0, top: 0, right: 0, bottom: 0 };
    if (o20 && o20.domNode) {
      const t24 = o20.domNode.getBoundingClientRect();
      i26.left = t24.left, i26.top = t24.top, i26.right = t24.right, i26.bottom = t24.bottom;
    }
    for (r19.detach(s19); e16.firstChild; )
      e16.removeChild(e16.firstChild);
    return i26;
  }
  overlaps(t23, e16) {
    const r19 = this.computeBoundingRect(t23), o20 = this.computeBoundingRect(e16);
    return Math.max(r19.left, o20.left) <= Math.min(r19.right, o20.right) && Math.max(r19.top, o20.top) <= Math.min(r19.bottom, o20.bottom);
  }
  get hasVisibleItems() {
    return this.items.some((t23) => t23.visible);
  }
  async prepare() {
    await document.fonts.load(this._fontString()).catch(() => {
    });
  }
  renderCanvas(t23) {
    if (!this.items.some((t24) => t24.visible))
      return;
    const e16 = t23.getContext("2d");
    e16.save(), e16.font = this._fontString(), this.items.forEach((t24) => {
      e16.save(), t24.renderCanvas(e16), e16.restore();
    }), e16.restore();
  }
  _fontString() {
    return `10px ${getComputedStyle(this.surface).fontFamily}`;
  }
};
e([y2({ readOnly: true })], a8.prototype, "surface", void 0), e([y2({ readOnly: true })], a8.prototype, "items", void 0), e([y2({ readOnly: true })], a8.prototype, "needsRender", null), e([y2({ readOnly: true })], a8.prototype, "_watchUpdatingTracking", void 0), e([y2({ readOnly: true })], a8.prototype, "updating", null), a8 = e([a3("esri.views.overlay.ViewOverlay")], a8);
var c10 = a8;

// node_modules/@arcgis/core/views/DOMContainer.js
var p5 = [0, 0];
function f5(e16) {
  const t23 = (e16.ownerDocument || window.document).defaultView, s19 = e16.getBoundingClientRect();
  return p5[0] = s19.left + ((t23 == null ? void 0 : t23.pageXOffset) ?? 0), p5[1] = s19.top + ((t23 == null ? void 0 : t23.pageYOffset) ?? 0), p5;
}
function m6(e16) {
  e16 && (n5(e16), e16.parentNode && e16.parentNode.removeChild(e16));
}
function y3(e16) {
  const t23 = document.createElement("div");
  return e16.appendChild(t23), t23;
}
var g5 = 16;
var v4 = 750;
var _4 = 512;
var w4 = 2;
var C2 = (i26) => {
  let p22 = class extends i26 {
    constructor(...e16) {
      super(...e16), this._freqInfo = { freq: g5, time: v4 }, this._overlayRenderTaskHandle = null, this.height = 0, this.overlay = null, this.position = null, this.resizing = false, this.root = null, this.surface = null, this.suspended = true, this.ui = null, this.userContent = null, this.width = 0, this.widthBreakpoint = null, this.addHandles([l3(() => this.cursor, (e17) => {
        const { surface: t23 } = this;
        t23 && t23.setAttribute("data-cursor", e17);
      }), l3(() => this.navigating, (e17) => {
        const { surface: t23 } = this;
        t23 && t23.setAttribute("data-navigating", e17.toString());
      })]);
    }
    initialize() {
      this.addHandles([l3(() => this.ui, (e16, t23) => this._handleUIChange(e16, t23), h), this.on("focus", () => this.notifyChange("focused")), this.on("blur", () => this.notifyChange("focused"))]);
    }
    destroy() {
      this.destroyed || (this.ui = l(this.ui), this.container = null);
    }
    get container() {
      return this._get("container") ?? null;
    }
    set container(e16) {
      const i27 = this._get("container"), o20 = e4(e16);
      if (o20 || "string" != typeof e16 || s.getLogger(this).error("#container", `element with id '${e16}' not found`), i27 === o20)
        return;
      if (this._stopMeasuring(), i27 && (i27.classList.remove("esri-view"), this._overlayRenderTaskHandle && (this._overlayRenderTaskHandle.remove(), this._overlayRenderTaskHandle = null), this.overlay && (this.overlay.destroy(), this._set("overlay", null)), this.root && (m6(this.root), this._set("root", null)), this.userContent && (i(this.userContent, i27), m6(this.userContent), this._set("userContent", null))), !o20)
        return this._set("width", 0), this._set("height", 0), this._set("position", null), this._set("suspended", true), this._set("surface", null), void this._set("container", null);
      o20.classList.add("esri-view");
      const h13 = document.createElement("div");
      h13.className = "esri-view-user-storage", i(o20, h13), o20.appendChild(h13), this._set("userContent", h13);
      const l17 = document.createElement("div");
      l17.className = "esri-view-root", o20.insertBefore(l17, o20.firstChild), this._set("root", l17);
      const u9 = document.createElement("div");
      u9.className = "esri-view-surface", u9.setAttribute("role", "application"), u9.tabIndex = 0, l17.appendChild(u9), this._set("surface", u9);
      const p23 = new c10();
      l17.appendChild(p23.surface), this._set("overlay", p23), this.addHandles(l3(() => p23.needsRender, (e17) => {
        e17 && !this._overlayRenderTaskHandle ? this._overlayRenderTaskHandle = A({ render: () => {
          var _a;
          return (_a = this.overlay) == null ? void 0 : _a.render();
        } }) : this._overlayRenderTaskHandle = o2(this._overlayRenderTaskHandle);
      })), this.forceDOMReadyCycle(), this._set("container", o20), this._startMeasuring();
    }
    get focused() {
      const e16 = document.activeElement === this.surface;
      return document.hasFocus() && e16;
    }
    get size() {
      return [this.width, this.height];
    }
    blur() {
      var _a;
      (_a = this.surface) == null ? void 0 : _a.blur();
    }
    focus() {
      var _a;
      (_a = this.surface) == null ? void 0 : _a.focus();
    }
    pageToContainer(e16, t23, s19) {
      const i27 = this.position;
      return e16 -= i27 ? i27[0] : 0, t23 -= i27 ? i27[1] : 0, s19 ? (s19[0] = e16, s19[1] = t23) : s19 = [e16, t23], s19;
    }
    containerToPage(e16, t23, s19) {
      const i27 = this.position;
      return e16 += i27 ? i27[0] : 0, t23 += i27 ? i27[1] : 0, s19 ? (s19[0] = e16, s19[1] = t23) : s19 = [e16, t23], s19;
    }
    _handleUIChange(e16, t23) {
      this.removeHandles("ui"), t23 && t23 !== e16 && t23.destroy(), e16 && (e16.view = this, this.addHandles(l3(() => this.root, (t24) => {
        e16.container = t24 ? y3(t24) : null;
      }, h), "ui")), this._set("ui", e16);
    }
    _stopMeasuring() {
      this.removeHandles("measuring"), this._get("resizing") && this._set("resizing", false);
    }
    _startMeasuring() {
      const e16 = this._freqInfo;
      e16.freq = g5, e16.time = v4, this.addHandles([(() => {
        const t23 = () => {
          e16.freq = g5, e16.time = v4;
        };
        return window.addEventListener("resize", t23), { remove() {
          window.removeEventListener("resize", t23);
        } };
      })(), A({ prepare: (e17) => {
        const t23 = this._measure(), s19 = this._freqInfo;
        if (s19.time += e17.deltaTime, t23 && (s19.freq = g5, this._get("resizing") || this._set("resizing", true)), s19.time < s19.freq)
          return;
        s19.time = 0;
        const i27 = this._position();
        s19.freq = i27 || t23 ? g5 : Math.min(v4, s19.freq * w4), !t23 && s19.freq >= _4 && this._get("resizing") && this._set("resizing", false);
      } })], "measuring"), this._measure(), this._position();
    }
    _measure() {
      const e16 = this.container, t23 = e16 ? e16.clientWidth : 0, s19 = e16 ? e16.clientHeight : 0;
      if (0 === t23 || 0 === s19)
        return this.suspended || this._set("suspended", true), false;
      const i27 = this.width, r19 = this.height;
      return t23 === i27 && s19 === r19 ? (this.suspended && this._set("suspended", false), false) : (this._set("width", t23), this._set("height", s19), this.suspended && this._set("suspended", false), this.emit("resize", { oldWidth: i27, oldHeight: r19, width: t23, height: s19 }), true);
    }
    _position() {
      const e16 = this.container, t23 = this.position, s19 = e16 && f5(e16);
      return !!s19 && ((!t23 || s19[0] !== t23[0] || s19[1] !== t23[1]) && (this._set("position", [s19[0], s19[1]]), true));
    }
    forceDOMReadyCycle() {
    }
  };
  return e([y2()], p22.prototype, "container", null), e([y2({ readOnly: true })], p22.prototype, "focused", null), e([y2({ readOnly: true })], p22.prototype, "height", void 0), e([y2({ type: c10 })], p22.prototype, "overlay", void 0), e([y2({ readOnly: true })], p22.prototype, "position", void 0), e([y2({ readOnly: true })], p22.prototype, "resizing", void 0), e([y2({ readOnly: true })], p22.prototype, "root", void 0), e([y2({ value: null, readOnly: true })], p22.prototype, "size", null), e([y2({ readOnly: true })], p22.prototype, "surface", void 0), e([y2({ readOnly: true })], p22.prototype, "suspended", void 0), e([y2()], p22.prototype, "ui", void 0), e([y2({ readOnly: true })], p22.prototype, "userContent", void 0), e([y2({ readOnly: true })], p22.prototype, "width", void 0), e([y2()], p22.prototype, "widthBreakpoint", void 0), p22 = e([a3("esri.views.DOMContainer")], p22), p22;
};

// node_modules/@arcgis/core/views/PopupView.js
function d7(e16) {
  return null != e16 && "open" in e16 && "declaredClass" in e16;
}
function y4(e16) {
  return null != e16 && "declaredClass" in e16 && "dockOptions" in e16;
}
var w5 = (w9) => {
  let m15 = class extends w9 {
    constructor() {
      super(...arguments), this._popupSetupTask = null, this.popup = {}, this.popupEnabled = true;
    }
    initialize() {
      this.addHandles([l3(() => [this.ui, this.popup], ([e16, p22], t23) => {
        const i26 = "popup", s19 = "manual";
        if (t23) {
          const [e17, p23] = t23;
          e17 && d7(p23) && (p23.view = null, y4(p23) && e17.remove(p23, i26));
        }
        e16 && d7(p22) && (p22.view = this, y4(p22) && e16.add(p22, { key: i26, position: s19, internal: true }));
      }, h), this.on("click", (e16) => {
        this.popup && this.popupEnabled && ("mouse" !== e16.pointerType || 0 === e16.button) && (!d7(this.popup) && "autoOpenEnabled" in this.popup && false === this.popup.autoOpenEnabled || (d7(this.popup) ? this.popup.viewModel.handleViewClick(e16) : e16.async(async () => {
          await this.setupPopup(), d7(this.popup) && !this.destroyed && this.ready && this.popupEnabled && this.popup.viewModel.handleViewClick(e16);
        })));
      }, _3.WIDGET)]), j(() => this.ready && this.popupEnabled && !this.updating).then(() => {
        import("./Popup-Z6Z5NYHA.js");
      });
    }
    destroy() {
      this.destroyed || this.closePopup();
    }
    async openPopup(e16) {
      d7(this.popup) && this.popup.open(e16);
      try {
        if (await this.setupPopup(), !this.popup)
          return void s.getLogger(this).error(new s2("view:null-popup", "Popup is null and can't be opened"));
        this.popup.open(e16);
      } catch {
      }
    }
    closePopup() {
      var _a;
      (_a = this._popupSetupTask) == null ? void 0 : _a.abort(), d7(this.popup) && this.popup.close();
    }
    async fetchPopupFeatures(e16, p22) {
      await this.when();
      const { location: t23, queryArea: i26, layerViewsAndGraphics: s19, clientOnlyGraphics: r19 } = await this._prepareFetchPopupFeatures(e16, p22), a31 = Promise.resolve(r19), n28 = this._queryLayerPopupFeatures(i26, s19, p22), u9 = n28.map((e17) => e17.promise);
      return { location: t23, clientOnlyGraphics: r19, allGraphicsPromise: P([a31, ...u9]).then((e17) => Array.from(new Set(e17.flat()))), promisesPerLayerView: n28 };
    }
    async setupPopup() {
      var _a;
      if ((_a = this._popupSetupTask) == null ? void 0 : _a.abort(), this.popup && !d7(this.popup))
        return this._popupSetupTask = d2(async (e16) => {
          const { default: p22 } = await import("./Popup-Z6Z5NYHA.js");
          if (s3(e16), !this.popup || d7(this.popup))
            return;
          const t23 = this.popup;
          delete t23.open, delete t23.close, this.popup = new p22(t23);
        }), this._popupSetupTask.promise;
    }
    _queryLayerPopupFeatures(e16, p22, t23) {
      return p22.map(({ layerView: p23, graphics: i26 }) => {
        const s19 = { clientGraphics: i26, event: null != t23 ? t23.event : void 0, signal: null != t23 ? t23.signal : void 0, defaultPopupTemplateEnabled: null != t23 && !!t23.defaultPopupTemplateEnabled }, o20 = p23.fetchPopupFeatures(e16, s19);
        return { layerView: p23, promise: o20 };
      });
    }
    _isValidPopupGraphic(e16, p22) {
      return e16 && !!e16.getEffectivePopupTemplate(null != p22 && p22.defaultPopupTemplateEnabled);
    }
    async _prepareFetchPopupFeatures(e16, p22) {
      const { clientGraphics: t23, queryArea: i26, location: s19 } = await this._popupHitTestGraphics(e16, p22), o20 = this._getFetchPopupLayerViews(), { layerViewsAndGraphics: r19, clientOnlyGraphics: a31 } = this._graphicsPerFetchPopupLayerView(t23, o20);
      return { clientOnlyGraphics: a31, layerViewsAndGraphics: r19, queryArea: i26, location: s19 };
    }
    async _popupHitTestGraphics(e16, p22) {
      const t23 = await this.popupHitTest(e16), i26 = t23.results, s19 = t23.mapPoint, o20 = i26.filter((e17) => "graphic" === e17.type && this._isValidPopupGraphic(e17.graphic, p22)), r19 = o20.length ? o20[0].mapPoint : null;
      return { clientGraphics: o20.map((e17) => e17.graphic), queryArea: s19, location: s19 || r19 };
    }
    _getFetchPopupLayerViews() {
      const e16 = [];
      return this.allLayerViews.forEach((p22) => {
        this._isValidPopupLayerView(p22) && e16.push(p22);
      }), null != this.graphicsView && this._isValidPopupLayerView(this.graphicsView) && e16.push(this.graphicsView), e16.reverse();
    }
    _isValidPopupLayerView(e16) {
      return null != e16 && (!("layer" in e16) || !e16.suspended) && "fetchPopupFeatures" in e16;
    }
    _graphicsPerFetchPopupLayerView(e16, p22) {
      const t23 = [], i26 = /* @__PURE__ */ new Map(), s19 = p22.map((e17) => {
        const p23 = [];
        return "layer" in e17 ? i26.set(e17.layer, p23) : i26.set(e17.graphics, p23), { layerView: e17, graphics: p23 };
      });
      for (const o20 of e16) {
        const e17 = i26.get(o20.layer) || i26.get(o20.sourceLayer) || null;
        e17 ? e17.push(o20) : t23.push(o20);
      }
      return { layerViewsAndGraphics: s19, clientOnlyGraphics: t23 };
    }
  };
  return e([y2({ cast(e16) {
    return !e16 || d7(e16) || "object" == typeof e16 && (e16.open = (e17) => (r(s.getLogger(this), "view.popup is no longer created by default. view.popup.open() will stop working when the popup isn't created", { replacement: "Use view.openPopup() instead.", version: "4.27" }), this.openPopup(e17)), e16.close = () => (r(s.getLogger(this), "view.popup is no longer created by default. view.popup.close() will stop working when the popup isn't created", { replacement: "Use view.closePopup() instead.", version: "4.27" }), this.closePopup())), e16;
  } })], m15.prototype, "popup", void 0), e([y2()], m15.prototype, "popupEnabled", void 0), m15 = e([a3("esri.views.PopupView")], m15), m15;
};

// node_modules/@arcgis/core/support/AnalysesCollection.js
var t10 = class extends l5 {
  constructor(e16) {
    super(e16), this.handles.add(this.on("before-add", (e17) => {
      null != e17.item && e17.item.parent === this.owner && (s.getLogger(this).warn("Analysis inside the collection must be unique. Not adding this element again."), e17.preventDefault());
    }));
  }
  _own(e16) {
    e16.parent = this.owner;
  }
  _release(e16) {
    e16.parent = null;
  }
};
t10 = e([a3("esri.support.AnalysesCollection")], t10);

// node_modules/@arcgis/core/views/BasemapView.js
var n15 = class extends m {
  constructor(e16) {
    super(e16), this.view = null, this.baseLayerViews = new V(), this.referenceLayerViews = new V(), this._loadingHandle = l3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    }, (e17) => {
      e17 && e17.load().catch(() => {
      });
    }, h);
  }
  destroy() {
    this._set("view", null), this._loadingHandle && (this._loadingHandle.remove(), this._loadingHandle = null);
    for (const e16 of this.baseLayerViews)
      e16.destroy();
    this.baseLayerViews.length = 0;
    for (const e16 of this.referenceLayerViews)
      e16.destroy();
    this.referenceLayerViews.length = 0;
  }
  get suspended() {
    return !this.view || this.view.suspended;
  }
  get updating() {
    var _a, _b;
    if (this.view && this.view.suspended)
      return false;
    const e16 = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    return !!e16 && (!!e16.loaded && (this.baseLayerViews.some((e17) => e17.updating) || this.referenceLayerViews.some((e17) => e17.updating)));
  }
};
e([y2({ constructOnly: true })], n15.prototype, "view", void 0), e([y2({ readOnly: true })], n15.prototype, "baseLayerViews", void 0), e([y2({ readOnly: true })], n15.prototype, "referenceLayerViews", void 0), e([y2({ readOnly: true })], n15.prototype, "suspended", null), e([y2({ type: Boolean, readOnly: true })], n15.prototype, "updating", null), n15 = e([a3("esri.views.BasemapView")], n15);

// node_modules/@arcgis/core/views/LayerViewManager.js
function g6(e16) {
  return "tryRecycleWith" in e16;
}
var v5 = class {
  constructor(e16, r19, t23) {
    this.layer = e16, this.view = r19, this.layerViewImporter = t23, this._controller = new AbortController(), this._deferred = C(), this._started = false, this.done = false, this.promise = this._deferred.promise, w(this._controller.signal, () => {
      const r20 = new s2("cancelled:layerview-create", "layerview creation cancelled", { layer: e16 });
      this._deferred.reject(r20);
    });
  }
  tryRecycle(e16) {
    if (!this.done || !this.layerView || !g6(this.layerView))
      return null;
    const r19 = this.layer.type, i26 = this._controller.signal;
    for (let t23 = 0; t23 < e16.length; t23++) {
      const s19 = e16[t23];
      if (s19.type !== r19)
        continue;
      const a31 = this.layerView.tryRecycleWith(s19, { signal: i26 });
      if (a31) {
        e16.splice(t23, 1), this.layer = s19;
        const r20 = this.layerView, i27 = r20.view;
        return this.promise = Promise.race([a31.then(() => (s3(this._controller.signal), s19.emit("layerview-destroy", { view: i27, layerView: r20 }), i27.emit("layerview-destroy", { view: i27, layerView: r20 }), s19.emit("layerview-create", { view: i27, layerView: r20 }), i27.emit("layerview-create", { view: i27, layerView: r20 }), r20)), new Promise((e17, r21) => w(this._controller.signal, () => r21(c())))]), this.promise;
      }
    }
    return null;
  }
  destroy() {
    this._controller.abort();
    const { layerView: e16 } = this;
    if (e16) {
      const { layer: r19, view: i26 } = this;
      r19.emit("layerview-destroy", { view: i26, layerView: e16 }), i26.emit("layerview-destroy", { layer: r19, layerView: e16 });
    }
    this.done = true, this.layer = null, this.layerView = null, this.view = null, this.layerViewImporter = null, this._map = null;
  }
  async start() {
    var _a, _b, _c;
    if (this._started)
      return;
    this._started = true;
    const { _controller: { signal: e16 }, layer: r19, view: t23 } = this;
    this._map = t23.map;
    try {
      let o20, l17;
      if (await r19.load({ signal: e16 }), "prefetchResources" in r19 && await ((_a = r19.prefetchResources) == null ? void 0 : _a.call(r19, { signal: e16 })), M3(r19))
        o20 = await r19.createLayerView(t23, { signal: e16 });
      else {
        if (!this.layerViewImporter.hasLayerViewModule(r19))
          throw new s2("layer:view-not-supported", "No layerview implementation was found");
        const s19 = await this.layerViewImporter.importLayerView(r19);
        s3(e16), o20 = "default" in s19 ? new s19.default({ layer: r19, view: t23 }) : new s19({ layer: r19, view: t23 });
      }
      const n28 = () => {
        l17 = o2(l17), o20.destroyed || o20.destroy(), o20.layer = null, o20.parent = null, o20.view = null, this.done = true;
      };
      l17 = w(e16, n28), s3(e16);
      try {
        await o20.when();
      } catch (s19) {
        throw n28(), s19;
      }
      const c23 = (_c = (_b = this._map) == null ? void 0 : _b.allLayers) == null ? void 0 : _c.includes(r19);
      if (!c23)
        return n28(), void this._deferred.reject(new s2("view:no-layerview-for-layer", "The layer has been removed from the map", { layer: r19 }));
      this.layerView = o20, r19.emit("layerview-create", { view: t23, layerView: o20 }), t23.emit("layerview-create", { layer: r19, layerView: o20 }), this.done = true, this._deferred.resolve(o20);
    } catch (s19) {
      r19.emit("layerview-create-error", { view: t23, error: s19 }), t23.emit("layerview-create-error", { layer: r19, error: s19 }), this.done = true, this._deferred.reject(new s2("layerview:create-error", "layerview creation failed", { layer: r19, error: s19 }));
    }
  }
};
var V2 = class extends m {
  constructor(e16) {
    super(e16), this._layerLayerViewInfoMap = /* @__PURE__ */ new Map(), this._recyclingInfoMap = /* @__PURE__ */ new Map(), this._watchUpdatingTracking = new c6(), this.supportsGround = true, this._preloadLayerViewModules = () => {
      var _a;
      const e17 = (_a = this.view.map) == null ? void 0 : _a.allLayers;
      if (e17)
        for (const r19 of e17)
          this.layerViewImporter.hasLayerViewModule(r19) && this.layerViewImporter.importLayerView(r19);
    }, this._reschedule = () => this.destroyed ? Promise.reject() : (null == this._workPromise && (this._workPromise = C(), this._workPromise.promise.catch(() => {
    })), this.removeHandles("reschedule"), this.addHandles(v(this._doWork), "reschedule"), this._workPromise.promise), this._doWork = () => {
      var _a, _b, _c;
      if (this.destroyed)
        return;
      const e17 = this.view.map;
      if (this._map !== e17 && (this.clear(), this._map = e17), null == this._workPromise)
        return void this.notifyChange("updating");
      this.removeHandles("reschedule"), this.removeHandles("collection-change");
      const r19 = /* @__PURE__ */ new Set(), i26 = [], t23 = this.view.ready, s19 = (e18) => {
        if (null != e18) {
          for (const a32 of e18)
            if (a32) {
              r19.add(a32);
              const e19 = this._layerLayerViewInfoMap.get(a32);
              e19 && t23 ? e19.start() : e19 || this._recyclingInfoMap.has(a32) || i26.push(a32), "layers" in a32 && a32.layers && s19(a32.layers);
            }
        }
      };
      for (const o20 of this._rootCollectionNames)
        s19(this.get(o20));
      for (const [o20, l17] of this._layerLayerViewInfoMap)
        if (!r19.has(o20)) {
          this._layerLayerViewInfoMap.delete(l17.layer);
          const e18 = l17.tryRecycle(i26);
          e18 ? (this.notifyChange("updating"), this._recyclingInfoMap.set(l17.layer, l17), e18.then(() => {
            this.notifyChange("updating"), this._recyclingInfoMap.delete(l17.layer), this._layerLayerViewInfoMap.set(l17.layer, l17), this._reschedule();
          }).catch(() => {
            this.notifyChange("updating"), this._recyclingInfoMap.delete(l17.layer), l17.destroy(), this._reschedule();
          })) : l17.destroy();
        }
      for (const [o20, l17] of this._recyclingInfoMap)
        r19.has(o20) || (this.notifyChange("updating"), this._recyclingInfoMap.delete(l17.layer), l17.destroy());
      for (const o20 of i26)
        this._createLayerView(o20);
      this._refreshCollections();
      const a31 = [(_a = e17 == null ? void 0 : e17.ground) == null ? void 0 : _a.layers, (_b = e17 == null ? void 0 : e17.basemap) == null ? void 0 : _b.baseLayers, (_c = e17 == null ? void 0 : e17.basemap) == null ? void 0 : _c.referenceLayers, e17 == null ? void 0 : e17.layers].filter((e18) => !!e18);
      r19.forEach((e18) => "layers" in e18 && a31.push(e18.layers)), this.addHandles(a31.map((e18) => this._watchUpdatingTracking.addOnCollectionChange(() => e18, this._reschedule)), "collection-change"), this._workPromise.resolve(), this._workPromise = null;
    };
  }
  initialize() {
    this.own([a4(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.allLayers;
    }, "change", this._preloadLayerViewModules, { onListenerAdd: this._preloadLayerViewModules }), l3(() => {
      const e16 = this.view, r19 = e16 == null ? void 0 : e16.map;
      return [r19 == null ? void 0 : r19.basemap, r19 == null ? void 0 : r19.ground, r19 == null ? void 0 : r19.layers, e16 == null ? void 0 : e16.ready];
    }, () => this._reschedule(), w2)]), this._preloadLayerViewModules(), this._reschedule();
  }
  destroy() {
    this.clear(), n11(this._recyclingInfoMap), n11(this._layerLayerViewInfoMap), this._watchUpdatingTracking.destroy(), this._map = null, null != this._workPromise && (this._workPromise.reject(c()), this._workPromise = null);
  }
  get _layersToLayerViews() {
    const e16 = [["view.map.basemap.baseLayers", "view.basemapView.baseLayerViews"], ["view.map.layers", "view.layerViews"], ["view.map.basemap.referenceLayers", "view.basemapView.referenceLayerViews"]];
    return this.supportsGround && e16.push(["view.map.ground.layers", "view.groundView.layerViews"]), new Map(e16);
  }
  get _rootCollectionNames() {
    return Array.from(this._layersToLayerViews.keys());
  }
  get updating() {
    return null != this._workPromise || this._watchUpdatingTracking.updating || n3(this._layerLayerViewInfoMap, (e16) => !e16.done) || this._recyclingInfoMap.size > 0;
  }
  get updatingRemaining() {
    let e16 = 0;
    for (const r19 of this._layerLayerViewInfoMap.values())
      r19.done || ++e16;
    return e16;
  }
  clear() {
    this.destroyed || (n11(this._layerLayerViewInfoMap), this._refreshCollections());
  }
  async whenLayerView(e16) {
    if (await this._reschedule(), !this._layerLayerViewInfoMap.has(e16)) {
      if (this._recyclingInfoMap.has(e16))
        return this._recyclingInfoMap.get(e16).promise;
      throw new s2("view:no-layerview-for-layer", "No layerview has been found for the layer", { layer: e16 });
    }
    return this._layerLayerViewInfoMap.get(e16).promise;
  }
  _refreshCollections() {
    for (const [e16, r19] of this._layersToLayerViews)
      this._populateLayerViewsOwners(this.get(e16), this.get(r19), this.view);
    this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
  _populateLayerViewsOwners(e16, r19, i26) {
    if (!e16 || !r19)
      return void (r19 && r19.removeAll());
    let t23 = 0;
    for (const s19 of e16) {
      const e17 = this._layerLayerViewInfoMap.get(s19);
      if (!e17 || !e17.layerView)
        continue;
      const a31 = e17.layerView;
      a31.layer = s19, a31.parent = i26, r19.at(t23) !== a31 && r19.splice(t23, 0, a31), s19.layers && this._populateLayerViewsOwners(s19.layers, a31.layerViews, a31), t23 += 1;
    }
    t23 < r19.length && r19.splice(t23, r19.length);
  }
  _createLayerView(e16) {
    e16.load().catch(() => {
    }), this.layerViewImporter.hasLayerViewModule(e16) && this.layerViewImporter.importLayerView(e16);
    const r19 = new v5(e16, this.view, this.layerViewImporter);
    r19.promise.then(() => this._refreshCollections(), (r20) => {
      r20 && (d(r20) || "cancelled:layerview-create" === r20.name) || s.getLogger(this).error(`Failed to create layerview for layer title:'${e16.title ?? "no title"}', id:'${e16.id ?? "no id"}' of type '${e16.type}'.`, { layer: e16, error: r20 }), this._refreshCollections();
    }), this._layerLayerViewInfoMap.set(e16, r19), this.view.ready && r19.start(), this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
};
e([y2()], V2.prototype, "_workPromise", void 0), e([y2({ readOnly: true })], V2.prototype, "_watchUpdatingTracking", void 0), e([y2({ readOnly: true })], V2.prototype, "_layersToLayerViews", null), e([y2({ readOnly: true })], V2.prototype, "_rootCollectionNames", null), e([y2()], V2.prototype, "layerViewImporter", void 0), e([y2()], V2.prototype, "supportsGround", void 0), e([y2({ readOnly: true })], V2.prototype, "updating", null), e([y2({ readOnly: true })], V2.prototype, "updatingRemaining", null), e([y2({ constructOnly: true })], V2.prototype, "view", void 0), V2 = e([a3("esri.views.LayerViewManager")], V2);
var L = V2;
function M3(e16) {
  return "createLayerView" in e16 && null != e16.createLayerView;
}

// node_modules/@arcgis/core/views/Magnifier.js
var i9 = class extends m {
  constructor(o20) {
    super(o20), this.factor = 1.5, this.offset = c3(0, 0), this.position = null, this.size = 120, this.maskUrl = null, this.maskEnabled = true, this.overlayUrl = null, this.overlayEnabled = true, this.visible = true;
  }
  get version() {
    return this.commitProperty("factor"), this.commitProperty("offset"), this.commitProperty("position"), this.commitProperty("visible"), this.commitProperty("size"), this.commitProperty("maskUrl"), this.commitProperty("maskEnabled"), this.commitProperty("overlayUrl"), this.commitProperty("overlayEnabled"), (this._get("version") || 0) + 1;
  }
};
e([y2({ type: Number })], i9.prototype, "factor", void 0), e([y2({ nonNullable: true })], i9.prototype, "offset", void 0), e([y2()], i9.prototype, "position", void 0), e([y2({ type: Number, range: { min: 0 } })], i9.prototype, "size", void 0), e([y2()], i9.prototype, "maskUrl", void 0), e([y2()], i9.prototype, "maskEnabled", void 0), e([y2()], i9.prototype, "overlayUrl", void 0), e([y2()], i9.prototype, "overlayEnabled", void 0), e([y2({ readOnly: true })], i9.prototype, "version", null), e([y2({ type: Boolean })], i9.prototype, "visible", void 0), i9 = e([a3("esri.views.Magnifier")], i9);
var p6 = i9;

// node_modules/@arcgis/core/views/3d/support/TextureCollection.js
var a9 = class extends m {
  constructor(e16, t23) {
    super({}), this._stage = e16, this._textureRequests = /* @__PURE__ */ new Map(), this._frameTask = (t23 == null ? void 0 : t23.registerTask(I.TEXTURE_UNLOAD)) ?? F;
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    var _a, _b, _c;
    super.destroy(), (_a = this._frameTask) == null ? void 0 : _a.remove(), (_b = this._textureRequests) == null ? void 0 : _b.forEach((e16) => this._releaseTextureRequest(e16)), (_c = this._textureRequests) == null ? void 0 : _c.clear();
  }
  get updating() {
    return this._frameTask.updating;
  }
  fromData(e16, t23, r19) {
    var _a, _b;
    const s19 = this.makeUid(e16);
    let o20 = this._textureRequests.get(s19);
    if (!o20) {
      const e17 = new i10(r19);
      e17.texture = t23(), (_a = this._stage) == null ? void 0 : _a.add(e17.texture), (_b = this._stage) == null ? void 0 : _b.loadImmediate(e17.texture), this._textureRequests.set(s19, e17), o20 = e17;
    }
    return o20.referenceCount++, { uid: s19, texture: o20.texture, release: () => this._release(s19) };
  }
  _release(e16) {
    const t23 = this._textureRequests.get(e16);
    t23 ? (t23.referenceCount < 1 && console.warn("TextureCollection: reference count is < 1 for " + e16), t23.referenceCount--, t23.referenceCount < 1 && this._frameTask.schedule(() => this._releaseNow(e16))) : console.warn(`TextureCollection: texture doesn't exist: '${e16}'`);
  }
  get test() {
    return { textureRequests: this._textureRequests };
  }
  _releaseNow(e16) {
    if (!this._textureRequests)
      return;
    const t23 = this._textureRequests.get(e16);
    !t23 || t23.referenceCount > 0 || (this._releaseTextureRequest(t23), this._textureRequests.delete(e16));
  }
  _releaseTextureRequest(e16) {
    var _a;
    e16.onRemove && e16.onRemove(), e16.texture ? (_a = this._stage) == null ? void 0 : _a.remove(e16.texture) : e16.abortController && (e16.abortController.abort(), e16.abortController = null);
  }
  makeUid(e16, t23 = null) {
    return null != t23 ? `${e16}.${t23}px` : e16;
  }
};
e([y2()], a9.prototype, "_frameTask", void 0), e([y2()], a9.prototype, "updating", null), a9 = e([a3("esri.views.3d.support.TextureCollection")], a9);
var i10 = class {
  constructor(e16) {
    this.onRemove = e16, this.referenceCount = 0;
  }
};

// node_modules/@arcgis/core/views/input/IViewEvents.js
var t11;
!function(t23) {
  t23[t23.Left = 0] = "Left", t23[t23.Middle = 1] = "Middle", t23[t23.Right = 2] = "Right";
}(t11 || (t11 = {}));

// node_modules/@arcgis/core/views/input/ViewEvents.js
var r9 = ["click", "double-click", "immediate-click", "immediate-double-click", "hold", "drag", "key-down", "key-up", "pointer-down", "pointer-move", "pointer-up", "pointer-drag", "mouse-wheel", "pointer-enter", "pointer-leave", "gamepad", "focus", "blur"];
var i11 = {};
function o8(t23) {
  return !!i11[t23];
}
function s9(t23) {
  for (const e16 of t23)
    if (!o8(e16))
      return false;
  return true;
}
r9.forEach((t23) => {
  i11[t23] = true;
});
var p7 = class {
  constructor(t23) {
    this._handlers = /* @__PURE__ */ new Map(), this._counter = 0, this._handlerCounts = /* @__PURE__ */ new Map(), this.view = t23, this.inputManager = null;
  }
  connect(t23) {
    t23 && this.disconnect(), this.inputManager = t23, this._handlers.forEach(({ handler: t24, priority: e16 }, a31) => {
      var _a;
      return (_a = this.inputManager) == null ? void 0 : _a.installHandlers(a31, [t24], e16);
    });
  }
  disconnect() {
    this.inputManager && this._handlers.forEach((t23, e16) => {
      var _a;
      return (_a = this.inputManager) == null ? void 0 : _a.uninstallHandlers(e16);
    }), this.inputManager = null;
  }
  destroy() {
    this.disconnect(), this._handlers.clear(), this.view = null;
  }
  on(t23, e16, a31, r19) {
    const i26 = Array.isArray(t23) ? t23 : t23.split(",");
    if (!s9(i26))
      return i26.some(o8) && console.error("Error: registering input events and other events on the view at the same time is not supported."), null;
    let p22, l17;
    Array.isArray(e16) ? l17 = e16 : (p22 = e16, l17 = []), "function" == typeof a31 ? p22 = a31 : r19 = a31, r19 = null != r19 ? r19 : _3.DEFAULT;
    const u9 = this._createUniqueGroupName(), m15 = new c11(this.view, i26, l17, p22);
    this._handlers.set(u9, { handler: m15, priority: r19 });
    for (const n28 of i26) {
      const t24 = this._handlerCounts.get(n28) || 0;
      this._handlerCounts.set(n28, t24 + 1);
    }
    return this.inputManager && this.inputManager.installHandlers(u9, [m15], r19), { remove: () => this._removeHandler(u9, i26) };
  }
  hasHandler(t23) {
    return !!this._handlerCounts.get(t23);
  }
  _removeHandler(t23, e16) {
    if (this._handlers.has(t23)) {
      this._handlers.delete(t23);
      for (const t24 of e16) {
        const e17 = this._handlerCounts.get(t24);
        void 0 === e17 ? console.error("Trying to remove handler for event that has no handlers registered: ", t24) : 1 === e17 ? this._handlerCounts.delete(t24) : this._handlerCounts.set(t24, e17 - 1);
      }
    }
    this.inputManager && this.inputManager.uninstallHandlers(t23);
  }
  _createUniqueGroupName() {
    return this._counter += 1, `viewEvents_${this._counter}`;
  }
};
var c11 = class extends i8 {
  constructor(t23, e16, a31, n28) {
    super(true), this._latestDragStart = void 0, this.view = t23;
    for (const r19 of e16)
      switch (r19) {
        case "click":
          this.registerIncoming("click", a31, (t24) => n28(this._wrapClick(t24)));
          break;
        case "double-click":
          this.registerIncoming("double-click", a31, (t24) => n28(this._wrapDoubleClick(t24)));
          break;
        case "immediate-click":
          this.registerIncoming("immediate-click", a31, (t24) => n28(this._wrapImmediateClick(t24)));
          break;
        case "immediate-double-click":
          this.registerIncoming("immediate-double-click", a31, (t24) => n28(this._wrapImmediateDoubleClick(t24)));
          break;
        case "hold":
          this.registerIncoming("hold", a31, (t24) => n28(this._wrapHold(t24)));
          break;
        case "drag":
          this.registerIncoming("drag", a31, (t24) => {
            const e17 = this._wrapDrag(t24);
            e17 && n28(e17);
          });
          break;
        case "key-down":
          this.registerIncoming("key-down", a31, (t24) => n28(this._wrapKeyDown(t24)));
          break;
        case "key-up":
          this.registerIncoming("key-up", a31, (t24) => n28(this._wrapKeyUp(t24)));
          break;
        case "pointer-down":
          this.registerIncoming("pointer-down", a31, (t24) => n28(this._wrapPointer(t24, "pointer-down")));
          break;
        case "pointer-move":
          this.registerIncoming("pointer-move", a31, (t24) => n28(this._wrapPointer(t24, "pointer-move")));
          break;
        case "pointer-up":
          this.registerIncoming("pointer-up", a31, (t24) => n28(this._wrapPointer(t24, "pointer-up")));
          break;
        case "pointer-drag":
          this.registerIncoming("pointer-drag", a31, (t24) => n28(this._wrapPointerDrag(t24)));
          break;
        case "mouse-wheel":
          this.registerIncoming("mouse-wheel", a31, (t24) => n28(this._wrapMouseWheel(t24)));
          break;
        case "pointer-enter":
          this.registerIncoming("pointer-enter", a31, (t24) => n28(this._wrapPointer(t24, "pointer-enter")));
          break;
        case "pointer-leave":
          this.registerIncoming("pointer-leave", a31, (t24) => n28(this._wrapPointer(t24, "pointer-leave")));
          break;
        case "gamepad":
          this.registerIncoming("gamepad", a31, (t24) => {
            n28(this._wrapGamepad(t24));
          });
          break;
        case "focus":
          this.registerIncoming("focus", a31, (t24) => {
            n28(this._wrapFocus(t24));
          });
          break;
        case "blur":
          this.registerIncoming("blur", a31, (t24) => {
            n28(this._wrapBlur(t24));
          });
      }
  }
  _wrapFocus(t23) {
    return { type: "focus", timestamp: t23.timestamp, native: t23.data.native, cancelable: t23.cancelable, stopPropagation: () => t23.stopPropagation(), async: (e16) => t23.async(e16), preventDefault: () => t23.preventDefault() };
  }
  _wrapBlur(t23) {
    return { type: "blur", timestamp: t23.timestamp, native: t23.data.native, cancelable: t23.cancelable, stopPropagation: () => t23.stopPropagation(), async: (e16) => t23.async(e16), preventDefault: () => t23.preventDefault() };
  }
  _wrapClick(t23) {
    const { pointerType: a31, button: n28, buttons: r19, x: i26, y: o20, native: s19, eventId: p22 } = t23.data, { cancelable: c23, timestamp: l17 } = t23;
    return { type: "click", pointerType: a31, button: n28, buttons: r19, x: i26, y: o20, native: s19, timestamp: l17, screenPoint: c3(i26, o20), mapPoint: this._getMapPoint(i26, o20), eventId: p22, cancelable: c23, stopPropagation: () => t23.stopPropagation(), async: (e16) => t23.async(e16), preventDefault: () => t23.preventDefault() };
  }
  _wrapDoubleClick(t23) {
    const { pointerType: e16, button: a31, buttons: n28, x: r19, y: i26, native: o20, eventId: s19 } = t23.data, { cancelable: p22, timestamp: c23 } = t23;
    return { type: "double-click", pointerType: e16, button: a31, buttons: n28, x: r19, y: i26, native: o20, timestamp: c23, mapPoint: this._getMapPoint(r19, i26), eventId: s19, cancelable: p22, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
  _wrapImmediateClick(t23) {
    const { pointerType: e16, button: a31, buttons: n28, x: r19, y: i26, native: o20, eventId: s19 } = t23.data, p22 = o20.pointerId, { cancelable: c23, timestamp: l17 } = t23;
    return { type: "immediate-click", pointerId: p22, pointerType: e16, button: a31, buttons: n28, x: r19, y: i26, native: o20, timestamp: l17, mapPoint: this._getMapPoint(r19, i26), eventId: s19, cancelable: c23, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
  _wrapImmediateDoubleClick(t23) {
    const { pointerType: e16, button: a31, buttons: n28, x: r19, y: i26, native: o20, eventId: s19 } = t23.data, p22 = o20.pointerId, { cancelable: c23, timestamp: l17 } = t23;
    return { type: "immediate-double-click", pointerId: p22, pointerType: e16, button: a31, buttons: n28, x: r19, y: i26, native: o20, timestamp: l17, mapPoint: this._getMapPoint(r19, i26), eventId: s19, cancelable: c23, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
  _wrapHold(t23) {
    const { pointerType: e16, button: a31, buttons: n28, x: r19, y: i26, native: o20 } = t23.data, { cancelable: s19, timestamp: p22 } = t23;
    return { type: "hold", pointerType: e16, button: a31, buttons: n28, x: r19, y: i26, native: o20, timestamp: p22, mapPoint: this._getMapPoint(r19, i26), cancelable: s19, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
  _getMapPoint(t23, a31) {
    return this.view.toMap(c3(t23, a31), { exclude: [] });
  }
  _wrapDrag(e16) {
    const a31 = e16.data, { x: n28, y: r19 } = a31.center, { action: i26, pointerType: o20, button: s19 } = a31;
    if ("start" === i26 && (this._latestDragStart = a31), !this._latestDragStart)
      return;
    const p22 = a31.pointer.native, c23 = a31.buttons, { cancelable: l17, timestamp: u9 } = e16, m15 = { x: this._latestDragStart.center.x, y: this._latestDragStart.center.y };
    return "end" === i26 && (this._latestDragStart = void 0), { type: "drag", action: i26, x: n28, y: r19, origin: m15, pointerType: o20, button: s19, buttons: c23, radius: a31.radius, angle: m3(a31.angle), native: p22, timestamp: u9, cancelable: l17, stopPropagation: () => e16.stopPropagation(), async: (t23) => e16.async(t23), preventDefault: () => e16.preventDefault() };
  }
  _wrapKeyDown(t23) {
    const { key: e16, repeat: a31, native: n28 } = t23.data, { cancelable: r19, timestamp: i26 } = t23;
    return { type: "key-down", key: e16, repeat: a31, native: n28, timestamp: i26, cancelable: r19, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
  _wrapKeyUp(t23) {
    const { key: e16, native: a31 } = t23.data, { cancelable: n28, timestamp: r19 } = t23;
    return { type: "key-up", key: e16, native: a31, timestamp: r19, cancelable: n28, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
  _wrapPointer(t23, e16) {
    const { x: a31, y: n28, button: r19, buttons: i26, native: o20, eventId: s19 } = t23.data, p22 = o20.pointerId, c23 = o20.pointerType, { cancelable: l17, timestamp: u9 } = t23;
    return { type: e16, x: a31, y: n28, pointerId: p22, pointerType: c23, button: r19, buttons: i26, native: o20, timestamp: u9, eventId: s19, cancelable: l17, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
  _wrapPointerDrag(t23) {
    const { x: e16, y: a31, buttons: n28, native: r19, eventId: i26 } = t23.data.currentEvent, { button: o20 } = t23.data.startEvent, s19 = t23.data.startEvent.native.pointerId, p22 = t23.data.startEvent.native.pointerType, c23 = t23.data.action, l17 = { x: t23.data.startEvent.x, y: t23.data.startEvent.y }, { cancelable: u9, timestamp: m15 } = t23;
    return { type: "pointer-drag", x: e16, y: a31, pointerId: s19, pointerType: p22, button: o20, buttons: n28, action: c23, origin: l17, native: r19, timestamp: m15, eventId: i26, cancelable: u9, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
  _wrapMouseWheel(t23) {
    const { cancelable: e16, data: a31, timestamp: n28 } = t23, { x: r19, y: i26, deltaY: o20, native: s19 } = a31;
    return { type: "mouse-wheel", x: r19, y: i26, deltaY: o20, native: s19, timestamp: n28, cancelable: e16, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
  _wrapGamepad(t23) {
    const { action: e16, state: a31, device: n28 } = t23.data, { cancelable: r19, timestamp: i26 } = t23, { buttons: o20, axes: s19 } = a31;
    return { type: "gamepad", device: n28, timestamp: i26, action: e16, buttons: o20, axes: s19, cancelable: r19, stopPropagation: () => t23.stopPropagation(), async: (e17) => t23.async(e17), preventDefault: () => t23.preventDefault() };
  }
};

// node_modules/@arcgis/core/views/interactive/interfaces.js
var o9;
var t12;
var u;
!function(o20) {
  o20[o20.USER = 0] = "USER", o20[o20.MANAGER = 1] = "MANAGER";
}(o9 || (o9 = {})), function(o20) {
  o20[o20.None = 0] = "None", o20[o20.Unfocused = 1] = "Unfocused", o20[o20.Focused = 2] = "Focused", o20[o20.Unselected = 4] = "Unselected", o20[o20.Selected = 8] = "Selected", o20[o20.All = 15] = "All";
}(t12 || (t12 = {})), function(o20) {
  o20[o20.None = 0] = "None", o20[o20.Custom1 = 16] = "Custom1", o20[o20.Custom2 = 32] = "Custom2", o20[o20.Custom3 = 64] = "Custom3", o20[o20.Custom4 = 128] = "Custom4", o20[o20.Custom5 = 256] = "Custom5", o20[o20.Custom6 = 512] = "Custom6", o20[o20.Custom7 = 1024] = "Custom7", o20[o20.Custom8 = 2048] = "Custom8", o20[o20.Custom9 = 4096] = "Custom9", o20[o20.Custom10 = 8192] = "Custom10", o20[o20.Custom11 = 16384] = "Custom11", o20[o20.Custom12 = 32768] = "Custom12", o20[o20.All = 65520] = "All";
}(u || (u = {}));

// node_modules/@arcgis/core/views/interactive/interactiveToolUtils.js
function o10(t23) {
  return [t23.on("before-add", (o20) => {
    const i26 = o20.item;
    if (null == i26 || t23.includes(i26))
      return s.getLogger("esri.views.interactive.interactiveToolUtils").warn("Tool is either already in the list of tools or tool is `null`. Not adding tool."), void o20.preventDefault();
    i26.onAdd();
  }), t23.on("after-remove", (e16) => {
    const t24 = e16.item;
    t24.active && (t24.view.activeTool = null), t24.destroy();
  })];
}
function i12(e16) {
  return e16.visible && null != e16.getEditableFlag && e16.getEditableFlag(o9.USER) && e16.getEditableFlag(o9.MANAGER);
}

// node_modules/@arcgis/core/views/support/screenUtils.js
function n16(t23) {
  return c3(t23.x, t23.y);
}
function i14(t23, n28) {
  var _a;
  const c23 = (_a = t23 instanceof HTMLElement ? t23 : t23.surface) == null ? void 0 : _a.getBoundingClientRect();
  return c23 ? c3(n28.clientX - c23.left, n28.clientY - c23.top) : c3(0, 0);
}
function r10(e16, t23) {
  return t23 instanceof Event ? i14(e16, t23) : n16(t23);
}
function o11(e16) {
  if (e16 instanceof Event)
    return true;
  if ("object" == typeof e16 && "type" in e16) {
    switch (e16.type) {
      case "click":
      case "double-click":
      case "pointer-down":
      case "pointer-drag":
      case "pointer-enter":
      case "pointer-leave":
      case "pointer-up":
      case "pointer-move":
      case "immediate-click":
      case "immediate-double-click":
      case "hold":
      case "drag":
      case "mouse-wheel":
        return true;
      default:
        return false;
    }
  }
  return false;
}

// node_modules/@arcgis/core/views/interactive/ToolViewManagerManipulatorState.js
var s10 = class {
  constructor() {
    this._pointerLocations = /* @__PURE__ */ new Map(), this._hoveredManipulators = /* @__PURE__ */ new Map(), this._grabbedManipulators = /* @__PURE__ */ new Map(), this._draggedManipulators = /* @__PURE__ */ new Map(), this._stopDrag = false, this._revertToNullActiveTool = false, this._cursor = null;
  }
  get cursor() {
    return this._cursor;
  }
  hasFocusedManipulators() {
    return this._grabbedManipulators.size > 0 || this._draggedManipulators.size > 0;
  }
  handleInputEvent(t23, e16) {
    const i26 = () => t23.stopPropagation();
    switch (t23.type) {
      case "pointer-move":
        l7(t23.pointerType) && this._pointerLocations.set(t23.pointerId, { x: t23.x, y: t23.y, pointerType: t23.pointerType });
        break;
      case "drag":
        this._grabbedManipulators.size > 0 && (this._stopDrag = true), this._stopDrag && (i26(), "end" === t23.action && (this._stopDrag = false));
        break;
      case "pointer-down": {
        if (!p8(t23))
          break;
        const o20 = n16(t23), r19 = this._intersect(o20, t23.pointerType, e16.forEachTool);
        if (null == r19)
          break;
        const a31 = r19.manipulator, s19 = r19.tool;
        null == a31 || null == s19 || !a31.interactive || a31.grabbable && a31.grabbableForEvent(t23) || !a31.grabbing || a31.dragging || this._ungrabManipulatorBeforeDragging(a31, t23, e16), null != a31 && null != s19 && a31.interactive && a31.grabbable && a31.grabbableForEvent(t23) && !a31.grabbing && (this._grabbedManipulators.set(t23.pointerId, { manipulator: a31, tool: s19, start: o20, pointerType: t23.pointerType }), 1 === this._grabbedManipulators.size && null == e16.activeTool && (this._revertToNullActiveTool = true, e16.setActiveTool(r19.tool)), a31.grabbing = true, a31.events.emit("grab-changed", { action: "start", pointerType: t23.pointerType, screenPoint: o20 }), i26());
        break;
      }
      case "pointer-up":
        this._draggedManipulators.has(t23.pointerId) || this._handlePointerEnd(t23, e16);
        break;
      case "pointer-drag": {
        if (!p8(t23))
          break;
        const a31 = this._grabbedManipulators.get(t23.pointerId), s19 = n(a31, ({ manipulator: t24 }) => t24), l17 = n(a31, ({ tool: t24 }) => t24);
        if (null == s19 || null == l17)
          break;
        const u9 = n16(t23);
        u9.x = i3(u9.x, 0, e16.view.width), u9.y = i3(u9.y, 0, e16.view.height);
        const c23 = a31.start, h13 = this._draggedManipulators.get(t23.pointerId);
        switch (t23.action) {
          case "start":
          case "update":
            "update" !== t23.action && 1 !== this._grabbedManipulators.size || (s19.dragging = true, h13 ? s19.events.emit("drag", { action: "update", start: c23, screenPoint: u9 }) : s19.events.emit("drag", { action: "start", start: c23, screenPoint: u9, pointerType: t23.pointerType }), this._draggedManipulators.set(t23.pointerId, { tool: l17, manipulator: s19, start: c23 }));
            break;
          case "end":
            s19.dragging = false, h13 && s19.events.emit("drag", { action: "end", start: c23, screenPoint: u9 }), this._draggedManipulators.delete(t23.pointerId), this._handlePointerEnd(t23, e16);
        }
        i26();
        break;
      }
      case "immediate-click": {
        const o20 = n16(t23), r19 = this._intersect(o20, t23.pointerType, e16.forEachTool);
        if (u2(t23) || e16.forEachTool((t24) => {
          if ((null == r19 || r19.tool !== t24 || t24.automaticManipulatorSelection) && t24.manipulators) {
            let e17 = false;
            t24.manipulators.forEach(({ manipulator: t25 }) => {
              t25.selected && (t25.selected = false, e17 = true);
            }), e17 && t24.onManipulatorSelectionChanged && t24.onManipulatorSelectionChanged();
          }
        }), null == r19)
          break;
        const { manipulator: a31, tool: s19 } = r19;
        if (!a31.interactive)
          break;
        a31.selectable && s19.automaticManipulatorSelection && (a31.selected = !a31.selected, s19.onManipulatorSelectionChanged && s19.onManipulatorSelectionChanged());
        const l17 = t23.native.shiftKey;
        a31.events.emit("immediate-click", { screenPoint: o20, button: t23.button, pointerType: t23.pointerType, shiftKey: l17, stopPropagation: i26 });
        break;
      }
      case "click": {
        const o20 = n16(t23), r19 = this._intersect(o20, t23.pointerType, e16.forEachTool), a31 = null != r19 ? r19.manipulator : null;
        if (null == a31 || !a31.interactive)
          break;
        const s19 = t23.native.shiftKey;
        a31.events.emit(t23.type, { screenPoint: o20, button: t23.button, pointerType: t23.pointerType, shiftKey: s19 }), i26();
        break;
      }
      case "double-click": {
        const o20 = n16(t23), r19 = this._intersect(o20, t23.pointerType, e16.forEachTool), a31 = null != r19 ? r19.manipulator : null;
        if (null == a31 || !a31.interactive)
          break;
        const s19 = t23.native.shiftKey;
        a31.events.emit("double-click", { screenPoint: o20, button: t23.button, pointerType: t23.pointerType, shiftKey: s19, stopPropagation: i26 });
        break;
      }
      case "immediate-double-click": {
        const o20 = n16(t23), r19 = this._intersect(o20, t23.pointerType, e16.forEachTool), a31 = null != r19 ? r19.manipulator : null;
        if (null == a31 || !a31.interactive)
          break;
        const s19 = t23.native.shiftKey;
        a31.events.emit("immediate-double-click", { screenPoint: o20, button: t23.button, pointerType: t23.pointerType, shiftKey: s19, stopPropagation: i26 });
        break;
      }
    }
    this._onFocusChange(e16.forEachTool);
  }
  _ungrabManipulatorBeforeDragging(t23, e16, o20) {
    t23.grabbing = false, t23.events.emit("grab-changed", { action: "end", pointerType: e16.pointerType, screenPoint: n16(e16) }), this._grabbedManipulators.forEach(({ manipulator: e17 }, o21) => {
      e17 === t23 && this._grabbedManipulators.delete(o21);
    }), this._afterManipulatorUngrab(o20.setActiveTool);
  }
  _handlePointerEnd(t23, e16) {
    const o20 = n(this._grabbedManipulators.get(t23.pointerId), ({ manipulator: t24 }) => t24);
    null != o20 && o20.grabbing && (o20.grabbing = false, o20.events.emit("grab-changed", { action: "end", pointerType: t23.pointerType, screenPoint: n16(t23) }), this._grabbedManipulators.delete(t23.pointerId), this._afterManipulatorUngrab(e16.setActiveTool));
  }
  _cursorFromMap(t23) {
    let o20 = null;
    return n3(t23, ({ manipulator: t24 }) => !(null == t24 || !t24.interactive) && (t24.grabbing && t24.grabCursor ? (o20 = t24.grabCursor, true) : !!t24.cursor && (o20 = t24.cursor, true))), o20;
  }
  _onFocusChange(t23) {
    this._updateCursor(), this._updateFocusedManipulatorTools(t23);
  }
  _updateCursor() {
    this._grabbedManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._grabbedManipulators) || "grabbing" : this._hoveredManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._hoveredManipulators) || "pointer" : this._cursor = null;
  }
  _updateFocusedManipulatorTools(e16) {
    const o20 = /* @__PURE__ */ new Set(), r19 = /* @__PURE__ */ new Set();
    this._grabbedManipulators.forEach(({ tool: t23 }) => {
      o20.add(t23);
    }), this._hoveredManipulators.forEach(({ tool: t23 }) => {
      r19.add(t23);
    }), e16((e17) => {
      e17.hasGrabbedManipulators = o20.has(e17), e17.hasHoveredManipulators = r19.has(e17);
      const i26 = this._grabbedManipulators.values(), a31 = o(i26, ({ tool: t23 }) => t23 === e17);
      e17.firstGrabbedManipulator = null != a31 ? a31.manipulator : null;
    });
  }
  clearPointers(t23, { forEachTool: e16, setActiveTool: o20 }, r19 = true, i26) {
    const a31 = (e17, o21) => e17 === t23 && (null == i26 || i26 === o21);
    this._grabbedManipulators.forEach(({ tool: t24, manipulator: e17, pointerType: o21 }, r20) => {
      a31(t24, e17) && (this._grabbedManipulators.delete(r20), e17.grabbing = false, e17.events.emit("grab-changed", { action: "end", screenPoint: null, pointerType: o21 }));
    }), this._draggedManipulators.forEach(({ tool: t24, manipulator: e17 }, o21) => {
      a31(t24, e17) && (this._draggedManipulators.delete(o21), e17.dragging = false, e17.events.emit("drag", { action: "cancel" }));
    }), r19 && this._hoveredManipulators.forEach(({ tool: t24, manipulator: e17 }, o21) => {
      a31(t24, e17) && (this._hoveredManipulators.delete(o21), e17.hovering = false);
    }), this._afterManipulatorUngrab(o20), this._onFocusChange(e16);
  }
  _intersect(t23, e16, o20) {
    let r19 = null;
    return o20((o21) => {
      if (null == o21.manipulators || !i12(o21))
        return false;
      const i26 = o21.manipulators.intersect(t23, e16);
      return null != i26 && (r19 = { tool: o21, manipulator: i26 }, true);
    }), r19;
  }
  updateHoveredStateFromKnownPointers(t23) {
    this._pointerLocations.forEach((e16, o20) => {
      this._updateHoveredStateForPointerAtScreenPosition(c3(e16.x, e16.y), o20, e16.pointerType, t23);
    });
  }
  handleHoverEvent(t23, e16) {
    "pointer-up" !== t23.type && "immediate-click" !== t23.type && "pointer-move" !== t23.type || !l7(t23.pointerType) || this._updateHoveredStateForPointerAtScreenPosition(n16(t23), t23.pointerId, t23.pointerType, e16);
  }
  _updateHoveredStateForPointerAtScreenPosition(t23, e16, o20, i26) {
    let a31 = this._intersect(t23, o20, i26);
    const n28 = n(this._hoveredManipulators.get(e16), ({ manipulator: t24 }) => t24);
    null == a31 || a31.manipulator.interactive || (a31 = null), null != a31 && n28 === a31.manipulator || (null != n28 && (n28.hovering = false), null != a31 ? (a31.manipulator.hovering = true, this._hoveredManipulators.set(e16, a31)) : this._hoveredManipulators.delete(e16), this._onFocusChange(i26));
  }
  _afterManipulatorUngrab(t23) {
    0 === this._grabbedManipulators.size && this._revertToNullActiveTool && (t23(null), this._revertToNullActiveTool = false);
  }
};
function l7(t23) {
  return "mouse" === t23;
}
function p8(t23) {
  return "mouse" !== t23.pointerType || 0 === t23.button;
}
function u2(t23) {
  return !!t23.native.shiftKey;
}

// node_modules/@arcgis/core/views/ToolViewManager.js
var f6 = "attached";
var E = "tools";
var y5 = 1e3;
var w6 = class extends d4 {
  constructor(t23) {
    super(t23), this._clock = t4, this._manipulatorState = new s10(), this.tools = new V(), this.cursor = null, this._interacting = false, this._interactingTimeout = null, this._forEachTool = (t24) => {
      for (const e16 of this.tools.items)
        if (t24(e16))
          return;
    };
  }
  initialize() {
    this.handles.add([this.view.on(r9, (t23) => {
      this._handleInputEvent(t23);
    }, _3.TOOL), ...o10(this.tools), this.tools.on("before-add", ({ item: t23 }) => {
      this._updateToolEditableFlag(t23);
    }), this.tools.on("before-remove", ({ item: t23 }) => {
      this._manipulatorState.clearPointers(t23, this._manipulatorStateEventArgs), this._updateCursor();
    }), this.tools.on("change", () => {
      this._refreshToolWatchers();
    })]);
  }
  destroy() {
    this.detach(), this.handles.removeAll();
  }
  get _manipulatorStateEventArgs() {
    return { forEachTool: this._forEachTool, activeTool: this.activeTool, setActiveTool: (t23) => {
      this.activeTool = t23;
    }, view: this.view };
  }
  set activeTool(t23) {
    if (null != t23 && !this.view.ready)
      return void s.getLogger(this).error("Cannot set active tool while view is not ready.");
    if (t23 === this.activeTool)
      return;
    const e16 = this.activeTool;
    this._set("activeTool", t23), null != e16 && e16.deactivate(), null != t23 && t23.activate(), this._removeIncompleteTools(t23);
    for (const o20 of this.tools) {
      this._updateToolEditableFlag(o20);
      const t24 = i12(o20);
      null != this.activeTool && t24 || this._manipulatorState.clearPointers(o20, this._manipulatorStateEventArgs, !t24);
    }
    this._updateCursor();
  }
  get updating() {
    var _a;
    return this.updatingHandles.updating || this.tools.some((t23) => t23.updating) || (((_a = this.textures) == null ? void 0 : _a.updating) ?? false);
  }
  get interacting() {
    return this._interacting;
  }
  _clearInteractingTimeout() {
    this._interactingTimeout = o2(this._interactingTimeout);
  }
  _startInteractingTimeout() {
    this._clearInteractingTimeout(), this._interactingTimeout = this._clock.setTimeout(() => this._interacting = false, y5);
  }
  attach() {
    var _a;
    "3d" === this.view.type ? (this._set("textures", new a9(this.view._stage, this.view.resourceController.scheduler)), this.handles.add([l3(() => {
      const { state: t23 } = this.view;
      return "camera" in t23 && t23.camera;
    }, () => this._forEachManipulator((t23) => t23.onViewChange())), (_a = this.view.elevationProvider) == null ? void 0 : _a.on("elevation-change", (t23) => this._forEachManipulator((e16) => e16.onElevationChange(t23))), e3(() => this._set("textures", l(this.textures)))], f6)) : this.handles.add(l3(() => this.view.extent, () => this._forEachManipulator((t23) => t23.onViewChange())));
  }
  detach() {
    this.activeTool = null, this.tools.removeAll(), this.handles.remove(f6), this._clearInteractingTimeout(), this._interacting = false;
  }
  _forEachManipulator(t23) {
    this._forEachTool((e16) => {
      e16.manipulators && e16.manipulators.forEach(({ manipulator: o20 }) => t23(o20, e16));
    });
  }
  _handleInputEvent(t23) {
    let e16 = false;
    const o20 = { ...t23, stopPropagation: () => {
      e16 = true, t23.stopPropagation();
    } };
    null != this.activeTool ? this.activeTool.handleInputEvent && this.activeTool.handleInputEvent(o20) : this._forEachTool((t24) => {
      !e16 && t24.visible && t24.handleInputEvent(o20);
    }), !e16 && "key-down" === t23.type && "Escape" === t23.key && this.activeTool && (t23.stopPropagation(), this.activeTool = null), this._manipulatorState.handleInputEvent(o20, this._manipulatorStateEventArgs), e16 || null == this.activeTool || this.activeTool.handleInputEventAfter(o20), this._manipulatorState.handleHoverEvent(o20, this._forEachTool), this._updateCursor(), "pointer-move" === t23.type && (this._manipulatorState.hasFocusedManipulators() || this.activeTool) && (this._interacting = true, this._startInteractingTimeout());
  }
  _refreshToolWatchers() {
    this.handles.remove(E), this._forEachTool((t23) => {
      if (t23 instanceof m) {
        const e16 = l3(() => [t23.cursor, t23.visible, t23.editable], () => {
          i12(t23) || this._manipulatorState.clearPointers(t23, this._manipulatorStateEventArgs), this._updateCursor();
        });
        this.handles.add(e16, E);
      }
      t23.manipulators && this.handles.add([t23.manipulators.on("after-remove", (e16) => {
        this._manipulatorState.clearPointers(t23, this._manipulatorStateEventArgs, true, e16.item.manipulator);
      }), t23.manipulators.on("change", () => {
        this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
      })], E);
    }), this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
  }
  _updateToolEditableFlag(t23) {
    var _a;
    (_a = t23.setEditableFlag) == null ? void 0 : _a.call(t23, o9.MANAGER, null == this.activeTool || t23 === this.activeTool);
  }
  _updateCursor() {
    let t23 = this._manipulatorState.cursor;
    null == t23 && this._forEachTool((e16) => !(null == e16.cursor || !e16.visible) && (t23 = e16.cursor, true)), this._get("cursor") !== t23 && this._set("cursor", t23);
  }
  _removeIncompleteTools(t23) {
    this.tools.filter((e16) => (null == t23 || e16 !== t23) && !e16.created && e16.removeIncompleteOnCancel).forEach((t24) => {
      this.tools.remove(t24);
    });
  }
  get test() {
    return { setClock: (t23) => this._clock = t23 };
  }
};
e([y2({ constructOnly: true, nonNullable: true })], w6.prototype, "view", void 0), e([y2({ readOnly: true, nonNullable: true })], w6.prototype, "textures", void 0), e([y2({ value: null })], w6.prototype, "activeTool", null), e([y2({ readOnly: true, type: V })], w6.prototype, "tools", void 0), e([y2({ readOnly: true })], w6.prototype, "cursor", void 0), e([y2({ readOnly: true })], w6.prototype, "updating", null), e([y2()], w6.prototype, "_interacting", void 0), e([y2({ readOnly: true })], w6.prototype, "interacting", null), w6 = e([a3("esri.views.ToolViewManager")], w6);

// node_modules/@arcgis/core/views/input/gamepad/GamepadInputDevice.js
var n17 = class extends m {
  constructor(e16) {
    super(), this.nativeIndex = null, this._detectedDeviceType = "unknown", "standard" === e16.mapping ? this._detectedDeviceType = "standard" : o12.test(e16.id) ? this._detectedDeviceType = "spacemouse" : this._detectedDeviceType = "unknown", this.nativeIndex = e16.index;
  }
  get native() {
    const e16 = navigator.getGamepads ? navigator.getGamepads() : [];
    return null != this.nativeIndex && this.nativeIndex < e16.length ? e16[this.nativeIndex] : null;
  }
  get deviceType() {
    return this._detectedDeviceType;
  }
  get axisThreshold() {
    return i15[this.deviceType];
  }
};
e([y2({ nonNullable: true, readOnly: true })], n17.prototype, "nativeIndex", void 0), e([y2({ type: String, readOnly: true })], n17.prototype, "deviceType", null), e([y2({ type: Number, readOnly: true })], n17.prototype, "axisThreshold", null), n17 = e([a3("esri.views.input.gamepad.GamepadInputDevice")], n17);
var o12 = new RegExp("^(3dconnexion|space(mouse|navigator|pilot|explorer))", "i");
var i15 = { standard: 0.15, spacemouse: 0.025, unknown: 0 };
var a10 = n17;

// node_modules/@arcgis/core/views/input/gamepad/GamepadSettings.js
var c12 = class extends m {
  constructor(...e16) {
    super(...e16), this.devices = new V(), this.enabledFocusMode = "document";
  }
};
e([y2({ type: V.ofType(a10), readOnly: true })], c12.prototype, "devices", void 0), e([y2({ type: ["document", "view", "none"] })], c12.prototype, "enabledFocusMode", void 0), c12 = e([a3("esri.views.input.gamepad.GamepadSettings")], c12);
var i16 = c12;

// node_modules/@arcgis/core/views/input/Input.js
var p9 = class extends m {
  constructor() {
    super(...arguments), this.gamepad = new i16();
  }
};
e([y2({ readOnly: true })], p9.prototype, "gamepad", void 0), p9 = e([a3("esri.views.input.Input")], p9);
var a11 = p9;

// node_modules/@arcgis/core/views/navigation/gamepad/GamepadSettings.js
var s11 = class extends m {
  constructor(o20) {
    super(o20), this.enabled = true, this.device = null, this.mode = "pan", this.tiltDirection = "forward-down", this.velocityFactor = 1;
  }
};
e([y2({ type: Boolean, nonNullable: true })], s11.prototype, "enabled", void 0), e([y2({ type: a10 })], s11.prototype, "device", void 0), e([y2({ type: ["pan", "zoom"], nonNullable: true })], s11.prototype, "mode", void 0), e([y2({ type: ["forward-down", "forward-up"], nonNullable: true })], s11.prototype, "tiltDirection", void 0), e([y2({ type: Number, nonNullable: true })], s11.prototype, "velocityFactor", void 0), s11 = e([a3("esri.views.navigation.gamepad.GamepadSettings")], s11);
var a12 = s11;

// node_modules/@arcgis/core/views/navigation/Navigation.js
var a13 = class extends m {
  constructor(o20) {
    super(o20), this.browserTouchPanEnabled = true, this.gamepad = new a12(), this.momentumEnabled = true, this.mouseWheelZoomEnabled = true;
  }
};
e([y2({ type: Boolean })], a13.prototype, "browserTouchPanEnabled", void 0), e([y2({ type: a12, nonNullable: true })], a13.prototype, "gamepad", void 0), e([y2({ type: Boolean })], a13.prototype, "momentumEnabled", void 0), e([y2({ type: Boolean })], a13.prototype, "mouseWheelZoomEnabled", void 0), a13 = e([a3("esri.views.navigation.Navigation")], a13);
var p10 = a13;

// node_modules/@arcgis/core/geometry/support/heightModelInfoUtils.js
var a14;
function l8(e16) {
  var _a;
  const i26 = e16.url ? p3(e16.url) : void 0, r19 = (_a = e16.spatialReference) == null ? void 0 : _a.vcsWkid;
  return !(null == r19 && null != i26 && "ImageServer" === i26.serverType) && h7(e16) && e16.heightModelInfo ? e16.heightModelInfo : d8(e16) ? v3.deriveUnitFromSR(p11, e16.spatialReference) : null;
}
function h7(e16) {
  return "heightModelInfo" in e16;
}
function u3(e16) {
  if ("unknown" === e16.type || !("capabilities" in e16))
    return false;
  switch (e16.type) {
    case "csv":
    case "feature":
    case "geojson":
    case "subtype-group":
    case "ogc-feature":
    case "oriented-imagery":
    case "wfs":
    case "knowledge-graph-sublayer":
      return true;
    default:
      return false;
  }
}
function d8(e16) {
  return u3(e16) ? !!(e16.capabilities && e16.capabilities.data && e16.capabilities.data.supportsZ) : f7(e16);
}
function g7(e16) {
  return null != e16.layers || f7(e16) || u3(e16) || h7(e16);
}
function f7(e16) {
  switch (e16.type) {
    case "building-scene":
    case "elevation":
    case "integrated-mesh":
    case "point-cloud":
    case "scene":
    case "voxel":
      return true;
    case "base-dynamic":
    case "base-elevation":
    case "base-tile":
    case "bing-maps":
    case "csv":
    case "dimension":
    case "geojson":
    case "feature":
    case "subtype-group":
    case "geo-rss":
    case "graphics":
    case "group":
    case "imagery":
    case "imagery-tile":
    case "kml":
    case "knowledge-graph":
    case "link-chart":
    case "knowledge-graph-sublayer":
    case "line-of-sight":
    case "map-image":
    case "map-notes":
    case "media":
    case "ogc-feature":
    case "open-street-map":
    case "oriented-imagery":
    case "route":
    case "stream":
    case "tile":
    case "unknown":
    case "unsupported":
    case "vector-tile":
    case "video":
    case "wcs":
    case "web-tile":
    case "wfs":
    case "wms":
    case "wmts":
    case null:
      return false;
  }
  return false;
}
!function(e16) {
  e16[e16.Ok = 0] = "Ok", e16[e16.Units = 1] = "Units", e16[e16.HeightModel = 2] = "HeightModel", e16[e16.CRS = 3] = "CRS", e16[e16.Unsupported = 4] = "Unsupported";
}(a14 || (a14 = {}));
var p11 = new v3({ heightModel: "gravity-related-height" });

// node_modules/@arcgis/core/views/support/projectionUtils.js
var n18;
var s12 = null;
async function c13(r19) {
  s12 || (s12 = import("./geometryServiceUtils-MCUMQGXY.js").then((e16) => n18 = e16)), await s12, s3(r19);
}
async function p12(e16, s19, a31, m15) {
  if (!e16)
    return null;
  const l17 = e16.spatialReference;
  return Y() || Cn(l17, s19) ? nn(e16, s19) : n18 ? n18.projectGeometry(e16, s19, a31, m15) : (await Promise.race([c13(m15), $(m15)]), p12(e16, s19, a31, m15));
}

// node_modules/@arcgis/core/views/support/DefaultsFromMap.js
var d9 = class extends m {
  constructor(e16) {
    super(e16), this.required = { tileInfo: false, heightModelInfo: false, extent: false }, this.defaultSpatialReference = null, this.userSpatialReference = null, this.sourcePreloadCount = 10, this.priorityCollection = null, this.requiresExtentInSpatialReference = true, this.suspended = false, this._projectExtentTask = { task: null, input: null, output: null, spatialReference: null };
  }
  destroy() {
    this._projectExtentTask.task && (this._projectExtentTask.task = e2(this._projectExtentTask.task)), this._set("map", null);
  }
  get ready() {
    return !this._spatialReferenceTask.updating && !this._tileInfoTask.updating && !this._extentTask.updating;
  }
  get heightModelInfoReady() {
    return !this._heightModelInfoTask.updating;
  }
  get spatialReference() {
    return null != this.userSpatialReference ? this.userSpatialReference : this._spatialReferenceTask.spatialReference;
  }
  get extent() {
    return this._extentTask.extent;
  }
  get heightModelInfo() {
    return this._heightModelInfoTask.heightModelInfo;
  }
  get vcsWkid() {
    return this._heightModelInfoTask.vcsWkid;
  }
  get latestVcsWkid() {
    return this._heightModelInfoTask.latestVcsWkid;
  }
  get viewingMode() {
    return null == this.userSpatialReference || this.userSpatialReference.equals(this._spatialReferenceTask.spatialReference) ? this._spatialReferenceTask.viewingMode : null;
  }
  get tileInfo() {
    return this._tileInfoTask.tileInfo;
  }
  get mapCollections() {
    var _a, _b, _c, _d;
    const e16 = (_a = this.map) == null ? void 0 : _a.call(this), t23 = [];
    return null != this.priorityCollection && t23.push(this.priorityCollection), t23.push({ parent: e16 == null ? void 0 : e16.basemap, layers: (_b = e16 == null ? void 0 : e16.basemap) == null ? void 0 : _b.baseLayers }, { layers: e16 == null ? void 0 : e16.layers }, { parent: e16 == null ? void 0 : e16.ground, layers: (_c = e16 == null ? void 0 : e16.ground) == null ? void 0 : _c.layers }, { parent: e16 == null ? void 0 : e16.basemap, layers: (_d = e16 == null ? void 0 : e16.basemap) == null ? void 0 : _d.referenceLayers }), t23;
  }
  get _allLayers() {
    return this._collectLayers(this.mapCollections);
  }
  get _spatialReferenceTask() {
    if (this.suspended)
      return this._get("_spatialReferenceTask") ?? { updating: false };
    const { layers: e16, updating: t23 } = this._allLayers;
    let n28 = null;
    for (const s19 of e16) {
      const e17 = this._getSupportedSpatialReferences(s19);
      if (e17.length > 0) {
        const t24 = this._narrowDownSpatialReferenceCandidates(n28, e17);
        null != t24 && (n28 = t24);
      }
      if (null != n28 && 1 === n28.length)
        break;
    }
    if (t23 && (null == n28 || 1 !== n28.length))
      return { updating: true };
    const a31 = this._pickSpatialReferenceCandidate(n28);
    return { spatialReference: null != a31 ? a31.spatialReference : null, viewingMode: null != a31 ? a31.viewingMode : null, updating: false };
  }
  get _tileInfoTask() {
    var _a, _b, _c, _d, _e, _f, _g;
    if (!this.required.tileInfo)
      return this._get("_tileInfoTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const { layers: e16, updating: t23 } = this._collectLayers([{ parent: (_b = (_a = this.map) == null ? void 0 : _a.call(this)) == null ? void 0 : _b.basemap, layers: (_e = (_d = (_c = this.map) == null ? void 0 : _c.call(this)) == null ? void 0 : _d.basemap) == null ? void 0 : _e.baseLayers }, { layers: (_g = (_f = this.map) == null ? void 0 : _f.call(this)) == null ? void 0 : _g.layers }]);
    if (e16 && e16.length > 0 && "tileInfo" in e16[0]) {
      const t24 = e16[0].tileInfo;
      return { tileInfo: t24 && t24.spatialReference.equals(this.spatialReference) ? t24 : null, updating: false };
    }
    return { updating: t23 };
  }
  get _heightModelInfoTask() {
    var _a, _b, _c;
    if (!this.required.heightModelInfo || this.suspended && ((_a = this._get("_heightModelInfoTask")) == null ? void 0 : _a.heightModelInfo))
      return this._get("_heightModelInfoTask") ?? { updating: false };
    const { layers: e16, updating: t23 } = this._allLayers;
    for (const n28 of e16)
      if (g7(n28)) {
        const e17 = l8(n28);
        if (e17)
          return { heightModelInfo: e17, vcsWkid: (_b = n28.spatialReference) == null ? void 0 : _b.vcsWkid, latestVcsWkid: (_c = n28.spatialReference) == null ? void 0 : _c.latestVcsWkid, updating: false };
      }
    return { updating: t23 };
  }
  get _extentCandidatesTask() {
    if (this.suspended || !this.required.extent)
      return this._get("_extentCandidatesTask") ?? { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const e16 = this._allLayers, t23 = e16.updating, n28 = [];
    for (const a31 of e16.layers) {
      const e17 = "fullExtents" in a31 && a31.fullExtents || (null != a31.fullExtent ? [a31.fullExtent] : []), t24 = this.requiresExtentInSpatialReference ? null : e17[0], s19 = e17.find((e18) => e18.spatialReference.equals(this.spatialReference)) ?? t24;
      if (s19)
        return { candidates: [{ extent: s19, layer: a31 }], updating: false };
      if (this._getSupportedSpatialReferences(a31).length > 0)
        for (const i26 of e17)
          n28.push({ extent: i26, layer: a31 });
    }
    return { candidates: n28, updating: t23 };
  }
  get _extentTask() {
    const { candidates: e16, updating: t23 } = this._extentCandidatesTask;
    if (t23)
      return { updating: t23 };
    if (null == e16 || 0 === e16.length)
      return { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const i26 = this._pickExtentCandidate(e16), r19 = this.spatialReference;
    return i26.extent.equals(this._projectExtentTask.input) && r19.equals(this._projectExtentTask.spatialReference) ? { extent: this._projectExtentTask.output, updating: null != this._projectExtentTask.task && !this._projectExtentTask.task.finished } : (null != this._projectExtentTask.task && (this._projectExtentTask.task = e2(this._projectExtentTask.task)), this._projectExtentTask = { input: i26.extent.clone(), output: null, spatialReference: r19.clone(), task: d2(async (e17) => {
      try {
        const t24 = await p12(i26.extent, r19, "portalItem" in i26.layer ? i26.layer.portalItem : void 0, e17);
        this._projectExtentTask = { ...this._projectExtentTask, task: null, output: t24 };
      } catch (t24) {
        if (a2(e17))
          return;
        this._projectExtentTask = { ...this._projectExtentTask, task: null };
      }
    }) }, { updating: true });
  }
  _narrowDownSpatialReferenceCandidates(e16, t23) {
    if (null == e16)
      return t23;
    const n28 = [], a31 = (e17, t24) => null != e17 ? null != t24 ? e17 === t24 && e17 : e17 : t24;
    for (const s19 of e16)
      for (const e17 of t23) {
        if (!s19.spatialReference.equals(e17.spatialReference))
          continue;
        const t24 = a31(s19.viewingMode, e17.viewingMode);
        if (false !== t24) {
          n28.push({ spatialReference: s19.spatialReference, viewingMode: t24 });
          break;
        }
      }
    return n28.length > 0 ? n28 : null;
  }
  _pickSpatialReferenceCandidate(e16) {
    const t23 = this.defaultSpatialReference;
    return null == e16 || e16.length < 1 ? null != t23 ? { spatialReference: t23, viewingMode: null } : null : (null != t23 && e16.length > 1 && e16.some(({ spatialReference: e17 }) => e17.equals(t23)) && (e16 = e16.filter(({ spatialReference: e17 }) => e17.equals(t23))), e16.length > 1 && e16.some(({ viewingMode: e17 }) => e17 !== l4.Local) && (e16 = e16.filter(({ viewingMode: e17 }) => e17 !== l4.Local)), e16[0]);
  }
  _getSupportedSpatialReferences(e16) {
    const t23 = "supportedSpatialReferences" in e16 && e16.supportedSpatialReferences || (e16.spatialReference ? [e16.spatialReference] : []);
    if (0 === t23.length)
      return [];
    const n28 = [];
    for (const a31 of t23) {
      const t24 = this.getSpatialReferenceSupport({ spatialReference: a31, layer: e16 });
      if (null != t24) {
        const e17 = null != t24.constraints ? t24.constraints : [{ spatialReference: a31, viewingMode: null }];
        for (const { spatialReference: t25, viewingMode: a32 } of e17)
          this.requiresExtentInSpatialReference && null != this.userSpatialReference && !t25.equals(this.userSpatialReference) || n28.push({ spatialReference: t25, viewingMode: a32 });
      }
    }
    return n28;
  }
  _pickExtentCandidate(e16) {
    const t23 = this.spatialReference;
    return e16.find(({ extent: e17 }) => t23.equals(e17.spatialReference)) || e16[0];
  }
  _collectLayers(e16) {
    var _a;
    if ("loaded" !== this._loadMaybe((_a = this.map) == null ? void 0 : _a.call(this)))
      return { layers: [], updating: true };
    const t23 = new f8();
    for (const n28 of e16)
      if (this._collectCollection(n28, t23), t23.preloading === this.sourcePreloadCount)
        break;
    return { layers: t23.layers, updating: t23.updating };
  }
  _collectCollection(e16, t23) {
    if (e16.layers) {
      switch (this._loadMaybe(e16.parent)) {
        case "loading":
          return t23.updating = true, void ++t23.preloading;
        case "failed":
          return;
      }
      for (const n28 of e16.layers) {
        switch (this._loadMaybe(n28)) {
          case "failed":
            continue;
          case "loading":
            t23.updating = true, ++t23.preloading;
            break;
          case "loaded":
            t23.updating || t23.layers.push(n28), "layers" in n28 && this._collectCollection({ layers: n28.layers }, t23);
        }
        if (t23.preloading === this.sourcePreloadCount)
          break;
      }
    }
  }
  _loadMaybe(e16) {
    return e16 && "loadStatus" in e16 && null != e16.loadStatus ? "not-loaded" === e16.loadStatus ? (e16.load().catch((e17) => {
      d(e17) || console.log(e17);
    }), "loading") : e16.loadStatus : "loaded";
  }
};
e([y2()], d9.prototype, "required", void 0), e([y2({ constructOnly: true })], d9.prototype, "map", void 0), e([y2({ constructOnly: true })], d9.prototype, "getSpatialReferenceSupport", void 0), e([y2()], d9.prototype, "defaultSpatialReference", void 0), e([y2()], d9.prototype, "userSpatialReference", void 0), e([y2()], d9.prototype, "sourcePreloadCount", void 0), e([y2()], d9.prototype, "priorityCollection", void 0), e([y2()], d9.prototype, "requiresExtentInSpatialReference", void 0), e([y2()], d9.prototype, "suspended", void 0), e([y2({ readOnly: true })], d9.prototype, "ready", null), e([y2({ readOnly: true })], d9.prototype, "heightModelInfoReady", null), e([y2({ readOnly: true })], d9.prototype, "spatialReference", null), e([y2({ readOnly: true })], d9.prototype, "extent", null), e([y2({ readOnly: true })], d9.prototype, "heightModelInfo", null), e([y2({ readOnly: true })], d9.prototype, "vcsWkid", null), e([y2({ readOnly: true })], d9.prototype, "latestVcsWkid", null), e([y2({ readOnly: true })], d9.prototype, "viewingMode", null), e([y2({ readOnly: true })], d9.prototype, "tileInfo", null), e([y2({ readOnly: true })], d9.prototype, "mapCollections", null), e([y2({ readOnly: true })], d9.prototype, "_allLayers", null), e([y2({ readOnly: true })], d9.prototype, "_spatialReferenceTask", null), e([y2({ readOnly: true })], d9.prototype, "_tileInfoTask", null), e([y2({ readOnly: true })], d9.prototype, "_heightModelInfoTask", null), e([y2({ readOnly: true })], d9.prototype, "_extentCandidatesTask", null), e([y2()], d9.prototype, "_extentTask", null), e([y2()], d9.prototype, "_projectExtentTask", void 0), d9 = e([a3("esri.views.support.DefaultsFromMap")], d9);
var f8 = class {
  constructor() {
    this.layers = new Array(), this.preloading = -1, this.updating = false;
  }
};

// node_modules/@arcgis/core/views/View.js
var k;
var W2 = k = class extends a6(n4.EventedMixin(m2(m))) {
  constructor(e16) {
    super(e16), this._userSpatialReference = null, this._cursor = null, this.allLayerViews = new n10({ getCollections: () => {
      var _a, _b, _c;
      return [(_a = this.basemapView) == null ? void 0 : _a.baseLayerViews, (_b = this.groundView) == null ? void 0 : _b.layerViews, this.layerViews, (_c = this.basemapView) == null ? void 0 : _c.referenceLayerViews];
    }, getChildrenFunction: A2 }), this.groundView = null, this.basemapView = null, this.fatalError = null, this.graphics = new i7(), this.analyses = new t10(), this.typeSpecificPreconditionsReady = true, this.layerViews = new V(), this.magnifier = new p6(), this.padding = { left: 0, top: 0, right: 0, bottom: 0 }, this.ready = false, this.spatialReferenceWarningDelay = 1e3, this.supportsGround = true, this.timeExtent = null, this.timeReference = new c5(), this.type = null, this.scale = null, this.updating = false, this.initialExtentRequired = true, this.input = new a11(), this.navigation = new p10(), this.layerViewManager = null, this.analysisViewManager = null, this.isHeightModelInfoRequired = false, this.width = null, this.height = null, this.resizing = false, this.suspended = false, this.viewEvents = new p7(this), this.persistableViewModels = new V(), this._isValid = false, this._readyCycleForced = false, this._currentSpatialReference = null, this.handles.add(l3(() => this.preconditionsReady, (e17) => {
      var _a, _b;
      e17 ? (this._currentSpatialReference = this.spatialReference, k.views.add(this)) : (this._currentSpatialReference = null, k.views.remove(this)), this.notifyChange("spatialReference"), !e17 && this.ready ? ((_a = this.toolViewManager) == null ? void 0 : _a.detach(), null != this.analysisViewManager && this.analysisViewManager.detach(), (_b = this.layerViewManager) == null ? void 0 : _b.clear(), this._teardown()) : e17 && !this.ready && (this._startup(), null != this.analysisViewManager && this.analysisViewManager.attach(), this.toolViewManager.attach());
    }, U));
  }
  initialize() {
    this.addResolvingPromise(this.validate().then(() => (this._isValid = true, j(() => this.ready)))), this.basemapView = new n15({ view: this }), this.layerViewManager = new L({ view: this, layerViewImporter: { importLayerView: (e16) => this.importLayerView(e16), hasLayerViewModule: (e16) => this.hasLayerViewModule(e16) }, supportsGround: this.supportsGround }), this.toolViewManager = new w6({ view: this }), this._setupSpatialReferenceLogger(), this.handles.add([l3(() => this.initialExtentRequired, (e16) => this.defaultsFromMap.required = { ...this.defaultsFromMap.required, extent: e16 }, { sync: true, initial: true }), l3(() => this.ready, (e16) => {
      this.defaultsFromMap && (this.defaultsFromMap.suspended = e16, this.defaultsFromMap.userSpatialReference = e16 ? this.spatialReference : this._userSpatialReference);
    }, { sync: true }), l3(() => this._userSpatialReference, (e16) => {
      this.defaultsFromMap && (this.defaultsFromMap.userSpatialReference = e16);
    }, { sync: true, initial: true })]);
  }
  _setupSpatialReferenceLogger() {
    let e16 = null;
    this.handles.add([l3(() => {
      var _a;
      return (_a = this.defaultsFromMap) == null ? void 0 : _a.ready;
    }, (t23) => {
      var _a;
      const i26 = ((_a = this.map) == null ? void 0 : _a.allLayers.length) > 0;
      if (t23 && !this.spatialReference && i26) {
        if (null != e16)
          return;
        const t24 = e3(() => e16 = e2(e16));
        e16 = d2(async (t25) => {
          try {
            await g(this.spatialReferenceWarningDelay, null, t25);
          } catch {
            return;
          } finally {
            e16 = null;
          }
          s.getLogger(this).warn("#spatialReference", "no spatial reference could be derived from the currently added map layers");
        }), this.handles.add(t24, "spatial-reference-logger-task");
      } else
        this.handles.remove("spatial-reference-logger-task");
    }, { sync: true })]);
  }
  destroy() {
    var _a, _b;
    this.destroyed || (k.views.remove(this), this.viewEvents.destroy(), this.allLayerViews.destroy(), this.navigation && (this.navigation.destroy(), this._set("navigation", null)), this.graphics = l(this.graphics), this.analyses = l(this.analyses), this.handles.remove("defaultsFromMap"), this.defaultsFromMap.destroy(), this._set("defaultsFromMap", null), l(this.analysisViewManager), this.toolViewManager = l(this.toolViewManager), this.layerViewManager = l(this.layerViewManager), this.basemapView = l(this.basemapView), (_a = this.groundView) == null ? void 0 : _a.destroy(), (_b = this.layerViews) == null ? void 0 : _b.forEach((e16) => e16.destroy()), this.layerViews.length = 0, this.invalidate(), this._emitter.clear(), this.handles.removeAll(), this.map = l(this.map));
  }
  _startup() {
    this._set("ready", true);
  }
  _teardown() {
    this._set("ready", false);
  }
  whenReady() {
    return Promise.resolve(this);
  }
  toMap() {
    return s.getLogger(this).error("#toMap()", "Not implemented on this instance of View"), null;
  }
  get activeTool() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.activeTool;
  }
  set activeTool(e16) {
    this.toolViewManager && (this.toolViewManager.activeTool = e16);
  }
  get animation() {
    return this._get("animation");
  }
  set animation(e16) {
    this._set("animation", e16);
  }
  get center() {
    return null;
  }
  get _defaultsFromMapSettings() {
    return {};
  }
  get defaultsFromMap() {
    return new d9({ required: { tileInfo: false, heightModelInfo: false, extent: false }, map: () => this.map, getSpatialReferenceSupport: (e16) => this.getSpatialReferenceSupport(e16), ...this._defaultsFromMapSettings });
  }
  get extent() {
    return this._get("extent");
  }
  set extent(e16) {
    this._set("extent", e16);
  }
  get heightModelInfo() {
    return this.getDefaultHeightModelInfo();
  }
  get interacting() {
    return this.navigating;
  }
  get navigating() {
    return false;
  }
  get preconditionsReady() {
    var _a;
    return !(this.fatalError || !this._isValid || this._readyCycleForced || !this.map || _.isLoadable(this.map) && !this.map.loaded || 0 === this.width || 0 === this.height || !this.spatialReference || !this._validateSpatialReference(this.spatialReference) || !this._currentSpatialReference && !((_a = this.defaultsFromMap) == null ? void 0 : _a.ready) || !this.typeSpecificPreconditionsReady);
  }
  get resolution() {
    return 0;
  }
  set map(e16) {
    e16 !== this._get("map") && ((e16 == null ? void 0 : e16.destroyed) && (s.getLogger(this).warn("#map", "The provided map is already destroyed", { map: e16 }), e16 = null), _.isLoadable(e16) && e16.load().catch(() => {
    }), this.constructed && !this.destroyed && (this.forceReadyCycle(), this._currentSpatialReference = null), this._set("map", e16));
  }
  get spatialReference() {
    var _a, _b;
    let e16 = this._userSpatialReference || this._currentSpatialReference || this.getDefaultSpatialReference() || null;
    return e16 && ((_b = (_a = this.defaultsFromMap) == null ? void 0 : _a.required) == null ? void 0 : _b.heightModelInfo) && (e16 = e16.clone(), e16.vcsWkid = this.defaultsFromMap.vcsWkid, e16.latestVcsWkid = this.defaultsFromMap.latestVcsWkid), e16;
  }
  set spatialReference(e16) {
    const t23 = !S(e16, this._get("spatialReference"));
    this._set("_userSpatialReference", e16), t23 && (this._set("spatialReference", e16), this._spatialReferenceChanged(e16));
  }
  _spatialReferenceChanged(e16) {
  }
  get stationary() {
    return !this.animation && !this.navigating && !this.resizing;
  }
  get tools() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.tools;
  }
  get initialExtent() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.extent;
  }
  get cursor() {
    const e16 = this.toolViewManager ? this.toolViewManager.cursor : null;
    return null != e16 ? e16 : this._cursor || "default";
  }
  set cursor(e16) {
    this._cursor = e16, this.notifyChange("cursor");
  }
  get size() {
    return [this.width, this.height];
  }
  whenLayerView(e16) {
    var _a;
    return ((_a = this.layerViewManager) == null ? void 0 : _a.whenLayerView(e16)) ?? Promise.reject();
  }
  getDefaultSpatialReference() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.spatialReference;
  }
  getDefaultHeightModelInfo() {
    var _a;
    return (this.map && "heightModelInfo" in this.map ? this.map.heightModelInfo : void 0) ?? ((_a = this.defaultsFromMap) == null ? void 0 : _a.heightModelInfo) ?? null;
  }
  importLayerView(e16) {
    throw new s2("importLayerView() not implemented");
  }
  hasLayerViewModule(e16) {
    return false;
  }
  async validate() {
  }
  invalidate() {
    this._isValid = false;
  }
  getSpatialReferenceSupport() {
    return { constraints: null };
  }
  _validateSpatialReference(e16) {
    return null != this.getSpatialReferenceSupport({ spatialReference: e16 });
  }
  when(e16, t23) {
    return this.isResolved() && !this.ready && s.getLogger(this).warn("#when()", "Calling view.when() while the view is no longer ready but was already resolved once will resolve immediately. Use reactiveUtils.whenOnce(() => view.ready).then(...) instead."), super.when(e16, t23);
  }
  forceReadyCycle() {
    this.ready && (f2(() => this.destroyed || false === this.preconditionsReady, () => this._readyCycleForced = false, { once: true }), this._readyCycleForced = true);
  }
  addAndActivateTool(e16) {
    this.toolViewManager.tools.add(e16), this.activeTool = e16;
  }
  tryFatalErrorRecovery() {
    this.fatalError = null;
  }
};
W2.views = new V(), e([y2()], W2.prototype, "_userSpatialReference", void 0), e([y2()], W2.prototype, "activeTool", null), e([y2({ readOnly: true })], W2.prototype, "allLayerViews", void 0), e([y2()], W2.prototype, "groundView", void 0), e([y2()], W2.prototype, "animation", null), e([y2()], W2.prototype, "basemapView", void 0), e([y2()], W2.prototype, "center", null), e([y2({ readOnly: true })], W2.prototype, "_defaultsFromMapSettings", null), e([y2()], W2.prototype, "defaultsFromMap", null), e([y2()], W2.prototype, "fatalError", void 0), e([y2({ type: M })], W2.prototype, "extent", null), e([y2(p4(i7, "graphics"))], W2.prototype, "graphics", void 0), e([y2(p4(t10, "analyses"))], W2.prototype, "analyses", void 0), e([y2({ readOnly: true, type: v3 })], W2.prototype, "heightModelInfo", null), e([y2({ readOnly: true })], W2.prototype, "interacting", null), e([y2({ readOnly: true })], W2.prototype, "navigating", null), e([y2({ readOnly: true, dependsOn: ["fatalError", "_isValid", "_readyCycleForced", "map", "map.loaded?", "width", "height", "spatialReference", "_currentSpatialReference", "defaultsFromMap.ready", "typeSpecificPreconditionsReady"] })], W2.prototype, "preconditionsReady", null), e([y2({ readOnly: true })], W2.prototype, "typeSpecificPreconditionsReady", void 0), e([y2({ type: V, readOnly: true })], W2.prototype, "layerViews", void 0), e([y2()], W2.prototype, "resolution", null), e([y2({ type: p6 })], W2.prototype, "magnifier", void 0), e([y2({ value: null, type: j4 })], W2.prototype, "map", null), e([y2()], W2.prototype, "padding", void 0), e([y2({ readOnly: true })], W2.prototype, "ready", void 0), e([y2({ type: f })], W2.prototype, "spatialReference", null), e([y2()], W2.prototype, "spatialReferenceWarningDelay", void 0), e([y2()], W2.prototype, "stationary", null), e([y2({ readOnly: true })], W2.prototype, "supportsGround", void 0), e([y2({ type: c4 })], W2.prototype, "timeExtent", void 0), e([y2({ type: c5, nonNullable: true })], W2.prototype, "timeReference", void 0), e([y2()], W2.prototype, "tools", null), e([y2()], W2.prototype, "toolViewManager", void 0), e([y2({ readOnly: true })], W2.prototype, "type", void 0), e([y2({ type: Number })], W2.prototype, "scale", void 0), e([y2({ readOnly: true })], W2.prototype, "updating", void 0), e([y2({ readOnly: true })], W2.prototype, "initialExtentRequired", void 0), e([y2({ readOnly: true })], W2.prototype, "initialExtent", null), e([y2()], W2.prototype, "cursor", null), e([y2({ readOnly: true })], W2.prototype, "input", void 0), e([y2({ type: p10, nonNullable: true })], W2.prototype, "navigation", void 0), e([y2()], W2.prototype, "layerViewManager", void 0), e([y2()], W2.prototype, "analysisViewManager", void 0), e([y2()], W2.prototype, "width", void 0), e([y2()], W2.prototype, "height", void 0), e([y2({ readOnly: true })], W2.prototype, "resizing", void 0), e([y2({ value: null, readOnly: true })], W2.prototype, "size", null), e([y2({ readOnly: true })], W2.prototype, "suspended", void 0), e([y2({ readOnly: true })], W2.prototype, "viewEvents", void 0), e([y2({ readOnly: true })], W2.prototype, "persistableViewModels", void 0), e([y2()], W2.prototype, "_isValid", void 0), e([y2()], W2.prototype, "_readyCycleForced", void 0), e([y2()], W2.prototype, "_currentSpatialReference", void 0), W2 = k = e([a3("esri.views.View")], W2);
var z2 = W2;
function A2(e16) {
  return e16.layerViews;
}

// node_modules/@arcgis/core/views/ViewAnimation.js
var n19 = class extends p {
  constructor(t23) {
    super(t23), this.state = "running", this.target = null, this._resolver = null;
  }
  initialize() {
    this._resolver = C(), this.addResolvingPromise(this._resolver.promise);
  }
  get done() {
    return "finished" === this.state || "stopped" === this.state;
  }
  stop() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "stopped"), (_a = this._resolver) == null ? void 0 : _a.reject(new s2("ViewAnimation stopped")));
  }
  finish() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "finished"), (_a = this._resolver) == null ? void 0 : _a.resolve());
  }
  update(t23, s19) {
    s19 || (s19 = T(t23) ? "waiting-for-target" : "running"), this._set("target", t23), this._set("state", s19);
  }
};
e([y2({ readOnly: true })], n19.prototype, "done", null), e([y2({ readOnly: true, type: String })], n19.prototype, "state", void 0), e([y2()], n19.prototype, "target", void 0), n19 = e([a3("esri.views.ViewAnimation")], n19), function(t23) {
  t23.State = { RUNNING: "running", STOPPED: "stopped", FINISHED: "finished", WAITING_FOR_TARGET: "waiting-for-target" };
}(n19 || (n19 = {}));
var a15 = n19;

// node_modules/@arcgis/core/views/2d/AnimationManager.js
var u4 = class {
  constructor(t23, i26, s19, e16) {
    const o20 = t23.targetGeometry, n28 = i26.targetGeometry;
    e16 ? "string" == typeof e16 && (e16 = r7(e16) || t8.ease) : e16 = t8.ease, this.easing = e16, this.duration = s19, this.sCenterX = o20.x, this.sCenterY = o20.y, this.sScale = t23.scale, this.sRotation = t23.rotation, this.tCenterX = n28.x, this.tCenterY = n28.y, this.tScale = i26.scale, this.tRotation = i26.rotation, this.dCenterX = this.tCenterX - this.sCenterX, this.dCenterY = this.tCenterY - this.sCenterY, this.dScale = this.tScale - this.sScale, this.dRotation = this.tRotation - this.sRotation, this.dRotation > 180 ? this.dRotation -= 360 : this.dRotation < -180 && (this.dRotation += 360);
  }
  applyRatio(t23, i26) {
    const s19 = this.easing(i26);
    let e16, o20, n28, a31;
    i26 >= 1 ? (e16 = this.tCenterX, o20 = this.tCenterY, n28 = this.tRotation, a31 = this.tScale) : (e16 = this.sCenterX + s19 * this.dCenterX, o20 = this.sCenterY + s19 * this.dCenterY, n28 = this.sRotation + s19 * this.dRotation, a31 = this.sScale + s19 * this.dScale), t23.targetGeometry.x = e16, t23.targetGeometry.y = o20, t23.scale = a31, t23.rotation = n28;
  }
};
var d10 = class extends m {
  constructor(t23) {
    super(t23), this.updateFunction = null, this.animation = null, this.duration = 200, this.transition = null, this.easing = t8.ease, this.view = null, this.viewpoint = new l6({ targetGeometry: new x(), scale: 0, rotation: 0 }), this._updateTask = A({ postRender: this._postRender.bind(this) }), this._updateTask.pause();
  }
  destroy() {
    this._updateTask = o2(this._updateTask);
  }
  animate(t23, i26, s19) {
    this.stop();
    const e16 = this.viewpoint;
    K(e16, i26), this.transition = new u4(this.viewpoint, t23.target, s19 && s19.duration || this.duration, s19 && s19.easing || this.easing);
    const o20 = () => {
      var _a, _b;
      this.animation === t23 && this._updateTask && ("finished" === t23.state && ((_a = this.transition) == null ? void 0 : _a.applyRatio(this.viewpoint, 1), ((_b = this.view) == null ? void 0 : _b.state) && (this.view.state.viewpoint = this.viewpoint.clone())), this.animation = null, this.updateFunction = null);
    };
    return t23.when(o20, o20), this._startTime = performance.now(), this._updateTask.resume(), this.animation = t23, t23;
  }
  animateContinous(t23, i26) {
    this.stop(), this.updateFunction = i26, this.viewpoint = t23;
    const s19 = new a15({ target: t23.clone() }), e16 = () => {
      this.animation === s19 && this._updateTask && (this.animation = null, this.updateFunction = null);
    };
    return s19.when(e16, e16), this._startTime = performance.now(), this._updateTask.resume(), this.animation = s19, s19;
  }
  stop() {
    this.animation && (this.animation.stop(), this.animation = null, this.updateFunction = null);
  }
  _postRender(t23) {
    var _a, _b;
    const i26 = this.animation;
    if (i26 && i26.state !== a15.State.STOPPED) {
      if (this.updateFunction)
        this.updateFunction(this.viewpoint, t23.deltaTime);
      else {
        const t24 = this.transition, i27 = (performance.now() - this._startTime) / t24.duration, s19 = i27 >= 1;
        t24.applyRatio(this.viewpoint, i27), s19 && ((_a = this.animation) == null ? void 0 : _a.finish());
      }
      ((_b = this.view) == null ? void 0 : _b.state) && (this.view.state.viewpoint = this.viewpoint.clone());
    } else
      this._updateTask.pause();
  }
};
e([y2()], d10.prototype, "animation", void 0), e([y2()], d10.prototype, "duration", void 0), e([y2()], d10.prototype, "transition", void 0), e([y2()], d10.prototype, "easing", void 0), e([y2()], d10.prototype, "view", void 0), e([y2()], d10.prototype, "viewpoint", void 0), d10 = e([a3("esri.views.2d.AnimationManager")], d10);
var l9 = d10;

// node_modules/@arcgis/core/views/2d/FrameTask.js
var a16 = class {
  constructor(t23) {
    this.view = t23, this._stationaryHandle = null, this._frameTaskHandle = null, this._updateParameters = null, this._updateRequested = false, this.stationary = true, this.animationInProgress = false, this.prepare = () => {
      this._updateParameters && (this._updateParameters.state = this.view.state, this._updateParameters.stationary = this.view.stationary, this._updateParameters.pixelRatio = window.devicePixelRatio, this._updateParameters.renderingOptions = this.view.renderingOptions);
    }, this.update = () => {
      var _a2, _b;
      if (this._updateRequested = false, (_a2 = this.view) == null ? void 0 : _a2.destroyed)
        return;
      const { allLayerViews: t24, graphicsView: e16, labelManager: a31, state: { id: s19 } } = this.view;
      t24.forEach(this._updateLayerView, this), null != a31 && (a31.lastUpdateId !== s19 && (a31.viewChange(), a31.lastUpdateId = s19), a31.updateRequested && a31.processUpdate(this._updateParameters)), null != e16 && (e16.lastUpdateId !== s19 && (e16.viewChange(), e16.lastUpdateId = s19), e16.updateRequested && e16.processUpdate(this._updateParameters)), this.view.graphicsTileStore.setViewState(this._updateParameters.state), this.animationInProgress || this._updateRequested || ((_b = this._frameTaskHandle) == null ? void 0 : _b.pause());
    };
  }
  destroy() {
    this.stop();
  }
  start() {
    if (this._frameTaskHandle)
      return;
    const a31 = this.view;
    this.stationary = a31.stationary, this._updateParameters = { state: a31.state, pixelRatio: window.devicePixelRatio, stationary: this.stationary, renderingOptions: a31.renderingOptions }, this._stationaryHandle = l3(() => a31.stationary, (t23) => {
      this.stationary = t23, this.requestFrame();
    }), this._frameTaskHandle = A(this), this.requestUpdate();
  }
  stop() {
    var _a2;
    this._frameTaskHandle && (this._updateRequested = false, (_a2 = this._stationaryHandle) == null ? void 0 : _a2.remove(), this._frameTaskHandle.remove(), this._updateParameters = this._stationaryHandle = this._frameTaskHandle = null, this.stationary = true, this.animationInProgress = false);
  }
  requestUpdate() {
    this._updateRequested || (this._updateRequested = true, this.requestFrame());
  }
  requestFrame() {
    this._frameTaskHandle && this._frameTaskHandle.resume();
  }
  _updateLayerView(t23) {
    var _a2;
    if (!t23.attached)
      return void this.requestUpdate();
    const e16 = this.view.state, a31 = t23.lastUpdateId;
    null != a31 && (this.stationary || t23.moving) || (t23.moving = true, t23.moveStart()), a31 !== e16.id && t23.viewChange(), this.stationary && t23.moving && (t23.moving = false, t23.moveEnd()), t23.lastUpdateId = e16.id, t23.updateRequested && t23.processUpdate(this._updateParameters), "layerViews" in t23 && ((_a2 = t23.layerViews) == null ? void 0 : _a2.forEach(this._updateLayerView, this));
  }
};

// node_modules/@arcgis/core/views/2d/layerViewModuleImportUtils.js
function r11() {
  return Promise.all([import("./webglDeps-F5YA3DSA.js"), import("./mapViewDeps-MGAZQIEU.js")]);
}
var a17 = () => r11().then(() => import("./TileLayerView2D-JW6MF7ZN.js"));
var t13 = () => r11().then(() => import("./FeatureLayerView2D-KVXGMUHU.js"));
var s13 = { "base-dynamic": () => r11().then(() => import("./BaseDynamicLayerView2D-N3BWALE7.js")), "base-tile": a17, "bing-maps": a17, csv: t13, "geo-rss": () => r11().then(() => import("./GeoRSSLayerView2D-JBYR67TE.js")), feature: t13, geojson: t13, graphics: () => r11().then(() => import("./GraphicsLayerView2D-6CQNLZK5.js")), group: () => r11().then(() => import("./GroupLayerView2D-J445FAC7.js")), imagery: () => r11().then(() => import("./ImageryLayerView2D-R6BODYW3.js")), "imagery-tile": () => r11().then(() => import("./ImageryTileLayerView2D-PLI4HJS7.js")), kml: () => r11().then(() => import("./KMLLayerView2D-I6W2ZJHI.js")), "knowledge-graph": () => r11().then(() => import("./KnowledgeGraphLayerView2D-PP3LU52J.js")), "link-chart": () => r11().then(() => import("./KnowledgeGraphLayerView2D-PP3LU52J.js")), "knowledge-graph-sublayer": t13, "map-image": () => r11().then(() => import("./MapImageLayerView2D-CST3TRG5.js")), "map-notes": () => r11().then(() => import("./MapNotesLayerView2D-RUXJ3WCK.js")), media: () => r11().then(() => import("./MediaLayerView2D-5I36CWDW.js")), "ogc-feature": () => r11().then(() => import("./OGCFeatureLayerView2D-CJYRWHAV.js")), "open-street-map": a17, "oriented-imagery": t13, route: () => r11().then(() => import("./RouteLayerView2D-ZSE5X4KV.js")), stream: () => r11().then(() => import("./StreamLayerView2D-AZY4UQC7.js")), "subtype-group": () => r11().then(() => import("./SubtypeGroupLayerView2D-E63R53ZC.js")), tile: a17, "vector-tile": () => r11().then(() => import("./VectorTileLayerView2D-KYUONTOR.js")), video: () => r11().then(() => import("./VideoLayerView2D-WCNKCKTR.js")), wcs: () => r11().then(() => import("./ImageryTileLayerView2D-PLI4HJS7.js")), "web-tile": a17, wfs: t13, wms: () => r11().then(() => import("./WMSLayerView2D-DBSKU3UA.js")), wmts: () => r11().then(() => import("./WMTSLayerView2D-EL2U7PFT.js")), "line-of-sight": null, "base-elevation": null, "building-scene": null, dimension: null, elevation: null, "integrated-mesh": null, "point-cloud": null, voxel: null, scene: null, unknown: null, unsupported: null };
function i17(r19) {
  const a31 = r19.declaredClass ? r19.declaredClass.slice(r19.declaredClass.lastIndexOf(".") + 1) : "Unknown", t23 = a31.replaceAll(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
  return new s2(`${t23}:view-not-supported`, `${a31} is not supported in 2D`);
}
var l10 = { hasLayerViewModule: (e16) => null != s13[e16.type], importLayerView: (e16) => {
  const r19 = s13[e16.type];
  if (null == r19)
    throw i17(e16);
  return r19(e16);
} };

// node_modules/@arcgis/core/geometry/support/near.js
function o13(o20, m15) {
  const { spatialReference: r19 } = m15, i26 = [m15.x, m15.y];
  let s19 = Number.POSITIVE_INFINITY, x2 = 0, c23 = 0;
  const a31 = [0, 0], f13 = "extent" === o20.type ? [[[o20.xmin, o20.ymin], [o20.xmin, o20.ymax], [o20.xmax, o20.ymax], [o20.xmax, o20.ymin], [o20.xmin, o20.ymin]]] : o20.rings;
  for (const n28 of f13)
    for (let o21 = 0; o21 < n28.length - 1; o21++) {
      o4(a31, i26, n28, o21);
      const m16 = m4(i26, a31);
      m16 < s19 && (s19 = m16, x2 = a31[0], c23 = a31[1]);
    }
  return { coordinate: new x({ x: x2, y: c23, spatialReference: r19 }), distance: s19 };
}

// node_modules/@arcgis/core/views/2d/constraints/GeometryConstraint.js
var p13;
var l11 = p13 = class extends i4(m) {
  constructor(e16) {
    super(e16), this.geometry = null, this.spatialReference = null;
  }
  get normalizedGeometry() {
    if (null == this.geometry || !this.spatialReference)
      return null;
    if (!this.spatialReference.equals(this.geometry.spatialReference))
      try {
        return nn(this.geometry, this.spatialReference);
      } catch (e16) {
        return s.getLogger(this).error("#constraints.geometry", "could not project the geometry to the view's spatial reference", { geometry: this.geometry, spatialReference: this.spatialReference, error: e16 }), null;
      }
    return this.geometry;
  }
  constrain(e16, r19) {
    if (null == this.normalizedGeometry)
      return e16;
    const t23 = e16.targetGeometry;
    if ("extent" === this.normalizedGeometry.type ? t6(this.normalizedGeometry, t23) : f3(this.normalizedGeometry, t23))
      return e16;
    const { coordinate: o20 } = o13(this.normalizedGeometry, t23);
    return o20 ? (e16.targetGeometry = o20, e16) : e16;
  }
  clone() {
    var _a, _b;
    return new p13({ geometry: (_a = this.geometry) == null ? void 0 : _a.clone(), spatialReference: (_b = this.spatialReference) == null ? void 0 : _b.clone() });
  }
};
e([y2({ constructOnly: true })], l11.prototype, "geometry", void 0), e([y2({ readOnly: true })], l11.prototype, "normalizedGeometry", null), e([y2({ constructOnly: true })], l11.prototype, "spatialReference", void 0), l11 = p13 = e([a3("esri.views.2d.constraints.GeometryConstraint")], l11);

// node_modules/@arcgis/core/views/2d/constraints/RotationConstraint.js
var a18;
var n20 = a18 = class extends i4(m) {
  constructor() {
    super(...arguments), this.enabled = true, this.rotationEnabled = true;
  }
  constrain(o20, r19) {
    return this.enabled && r19 ? (this.rotationEnabled || (o20.rotation = r19.rotation), o20) : o20;
  }
  clone() {
    return new a18({ enabled: this.enabled, rotationEnabled: this.rotationEnabled });
  }
};
e([y2()], n20.prototype, "enabled", void 0), e([y2()], n20.prototype, "rotationEnabled", void 0), n20 = a18 = e([a3("esri.views.2d.constraints.RotationConstraint")], n20);
var i18 = n20;

// node_modules/@arcgis/core/views/2d/constraints/ZoomConstraint.js
var a19;
var c14 = a19 = class extends i4(m) {
  constructor(e16) {
    super(e16), this._lodByScale = {}, this._scales = [], this.effectiveLODs = null, this.effectiveMinZoom = -1, this.effectiveMaxZoom = -1, this.effectiveMinScale = 0, this.effectiveMaxScale = 0, this.lods = null, this.minZoom = -1, this.maxZoom = -1, this.minScale = 0, this.maxScale = 0, this.snapToZoom = true;
  }
  initialize() {
    let e16, { lods: t23, minScale: o20, maxScale: s19, minZoom: i26, maxZoom: a31 } = this, c23 = -1, r19 = -1, l17 = false, n28 = false;
    if (0 !== o20 && 0 !== s19 && o20 < s19 && ([o20, s19] = [s19, o20]), !t23 || !t23.length)
      return this._set("effectiveMinScale", o20), void this._set("effectiveMaxScale", s19);
    t23 = t23.map((e17) => e17.clone()), t23.sort((e17, t24) => t24.scale - e17.scale), t23.forEach((e17, t24) => e17.level = t24);
    for (const f13 of t23)
      !l17 && o20 > 0 && o20 >= f13.scale && (c23 = f13.level, l17 = true), !n28 && s19 > 0 && s19 >= f13.scale && (r19 = e16 ? e16.level : -1, n28 = true), e16 = f13;
    -1 === i26 && (i26 = 0 === o20 ? 0 : c23), -1 === a31 && (a31 = 0 === s19 ? t23.length - 1 : r19), i26 = Math.max(i26, 0), i26 = Math.min(i26, t23.length - 1), a31 = Math.max(a31, 0), a31 = Math.min(a31, t23.length - 1), i26 > a31 && ([i26, a31] = [a31, i26]), o20 = t23[i26].scale, s19 = t23[a31].scale, t23.splice(0, i26), t23.splice(a31 - i26 + 1, t23.length), t23.forEach((e17, t24) => {
      this._lodByScale[e17.scale] = e17, this._scales[t24] = e17.scale;
    }), this._set("effectiveLODs", t23), this._set("effectiveMinZoom", i26), this._set("effectiveMaxZoom", a31), this._set("effectiveMinScale", o20), this._set("effectiveMaxScale", s19);
  }
  constrain(e16, t23) {
    if (t23 && e16.scale === t23.scale)
      return e16;
    const o20 = this.effectiveMinScale, s19 = this.effectiveMaxScale, i26 = e16.targetGeometry, a31 = t23 && t23.targetGeometry, c23 = 0 !== s19 && e16.scale < s19, r19 = 0 !== o20 && e16.scale > o20;
    if (c23 || r19) {
      const c24 = r19 ? o20 : s19;
      if (t23 && a31) {
        const o21 = (c24 - t23.scale) / (e16.scale - t23.scale);
        i26.x = a31.x + (i26.x - a31.x) * o21, i26.y = a31.y + (i26.y - a31.y) * o21;
      }
      e16.scale = c24;
    }
    return this.snapToZoom && this.effectiveLODs && (e16.scale = this._getClosestScale(e16.scale)), e16;
  }
  fit(e16) {
    if (!this.effectiveLODs || !this.snapToZoom)
      return this.constrain(e16, null);
    const t23 = this.scaleToZoom(e16.scale), o20 = Math.abs(t23 - Math.floor(t23));
    return e16.scale = this.zoomToScale(o20 > 0.99 ? Math.round(t23) : Math.floor(t23)), e16;
  }
  zoomToScale(e16) {
    if (!this.effectiveLODs)
      return 0;
    e16 -= this.effectiveMinZoom, e16 = Math.max(0, e16);
    const t23 = this._scales;
    if (e16 <= 0)
      return t23[0];
    if (e16 >= t23.length)
      return t23[t23.length - 1];
    const o20 = Math.round(e16 - 0.5), s19 = Math.round(e16);
    return t23[s19] + (s19 - e16) * (t23[o20] - t23[s19]);
  }
  scaleToZoom(e16) {
    if (!this.effectiveLODs)
      return -1;
    const t23 = this._scales;
    let o20, s19;
    if (e16 >= t23[0])
      return this.effectiveMinZoom;
    if (e16 <= t23[t23.length - 1])
      return this.effectiveMaxZoom;
    for (let i26 = 0; i26 < t23.length - 1; i26++) {
      if (o20 = t23[i26], s19 = t23[i26 + 1], s19 === e16) {
        return i26 + this.effectiveMinZoom + 1;
      }
      if (o20 > e16 && s19 < e16) {
        return i26 + this.effectiveMinZoom + 1 - (e16 - s19) / (o20 - s19);
      }
    }
    return -1;
  }
  snapToClosestScale(e16) {
    if (!this.effectiveLODs)
      return e16;
    const t23 = this.scaleToZoom(e16);
    return this.zoomToScale(Math.round(t23));
  }
  snapToNextScale(e16, t23 = 0.5) {
    if (!this.effectiveLODs)
      return e16 * t23;
    const o20 = Math.round(this.scaleToZoom(e16));
    return this.zoomToScale(o20 + 1);
  }
  snapToPreviousScale(e16, t23 = 2) {
    if (!this.effectiveLODs)
      return e16 * t23;
    const o20 = Math.round(this.scaleToZoom(e16));
    return this.zoomToScale(o20 - 1);
  }
  clone() {
    return new a19({ lods: this.lods, minZoom: this.minZoom, maxZoom: this.maxZoom, minScale: this.minScale, maxScale: this.maxScale });
  }
  _getClosestScale(e16) {
    return this._lodByScale[e16] || (e16 = this._scales.reduce((t23, o20) => Math.abs(o20 - e16) <= Math.abs(t23 - e16) ? o20 : t23, this._scales[0])), this._lodByScale[e16].scale;
  }
};
e([y2({ readOnly: true })], c14.prototype, "effectiveLODs", void 0), e([y2({ readOnly: true })], c14.prototype, "effectiveMinZoom", void 0), e([y2({ readOnly: true })], c14.prototype, "effectiveMaxZoom", void 0), e([y2({ readOnly: true })], c14.prototype, "effectiveMinScale", void 0), e([y2({ readOnly: true })], c14.prototype, "effectiveMaxScale", void 0), e([y2()], c14.prototype, "lods", void 0), e([y2()], c14.prototype, "minZoom", void 0), e([y2()], c14.prototype, "maxZoom", void 0), e([y2()], c14.prototype, "minScale", void 0), e([y2()], c14.prototype, "maxScale", void 0), e([y2()], c14.prototype, "snapToZoom", void 0), c14 = a19 = e([a3("esri.views.2d.constraints.ZoomConstraint")], c14);
var r12 = c14;

// node_modules/@arcgis/core/views/2d/MapViewConstraints.js
var p14 = { base: null, key: "type", typeMap: { extent: M, polygon: j2 } };
var y6 = class extends m {
  constructor(o20) {
    super(o20), this.lods = null, this.minScale = 0, this.maxScale = 0, this.minZoom = -1, this.maxZoom = -1, this.rotationEnabled = true, this.snapToZoom = true, this.customConstraints = new V();
  }
  destroy() {
    this.view = null;
  }
  get effectiveLODs() {
    return this._zoom.effectiveLODs;
  }
  get effectiveMinScale() {
    return this._zoom.effectiveMinScale;
  }
  get effectiveMaxScale() {
    return this._zoom.effectiveMaxScale;
  }
  get effectiveMinZoom() {
    return this._zoom.effectiveMinZoom;
  }
  get effectiveMaxZoom() {
    return this._zoom.effectiveMaxZoom;
  }
  set geometry(o20) {
    o20 ? this._set("geometry", o20) : this._set("geometry", null);
  }
  get version() {
    var _a, _b, _c;
    return `${(_a = this._zoom) == null ? void 0 : _a.uid}/${(_b = this._rotation) == null ? void 0 : _b.uid}/${(_c = this._geometry) == null ? void 0 : _c.uid}`;
  }
  get _geometry() {
    var _a, _b;
    const o20 = this._get("_geometry");
    return o20 && this.geometry === o20.geometry && ((_a = this.view) == null ? void 0 : _a.constraintsInfo.spatialReference) === o20.spatialReference ? o20 : new l11({ geometry: this.geometry, spatialReference: (_b = this.view) == null ? void 0 : _b.constraintsInfo.spatialReference });
  }
  get _rotation() {
    return new i18({ rotationEnabled: this.rotationEnabled });
  }
  get _zoom() {
    var _a;
    const o20 = this._get("_zoom"), t23 = this.lods || ((_a = this.view) == null ? void 0 : _a.constraintsInfo.lods), e16 = this.minZoom, r19 = this.maxZoom, s19 = this.minScale, i26 = this.maxScale, n28 = this.snapToZoom;
    return o20 && o20.lods === t23 && o20.minZoom === e16 && o20.maxZoom === r19 && o20.minScale === s19 && o20.maxScale === i26 && o20.snapToZoom === n28 ? o20 : new r12({ lods: t23, minZoom: e16, maxZoom: r19, minScale: s19, maxScale: i26, snapToZoom: n28 });
  }
  canZoomInTo(o20) {
    const t23 = this.effectiveMaxScale;
    return 0 === t23 || o20 >= t23;
  }
  canZoomOutTo(o20) {
    const t23 = this.effectiveMinScale;
    return 0 === t23 || o20 <= t23;
  }
  constrain(o20, t23) {
    return this._zoom.constrain(o20, t23), this._rotation.constrain(o20, t23), this._geometry.constrain(o20, t23), this.customConstraints.forEach((e16) => e16.constrain(o20, t23)), o20;
  }
  constrainByGeometry(o20) {
    return this._geometry.constrain(o20);
  }
  fit(o20) {
    return this._zoom.fit(o20);
  }
  zoomToScale(o20) {
    return this._zoom.zoomToScale(o20);
  }
  scaleToZoom(o20) {
    return this._zoom.scaleToZoom(o20);
  }
  snapScale(o20) {
    return this._zoom.snapToClosestScale(o20);
  }
  snapToNextScale(o20) {
    return this._zoom.snapToNextScale(o20);
  }
  snapToPreviousScale(o20) {
    return this._zoom.snapToPreviousScale(o20);
  }
};
e([y2({ readOnly: true })], y6.prototype, "effectiveLODs", null), e([y2({ readOnly: true })], y6.prototype, "effectiveMinScale", null), e([y2({ readOnly: true })], y6.prototype, "effectiveMaxScale", null), e([y2({ readOnly: true })], y6.prototype, "effectiveMinZoom", null), e([y2({ readOnly: true })], y6.prototype, "effectiveMaxZoom", null), e([y2({ types: p14, value: null })], y6.prototype, "geometry", null), e([y2({ type: [p2] })], y6.prototype, "lods", void 0), e([y2()], y6.prototype, "minScale", void 0), e([y2()], y6.prototype, "maxScale", void 0), e([y2()], y6.prototype, "minZoom", void 0), e([y2()], y6.prototype, "maxZoom", void 0), e([y2()], y6.prototype, "rotationEnabled", void 0), e([y2()], y6.prototype, "snapToZoom", void 0), e([y2({ type: V })], y6.prototype, "customConstraints", void 0), e([y2()], y6.prototype, "view", void 0), e([y2({ readOnly: true })], y6.prototype, "version", null), e([y2({ type: l11, readOnly: true })], y6.prototype, "_geometry", null), e([y2({ type: i18 })], y6.prototype, "_rotation", null), e([y2({ readOnly: true, type: r12 })], y6.prototype, "_zoom", null), y6 = e([a3("esri.views.2d.MapViewConstraints")], y6);
var f9 = y6;

// node_modules/@arcgis/core/core/libs/gl-matrix-2/types/vec2.js
function n21(n28) {
  return n28 instanceof Float32Array && n28.length >= 2;
}
function r13(n28) {
  return Array.isArray(n28) && n28.length >= 2;
}
function t14(t23) {
  return n21(t23) || r13(t23);
}

// node_modules/@arcgis/core/views/2d/ViewState.js
var b;
var G = [0, 0];
var O = b = class extends l2 {
  constructor(t23) {
    super(t23), this._viewpoint2D = { center: n8(), rotation: 0, scale: 0, spatialReference: void 0 }, this.center = [0, 0], this.extent = new M(), this.id = 0, this.inverseTransform = e8(), this.resolution = 0, this.rotation = 0, this.scale = 0, this.transform = e8(), this.transformNoRotation = e8(), this.displayMat3 = e7(), this.displayViewMat3 = e7(), this.viewMat3 = e7(), this.viewMat2d = n9(), this.worldScreenWidth = 0, this.size = [0, 0];
  }
  set pixelRatio(t23) {
    this._set("pixelRatio", t23), this._update();
  }
  set size(t23) {
    this._set("size", t23), this._update();
  }
  set viewpoint(t23) {
    if (t23) {
      const s19 = this._viewpoint2D, i26 = t23.targetGeometry;
      s19.center[0] = i26.x, s19.center[1] = i26.y, s19.rotation = t23.rotation, s19.scale = t23.scale, s19.spatialReference = i26.spatialReference;
    }
    this._update();
  }
  copy(t23) {
    const s19 = this.size, i26 = this.viewpoint;
    return i26 && s19 ? (this.viewpoint = K(i26, t23.viewpoint), this._set("size", a5(s19, t23.size))) : (this.viewpoint = t23.viewpoint.clone(), this._set("size", [t23.size[0], t23.size[1]])), this._set("pixelRatio", t23.pixelRatio), this;
  }
  clone() {
    return new b({ size: this.size, viewpoint: this.viewpoint.clone(), pixelRatio: this.pixelRatio });
  }
  toMap(t23, s19, i26) {
    return t14(s19) ? z(t23, s19, this.inverseTransform) : (G[0] = s19, G[1] = i26, z(t23, G, this.inverseTransform));
  }
  toScreen(t23, s19, i26) {
    return t14(s19) ? z(t23, s19, this.transform) : (G[0] = s19, G[1] = i26, z(t23, G, this.transform));
  }
  toScreenNoRotation(t23, s19, i26) {
    return t14(s19) ? z(t23, s19, this.transformNoRotation) : (G[0] = s19, G[1] = i26, z(t23, G, this.transformNoRotation));
  }
  getScreenTransform(t23, s19) {
    const { center: i26 } = this._viewpoint2D, e16 = this._get("pixelRatio") || 1, o20 = this._get("size");
    return it(t23, i26, o20, s19, 0, e16), t23;
  }
  _update() {
    const { center: t23, spatialReference: i26, scale: e16, rotation: o20 } = this._viewpoint2D, c23 = this._get("pixelRatio") || 1, m15 = this._get("size"), d16 = new l6({ targetGeometry: new x(t23[0], t23[1], i26), scale: e16, rotation: o20 });
    if (this._set("viewpoint", d16), !m15 || !i26 || !e16)
      return;
    this.resolution = et(d16), this.rotation = o20, this.scale = e16, this.spatialReference = i26, a5(this.center, t23);
    const y9 = 0 !== m15[0] ? 2 / m15[0] : 0, _8 = 0 !== m15[1] ? -2 / m15[1] : 0;
    s7(this.displayMat3, y9, 0, 0, 0, _8, 0, -1, 1, 1);
    const x2 = r5(this.viewMat3), z5 = t7(m15[0] / 2, m15[1] / 2), g11 = t7(-m15[0] / 2, -m15[1] / 2), D2 = r2(o20);
    M2(x2, x2, z5), h3(x2, x2, D2), M2(x2, x2, g11), i5(this.displayViewMat3, this.displayMat3, x2);
    const b4 = f4(this.viewMat2d, z5);
    return e6(b4, b4, D2), i6(b4, b4, g11), Y2(this.extent, d16, m15), ct(this.transform, d16, m15, c23), r6(this.inverseTransform, this.transform), st(this.transformNoRotation, d16, m15, c23), this.worldScreenWidth = ft(this.spatialReference, this.resolution), this._set("id", this.id + 1), this;
  }
};
e([y2({ readOnly: true })], O.prototype, "id", void 0), e([y2({ value: 1, json: { write: true } })], O.prototype, "pixelRatio", null), e([y2({ json: { write: true } })], O.prototype, "size", null), e([y2()], O.prototype, "spatialReference", void 0), e([y2({ type: l6, json: { write: true } })], O.prototype, "viewpoint", null), O = b = e([a3("esri.views.2d.ViewState")], O);
var U2 = O;

// node_modules/@arcgis/core/views/2d/PaddedViewState.js
var l12;
var m7;
var w7 = l12 = class extends m {
  constructor() {
    super(...arguments), this.left = 0, this.top = 0, this.right = 0, this.bottom = 0;
  }
  clone() {
    return new l12({ left: this.left, top: this.top, right: this.right, bottom: this.bottom });
  }
};
e([y2()], w7.prototype, "left", void 0), e([y2()], w7.prototype, "top", void 0), e([y2()], w7.prototype, "right", void 0), e([y2()], w7.prototype, "bottom", void 0), w7 = l12 = e([a3("esri.views.2d.PaddedViewState.Padding")], w7);
var u5 = m7 = class extends U2 {
  constructor(...t23) {
    super(...t23), this.paddedViewState = new U2(), this._updateContent = (() => {
      const t24 = n8();
      return () => {
        const e16 = this._get("size"), i26 = this._get("padding");
        if (!e16 || !i26)
          return;
        const o20 = this.paddedViewState;
        r4(t24, i26.left + i26.right, i26.top + i26.bottom), o5(t24, e16, t24), a5(o20.size, t24);
        const s19 = o20.viewpoint;
        s19 && (this.viewpoint = s19);
      };
    })(), this.addHandles(l3(() => [this.size, this.padding], () => this._updateContent(), U)), this.padding = new w7(), this.size = [0, 0];
  }
  set padding(t23) {
    this._set("padding", t23 || new w7());
  }
  set viewpoint(t23) {
    if (t23) {
      const e16 = t23.clone();
      this.paddedViewState.viewpoint = t23, mt(e16, t23, this._get("size"), this._get("padding"));
      const i26 = this._viewpoint2D, o20 = e16.targetGeometry;
      i26.center[0] = o20.x, i26.center[1] = o20.y, i26.rotation = e16.rotation, i26.scale = e16.scale, i26.spatialReference = o20.spatialReference, this._update();
    }
  }
  clone() {
    return new m7({ padding: this.padding.clone(), size: this.size.slice(), viewpoint: this.paddedViewState.viewpoint.clone(), pixelRatio: this.pixelRatio });
  }
};
e([y2()], u5.prototype, "paddedViewState", void 0), e([y2({ type: w7 })], u5.prototype, "padding", null), e([y2()], u5.prototype, "viewpoint", null), u5 = m7 = e([a3("esri.views.2d.PaddedViewState")], u5);
var f10 = u5;

// node_modules/@arcgis/core/views/2d/ViewStateManager.js
var z3 = class extends m {
  constructor(t23) {
    super(t23), this.constraints = null, this.ready = false, this.resizeAlign = "center", this.addHandles([l3(() => {
      var _a;
      return (_a = this.constraints) == null ? void 0 : _a.version;
    }, (t24) => {
      this.constraints && t24 && this.ready && (this.state.viewpoint = this.constraints.fit(this.state.paddedViewState.viewpoint));
    }, U)]);
  }
  get center() {
    if (!this.ready)
      return this._get("center");
    const { center: t23, spatialReference: e16 } = this.state.paddedViewState;
    return this.state.commitProperty("id"), new x({ x: t23[0], y: t23[1], spatialReference: e16 });
  }
  set center(t23) {
    if (null == t23)
      return;
    if (!this.ready)
      return void this._set("center", t23);
    let e16;
    try {
      e16 = this._project(t23, this.state.spatialReference);
    } catch (o20) {
      return void s.getLogger(this).error(new s2("mapview:invalid-center", "could not project the value in the view's spatial reference", { input: t23, error: o20 }));
    }
    const i26 = this.viewpoint;
    yt(i26, i26, e16), this.viewpoint = i26;
  }
  get extent() {
    return this.ready ? (this.state.commitProperty("id"), this.state.paddedViewState.extent.clone()) : this._get("extent");
  }
  set extent(t23) {
    if (null == t23)
      return;
    if (!t23.width || !t23.height)
      return void s.getLogger(this).error(new s2("mapview:invalid-extent", "invalid extent size"));
    if (!this.ready)
      return this._set("extent", t23), this._set("center", void 0), this._set("viewpoint", void 0), this._set("scale", void 0), void this._set("zoom", void 0);
    let e16;
    try {
      e16 = this._project(t23, this.state.spatialReference);
    } catch (o20) {
      return void s.getLogger(this).error(new s2("mapview:invalid-extent", "could not project the value in the view's spatial reference", { error: o20 }));
    }
    const i26 = this.viewpoint;
    Z(i26, i26, e16, this.state.size, { constraints: this.constraints }), this.viewpoint = i26;
  }
  get padding() {
    return this.ready ? this.state.padding : this._get("padding");
  }
  set padding(t23) {
    this.ready ? (this.state.padding = t23, this._set("padding", this.state.padding)) : this._set("padding", t23);
  }
  get resolution() {
    return this.ready ? (this.state.commitProperty("id"), this.state.resolution) : 0;
  }
  get rotation() {
    return this.ready ? (this.state.commitProperty("id"), this.state.rotation) : this._get("rotation");
  }
  set rotation(t23) {
    if (isNaN(t23))
      return;
    if (!this.ready)
      return void this._set("rotation", t23);
    const e16 = this.viewpoint;
    xt(e16, e16, t23), this.viewpoint = e16;
  }
  get scale() {
    return this.ready ? (this.state.commitProperty("id"), this.state.scale) : this._get("scale");
  }
  set scale(t23) {
    if (!t23 || isNaN(t23))
      return;
    if (!this.ready) {
      this._set("scale", t23), this._set("zoom", void 0);
      const e17 = this._get("extent");
      return void (e17 && (this._set("extent", void 0), this._set("center", e17.center)));
    }
    const e16 = this.viewpoint;
    bt(e16, e16, t23), this.viewpoint = e16;
  }
  get viewpoint() {
    if (!this.ready)
      return this._get("viewpoint");
    return this.state.paddedViewState.viewpoint.clone();
  }
  set viewpoint(t23) {
    var _a;
    if (null == t23)
      return;
    if (!this.ready)
      return this._set("viewpoint", t23), this._set("extent", void 0), this._set("center", void 0), this._set("zoom", void 0), void this._set("scale", void 0);
    let i26, o20;
    try {
      i26 = this._project(t23, this.state.spatialReference), !t23.scale || isNaN(t23.scale) ? o20 = new s2("mapview:invalid-viewpoint", `invalid scale value of ${t23.scale}`) : null == t23.targetGeometry && (o20 = new s2("mapview:invalid-viewpoint", "geometry not defined"));
    } catch (a31) {
      o20 = new s2("mapview:invalid-viewpoint", "could not project the value in the view's spatial reference", { error: a31 });
    }
    if (o20)
      return void s.getLogger(this).error(o20);
    this._scaleBeforeChangingSpatialReference = null;
    const n28 = new l6({ targetGeometry: new x(), scale: 0, rotation: 0 });
    K(n28, i26), (_a = this.constraints) == null ? void 0 : _a.constrain(n28, this.state.paddedViewState.viewpoint), this.state.viewpoint = n28, this._set("viewpoint", n28);
  }
  get zoom() {
    var _a;
    return this.ready ? ((_a = this.constraints) == null ? void 0 : _a.scaleToZoom(this.scale)) ?? -1 : this._get("zoom");
  }
  set zoom(t23) {
    var _a, _b;
    if (!(t23 >= 0))
      return;
    if (!this.ready) {
      this._set("zoom", t23), this._set("scale", void 0);
      const e17 = this._get("extent");
      return void (e17 && (this._set("extent", void 0), this._set("center", e17.center)));
    }
    const e16 = ((_a = this.constraints) == null ? void 0 : _a.zoomToScale(t23)) ?? 0;
    if (!e16)
      return void this._set("zoom", -1);
    const i26 = this.viewpoint;
    bt(i26, i26, e16), this.viewpoint = i26, this._set("zoom", ((_b = this.constraints) == null ? void 0 : _b.scaleToZoom(this.scale)) ?? -1);
  }
  getUserStartupOptions(t23) {
    if (!t23[0] && !t23[1])
      return { center: void 0, rotation: void 0, scale: void 0 };
    const { padding: e16, constraints: i26 } = this, s19 = this._get("center"), r19 = this._get("extent"), o20 = this._get("scale"), n28 = this._get("rotation"), a31 = this._get("viewpoint"), c23 = this._get("zoom"), p22 = null != c23 && null != i26 && i26.zoomToScale(c23) || void 0;
    let h13, l17, d16;
    const v7 = a31 == null ? void 0 : a31.rotation, m15 = a31 == null ? void 0 : a31.targetGeometry;
    "extent" === (m15 == null ? void 0 : m15.type) ? h13 = m15 : "point" === (m15 == null ? void 0 : m15.type) && (l17 = m15, d16 = a31 == null ? void 0 : a31.scale);
    const u9 = r19 ?? h13;
    return { center: s19 ?? l17 ?? (u9 == null ? void 0 : u9.center), rotation: n28 ?? v7, scale: (o20 ?? p22 ?? d16 ?? (u9 && D(u9, [t23[0] - e16.left - e16.right, t23[1] - e16.top - e16.bottom]))) || void 0 };
  }
  startup(t23, e16, i26, s19) {
    var _a;
    const o20 = t23.targetGeometry;
    try {
      this._project(t23, i26);
    } catch (n28) {
      s.getLogger(this).warn(new s4("mapview:startup-projection-error", "projection of initial viewpoint to the view's spatial reference, defaulting to the initial viewpoint.", { center: o20.toJSON(), spatialReference: i26, error: n28 })), t23.targetGeometry = s19 || new x({ x: 0, y: 0, spatialReference: i26 });
    }
    (_a = this.constraints) == null ? void 0 : _a.fit(t23), this._set("state", new f10({ padding: this.padding, size: e16, viewpoint: t23 })), this._set("ready", true);
  }
  teardown() {
    this._set("ready", false);
    const { center: [t23, e16], spatialReference: i26, rotation: s19, scale: r19 } = this.state.paddedViewState, o20 = new x({ x: t23, y: e16, spatialReference: i26 });
    this._set("viewpoint", null), this._set("extent", null), this._set("center", o20), this._set("zoom", -1), this._set("rotation", s19), this._set("scale", r19), this._set("state", null);
  }
  changeSpatialReference(t23) {
    var _a;
    const i26 = this.state.paddedViewState.clone();
    if (null == this._scaleBeforeChangingSpatialReference)
      this._scaleBeforeChangingSpatialReference = i26.scale;
    else {
      const t24 = i26.viewpoint.clone();
      t24.scale = this._scaleBeforeChangingSpatialReference, i26.viewpoint = t24;
    }
    const s19 = i26.clone(), [o20, n28] = i26.center;
    let a31 = null;
    try {
      a31 = this._project(new x({ x: o20, y: n28, spatialReference: i26.spatialReference }), t23);
    } catch (h13) {
      r3() || s.getLogger(this).warn(new s4("mapview:spatial-reference-change", "could not project the view's center to the new spatial reference", { center: a31 == null ? void 0 : a31.toJSON(), spatialReference: t23, error: h13 }));
    }
    a31 || (a31 = new x({ x: 0, y: 0, spatialReference: t23 }));
    const p22 = yt(new l6({ targetGeometry: new x(), scale: 0, rotation: 0 }), i26.viewpoint, a31);
    s19.viewpoint = p22;
    try {
      const e16 = 20, r19 = [i26.size[0] / 2, i26.size[1] / 2], o21 = [r19[0] + e16, r19[1]], n29 = i26.toMap([0, 0], o21), { x: a32, y: c23 } = this._project(new x({ x: n29[0], y: n29[1], spatialReference: i26.spatialReference }), t23);
      n29[0] = a32, n29[1] = c23, s19.toScreen(n29, n29);
      const h13 = lt(r19, n29, o21), l17 = Math.hypot(n29[0] - r19[0], n29[1] - r19[1]) / e16;
      !Number.isFinite(l17) || Math.abs(l17) > 4 ? (p22.rotation = 0, p22.targetGeometry = new x({ x: 0, y: 0, spatialReference: t23 })) : (p22.scale *= l17, p22.scale > has("mapview-srswitch-adjust-rotation-scale-threshold") ? p22.rotation = 0 : p22.rotation += Number.isFinite(h13) ? h13 : 0);
    } catch {
    }
    (_a = this._get("constraints")) == null ? void 0 : _a.constrain(p22, void 0), this._get("state").viewpoint = p22;
  }
  resize(t23, e16) {
    var _a;
    if (!this.ready)
      return;
    const i26 = this.state;
    let s19 = this.state.paddedViewState.viewpoint;
    const r19 = this.state.paddedViewState.size.concat();
    i26.size = [t23, e16], pt(s19, s19, r19, this.state.paddedViewState.size, this.resizeAlign), s19 = ((_a = this.constraints) == null ? void 0 : _a.constrain(s19, void 0)) ?? s19, this.state.viewpoint = s19;
  }
  toMap(t23) {
    if (!this.ready)
      return null;
    const e16 = [0, 0], [i26, s19] = this.state.toMap(e16, [t23.x, t23.y]), r19 = this.state.spatialReference;
    return new x({ x: i26, y: s19, spatialReference: r19 });
  }
  toScreen(t23) {
    if (!this.ready)
      return null;
    const e16 = this._project(t23, this.state.spatialReference), i26 = [e16.x, e16.y];
    return this.state.toScreen(i26, i26), c3(i26[0], i26[1]);
  }
  _project(t23, e16) {
    var _a;
    const i26 = t23 && t23.targetGeometry || t23;
    if (!e16)
      return t23;
    if (!i26)
      return null;
    if (e16.imageCoordinateSystem || ((_a = i26.spatialReference) == null ? void 0 : _a.imageCoordinateSystem))
      return t23;
    if (S(e16, i26.spatialReference))
      return t23;
    const r19 = nn(i26, e16);
    if (!r19)
      throw new s2("mapview:projection-not-possible", "projecting input geometry to target spatial reference returned a null value", { geometry: i26, spatialReference: e16 });
    return V3(t23) ? (t23.targetGeometry = r19, t23) : r19;
  }
};
function V3(t23) {
  return "esri.Viewpoint" === (t23 == null ? void 0 : t23.declaredClass);
}
e([y2({ type: x })], z3.prototype, "center", null), e([y2()], z3.prototype, "constraints", void 0), e([y2({ type: M })], z3.prototype, "extent", null), e([y2({ value: { top: 0, right: 0, bottom: 0, left: 0 }, cast: (t23) => ({ top: 0, right: 0, bottom: 0, left: 0, ...t23 }) })], z3.prototype, "padding", null), e([y2()], z3.prototype, "ready", void 0), e([y2()], z3.prototype, "resizeAlign", void 0), e([y2({ readOnly: true })], z3.prototype, "resolution", null), e([y2({ type: Number })], z3.prototype, "rotation", null), e([y2({ type: Number })], z3.prototype, "scale", null), e([y2({ readOnly: true })], z3.prototype, "state", void 0), e([y2({ type: l6 })], z3.prototype, "viewpoint", null), e([y2()], z3.prototype, "zoom", null), z3 = e([a3("esri.views.2d.ViewStateManager")], z3);

// node_modules/@arcgis/core/views/input/handlers/support.js
function t15(t23, r19) {
  switch (r19) {
    case "primary":
      return "touch" === t23.pointerType || 0 === t23.button;
    case "secondary":
      return "touch" !== t23.pointerType && 2 === t23.button;
    case "tertiary":
      return "touch" !== t23.pointerType && 1 === t23.button;
  }
}

// node_modules/@arcgis/core/views/2d/input/handlers/DoubleClickZoom.js
var a20 = class extends i8 {
  constructor(t23, i26) {
    super(true), this._view = t23, this.registerIncoming("double-click", i26, (t24) => this._handleDoubleClick(t24, i26));
  }
  _handleDoubleClick(t23, a31) {
    t15(t23.data, "primary") && (t23.stopPropagation(), a31 ? this._view.mapViewNavigation.zoomOut([t23.data.x, t23.data.y]) : this._view.mapViewNavigation.zoomIn([t23.data.x, t23.data.y]));
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/DoubleTapDragZoom.js
var e10 = class extends i8 {
  constructor(t23, e16, a31) {
    super(true), this.view = t23, this.pointerType = e16, this.registerIncoming("double-tap-drag", a31, (t24) => this._handleDoubleTapDrag(t24));
  }
  _handleDoubleTapDrag(t23) {
    const { data: e16 } = t23, { pointerType: a31 } = e16;
    if (a31 !== this.pointerType)
      return;
    t23.stopPropagation();
    const { action: s19, delta: i26 } = e16, { view: r19 } = this, { mapViewNavigation: n28 } = r19;
    switch (s19) {
      case "begin": {
        const { scale: t24 } = r19;
        this._startScale = t24, this._currentScale = t24, this._previousDelta = i26, n28.begin();
        break;
      }
      case "update": {
        if (this._previousDelta.y === i26.y)
          return;
        this._previousDelta = i26;
        const t24 = 1.015 ** i26.y, e17 = this._startScale * t24, a32 = e17 / this._currentScale;
        n28.setViewpointImmediate(a32), this._currentScale = e17;
        break;
      }
      case "end": {
        const { constraints: t24 } = r19, { effectiveLODs: e17, snapToZoom: a32 } = t24;
        if (!a32 || !e17)
          return void n28.end();
        const s20 = t24.snapScale(this._currentScale), o20 = (i26.y > 0 ? Math.max(s20, t24.snapToPreviousScale(this._startScale)) : Math.min(s20, t24.snapToNextScale(this._startScale))) / this._currentScale;
        n28.zoom(o20);
        break;
      }
    }
  }
};

// node_modules/@arcgis/core/views/input/DragEventSeparator.js
var t16 = class {
  constructor(t23) {
    this._callbacks = t23, this._currentCount = 0, this._callbacks.condition || (this._callbacks.condition = () => true);
  }
  handle(t23) {
    const s19 = t23.data, i26 = s19.pointers.size;
    switch (s19.action) {
      case "start":
        this._currentCount = i26, this._emitStart(t23);
        break;
      case "added":
        this._emitEnd(this._previousEvent), this._currentCount = i26, this._emitStart(t23);
        break;
      case "update":
        this._emitUpdate(t23);
        break;
      case "removed":
        this._startEvent && this._emitEnd(this._previousEvent), this._currentCount = i26, this._emitStart(t23);
        break;
      case "end":
        this._emitEnd(t23), this._currentCount = 0;
    }
    this._previousEvent = t23;
  }
  _emitStart(t23) {
    var _a, _b;
    this._startEvent = t23, ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t23)) && this._callbacks.start(this._currentCount, t23, this._startEvent);
  }
  _emitUpdate(t23) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t23)) && this._callbacks.update(this._currentCount, t23, this._startEvent);
  }
  _emitEnd(t23) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t23)) && this._callbacks.end(this._currentCount, t23, this._startEvent), this._startEvent = null;
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/DragPan.js
var n22 = class extends i8 {
  constructor(t23, i26, a31) {
    super(true), this.view = t23, this.pointerAction = i26, this.registerIncoming("drag", a31, (t24) => this._handleDrag(t24)), this.registerIncoming("pointer-down", () => this.stopMomentumNavigation());
  }
  onInstall(i26) {
    super.onInstall(i26), this._dragEventSeparator = new t16({ start: (t23, i27) => {
      this.view.mapViewNavigation.pan.begin(this.view, i27.data), i27.stopPropagation();
    }, update: (t23, i27) => {
      this.view.mapViewNavigation.pan.update(this.view, i27.data), i27.stopPropagation();
    }, end: (t23, i27) => {
      this.view.mapViewNavigation.pan.end(this.view, i27.data), i27.stopPropagation();
    }, condition: (t23, i27) => 1 === t23 && t15(i27.data, this.pointerAction) });
  }
  _handleDrag(t23) {
    const i26 = this.view.mapViewNavigation;
    i26.pinch.zoomMomentum || i26.pinch.rotateMomentum ? this.stopMomentumNavigation() : this._dragEventSeparator.handle(t23);
  }
  stopMomentumNavigation() {
    this.view.mapViewNavigation.pan.stopMomentumNavigation();
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/DragRotate.js
var o14 = class extends i8 {
  constructor(a31, o20, r19) {
    super(true), this._view = a31, this.pointerAction = o20;
    const e16 = this._view.mapViewNavigation;
    this._dragEventSeparator = new t16({ start: (t23, a32) => {
      e16.rotate.begin(this._view, a32.data), a32.stopPropagation();
    }, update: (t23, a32) => {
      e16.rotate.update(this._view, a32.data), a32.stopPropagation();
    }, end: (t23, a32) => {
      e16.rotate.end(), a32.stopPropagation();
    }, condition: (t23, a32) => 1 === t23 && t15(a32.data, this.pointerAction) }), this.registerIncoming("drag", r19, (t23) => this._dragEventSeparator.handle(t23));
  }
};

// node_modules/@arcgis/core/views/navigation/gamepadAndKeyboardUtils.js
function n23(t23) {
  let n28 = t23 * t23;
  return t23 < 0 && (n28 *= -1), n28;
}
function a21(t23) {
  return t23.translation[0] = 0, t23.translation[1] = 0, t23.translation[2] = 0, t23.heading = 0, t23.tilt = 0, t23;
}
function i19(a31, i26, o20) {
  const s19 = o20, e16 = a31.state, r19 = a31.device, l17 = "forward-down" === i26.tiltDirection ? 1 : -1, c23 = 1;
  return "standard" === r19.deviceType ? (s19.translation[0] = n23(e16.axes[0]), s19.translation[1] = n23(e16.axes[1]), s19.translation[2] = n23(e16.buttons[7]) - n23(e16.buttons[6]), s19.heading = n23(e16.axes[2]), s19.tilt = n23(e16.axes[3])) : "spacemouse" === r19.deviceType && (s19.translation[0] = 1.2 * n23(e16.axes[0]), s19.translation[1] = 1.2 * n23(e16.axes[1]), s19.translation[2] = 2 * -n23(e16.axes[2]), s19.heading = 1.2 * n23(e16.axes[5]), s19.tilt = 1.2 * n23(e16.axes[3])), s19.tilt *= l17, g3(s19.translation, s19.translation, c23), s19;
}
function s14(t23) {
  return 0 === t23.translation[0] && 0 === t23.translation[1] && 0 === t23.translation[2] && 0 === t23.heading && 0 === t23.tilt && 0 === t23.zoom;
}

// node_modules/@arcgis/core/views/2d/input/handlers/GamepadNavigation.js
var d11 = class extends i8 {
  constructor(i26) {
    super(true), this._view = i26, this._frameTask = null, this._watchHandles = new t3(), this._currentDevice = null, this._transformation = { translation: [0, 0, 0], heading: 0, tilt: 0, zoom: 0 }, this._handle = this.registerIncoming("gamepad", (t23) => this._handleGamePadEvent(t23)), this._handle.pause();
  }
  onInstall(t23) {
    super.onInstall(t23), this._watchHandles.add([l3(() => {
      var _a;
      return (_a = this._view.navigation.gamepad) == null ? void 0 : _a.enabled;
    }, (t24) => {
      t24 ? (this._handle.resume(), this._frameTask || (this._frameTask = A({ update: (t25) => this._frameUpdate(t25.deltaTime) }))) : (this._handle.pause(), this._frameTask && (this._frameTask.remove(), this._frameTask = null));
    }, h)]);
  }
  onUninstall() {
    this._watchHandles.removeAll(), this._frameTask && (this._frameTask.remove(), this._frameTask = null), super.onUninstall();
  }
  _handleGamePadEvent(t23) {
    const i26 = this._view.navigation.gamepad.device;
    i26 && t23.data.device !== i26 || this._currentDevice && this._currentDevice !== t23.data.device || ("end" === t23.data.action ? (this._currentDevice = null, a21(this._transformation)) : (this._currentDevice = t23.data.device, i19(t23.data, this._view.navigation.gamepad, this._transformation)));
  }
  _frameUpdate(t23) {
    const i26 = this._transformation;
    if (s14(i26))
      return;
    const e16 = this._view.viewpoint.clone(), a31 = this._view.navigation.gamepad.velocityFactor, r19 = _5 * a31 * t23;
    Rt(e16, e16, [i26.translation[0] * r19, -i26.translation[1] * r19]);
    const o20 = 1 + i26.translation[2] * c15 * t23, h13 = this._view.constraints.rotationEnabled ? -i26.heading * m8 * t23 : 0, d16 = this._view.size, v7 = [d16[0] / 2, d16[1]];
    wt(e16, e16, o20, h13, v7, d16);
    const p22 = this._view.constraints.constrain(e16, this._view.viewpoint);
    this._view.viewpoint = p22;
  }
};
var m8 = 0.06;
var _5 = 0.7;
var c15 = 6e-4;

// node_modules/@arcgis/core/views/2d/input/handlers/KeyPan.js
var i20 = class extends i8 {
  constructor(e16, i26, t23) {
    super(true), this.view = e16, this.keys = i26, this._pressed = false, this._keyMap = { [i26.left]: "left", [i26.right]: "right", [i26.up]: "up", [i26.down]: "down" }, this.registerIncoming("key-down", t23, (e17) => this._handleKeyDown(e17)), this.registerIncoming("key-up", t23, (e17) => this._handleKeyUp(e17)), this.registerIncoming("blur", t23, () => this._handleBlur());
  }
  _handleKeyDown(e16) {
    e16.data.repeat || this._handleKey(e16, true);
  }
  _handleKeyUp(e16) {
    this._handleKey(e16, false);
  }
  _handleBlur() {
    this._pressed && (this._pressed = false, this.view.mapViewNavigation.stop());
  }
  _handleKey(e16, i26) {
    const t23 = this._keyMap[e16.data.key];
    if (this._pressed = null != t23, this._pressed) {
      if (i26)
        switch (this.view.mapViewNavigation.begin(), t23) {
          case "left":
            this.view.mapViewNavigation.continousPanLeft();
            break;
          case "right":
            this.view.mapViewNavigation.continousPanRight();
            break;
          case "up":
            this.view.mapViewNavigation.continousPanUp();
            break;
          case "down":
            this.view.mapViewNavigation.continousPanDown();
        }
      else
        this._pressed = false, this.view.mapViewNavigation.stop();
      e16.stopPropagation();
    }
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/KeyRotate.js
var i21 = class extends i8 {
  constructor(e16, i26, t23) {
    super(true), this.view = e16, this.keys = i26, this._pressed = false, this._keyToDirection = { [i26.clockwiseOption1]: "clockwise", [i26.clockwiseOption2]: "clockwise", [i26.counterClockwiseOption1]: "counterClockwise", [i26.counterClockwiseOption2]: "counterClockwise", [i26.resetOption1]: "reset", [i26.resetOption2]: "reset" }, this.registerIncoming("key-down", t23, (e17) => this._handleKeyDown(e17)), this.registerIncoming("key-up", t23, (e17) => this._handleKeyUp(e17)), this.registerIncoming("blur", t23, () => this._handleBlur());
  }
  _handleKeyDown(e16) {
    e16.data.repeat || this._handleKey(e16, true);
  }
  _handleKeyUp(e16) {
    this._handleKey(e16, false);
  }
  _handleBlur() {
    this._pressed && (this._pressed = false, this.view.mapViewNavigation.stop());
  }
  _handleKey(e16, i26) {
    const t23 = e16.modifiers;
    if (t23.size > 0 && !t23.has("Shift") || !this.view.constraints.rotationEnabled)
      return;
    const s19 = this._keyToDirection[e16.data.key];
    if (this._pressed = null != s19, this._pressed) {
      if (i26)
        switch (this.view.mapViewNavigation.begin(), s19) {
          case "clockwise":
            this.view.mapViewNavigation.continousRotateClockwise();
            break;
          case "counterClockwise":
            this.view.mapViewNavigation.continousRotateCounterclockwise();
            break;
          case "reset":
            this.view.mapViewNavigation.resetRotation();
        }
      else
        this._pressed = false, this.view.mapViewNavigation.stop();
      e16.stopPropagation();
    }
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/KeyZoom.js
var t17;
!function(o20) {
  o20[o20.IN = 0] = "IN", o20[o20.OUT = 1] = "OUT";
}(t17 || (t17 = {}));
var e11 = class extends i8 {
  constructor(o20, e16, i26) {
    super(true), this.view = o20, this.keys = e16, this._keysToZoomAction = {}, this.registerIncoming("key-down", i26, (o21) => this._handleKeyDown(o21)), e16.zoomIn.forEach((o21) => this._keysToZoomAction[o21] = t17.IN), e16.zoomOut.forEach((o21) => this._keysToZoomAction[o21] = t17.OUT);
  }
  _handleKeyDown(o20) {
    this._handleKey(o20);
  }
  _handleKey(o20) {
    const e16 = o20.modifiers;
    if (e16.size > 0 && !e16.has("Shift"))
      return;
    const { key: i26 } = o20.data;
    if (!(i26 in this._keysToZoomAction))
      return;
    const n28 = this._keysToZoomAction[i26], { mapViewNavigation: s19 } = this.view;
    let r19 = null;
    switch (n28) {
      case t17.IN:
        r19 = s19.zoomIn();
        break;
      case t17.OUT:
        r19 = s19.zoomOut();
        break;
      default:
        return;
    }
    s19.begin(), r19.then(() => s19.end()), o20.stopPropagation();
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/MouseWheelZoom.js
var t18 = 0.6;
var o15 = class extends i8 {
  constructor(e16, t23) {
    super(true), this._view = e16, this._canZoom = true, this.registerIncoming("mouse-wheel", t23, (e17) => this._handleMouseWheel(e17));
  }
  _handleMouseWheel(e16) {
    if (!this._view.navigation.mouseWheelZoomEnabled)
      return;
    if (e16.preventDefault(), e16.stopPropagation(), !this._canZoom)
      return;
    const o20 = this._view.mapViewNavigation, { x: n28, y: i26, deltaY: s19 } = e16.data, a31 = 1 / t18 ** (1 / 60 * s19), h13 = o20.zoom(a31, [n28, i26]);
    h13 && (this._canZoom = false, h13.catch(() => {
    }).then(() => {
      this._canZoom = true, o20.end();
    }));
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/PinchAction.js
var a22 = class extends i8 {
  constructor(i26) {
    super(true), this.view = i26, this.registerIncoming("drag", (t23) => this._handleDrag(t23)), this.registerIncoming("pointer-down", () => this._stopMomentumNavigation());
    const a31 = this.view.mapViewNavigation;
    this._dragEventSeparator = new t16({ start: (t23, i27) => {
      a31.pinch.begin(this.view, i27.data), i27.stopPropagation();
    }, update: (t23, i27) => {
      a31.pinch.update(this.view, i27.data), i27.stopPropagation();
    }, end: (t23, i27) => {
      a31.pinch.end(this.view), i27.stopPropagation();
    }, condition: (t23) => t23 >= 2 });
  }
  _handleDrag(t23) {
    this._dragEventSeparator.handle(t23);
  }
  _stopMomentumNavigation() {
    this.view.mapViewNavigation.pinch.stopMomentumNavigation();
  }
};

// node_modules/@arcgis/core/views/input/gamepad/GamepadState.js
function t19(t23) {
  const n28 = t23.native;
  return n28 ? { buttons: n28.buttons.map((t24) => t24.pressed ? t24.value || 1 : 0), axes: n28.axes.map((n29) => s15(n29, t23.axisThreshold)) } : { buttons: [], axes: [] };
}
function n24(t23, n28) {
  if (t23.axes.length !== n28.axes.length)
    return false;
  if (t23.buttons.length !== n28.buttons.length)
    return false;
  for (let e16 = 0; e16 < t23.axes.length; e16++)
    if (t23.axes[e16] !== n28.axes[e16])
      return false;
  for (let e16 = 0; e16 < t23.buttons.length; e16++)
    if (t23.buttons[e16] !== n28.buttons[e16])
      return false;
  return true;
}
function e12(t23) {
  for (let n28 = 0; n28 < t23.axes.length; n28++)
    if (0 !== t23.axes[n28])
      return false;
  for (let n28 = 0; n28 < t23.buttons.length; n28++)
    if (0 !== t23.buttons[n28])
      return false;
  return true;
}
function s15(t23, n28) {
  const e16 = Math.abs(t23);
  return e16 < n28 ? 0 : Math.sign(t23) * (e16 - n28) / (1 - n28);
}

// node_modules/@arcgis/core/views/input/gamepad/GamepadSource.js
var a23 = class {
  constructor(e16, t23) {
    this._element = e16, this._input = t23, this._hasEventListeners = false, this._onConnectGamepad = (e17) => {
      this._connectGamepad(e17.gamepad);
    }, this._onDisconnectGamepad = (e17) => {
      const t24 = e17.gamepad, i27 = t24.index, n29 = this._inputDevices[i27];
      n29 && (this._emitGamepadEvent(t24, t19(n29), false), this._inputDevices.splice(i27, 1), this._latestUpdate.splice(i27, 1), this._input.gamepad.devices.remove(n29), this.ensurePollingState());
    }, this._frameTask = null, this._latestUpdate = new Array(), this._inputDevices = new Array(), this._callback = null;
    const i26 = "getGamepads" in window.navigator, n28 = window.isSecureContext;
    this.supported = i26 && n28, this.supported && (this._forEachGamepad((e17) => this._connectGamepad(e17)), window.addEventListener("gamepadconnected", this._onConnectGamepad), window.addEventListener("gamepaddisconnected", this._onDisconnectGamepad), this.ensurePollingState());
  }
  destroy() {
    this.hasEventListeners = false, this.supported && (window.removeEventListener("gamepadconnected", this._onConnectGamepad), window.removeEventListener("gamepaddisconnected", this._onDisconnectGamepad));
  }
  set hasEventListeners(e16) {
    this._hasEventListeners !== e16 && (this._hasEventListeners = e16, this.ensurePollingState());
  }
  get _eventsEnabled() {
    return this.supported && this._inputDevices.length > 0 && this._hasEventListeners;
  }
  set onEvent(e16) {
    this._callback = e16;
  }
  _connectGamepad(e16) {
    const s19 = new a10(e16);
    "unknown" !== s19.deviceType && (this._inputDevices[e16.index] = s19, this._input.gamepad.devices.add(s19)), this.ensurePollingState();
  }
  ensurePollingState() {
    this._eventsEnabled ? this._startPolling() : this._stopPolling();
  }
  _startPolling() {
    null == this._frameTask && (this._frameTask = A({ update: () => this._readGamepadState() }));
  }
  _stopPolling() {
    null != this._frameTask && (this._frameTask.remove(), this._frameTask = null, this._latestUpdate = new Array());
  }
  _readGamepadState() {
    const e16 = document.hasFocus(), t23 = this._element.contains(document.activeElement), a31 = "document" === this._input.gamepad.enabledFocusMode && !e16 || "view" === this._input.gamepad.enabledFocusMode && !t23;
    this._forEachGamepad((e17) => {
      const t24 = this._inputDevices[e17.index];
      if (!t24)
        return;
      const d16 = this._latestUpdate[e17.index], o20 = t19(t24), r19 = a31 || e12(o20);
      if (d16) {
        if (d16.timestamp === e17.timestamp)
          return;
        if (!d16.active && r19)
          return;
        if (n24(d16.state, o20))
          return;
      }
      this._emitGamepadEvent(e17, o20, !r19);
    });
  }
  _forEachGamepad(e16) {
    const t23 = window.navigator.getGamepads();
    for (let s19 = 0; s19 < t23.length; s19++) {
      const i26 = t23[s19];
      this._validate(i26) && e16(i26);
    }
  }
  _emitGamepadEvent(e16, t23, s19) {
    const i26 = this._latestUpdate[e16.index], n28 = i26 && i26.active;
    if (!n28 && !s19)
      return;
    const a31 = !n28 && s19 ? "start" : n28 && s19 ? "update" : "end";
    this._latestUpdate[e16.index] = { timestamp: e16.timestamp, state: t23, active: s19 }, this._callback && this._callback({ device: this._inputDevices[e16.index], state: t23, action: a31 });
  }
  _validate(e16) {
    if (!e16)
      return false;
    if (!e16.connected)
      return false;
    for (let t23 = 0; t23 < e16.axes.length; t23++)
      if (isNaN(e16.axes[t23]))
        return false;
    return true;
  }
};

// node_modules/@arcgis/core/views/input/BrowserEventSource.js
var o16 = has("edge");
var a24 = has("chrome");
var s16 = has("ff");
var r14 = has("safari");
var h8 = "esri-view-surface";
var l13 = { touchNone: `${h8}--touch-none`, touchPan: `${h8}--touch-pan` };
var c16 = class _c {
  constructor(e16, t23) {
    this._input = t23, this._active = {}, this._callback = () => {
    }, this._activePointerCaptures = /* @__PURE__ */ new Set(), this._keyDownState = /* @__PURE__ */ new Set(), this._eventId = 1, this._browserTouchPanningEnabled = false, this._element = e16, e16.getAttribute("tabindex") || e16.setAttribute("tabindex", "0"), this._eventHandlers = { "key-down": this._handleKey, "key-up": this._handleKey, "pointer-down": this._handlePointer, "pointer-move": this._handlePointerPreventDefault, "pointer-up": this._handlePointerPreventDefault, "pointer-enter": this._handlePointer, "pointer-leave": this._handlePointer, "pointer-cancel": this._handlePointer, "mouse-wheel": this._handleMouseWheel, "pointer-capture-lost": this._handlePointerCaptureLost }, this._updateTouchAction(), this._element.addEventListener("keydown", this._preventAltKeyDefault), this._gamepadSource = new a23(e16, this._input), this._gamepadSource.onEvent = (e17) => this._callback("gamepad", e17);
  }
  destroy() {
    this._callback = () => {
    }, this.activeEvents = null, this._activePointerCaptures.forEach((e16) => {
      this._releasePointerCaptureSafe(e16);
    }), this._gamepadSource = l(this._gamepadSource), this._activePointerCaptures = null, this._removeTouchAction(), this._element.removeEventListener("keydown", this._preventAltKeyDefault);
  }
  get browserTouchPanningEnabled() {
    return this._browserTouchPanningEnabled;
  }
  set browserTouchPanningEnabled(e16) {
    this._browserTouchPanningEnabled = e16, this._updateTouchAction(), this._updateTouchEventHandling();
  }
  set onEventReceived(e16) {
    this._callback = e16;
  }
  set activeEvents(e16) {
    for (const t23 in this._active)
      if (!e16 || !e16.has(t23)) {
        const e17 = this._active[t23];
        this._element.removeEventListener(u6[t23], e17), delete this._active[t23];
      }
    e16 && e16.forEach((e17) => {
      if (!this._active[e17] && u6[e17]) {
        const t23 = (this._eventHandlers[e17] || this._handleDefault).bind(this, e17);
        this._element.addEventListener(u6[e17], t23), this._active[e17] = t23;
      }
    }), this._gamepadSource.hasEventListeners = (e16 == null ? void 0 : e16.has("gamepad")) ?? false;
  }
  setPointerCapture(e16, t23) {
    t23 ? this._setPointerCatpureSafe(e16.pointerId) : (this._releasePointerCaptureSafe(e16.pointerId), this._activePointerCaptures.delete(e16.pointerId));
  }
  _updateTouchAction() {
    this._element.classList.remove(this._browserTouchPanningEnabled ? l13.touchNone : l13.touchPan), this._element.classList.add(this._browserTouchPanningEnabled ? l13.touchPan : l13.touchNone);
  }
  _updateTouchEventHandling() {
    this._browserTouchPanningEnabled ? this._element.addEventListener("touchmove", this._preventMultiTouchPanning) : this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _removeTouchAction() {
    this._element.classList.remove(l13.touchNone), this._element.classList.remove(l13.touchPan), this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _setPointerCatpureSafe(e16) {
    try {
      this._element.setPointerCapture(e16), this._activePointerCaptures.add(e16);
    } catch {
    }
  }
  _releasePointerCaptureSafe(e16) {
    try {
      if (this._element.hasPointerCapture && !this._element.hasPointerCapture(e16))
        return;
      this._element.releasePointerCapture(e16);
    } catch (t23) {
    }
  }
  _updateNormalizedPointerLikeEvent(e16, t23) {
    const n28 = i14(this._element, e16);
    return _c.test.disableSubpixelCoordinates && (n28.x = Math.round(n28.x), n28.y = Math.round(n28.y)), t23.x = n28.x, t23.y = n28.y, t23;
  }
  _handleKey(e16, n28) {
    const i26 = o6(n28);
    i26 && "key-up" === e16 && this._keyDownState.delete(i26);
    const o20 = { native: n28, key: i26, repeat: !!i26 && this._keyDownState.has(i26) };
    i26 && "key-down" === e16 && this._keyDownState.add(o20.key), this._callback(e16, o20);
  }
  _handlePointer(e16, t23) {
    const n28 = this._updateNormalizedPointerLikeEvent(t23, { native: t23, x: 0, y: 0, pointerType: t23.pointerType, button: t23.button, buttons: t23.buttons, eventId: this._eventId++ });
    this._callback(e16, n28);
  }
  _handlePointerPreventDefault(e16, t23) {
    const n28 = this._updateNormalizedPointerLikeEvent(t23, { native: t23, x: 0, y: 0, pointerType: t23.pointerType, button: t23.button, buttons: t23.buttons, eventId: this._eventId++ });
    t23.preventDefault(), this._callback(e16, n28);
  }
  _handleMouseWheel(e16, t23) {
    let n28 = t23.deltaY;
    switch (t23.deltaMode) {
      case 0:
        o16 && (n28 = n28 / document.documentElement.clientHeight * 600);
        break;
      case 1:
        n28 *= 30;
        break;
      case 2:
        n28 *= 900;
    }
    o16 ? n28 *= 0.7 : a24 || r14 ? n28 *= 0.6 : s16 && (n28 *= 1.375);
    const i26 = 100, h13 = Math.abs(n28);
    if (h13 > i26) {
      const e17 = 0.02;
      n28 = n28 / h13 * 200 / (1 + Math.exp(-e17 * (h13 - i26)));
    }
    const l17 = this._updateNormalizedPointerLikeEvent(t23, { native: t23, x: 0, y: 0, deltaY: n28 });
    this._callback(e16, l17);
  }
  _handlePointerCaptureLost(e16, t23) {
    this._activePointerCaptures.delete(t23.pointerId), this._handleDefault(e16, t23);
  }
  _handleDefault(e16, t23) {
    const n28 = { native: t23 };
    t23.preventDefault(), this._callback(e16, n28);
  }
  _preventAltKeyDefault(e16) {
    "Alt" === e16.key && e16.preventDefault();
  }
  _preventMultiTouchPanning(e16) {
    e16.touches.length > 1 && e16.preventDefault();
  }
};
c16.test = { disableSubpixelCoordinates: false };
var u6 = { "key-down": "keydown", "key-up": "keyup", "pointer-down": "pointerdown", "pointer-up": "pointerup", "pointer-move": "pointermove", "mouse-wheel": "wheel", "pointer-capture-got": "gotpointercapture", "pointer-capture-lost": "lostpointercapture", "context-menu": "contextmenu", "pointer-enter": "pointerenter", "pointer-leave": "pointerleave", "pointer-cancel": "pointercancel", focus: "focus", blur: "blur" };

// node_modules/@arcgis/core/views/input/handlers/PreventContextMenu.js
var e13 = class extends i8 {
  constructor() {
    super(true), this.registerIncoming("context-menu", (t23) => {
      t23.data.native.preventDefault();
    });
  }
};

// node_modules/@arcgis/core/views/input/recognizers/support.js
function e14(t23, e16) {
  return Math.abs(e16.x - t23.x) + Math.abs(e16.y - t23.y);
}
function n25(t23, e16) {
  const n28 = e16.x - t23.x, r19 = e16.y - t23.y;
  return Math.sqrt(n28 * n28 + r19 * r19);
}
function r15(e16, n28) {
  if (n28 ? (n28.radius = 0, n28.center.x = 0, n28.center.y = 0) : n28 = { radius: 0, center: c3() }, 0 === e16.length)
    return n28;
  if (1 === e16.length)
    return n28.center.x = e16[0].x, n28.center.y = e16[0].y, n28;
  if (2 === e16.length) {
    const [t23, r20] = e16, [c24, o21] = [r20.x - t23.x, r20.y - t23.y];
    return n28.radius = Math.sqrt(c24 * c24 + o21 * o21) / 2, n28.center.x = (t23.x + r20.x) / 2, n28.center.y = (t23.y + r20.y) / 2, n28;
  }
  let r19 = 0, c23 = 0;
  for (let t23 = 0; t23 < e16.length; t23++)
    r19 += e16[t23].x, c23 += e16[t23].y;
  r19 /= e16.length, c23 /= e16.length;
  const o20 = e16.map((t23) => t23.x - r19), s19 = e16.map((t23) => t23.y - c23);
  let u9 = 0, i26 = 0, x2 = 0, y9 = 0, a31 = 0, h13 = 0, l17 = 0;
  for (let t23 = 0; t23 < o20.length; t23++) {
    const e17 = o20[t23], n29 = s19[t23], r20 = e17 * e17, c24 = n29 * n29;
    u9 += r20, i26 += c24, x2 += e17 * n29, y9 += r20 * e17, a31 += c24 * n29, h13 += e17 * c24, l17 += n29 * r20;
  }
  const f13 = 0.5 * (y9 + h13), g11 = 0.5 * (a31 + l17), p22 = u9 * i26 - x2 * x2, d16 = (f13 * i26 - g11 * x2) / p22, m15 = (u9 * g11 - x2 * f13) / p22, M4 = c3(d16 + r19, m15 + c23);
  return { radius: Math.sqrt(d16 * d16 + m15 * m15 + (u9 + i26) / e16.length), center: M4 };
}
function c17(t23) {
  const { native: e16 } = t23, { pointerId: n28, button: r19, pointerType: c23 } = e16;
  return "mouse" === c23 ? `${n28}:${r19}` : `${c23}`;
}

// node_modules/@arcgis/core/views/input/recognizers/SingleAndDoubleClick.js
var l14 = { maximumDoubleClickDelay: 250, maximumDoubleClickDistance: 10, maximumDoubleTouchDelay: 350, maximumDoubleTouchDistance: 35 };
var m9 = class extends i8 {
  constructor(t23 = l14.maximumDoubleClickDelay, i26 = l14.maximumDoubleClickDistance, o20 = l14.maximumDoubleTouchDelay, n28 = l14.maximumDoubleTouchDistance, s19 = t4) {
    super(false), this._maximumDoubleClickDelay = t23, this._maximumDoubleClickDistance = i26, this._maximumDoubleTouchDelay = o20, this._maximumDoubleTouchDistance = n28, this._clock = s19, this._pointerState = /* @__PURE__ */ new Map(), this._click = this.registerOutgoing("click"), this._doubleClick = this.registerOutgoing("double-click"), this.registerIncoming("immediate-click", this._handleImmediateClick.bind(this)), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((e16) => e16.doubleClickTimer = o2(e16.doubleClickTimer));
  }
  get hasPendingInputs() {
    return n3(this._pointerState, (e16) => null != e16.doubleClickTimer);
  }
  _clearDoubleClickTimer(e16, t23) {
    const o20 = this._pointerState.get(e16);
    o20 && (o20.doubleClickTimer = o2(o20.doubleClickTimer), t23 && this._click.emit(o20.event.data, void 0, o20.event.modifiers), this._pointerState.delete(e16), this.refreshHasPendingInputs());
  }
  _doubleClickTimeoutExceeded(e16) {
    const t23 = this._pointerState.get(e16);
    1 === t23.pointerDownCount && this._click.emit(t23.event.data, void 0, t23.event.modifiers), t23.doubleClickTimer = null, this._pointerState.delete(e16), this.refreshHasPendingInputs();
  }
  _getPointerId(e16) {
    const { pointerId: t23, pointerType: i26, button: o20 } = e16.native;
    return "mouse" === i26 ? `${t23}:${o20}` : `${i26}`;
  }
  _handleImmediateClick(e16) {
    const t23 = e16.data, { pointerType: i26 } = t23.native, o20 = this._getPointerId(t23);
    if (!this._pointerState.has(o20))
      return void this._startClick(e16);
    const s19 = this._pointerState.get(o20), { data: l17, modifiers: m15 } = s19.event, c23 = "touch" === i26 ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
    e14(l17, t23) > c23 ? (this._clearDoubleClickTimer(o20, true), this._startClick(e16)) : (this._clearDoubleClickTimer(o20, false), 2 === s19.pointerDownCount && this._doubleClick.emit(l17, void 0, m15));
  }
  _handlePointerDown(e16) {
    const t23 = c17(e16.data), i26 = this._pointerState.get(t23);
    i26 && (i26.pointerDownCount += 1);
  }
  _startClick(e16) {
    const { data: t23 } = e16, { native: { pointerType: i26 } } = t23, o20 = c17(t23), n28 = "touch" === i26 ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay, l17 = this._clock.setTimeout(() => this._doubleClickTimeoutExceeded(o20), n28), m15 = 1;
    this._pointerState.set(o20, { event: e16, doubleClickTimer: l17, pointerDownCount: m15 }), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/DoubleTapDrag.js
var p15 = class extends i8 {
  constructor(e16 = l14.maximumDoubleClickDelay, a31 = l14.maximumDoubleClickDistance, r19 = l14.maximumDoubleTouchDelay, n28 = l14.maximumDoubleTouchDistance, u9 = t4) {
    super(false), this._maximumDoubleClickDelay = e16, this._maximumDoubleClickDistance = a31, this._maximumDoubleTouchDelay = r19, this._maximumDoubleTouchDistance = n28, this._clock = u9, this._doubleTapDragReady = false, this._doubleTapDragActive = false, this._dragStartCenter = c3(0, 0), this._pointerState = /* @__PURE__ */ new Map(), this._doubleTapDrag = this.registerOutgoing("double-tap-drag"), this._dragEventSeparator = new t16({ start: (t23, e17) => this._dragStart(t23, e17), update: (t23, e17) => this._dragUpdate(e17), end: (t23, e17) => this._dragEnd(e17) }), this.registerIncoming("drag", (t23) => this._dragEventSeparator.handle(t23)), this.registerIncoming("pointer-down", (t23) => this._handlePointerDown(t23)), this.registerIncoming("pointer-up", () => this._handlePointerUp());
  }
  onUninstall() {
    this._pointerState.forEach((t23) => {
      t23.doubleTapTimeout = o2(t23.doubleTapTimeout);
    });
  }
  get hasPendingInputs() {
    return n3(this._pointerState, (t23) => null != t23.doubleTapTimeout);
  }
  _clearPointerDown(t23) {
    const e16 = this._pointerState.get(t23);
    e16 && (e16.doubleTapTimeout = o2(e16.doubleTapTimeout), this._pointerState.delete(t23), this.refreshHasPendingInputs());
  }
  _createDoubleTapDragData(t23, e16, a31) {
    const { button: i26, buttons: o20, pointer: r19, pointers: s19, pointerType: n28, timestamp: u9 } = a31;
    return { action: t23, delta: e16, button: i26, buttons: o20, pointer: r19, pointers: s19, pointerType: n28, timestamp: u9 };
  }
  _dragStart(t23, e16) {
    if (!this._doubleTapDragReady || 1 !== t23)
      return;
    this._doubleTapDragReady = false, this._doubleTapDragActive = true;
    const { data: a31, modifiers: o20 } = e16, { center: r19 } = a31;
    this._dragStartCenter = r19;
    const s19 = this._createDoubleTapDragData("begin", c3(0, 0), a31);
    this._doubleTapDrag.emit(s19, void 0, o20), e16.stopPropagation();
  }
  _dragUpdate(t23) {
    if (!this._doubleTapDragActive)
      return;
    const { data: e16, modifiers: a31 } = t23, { center: o20 } = e16, r19 = c3(o20.x - this._dragStartCenter.x, o20.y - this._dragStartCenter.y), s19 = this._createDoubleTapDragData("update", r19, e16);
    this._doubleTapDrag.emit(s19, void 0, a31), t23.stopPropagation();
  }
  _dragEnd(t23) {
    if (!this._doubleTapDragActive)
      return;
    const { data: e16, modifiers: a31 } = t23, { center: o20 } = e16, r19 = c3(o20.x - this._dragStartCenter.x, o20.y - this._dragStartCenter.y), s19 = this._createDoubleTapDragData("end", r19, e16);
    this._doubleTapDrag.emit(s19, void 0, a31), this._doubleTapDragActive = false, t23.stopPropagation();
  }
  _handlePointerDown(t23) {
    const { data: e16 } = t23, a31 = c17(e16), i26 = this._pointerState.get(a31), { pointerType: o20 } = e16.native;
    if (i26) {
      const r19 = "touch" === o20 ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
      this._clearPointerDown(a31), e14(i26.event.data, e16) > r19 ? this._storePointerDown(t23) : this._doubleTapDragReady = true;
    } else
      this._storePointerDown(t23);
  }
  _handlePointerUp() {
    this._doubleTapDragReady = false;
  }
  _storePointerDown(t23) {
    const { data: e16 } = t23, { pointerType: a31 } = e16.native, i26 = c17(e16), o20 = "touch" === a31 ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay, r19 = this._clock.setTimeout(() => this._clearPointerDown(i26), o20);
    this._pointerState.set(i26, { event: t23, doubleTapTimeout: r19 }), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/Drag.js
var s17 = class extends i8 {
  constructor(t23) {
    super(false), this._navigationTouch = t23, this._startStateModifiers = /* @__PURE__ */ new Set(), this._activePointerMap = /* @__PURE__ */ new Map(), this._isDragging = false, this._isCurrentDragSuppressed = false, this._drag = this.registerOutgoing("drag"), this.registerIncoming("pointer-drag", this._handlePointerDrag.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-capture-lost", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-cancel", this._handlePointerUpAndPointerLost.bind(this));
  }
  _createPayload(t23, e16, i26, n28) {
    return { action: t23, pointerType: this._pointerType, button: this._mouseButton, buttons: e16.buttons, timestamp: n28, pointers: o17(this._activePointerMap), pointer: e16, angle: i26.angle, radius: i26.radius, center: i26.center };
  }
  _addPointer(t23) {
    const e16 = t23.native.pointerId, i26 = a25(this._activePointerMap).angle, n28 = { event: t23, initialAngle: 0, lastAngle: 0 };
    this._activePointerMap.set(e16, n28);
    const s19 = h9(n28, r16(this._activePointerMap));
    n28.initialAngle = s19, n28.lastAngle = s19, this._updatePointerAngles(i26);
  }
  _updatePointer(t23) {
    if (t23 && null == t23.x && null == t23.y)
      return;
    const e16 = t23.native.pointerId, i26 = this._activePointerMap.get(e16);
    i26 ? i26.event = t23 : this._addPointer(t23);
  }
  _removePointer(t23) {
    const e16 = a25(this._activePointerMap).angle;
    this._activePointerMap.delete(t23), this._updatePointerAngles(e16);
  }
  _updatePointerAngles(t23) {
    const e16 = a25(this._activePointerMap);
    this._activePointerMap.forEach((i26) => {
      i26.initialAngle = h9(i26, e16) - t23, i26.lastAngle = h9(i26, e16) - t23;
    });
  }
  _emitEvent(t23, e16, i26) {
    const n28 = a25(this._activePointerMap);
    this._drag.emit(this._createPayload(t23, e16, n28, i26), void 0, this._startStateModifiers);
  }
  _handlePointerUpAndPointerLost(t23) {
    const i26 = t23.data.native.pointerId, n28 = n2(t23.timestamp);
    this._activePointerMap.get(i26) && (1 === this._activePointerMap.size ? (this._updatePointer(t23.data), !this._isCurrentDragSuppressed && this._emitEvent("end", t23.data, n28), this._isDragging = false, this._isCurrentDragSuppressed = false, this._removePointer(i26)) : (this._removePointer(i26), this._emitEvent("removed", t23.data, n2(t23.timestamp))));
  }
  _handlePointerDrag(t23) {
    const i26 = t23.data, n28 = i26.currentEvent, s19 = n2(t23.timestamp);
    switch (i26.action) {
      case "start":
      case "update":
        this._isDragging ? this._activePointerMap.has(n28.native.pointerId) ? (this._updatePointer(n28), !this._isCurrentDragSuppressed && this._emitEvent("update", n28, s19)) : (this._addPointer(n28), this._emitEvent("added", n28, s19), this._isCurrentDragSuppressed = this._isSuppressed) : (this._updatePointer(n28), this._pointerType = t23.data.startEvent.pointerType, this._mouseButton = t23.data.startEvent.button, this._startStateModifiers = t23.modifiers, this._isDragging = true, this._isCurrentDragSuppressed = this._isSuppressed, !this._isCurrentDragSuppressed && this._emitEvent("start", n28, s19));
    }
  }
  get _isSuppressed() {
    return !!this._navigationTouch && !this._navigationTouch.browserTouchPanEnabled && "touch" === this._pointerType && 1 === this._activePointerMap.size;
  }
};
function r16(e16) {
  const i26 = [];
  return e16.forEach((e17) => {
    i26.push(c3(e17.event.x, e17.event.y));
  }), r15(i26);
}
function a25(t23) {
  const e16 = r16(t23);
  let i26 = 0;
  return t23.forEach((t24) => {
    let n28 = h9(t24, e16), s19 = n28 - t24.lastAngle;
    for (; s19 > Math.PI; )
      s19 -= 2 * Math.PI;
    for (; s19 < -Math.PI; )
      s19 += 2 * Math.PI;
    n28 = t24.lastAngle + s19, t24.lastAngle = n28;
    const r19 = n28 - t24.initialAngle;
    i26 += r19;
  }), i26 /= t23.size || 1, { angle: i26, radius: e16.radius, center: e16.center };
}
function o17(t23) {
  const e16 = /* @__PURE__ */ new Map();
  return t23.forEach((t24, i26) => e16.set(i26, t24.event)), e16;
}
function h9(t23, e16) {
  const i26 = t23.event, n28 = i26.x - e16.center.x, s19 = i26.y - e16.center.y;
  return Math.atan2(s19, n28);
}
var p16;
!function(t23) {
  t23[t23.Left = 0] = "Left", t23[t23.Middle = 1] = "Middle", t23[t23.Right = 2] = "Right", t23[t23.Back = 3] = "Back", t23[t23.Forward = 4] = "Forward", t23[t23.Undefined = -1] = "Undefined";
}(p16 || (p16 = {}));

// node_modules/@arcgis/core/views/input/recognizers/ImmediateDoubleClick.js
var m10 = class extends i8 {
  constructor(e16 = l14.maximumDoubleClickDelay, o20 = l14.maximumDoubleClickDistance, a31 = l14.maximumDoubleTouchDelay, m15 = l14.maximumDoubleTouchDistance, n28 = t4) {
    super(false), this._maximumDoubleClickDelay = e16, this._maximumDoubleClickDistance = o20, this._maximumDoubleTouchDelay = a31, this._maximumDoubleTouchDistance = m15, this._clock = n28, this._pointerState = /* @__PURE__ */ new Map(), this._immediateDoubleClick = this.registerOutgoing("immediate-double-click"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUp.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((t23) => {
      t23.immediateDoubleClick && t23.immediateDoubleClick.timeoutHandle.remove();
    }), super.onUninstall();
  }
  _handlePointerDown(t23) {
    const e16 = t23.data, i26 = c17(e16);
    if (!this._pointerState.has(i26)) {
      const t24 = { downButton: e16.native.button, immediateDoubleClick: null };
      this._pointerState.set(i26, t24), this.startCapturingPointer(e16.native);
    }
  }
  _handlePointerUp(t23) {
    const e16 = t23.data, i26 = c17(e16), m15 = this._pointerState.get(i26);
    if (m15 && m15.downButton === e16.native.button) {
      const i27 = m15.immediateDoubleClick;
      if (i27) {
        i27.timeoutHandle.remove();
        const o20 = "touch" === t23.data.native.pointerType ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
        e14(i27, t23.data) > o20 ? this._startImmediateDoubleClick(t23, m15) : (this._immediateDoubleClick.emit(t23.data, void 0, i27.modifiers), this._removeState(e16));
      } else
        this._startImmediateDoubleClick(t23, m15);
    }
  }
  _startImmediateDoubleClick(t23, e16) {
    const i26 = "touch" === t23.data.native.pointerType ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay;
    e16.immediateDoubleClick = { x: t23.data.x, y: t23.data.y, modifiers: t23.modifiers, timeoutHandle: this._clock.setTimeout(() => this._removeState(t23.data), i26) };
  }
  _removeState(t23) {
    const e16 = c17(t23);
    this._pointerState.delete(e16), this.stopCapturingPointer(t23.native), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/PointerClickHoldAndDrag.js
var o18 = { maximumClickDelay: 300, movementUntilMouseDrag: 1.5, movementUntilPenDrag: 6, movementUntilTouchDrag: 6, holdDelay: 500 };
var r17 = class extends i8 {
  constructor(e16 = o18.maximumClickDelay, i26 = o18.movementUntilMouseDrag, n28 = o18.movementUntilPenDrag, r19 = o18.movementUntilTouchDrag, s19 = o18.holdDelay, a31 = t4) {
    super(false), this._maximumClickDelay = e16, this._movementUntilMouseDrag = i26, this._movementUntilPenDrag = n28, this._movementUntilTouchDrag = r19, this._holdDelay = s19, this._clock = a31, this._pointerState = /* @__PURE__ */ new Map(), this._pointerDrag = this.registerOutgoing("pointer-drag"), this._immediateClick = this.registerOutgoing("immediate-click"), this._pointerHold = this.registerOutgoing("hold"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", (t23) => {
      this._handlePointerLoss(t23, "pointer-up");
    }), this.registerIncoming("pointer-capture-lost", (t23) => {
      this._handlePointerLoss(t23, "pointer-capture-lost");
    }), this.registerIncoming("pointer-cancel", (t23) => {
      this._handlePointerLoss(t23, "pointer-cancel");
    }), this._moveHandle = this.registerIncoming("pointer-move", this._handlePointerMove.bind(this)), this._moveHandle.pause();
  }
  onUninstall() {
    this._pointerState.forEach((t23) => {
      t23.holdTimeout = o2(t23.holdTimeout);
    }), super.onUninstall();
  }
  _handlePointerDown(t23) {
    const e16 = t23.data, i26 = e16.native.pointerId;
    let n28 = null;
    0 === this._pointerState.size && (n28 = this._clock.setTimeout(() => {
      const e17 = this._pointerState.get(i26);
      if (e17) {
        if (!e17.isDragging) {
          const i27 = e17.previousEvent;
          this._pointerHold.emit(i27, void 0, t23.modifiers), e17.holdEmitted = true;
        }
        e17.holdTimeout = null;
      }
    }, this._holdDelay));
    const o20 = { startEvent: e16, previousEvent: e16, startTimestamp: t23.timestamp, isDragging: false, downButton: e16.native.button, holdTimeout: n28, modifiers: /* @__PURE__ */ new Set() };
    this._pointerState.set(i26, o20), this.startCapturingPointer(e16.native), this._moveHandle.resume(), this._pointerState.size > 1 && this._startDragging(t23);
  }
  _createPointerDragData(t23, e16, i26) {
    return { action: t23, startEvent: e16.startEvent, previousEvent: e16.previousEvent, currentEvent: i26 };
  }
  _handlePointerMove(t23) {
    const e16 = t23.data, i26 = e16.native.pointerId, o20 = this._pointerState.get(i26);
    if (o20) {
      if (o20.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("update", o20, e16), void 0, o20.modifiers);
      else {
        n25(e16, o20.startEvent) > this._getDragThreshold(e16.native.pointerType) && this._startDragging(t23);
      }
      o20.previousEvent = e16;
    }
  }
  _getDragThreshold(t23) {
    switch (t23) {
      case "touch":
        return this._movementUntilTouchDrag;
      case "pen":
        return this._movementUntilPenDrag;
      default:
        return this._movementUntilMouseDrag;
    }
  }
  _startDragging(t23) {
    const e16 = t23.data, i26 = e16.native.pointerId;
    this._pointerState.forEach((n28) => {
      null != n28.holdTimeout && (n28.holdTimeout.remove(), n28.holdTimeout = null), n28.isDragging || (n28.modifiers = t23.modifiers, n28.isDragging = true, i26 === n28.startEvent.native.pointerId ? this._pointerDrag.emit(this._createPointerDragData("start", n28, e16)) : this._pointerDrag.emit(this._createPointerDragData("start", n28, n28.previousEvent), t23.timestamp));
    });
  }
  _handlePointerLoss(t23, e16) {
    const i26 = t23.data, n28 = i26.native.pointerId, o20 = this._pointerState.get(n28);
    if (o20) {
      if (null != o20.holdTimeout && (o20.holdTimeout.remove(), o20.holdTimeout = null), o20.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("end", o20, "pointer-up" === e16 ? i26 : o20.previousEvent), void 0, o20.modifiers);
      else if ("pointer-up" === e16 && o20.downButton === i26.native.button) {
        t23.timestamp - o20.startTimestamp <= this._maximumClickDelay && !o20.holdEmitted && this._immediateClick.emit(i26);
      }
      this._pointerState.delete(n28), this.stopCapturingPointer(i26.native), 0 === this._pointerState.size && this._moveHandle.pause();
    }
  }
};

// node_modules/@arcgis/core/views/2d/input/MapViewInputManager.js
var z4 = { counter: "Ctrl", pan: { left: "ArrowLeft", right: "ArrowRight", up: "ArrowUp", down: "ArrowDown" }, zoom: { zoomIn: ["=", "+"], zoomOut: ["-", "_"] }, rotate: { clockwiseOption1: "a", clockwiseOption2: "A", counterClockwiseOption1: "d", counterClockwiseOption2: "D", resetOption1: "n", resetOption2: "N" } };
var k2 = class extends m {
  constructor() {
    super(...arguments), this._handles = new t3();
  }
  initialize() {
    const e16 = () => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.ready;
    };
    this._handles.add([f2(() => !e16(), () => this._disconnect()), f2(e16, () => this._connect())]);
  }
  destroy() {
    this._handles = l(this._handles), this._disconnect();
  }
  get latestPointerType() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerType;
  }
  get latestPointerLocation() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerLocation;
  }
  get multiTouchActive() {
    var _a;
    return ((_a = this._inputManager) == null ? void 0 : _a.multiTouchActive) ?? false;
  }
  _disconnect() {
    this.view.viewEvents.disconnect(), this._inputManager = l(this._inputManager);
  }
  _connect() {
    const e16 = this.view.surface, t23 = new c16(e16, this.view.input), o20 = [new m10(), new r17(), new m9(), new s17(this.view.navigation), new p15()], r19 = new d6({ eventSource: t23, recognizers: o20 });
    r19.installHandlers("prevent-context-menu", [new e13()], _3.INTERNAL), r19.installHandlers("navigation", [new a22(this.view), new d11(this.view), new o15(this.view), new a20(this.view), new a20(this.view, [z4.counter]), new n22(this.view, "primary"), new i20(this.view, z4.pan), new e11(this.view, z4.zoom), new i21(this.view, z4.rotate), new o14(this.view, "secondary"), new e10(this.view, "touch")], _3.INTERNAL), this.view.viewEvents.connect(r19), this._source = t23, this._inputManager = r19, l3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.navigation) == null ? void 0 : _b.browserTouchPanEnabled;
    }, (e17) => {
      this._source && (this._source.browserTouchPanningEnabled = !e17);
    }, h);
  }
  get test() {
    return { inputManager: this._inputManager };
  }
};
e([y2()], k2.prototype, "view", void 0), e([y2()], k2.prototype, "latestPointerType", null), e([y2()], k2.prototype, "latestPointerLocation", null), e([y2()], k2.prototype, "multiTouchActive", null), k2 = e([a3("esri.views.2d.input.MapViewInputManager")], k2);
var C3 = k2;

// node_modules/@arcgis/core/views/support/createScreenshotPlan.js
function t20(t23, h13, i26, e16, l17, d16, n28, o20) {
  t23.ignorePadding && (e16 = { left: 0, right: 0, top: 0, bottom: 0 });
  let u9 = null;
  null != t23.width && null != t23.height ? u9 = [t23.width, t23.height] : null == t23.width && null != t23.height ? u9 = [t23.height, t23.height] : null != t23.width && null == t23.height ? u9 = [t23.width, t23.width] : null == t23.width && null == t23.height && (u9 = null);
  const r19 = i26[0] - (e16.left + e16.right), a31 = i26[1] - (e16.top + e16.bottom);
  let g11, w9, c23 = t23.area || { x: 0, y: 0, width: r19, height: a31 };
  if (u9) {
    const t24 = r19 / a31, h14 = u9[0] / u9[1];
    if (h14 > t24) {
      const t25 = c23.width / h14;
      c23 = { x: c23.x, y: Math.round(c23.y + (c23.height - t25) / 2), width: c23.width, height: Math.round(t25) };
    } else {
      const t25 = c23.height * h14;
      c23 = { x: Math.round(c23.x + (c23.width - t25) / 2), y: c23.y, width: Math.round(t25), height: c23.height };
    }
  } else
    u9 = [c23.width, c23.height];
  u9[0] > c23.width ? (g11 = Math.min(u9[0] / c23.width, h13), w9 = u9[0] / c23.width / g11) : (g11 = 1, w9 = u9[0] / c23.width);
  return { resolutionScale: g11, cropArea: { x: Math.round((c23.x + e16.left) * g11), y: Math.round((c23.y + e16.top) * g11), width: Math.round(c23.width * g11), height: Math.round(c23.height * g11) }, outputScale: w9, format: l17, quality: d16, children: n28, rotation: o20 };
}

// node_modules/@arcgis/core/views/support/WebGLRequirements.js
function i22(i26) {
  const s19 = n13(i26);
  if (!s19.available)
    return new s2("webgl:required", "3d" === i26 ? "WebGL2 is required but not supported." : "WebGL is required but not supported.", new Error().stack);
  if ("3d" === i26 && s19.majorPerformanceCaveat)
    return new s2("webgl:major-performance-caveat-detected", "Your WebGL implementation doesn't seem to support hardware accelerated rendering. Check your browser settings or if your GPU is in a blocklist.");
  if (!s19.supportsHighPrecisionFragment)
    return new s2("webgl:high-precision-fragment-required", "WebGL support for high precision fragment shaders is required but not supported.");
  if (!s19.supportsVertexShaderSamplers)
    return new s2("webgl:vertex-shader-samplers-required", "WebGL support for vertex shader samplers is required but not supported.");
  if (s19.type === n12.WEBGL1) {
    if (!s19.supportsElementIndexUint)
      return new s2("webgl:element-index-uint-required", "WebGL support for uint vertex indices is required but not supported.");
    if (!s19.supportsStandardDerivatives)
      return new s2("webgl:standard-derivatives-required", "WebGL support for standard derivatives is required but not supported.");
    if (!s19.supportsInstancedArrays)
      return new s2("webgl:instanced-arrays-required", "WebGL support for instanced rendering is required but not supported.");
  }
  return null;
}

// node_modules/@arcgis/core/views/ui/Component.js
function i23(t23) {
  return t23 && "nodeType" in t23;
}
function d12(t23) {
  return t23 && "function" == typeof t23.render;
}
var c18 = { component: "esri-component" };
var p17 = class extends m {
  constructor() {
    super(...arguments), this.widget = null;
  }
  destroy() {
    var _a;
    this.node = null, (_a = this.widget) == null ? void 0 : _a.destroy();
  }
  get id() {
    return this.get("widget.id") || this.get("node.id");
  }
  set node(t23) {
    const o20 = this._get("node");
    t23 !== o20 && (t23 && t23.classList.add(c18.component), o20 && o20.classList.remove(c18.component), this._set("node", t23));
  }
  castNode(t23) {
    var _a;
    return (_a = this.widget) == null ? void 0 : _a.destroy(), t23 ? "string" == typeof t23 || i23(t23) ? (this._set("widget", null), e4(t23)) : (d12(t23) && !t23.domNode && (t23.domNode = document.createElement("div")), this._set("widget", t23), t23.domNode) : (this._set("widget", null), null);
  }
};
e([y2({ dependsOn: [] })], p17.prototype, "id", null), e([y2()], p17.prototype, "node", null), e([s6("node")], p17.prototype, "castNode", null), e([y2({ readOnly: true })], p17.prototype, "widget", void 0), p17 = e([a3("esri.views.ui.Component")], p17);
var l15 = p17;

// node_modules/@arcgis/core/views/ui/UI.js
var f11 = { left: 0, top: 0, bottom: 0, right: 0 };
var _6 = { bottom: 30, top: 15, right: 15, left: 15 };
var g8 = "esri-ui";
var y7 = { ui: g8, corner: `${g8}-corner`, innerContainer: `${g8}-inner-container`, manualContainer: `${g8}-manual-container`, cornerContainer: `${g8}-corner-container`, topLeft: `${g8}-top-left`, topRight: `${g8}-top-right`, bottomLeft: `${g8}-bottom-left`, bottomRight: `${g8}-bottom-right` };
function C4(t23) {
  return t23 && !t23._started && "function" == typeof t23.postMixInProperties && "function" == typeof t23.buildRendering && "function" == typeof t23.postCreate && "function" == typeof t23.startup;
}
function v6(t23) {
  return 0 === t23 ? "0" : `${t23}px`;
}
function b2(t23) {
  const o20 = "object" == typeof t23 && null !== t23 && Object.getPrototypeOf(t23);
  return (null === o20 || o20 === Object.prototype) && ("component" in t23 || "index" in t23 || "position" in t23) ? t23 : null;
}
function w8(t23, { top: o20, bottom: n28, left: i26, right: e16 }) {
  t23.style.top = o20, t23.style.bottom = n28, t23.style.left = i26, t23.style.right = e16;
}
var P2 = class extends n4.EventedAccessor {
  constructor(t23) {
    super(t23), this._cornerNameToContainerLookup = {}, this._positionNameToContainerLookup = {}, this._components = new Array(), this._componentMap = /* @__PURE__ */ new Map(), this._locale = c2(), this.view = null, this._applyViewPadding = () => {
      const t24 = this.container;
      t24 && w8(t24, this._toPixelPosition(this._getViewPadding()));
    }, this._applyUIPadding = () => {
      const t24 = this._innerContainer;
      t24 && w8(t24, this._toPixelPosition(this.padding));
    }, this._initContainers();
  }
  initialize() {
    this.addHandles([l3(() => {
      var _a;
      return [(_a = this.view) == null ? void 0 : _a.padding, this.container];
    }, this._applyViewPadding, h), l3(() => this.padding, this._applyUIPadding, h), l3(() => [this.container, this._locale], ([t23, o20]) => {
      t23 && t23.setAttribute("lang", o20);
    }, h), s5((t23) => {
      this._locale = t23;
    })]);
  }
  destroy() {
    this.container = null;
    for (const t23 of this._components)
      t23.destroy();
    this._components.length = 0, this._componentMap.clear();
  }
  set container(t23) {
    const o20 = this._get("container");
    t23 !== o20 && (t23 && (t23.classList.add(y7.ui), n7(t23), this._attachContainers(t23)), o20 && (o20.classList.remove(y7.ui), w8(o20, { top: "", bottom: "", left: "", right: "" }), n5(o20)), this._set("container", t23));
  }
  get height() {
    var _a;
    const t23 = ((_a = this.view) == null ? void 0 : _a.height) ?? 0;
    if (0 === t23)
      return t23;
    const o20 = this._getViewPadding(), { top: n28, bottom: i26 } = o20;
    return Math.max(t23 - n28 - i26, 0);
  }
  get padding() {
    return this._get("padding");
  }
  set padding(t23) {
    this._overrideIfSome("padding", t23);
  }
  castPadding(t23) {
    return "number" == typeof t23 ? { bottom: t23, top: t23, right: t23, left: t23 } : { ..._6, ...t23 };
  }
  get width() {
    var _a;
    const t23 = ((_a = this.view) == null ? void 0 : _a.width) ?? 0;
    if (0 === t23)
      return t23;
    const o20 = this._getViewPadding(), { left: n28, right: i26 } = o20;
    return Math.max(t23 - n28 - i26, 0);
  }
  add(t23, o20) {
    let n28, i26, e16;
    if (Array.isArray(t23))
      return void t23.forEach((t24) => this.add(t24, o20));
    const r19 = b2(t23);
    r19 && ({ index: n28, position: o20, component: t23, key: i26 } = r19), o20 && "object" == typeof o20 && ({ index: n28, key: i26, position: o20, internal: e16 } = o20), !t23 || o20 && !this._isValidPosition(o20) || this._add(t23, o20, n28, i26, e16);
  }
  remove(t23, o20) {
    var _a;
    if (!t23)
      return;
    if (Array.isArray(t23))
      return t23.map((t24) => this.remove(t24, o20));
    const n28 = this._find(t23);
    if (n28) {
      if (this._componentMap.has(t23) && ((_a = this._componentMap.get(t23)) == null ? void 0 : _a.key) !== o20)
        return;
      const i26 = this._components.indexOf(n28), e16 = n28.node.parentNode;
      return e16 == null ? void 0 : e16.removeChild(n28.node), this._componentMap.delete(t23), this._components.splice(i26, 1)[0];
    }
  }
  empty(t23, o20 = { removeInternal: false }) {
    if (Array.isArray(t23)) {
      for (const n29 of t23)
        this.empty(n29, o20);
      return;
    }
    const n28 = this._positionNameToContainerLookup[t23 ?? "manual"], i26 = Array.prototype.slice.call(n28.children).map((t24) => this._findByNode(t24)).filter((t24) => {
      var _a;
      if (null == t24)
        return false;
      return !(((_a = this._componentMap.get(t24)) == null ? void 0 : _a.internal) ?? false) || o20.removeInternal;
    });
    for (const e16 of i26)
      this.remove(e16);
  }
  move(t23, o20) {
    if (Array.isArray(t23) && t23.forEach((t24) => this.move(t24, o20)), !t23)
      return;
    let n28;
    const i26 = b2(t23) || b2(o20);
    if (i26 && (n28 = i26.index, o20 = i26.position, t23 = i26.component || t23), o20 && !this._isValidPosition(o20))
      return;
    const e16 = this.remove(t23);
    e16 && this.add(e16, { position: o20, index: n28 });
  }
  find(t23) {
    if (!t23)
      return null;
    const o20 = this._findById(t23);
    return o20 && (o20.widget || o20.node);
  }
  getComponents(t23, o20 = { includeInternal: false }) {
    return t23 ? Array.isArray(t23) ? t23.map((t24) => this._getComponentsAtPosition(t24, o20)).flat() : this._getComponentsAtPosition(t23, o20) : this._components.filter((t24) => {
      var _a;
      return o20.includeInternal || !((_a = this._componentMap.get(t24)) == null ? void 0 : _a.internal);
    }).map(({ widget: t24, node: o21 }) => t24 ?? o21);
  }
  getPosition(t23) {
    for (const o20 in this._positionNameToContainerLookup) {
      if (this._positionNameToContainerLookup[o20].contains(t23))
        return o20;
    }
    return null;
  }
  _add(t23, o20, n28, i26, e16) {
    t23 instanceof l15 || (t23 = new l15({ node: t23 })), this._place({ component: t23, position: o20, index: n28 }), this._components.push(t23), this._componentMap.set(t23, { key: i26, internal: e16 });
  }
  _find(t23) {
    return t23 ? t23 instanceof l15 ? this._findByComponent(t23) : "string" == typeof t23 ? this._findById(t23) : this._findByNode(t23.domNode || t23) : null;
  }
  _getViewPadding() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.padding) ?? f11;
  }
  _attachContainers(t23) {
    t23.appendChild(this._innerContainer), t23.appendChild(this._manualContainer);
  }
  _initContainers() {
    const t23 = document.createElement("div");
    t23.classList.add(y7.innerContainer, y7.cornerContainer);
    const o20 = document.createElement("div");
    o20.classList.add(y7.innerContainer, y7.manualContainer);
    const n28 = document.createElement("div");
    n28.classList.add(y7.topLeft, y7.corner), t23.appendChild(n28);
    const i26 = document.createElement("div");
    i26.classList.add(y7.topRight, y7.corner), t23.appendChild(i26);
    const e16 = document.createElement("div");
    e16.classList.add(y7.bottomLeft, y7.corner), t23.appendChild(e16);
    const r19 = document.createElement("div");
    r19.classList.add(y7.bottomRight, y7.corner), t23.appendChild(r19), this._innerContainer = t23, this._manualContainer = o20;
    const s19 = h2();
    this._cornerNameToContainerLookup = { "top-left": n28, "top-right": i26, "bottom-left": e16, "bottom-right": r19, "top-leading": s19 ? i26 : n28, "top-trailing": s19 ? n28 : i26, "bottom-leading": s19 ? r19 : e16, "bottom-trailing": s19 ? e16 : r19 }, this._positionNameToContainerLookup = { manual: o20, ...this._cornerNameToContainerLookup };
  }
  _isValidPosition(t23) {
    return !!this._positionNameToContainerLookup[t23];
  }
  _place(t23) {
    const o20 = t23.position ?? "manual", { component: n28, index: e16 } = t23, r19 = this._positionNameToContainerLookup[o20], s19 = null != e16 && e16 > -1;
    if (C4(n28.widget) && n28.widget.startup(), !s19)
      return void r19.appendChild(n28.node);
    const a31 = Array.from(r19.children);
    if (0 === e16)
      return void (r19.firstChild ? o3(n28.node, r19.firstChild) : r19.appendChild(n28.node));
    e16 >= a31.length ? r19.appendChild(n28.node) : o3(n28.node, a31[e16]);
  }
  _toPixelPosition(t23) {
    return { top: v6(t23.top), left: v6(t23.left), right: v6(t23.right), bottom: v6(t23.bottom) };
  }
  _findByComponent(t23) {
    return this._components.find((o20) => o20 === t23) ?? null;
  }
  _findById(t23) {
    return this._components.find(({ id: o20 }) => o20 === t23) ?? null;
  }
  _findByNode(t23) {
    return this._components.find(({ node: o20 }) => o20 === t23) ?? null;
  }
  _getComponentsAtPosition(t23, n28) {
    const i26 = this._positionNameToContainerLookup[t23];
    return Array.prototype.slice.call(i26.children).map((t24) => this._findByNode(t24)).filter(R).filter((t24) => {
      var _a;
      return n28.includeInternal || !((_a = this._componentMap.get(t24)) == null ? void 0 : _a.internal);
    }).map(({ widget: t24, node: o20 }) => t24 ?? o20);
  }
};
e([y2()], P2.prototype, "_locale", void 0), e([y2()], P2.prototype, "container", null), e([y2()], P2.prototype, "height", null), e([y2({ value: _6 })], P2.prototype, "padding", null), e([s6("padding")], P2.prototype, "castPadding", null), e([y2()], P2.prototype, "view", void 0), e([y2()], P2.prototype, "width", null), P2 = e([a3("esri.views.ui.UI")], P2);
var L2 = P2;

// node_modules/@arcgis/core/widgets/Attribution/AttributionViewModel.js
function m11(t23, e16) {
  return t23 && "copyright" in t23 && (!e16 || "function" == typeof t23.originOf && "user" === t23.originOf("copyright"));
}
function f12(t23, e16) {
  return t23.length !== e16.length || t23.some((t24, i26) => t24.text !== e16[i26].text);
}
function y8(t23, e16, i26) {
  if (!i26 || !e16)
    return;
  t23.find((t24) => t24.layerView === e16 && t24.text === i26) || t23.push({ text: i26, layerView: e16 });
}
function b3(t23) {
  return "bing-maps" === t23.type;
}
var g9 = [];
var _7 = class extends d4 {
  constructor(t23) {
    super(t23), this._clear = () => {
      this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.handles.remove("suspension"), this.notifyChange("state");
    }, this._pendingAttributions = /* @__PURE__ */ new Set(), this._fetchedAttributionData = /* @__PURE__ */ new Map(), this.items = new V(), this.view = null, this._allLayerViewsChange = (t24) => {
      this.handles.remove("suspension");
      const e16 = this.get("view.allLayerViews");
      e16 && this.handles.add(e16.map((t25) => l3(() => {
        var _a;
        return [t25.suspended, (_a = t25.layer) == null ? void 0 : _a.attributionVisible];
      }, () => this._updateAttributionItems())), "suspension"), t24 && t24.removed && t24.removed.forEach((t25) => {
        this._pendingAttributions.delete(t25), this._fetchedAttributionData.delete(t25);
      }), this._updateAttributionItems();
    }, this.handles.add([a4(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.allLayerViews;
    }, "change", (t24) => this._allLayerViewsChange(t24), { onListenerAdd: () => this._allLayerViewsChange(), onListenerRemove: this._clear }), f2(() => {
      var _a;
      return true === ((_a = this.view) == null ? void 0 : _a.stationary);
    }, () => this._updateAttributionItems())]);
  }
  destroy() {
    this.view = null, this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.items.removeAll();
  }
  get state() {
    return this.get("view.ready") ? this._pendingAttributions.size > 0 ? "loading" : "ready" : "disabled";
  }
  _updateAttributionItems() {
    const t23 = this.view, e16 = t23 == null ? void 0 : t23.allLayerViews;
    g9.length = 0, t23 && e16 ? (e16.forEach((e17) => {
      var _a;
      if (e17.suspended || !((_a = e17.layer) == null ? void 0 : _a.attributionVisible))
        return;
      const i26 = e17.layer;
      if (m11(i26, "user"))
        return void y8(g9, e17, i26.copyright);
      if (i26.hasAttributionData) {
        if (this._fetchedAttributionData.has(e17)) {
          const r20 = this._fetchedAttributionData.get(e17);
          return void (r20 ? y8(g9, e17, this._getDynamicAttribution(r20, t23, i26)) : m11(i26) && y8(g9, e17, i26.copyright));
        }
        return void this._fetchAttributionData(e17);
      }
      const r19 = i26.get("portalItem.accessInformation");
      y8(g9, e17, r19 || i26.copyright);
    }), f12(this.items, g9) && (this.items.removeAll(), this.items.addMany(g9)), g9.length = 0, this.notifyChange("state")) : this._clear();
  }
  async _fetchAttributionData(t23) {
    if (this._pendingAttributions.has(t23))
      return;
    this._pendingAttributions.add(t23);
    const i26 = await _2(t23.layer.fetchAttributionData());
    if (this._pendingAttributions.has(t23)) {
      const e16 = i26.ok ? this._createContributionIndex(i26.value, b3(t23.layer)) : null;
      this._pendingAttributions.delete(t23), this._fetchedAttributionData.set(t23, e16);
    }
    this._updateAttributionItems();
  }
  _createContributionIndex(t23, e16) {
    const i26 = t23.contributors, r19 = {};
    if (!i26)
      return r19;
    for (let o20 = 0; o20 < i26.length; o20++) {
      const t24 = i26[o20], s19 = t24.coverageAreas;
      if (!s19)
        return;
      for (const i27 of s19) {
        const s20 = i27.bbox, n28 = i27.zoomMin - (e16 && i27.zoomMin ? 1 : 0), a31 = i27.zoomMax - (e16 && i27.zoomMax ? 1 : 0), c23 = new M({ xmin: s20[1], ymin: s20[0], xmax: s20[3], ymax: s20[2], spatialReference: f.WGS84 }), l17 = { extent: d3(c23), attribution: t24.attribution || "", score: null != i27.score ? i27.score : 100, id: o20 };
        for (let t25 = n28; t25 <= a31; t25++)
          r19[t25] ?? (r19[t25] = []), r19[t25].push(l17);
      }
    }
    return r19.maxKey = Math.max.apply(null, Object.keys(r19)), r19;
  }
  _getDynamicAttribution(t23, e16, i26) {
    var _a;
    const { extent: r19, scale: o20 } = e16;
    let s19 = ((_a = i26.tileInfo) == null ? void 0 : _a.scaleToZoom(o20)) ?? 0;
    if (s19 = Math.min(t23.maxKey ?? 0, Math.round(s19)), !r19 || null == s19 || s19 <= -1)
      return "";
    const n28 = t23[s19], a31 = g2(r19.center.clone().normalize(), e16.spatialReference), c23 = /* @__PURE__ */ new Set();
    return n28 ? n28.filter((t24) => {
      const e17 = t24.id, i27 = !c23.has(e17) && a31 && t24.extent && t6(t24.extent, a31);
      return i27 && c23.add(e17), i27;
    }).sort((t24, e17) => e17.score - t24.score || t24.objectId - e17.objectId).map((t24) => t24.attribution).join(", ") : "";
  }
};
e([y2({ readOnly: true, type: V })], _7.prototype, "items", void 0), e([y2({ readOnly: true })], _7.prototype, "state", null), e([y2()], _7.prototype, "view", void 0), _7 = e([a3("esri.widgets.Attribution.AttributionViewModel")], _7);
var A3 = _7;

// node_modules/@arcgis/core/widgets/Attribution.js
var l16 = "esri-attribution";
var d13 = { base: `${l16} esri-widget`, poweredBy: `${l16}__powered-by`, sources: `${l16}__sources`, open: `${l16}--open`, sourcesOpen: `${l16}__sources--open`, link: `${l16}__link`, widgetIcon: "esri-icon-description", interactive: "esri-interactive" };
var a26 = class extends W {
  constructor(e16, t23) {
    super(e16, t23), this._isOpen = false, this._attributionTextOverflowed = false, this._prevSourceNodeHeight = 0, this._resizeObserver = new ResizeObserver((e17) => e17.forEach(({ target: e18 }) => this._checkSourceTextOverflow(e18))), this.iconClass = d13.widgetIcon, this.icon = null, this.itemDelimiter = " | ", this.messages = null, this.viewModel = new A3();
  }
  initialize() {
    this.addHandles(a4(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.items;
    }, "change", () => this.scheduleRender()));
  }
  destroy() {
    var _a;
    (_a = this._resizeObserver) == null ? void 0 : _a.disconnect();
  }
  get _isInteractive() {
    return this._isOpen || this._attributionTextOverflowed;
  }
  get attributionText() {
    return this.viewModel.items.reduce((e16, t23) => (e16.includes(t23.text) || e16.push(t23.text), e16), []).join(this.itemDelimiter);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e16) {
    this._overrideIfSome("label", e16);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e16) {
    this.viewModel.view = e16;
  }
  render() {
    const e16 = { [d13.open]: this._isOpen };
    return n6("div", { bind: this, class: this.classes(d13.base, e16), dir: "ltr", onclick: this._toggleState, onkeydown: this._toggleState }, this.renderSourcesNode(), this.renderPoweredBy());
  }
  renderPoweredBy() {
    return n6("div", { class: d13.poweredBy }, "Powered by", " ", n6("a", { class: d13.link, href: "http://www.esri.com/", target: "_blank", rel: "noreferrer" }, "Esri"));
  }
  renderSourcesNode() {
    const e16 = this._isOpen, t23 = this._isInteractive, i26 = t23 ? "0" : "", { attributionText: r19 } = this, s19 = { [d13.sourcesOpen]: e16, [d13.interactive]: t23 };
    return n6("div", { afterCreate: this._afterSourcesNodeCreate, bind: this, class: this.classes(d13.sources, s19), innerHTML: r19, tabindex: i26 });
  }
  _afterSourcesNodeCreate(e16) {
    this._prevSourceNodeHeight = e16.clientWidth, this._resizeObserver.observe(e16);
  }
  _checkSourceTextOverflow(e16) {
    let t23 = false;
    const { clientHeight: i26, clientWidth: r19, scrollWidth: s19 } = e16, o20 = s19 > r19, n28 = this._attributionTextOverflowed !== o20;
    if (this._attributionTextOverflowed = o20, n28 && (t23 = true), this._isOpen) {
      const e17 = i26 < this._prevSourceNodeHeight;
      this._prevSourceNodeHeight = i26, e17 && (this._isOpen = false, t23 = true);
    }
    t23 && this.scheduleRender();
  }
  _toggleState() {
    this._isInteractive && (this._isOpen = !this._isOpen);
  }
};
e([y2()], a26.prototype, "_isOpen", void 0), e([y2()], a26.prototype, "_isInteractive", null), e([y2()], a26.prototype, "_attributionTextOverflowed", void 0), e([y2()], a26.prototype, "_prevSourceNodeHeight", void 0), e([y2({ readOnly: true, dependsOn: ["viewModel.items.length", "itemDelimiter"] })], a26.prototype, "attributionText", null), e([y2()], a26.prototype, "iconClass", void 0), e([y2()], a26.prototype, "icon", void 0), e([y2()], a26.prototype, "itemDelimiter", void 0), e([y2()], a26.prototype, "label", null), e([y2(), e5("esri/widgets/Attribution/t9n/Attribution")], a26.prototype, "messages", void 0), e([y2()], a26.prototype, "view", null), e([y2({ type: A3 })], a26.prototype, "viewModel", void 0), e([t5()], a26.prototype, "_toggleState", null), a26 = e([a3("esri.widgets.Attribution")], a26);
var h10 = a26;

// node_modules/@arcgis/core/widgets/Compass/CompassViewModel.js
var h11 = "esri.widgets.CompassViewModel";
var d14 = class extends t9(m) {
  constructor(t23) {
    super(t23), this._handles = new t3(), this.orientation = { x: 0, y: 0, z: 0 }, this.view = null, this._updateForCamera = this._updateForCamera.bind(this), this._updateForRotation = this._updateForRotation.bind(this), this._updateRotationWatcher = this._updateRotationWatcher.bind(this);
  }
  initialize() {
    this._handles.add(l3(() => this.view, this._updateRotationWatcher, h));
  }
  destroy() {
    o2(this._handles), this.view = null;
  }
  get canShowNorth() {
    const t23 = this.get("view.spatialReference");
    return !(!t23 || !t23.isWebMercator && !t23.isGeographic);
  }
  get state() {
    return this.get("view.ready") ? this.canShowNorth ? "compass" : "rotation" : "disabled";
  }
  reset() {
    var _a;
    if (!this.get("view.ready"))
      return;
    const t23 = {};
    "2d" === ((_a = this.view) == null ? void 0 : _a.type) ? t23.rotation = 0 : t23.heading = 0, this.callGoTo({ target: t23 });
  }
  _updateForRotation(t23) {
    null != t23 && (this.orientation = { z: t23 });
  }
  _updateForCamera(t23) {
    if (!t23)
      return;
    const o20 = -t23.heading;
    this.orientation = { x: 0, y: 0, z: o20 };
  }
  _updateRotationWatcher(t23) {
    this._handles.removeAll(), t23 && this._handles.add("2d" === t23.type ? l3(() => t23 == null ? void 0 : t23.rotation, this._updateForRotation, h) : l3(() => t23 == null ? void 0 : t23.camera, this._updateForCamera, h));
  }
};
e([y2({ readOnly: true })], d14.prototype, "canShowNorth", null), e([y2()], d14.prototype, "orientation", void 0), e([y2({ readOnly: true })], d14.prototype, "state", null), e([y2()], d14.prototype, "view", void 0), d14 = e([a3(h11)], d14);
var c19 = d14;

// node_modules/@arcgis/core/widgets/Compass/css.js
var i24 = { base: "esri-compass esri-widget--button esri-widget", text: "esri-icon-font-fallback-text", icon: "esri-compass__icon", rotationIcon: "esri-icon-dial", northIcon: "esri-icon-compass", widgetIcon: "esri-icon-locate-circled", interactive: "esri-interactive", disabled: "esri-disabled" };

// node_modules/@arcgis/core/widgets/Compass.js
var n26 = class extends W {
  constructor(e16, s19) {
    super(e16, s19), this.iconClass = i24.widgetIcon, this.icon = null, this.messages = null, this.viewModel = new c19();
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e16) {
    this.viewModel.goToOverride = e16;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e16) {
    this._overrideIfSome("label", e16);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e16) {
    this.viewModel.view = e16;
  }
  reset() {
    return this.viewModel.reset();
  }
  render() {
    const { orientation: e16, state: s19 } = this.viewModel, o20 = "disabled" === s19, t23 = "compass" === ("rotation" === s19 ? "rotation" : "compass"), r19 = o20 ? -1 : 0, a31 = { [i24.disabled]: o20, [i24.interactive]: !o20 }, p22 = { [i24.northIcon]: t23, [i24.rotationIcon]: !t23 }, { messages: n28 } = this;
    return n6("div", { bind: this, class: this.classes(i24.base, a31), onclick: this._reset, onkeydown: this._reset, role: "button", tabIndex: r19, "aria-label": n28.reset, title: n28.reset }, n6("span", { "aria-hidden": "true", class: this.classes(i24.icon, p22), styles: this._toRotationTransform(e16) }), n6("span", { class: i24.text }, n28.reset));
  }
  _reset() {
    this.viewModel.reset();
  }
  _toRotationTransform(e16) {
    return { transform: `rotateZ(${e16.z}deg)` };
  }
};
e([y2()], n26.prototype, "goToOverride", null), e([y2()], n26.prototype, "iconClass", void 0), e([y2()], n26.prototype, "icon", void 0), e([y2()], n26.prototype, "label", null), e([y2(), e5("esri/widgets/Compass/t9n/Compass")], n26.prototype, "messages", void 0), e([y2()], n26.prototype, "view", null), e([y2({ type: c19 })], n26.prototype, "viewModel", void 0), e([t5()], n26.prototype, "_reset", null), n26 = e([a3("esri.widgets.Compass")], n26);
var d15 = n26;

// node_modules/@arcgis/core/widgets/NavigationToggle/css.js
var t21 = "esri-navigation-toggle";
var o19 = { base: `${t21} esri-widget`, button: `${t21}__button esri-widget--button`, activeButton: `${t21}__button--active`, panButton: `${t21}__button--pan`, rotateButton: `${t21}__button--rotate`, isLayoutHorizontal: `${t21}--horizontal`, rotationIcon: "esri-icon-rotate", panIcon: "esri-icon-pan", widgetIcon: "esri-icon-pan2", disabled: "esri-disabled" };

// node_modules/@arcgis/core/widgets/NavigationToggle/NavigationToggleViewModel.js
var r18 = class extends m {
  constructor(t23) {
    super(t23), this.navigationMode = "pan", this.view = null;
  }
  initialize() {
    this.own(f2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.inputManager;
    }, () => this._setNavigationMode()));
  }
  destroy() {
    this.view = null;
  }
  get state() {
    var _a;
    return this.get("view.ready") && "3d" === ((_a = this.view) == null ? void 0 : _a.type) ? "ready" : "disabled";
  }
  toggle() {
    "disabled" !== this.state && (this.navigationMode = "pan" !== this.navigationMode ? "pan" : "rotate", this._setNavigationMode());
  }
  _setNavigationMode() {
    this.get("view.inputManager").primaryDragAction = "pan" === this.navigationMode ? "pan" : "rotate";
  }
};
e([y2({ readOnly: true })], r18.prototype, "state", null), e([y2()], r18.prototype, "navigationMode", void 0), e([y2()], r18.prototype, "view", void 0), r18 = e([a3("esri.widgets.NavigationToggleViewModel")], r18);
var a27 = r18;

// node_modules/@arcgis/core/widgets/NavigationToggle.js
var p18 = class extends W {
  constructor(t23, o20) {
    super(t23, o20), this.iconClass = o19.widgetIcon, this.icon = null, this.messages = null, this.viewModel = new a27();
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(t23) {
    this._overrideIfSome("label", t23);
  }
  set layout(t23) {
    "horizontal" !== t23 && (t23 = "vertical"), this._set("layout", t23);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(t23) {
    this.viewModel.view = t23;
  }
  toggle() {
    return this.viewModel.toggle();
  }
  render() {
    const t23 = "disabled" === this.get("viewModel.state"), o20 = "pan" === this.get("viewModel.navigationMode"), e16 = { [o19.disabled]: t23, [o19.isLayoutHorizontal]: "horizontal" === this.layout }, s19 = { [o19.activeButton]: o20 }, r19 = { [o19.activeButton]: !o20 }, a31 = t23 ? -1 : 0, l17 = this.messages.toggle;
    return n6("div", { bind: this, class: this.classes(o19.base, e16), onclick: this._toggle, onkeydown: this._toggle, tabIndex: a31, "aria-label": l17, title: l17 }, n6("div", { class: this.classes(o19.button, o19.panButton, s19) }, n6("span", { class: o19.panIcon })), n6("div", { class: this.classes(o19.button, o19.rotateButton, r19) }, n6("span", { class: o19.rotationIcon })));
  }
  _toggle() {
    this.toggle();
  }
};
e([y2()], p18.prototype, "iconClass", void 0), e([y2()], p18.prototype, "icon", void 0), e([y2()], p18.prototype, "label", null), e([y2({ value: "vertical" })], p18.prototype, "layout", null), e([y2(), e5("esri/widgets/NavigationToggle/t9n/NavigationToggle")], p18.prototype, "messages", void 0), e([y2()], p18.prototype, "view", null), e([y2({ type: a27 })], p18.prototype, "viewModel", void 0), e([t5()], p18.prototype, "_toggle", null), p18 = e([a3("esri.widgets.NavigationToggle")], p18);
var g10 = p18;

// node_modules/@arcgis/core/widgets/Zoom/IconButton.js
var c20 = { button: "esri-widget--button esri-widget", disabled: "esri-disabled", interactive: "esri-interactive", iconText: "esri-icon-font-fallback-text", icon: "esri-icon" };
var n27 = class extends W {
  constructor() {
    super(...arguments), this.enabled = true, this.iconClass = null, this.icon = null, this.title = "";
  }
  render() {
    const t23 = this.enabled ? 0 : -1, s19 = { [c20.disabled]: !this.enabled, [c20.interactive]: this.enabled };
    return n6("div", { bind: this, class: this.classes(c20.button, s19), onclick: this._triggerAction, onkeydown: this._triggerAction, role: "button", tabIndex: t23, title: this.title }, n6("span", { "aria-hidden": "true", role: "presentation", class: this.classes(c20.icon, this.iconClass ?? "") }), n6("span", { class: c20.iconText }, this.title));
  }
  _triggerAction() {
    this.action.call(this);
  }
};
e([y2()], n27.prototype, "action", void 0), e([y2()], n27.prototype, "enabled", void 0), e([y2()], n27.prototype, "iconClass", void 0), e([y2()], n27.prototype, "icon", void 0), e([y2()], n27.prototype, "title", void 0), e([t5()], n27.prototype, "_triggerAction", null), n27 = e([a3("esri.widgets.IconButton")], n27);
var a28 = n27;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions2D.js
var s18 = class extends m {
  get canZoomIn() {
    if (!this.get("view.ready"))
      return false;
    const e16 = this.get("view.animation.target.scale") || this.get("view.scale"), t23 = this.get("view.constraints.effectiveMaxScale");
    return 0 === t23 || e16 > t23;
  }
  get canZoomOut() {
    if (!this.get("view.ready"))
      return false;
    const e16 = this.get("view.animation.target.scale") || this.get("view.scale"), t23 = this.get("view.constraints.effectiveMinScale");
    return 0 === t23 || e16 < t23;
  }
};
e([y2({ readOnly: true })], s18.prototype, "canZoomIn", null), e([y2({ readOnly: true })], s18.prototype, "canZoomOut", null), e([y2()], s18.prototype, "view", void 0), s18 = e([a3("esri.widgets.Zoom.ZoomConditions2D")], s18);
var i25 = s18;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions3D.js
var t22 = class extends m {
  get canZoomIn() {
    return !!this.view.ready;
  }
  get canZoomOut() {
    return !!this.view.ready;
  }
};
e([y2({ readOnly: true })], t22.prototype, "canZoomIn", null), e([y2({ readOnly: true })], t22.prototype, "canZoomOut", null), e([y2()], t22.prototype, "view", void 0), t22 = e([a3("esri.widgets.Zoom.ZoomConditions3D")], t22);
var c21 = t22;

// node_modules/@arcgis/core/widgets/Zoom/ZoomViewModel.js
var m12 = class extends m {
  constructor(o20) {
    super(o20);
  }
  destroy() {
    this.view = null;
  }
  get canZoomIn() {
    return null != this._zoomConditions && this._zoomConditions.canZoomIn;
  }
  get canZoomOut() {
    var _a;
    return null != this._zoomConditions && ((_a = this._zoomConditions) == null ? void 0 : _a.canZoomOut);
  }
  get state() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.ready) ? "ready" : "disabled";
  }
  set view(o20) {
    o20 ? "2d" === o20.type ? this._zoomConditions = new i25({ view: o20 }) : "3d" === o20.type && (this._zoomConditions = new c21({ view: o20 })) : this._zoomConditions = null, this._set("view", o20);
  }
  zoomIn() {
    if (!this.canZoomIn)
      return;
    const o20 = this.view;
    "2d" === o20.type ? o20.mapViewNavigation.zoomIn() : y(o20.goTo({ zoomFactor: 2 }));
  }
  zoomOut() {
    if (!this.canZoomOut)
      return;
    const o20 = this.view;
    "2d" === o20.type ? o20.mapViewNavigation.zoomOut() : y(o20.goTo({ zoomFactor: 0.5 }));
  }
};
e([y2()], m12.prototype, "_zoomConditions", void 0), e([y2()], m12.prototype, "canZoomIn", null), e([y2()], m12.prototype, "canZoomOut", null), e([y2({ readOnly: true })], m12.prototype, "state", null), e([y2()], m12.prototype, "view", null), m12 = e([a3("esri.widgets.Zoom.ZoomViewModel")], m12);
var p19 = m12;

// node_modules/@arcgis/core/widgets/Zoom.js
var u7 = { base: "esri-zoom esri-widget", horizontalLayout: "esri-zoom--horizontal", zoomInIcon: "esri-icon-plus", zoomOutIcon: "esri-icon-minus", widgetIcon: "esri-icon-zoom-in-magnifying-glass" };
var a29 = class extends W {
  constructor(o20, t23) {
    super(o20, t23), this.iconClass = u7.widgetIcon, this.icon = null, this.messages = null, this.viewModel = new p19();
  }
  initialize() {
    this._zoomInButton = new a28({ action: this.zoomIn.bind(this), iconClass: u7.zoomInIcon }), this._zoomOutButton = new a28({ action: this.zoomOut.bind(this), iconClass: u7.zoomOutIcon });
  }
  destroy() {
    this._zoomInButton = l(this._zoomInButton), this._zoomOutButton = l(this._zoomOutButton);
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(o20) {
    this._overrideIfSome("label", o20);
  }
  set layout(o20) {
    "horizontal" !== o20 && (o20 = "vertical"), this._set("layout", o20);
  }
  set view(o20) {
    this.viewModel.view = o20;
  }
  get view() {
    return this.viewModel.view;
  }
  render() {
    const o20 = this.viewModel, t23 = { [u7.horizontalLayout]: "horizontal" === this.layout }, { canZoomIn: s19, canZoomOut: e16 } = o20;
    this._zoomInButton.enabled = s19, this._zoomOutButton.enabled = e16;
    const { zoomIn: i26, zoomOut: r19 } = this.messages;
    return this._zoomInButton.title = i26, this._zoomOutButton.title = r19, n6("div", { class: this.classes(u7.base, t23) }, this._zoomInButton.render(), this._zoomOutButton.render());
  }
  zoomIn() {
    return this.viewModel.zoomIn();
  }
  zoomOut() {
    return this.viewModel.zoomOut();
  }
};
e([y2()], a29.prototype, "iconClass", void 0), e([y2()], a29.prototype, "icon", void 0), e([y2()], a29.prototype, "label", null), e([y2({ value: "vertical" })], a29.prototype, "layout", null), e([y2(), e5("esri/widgets/Zoom/t9n/Zoom")], a29.prototype, "messages", void 0), e([y2()], a29.prototype, "view", null), e([y2({ type: p19 })], a29.prototype, "viewModel", void 0), a29 = e([a3("esri.widgets.Zoom")], a29);
var c22 = a29;

// node_modules/@arcgis/core/views/ui/DefaultUI.js
function m13(t23) {
  return void 0 !== (t23 == null ? void 0 : t23.view);
}
var u8 = class extends L2 {
  constructor(t23) {
    super(t23), this._defaultPositionLookup = { attribution: "manual", compass: "top-left", "navigation-toggle": "top-left", zoom: "top-left" }, this.components = [], this._updateViewAwareWidgets = (t24) => {
      this.components.forEach((o20) => {
        const e16 = this._find(o20), s19 = e16 == null ? void 0 : e16.widget;
        m13(s19) && (s19.view = t24);
      });
    }, this._componentsWatcher = (t24, o20) => {
      this._removeComponents(o20), this._addComponents(t24), this._adjustPadding(t24);
    };
  }
  initialize() {
    this.addHandles([l3(() => this.components, this._componentsWatcher, h), l3(() => this.view, this._updateViewAwareWidgets, h)]);
  }
  _add(t23, o20, e16, s19, i26) {
    let r19 = t23;
    if ("string" == typeof t23 && this._defaultPositionLookup[t23]) {
      if (this._find(t23))
        return;
      r19 = this._createComponent(t23);
    }
    super._add(r19, o20, e16, s19, i26);
  }
  _removeComponents(t23) {
    t23.forEach((t24) => {
      const o20 = this._find(t24);
      o20 && (this.remove(o20), o20.destroy());
    });
  }
  _adjustPadding(t23) {
    if (!t23.includes("attribution") && !this._isOverridden("padding")) {
      const { top: t24 } = this.padding;
      this.padding = t24;
    }
  }
  _addComponents(t23) {
    this.constructed && t23.forEach((t24) => this.add(this._createComponent(t24), this._defaultPositionLookup[t24]));
  }
  _createComponent(t23) {
    const o20 = this._createWidget(t23);
    return new l15({ id: t23, node: o20 });
  }
  _createWidget(t23) {
    const { view: o20 } = this;
    switch (t23) {
      case "attribution":
        return new h10({ view: o20 });
      case "compass":
        return new d15({ view: o20 });
      case "navigation-toggle":
        return new g10({ view: o20 });
      case "zoom":
        return new c22({ view: o20 });
    }
  }
};
e([y2()], u8.prototype, "components", void 0), u8 = e([a3("esri.views.ui.DefaultUI")], u8);
var h12 = u8;

// node_modules/@arcgis/core/views/ui/2d/DefaultUI2D.js
var e15 = class extends h12 {
  constructor(o20) {
    super(o20), this.components = ["attribution", "zoom"];
  }
};
e([y2()], e15.prototype, "components", void 0), e15 = e([a3("esri.views.ui.2d.DefaultUI2D")], e15);
var p20 = e15;

// node_modules/@arcgis/core/webmap/background/ColorBackground.js
var p21;
var a30 = p21 = class extends l2 {
  constructor(o20) {
    super(o20), this.color = new h5([0, 0, 0, 1]);
  }
  clone() {
    return new p21(a({ color: this.color }));
  }
};
e([y2({ type: h5, json: { write: true } })], a30.prototype, "color", void 0), a30 = p21 = e([a3("esri.webmap.background.ColorBackground")], a30);
var m14 = a30;

// node_modules/@arcgis/core/views/MapView.js
var X;
var Z2;
var ee;
var te;
var ie;
var re;
async function se() {
  const [, { GraphicsView2D: e16, GraphicContainer: t23, LabelManager: i26, MapViewNavigation: r19, MagnifierView2D: s19, Stage: a31 }] = await Promise.all([import("./webglDeps-F5YA3DSA.js"), import("./mapViewDeps-MGAZQIEU.js")]);
  Z2 = e16, ee = t23, te = i26, ie = r19, re = s19, X = a31;
}
var ae = 160;
var ne = { flipY: true, premultipliedAlpha: true };
var oe = class extends w3(w5(C2(z2))) {
  constructor(e16) {
    super(e16), this._magnifierView = null, this._stage = null, this._resolveWhenReady = [], this.rootLayerViews = new n10({ getCollections: () => {
      var _a, _b;
      return [(_a = this.basemapView) == null ? void 0 : _a.baseLayerViews, this.layerViews, (_b = this.basemapView) == null ? void 0 : _b.referenceLayerViews];
    }, getChildrenFunction: () => null }), this.featuresTilingScheme = null, this.fullOpacity = 1, this.graphicsView = null, this.stateManager = new z3({ constraints: new f9({ view: this }) }), this.labelManager = null, this.mapViewNavigation = null, this.renderingOptions = { samplingMode: "dynamic", edgeLabelsVisible: true, labelsAnimationTime: 125, labelCollisionsEnabled: true }, this.rendering = false, this.supersampleScreenshotsEnabled = true, this.supportsGround = false, this._stationaryTimer = null, this._gotoTask = null, this.frameTask = new a16(this), this._pePromise = null, this.floors = new V(), this.highlightOptions = new c9(), this.inputManager = new C3({ view: this }), this.map = null, this.spatialReferenceLocked = false, this.timeline = new e9(), this.type = "2d", this.ui = new p20(), this.padding = { top: 0, right: 0, bottom: 0, left: 0 }, this.addHandles([l3(() => this.viewpoint, () => {
      this._lastStationaryEventTimestamp = performance.now(), this._flipStationary(ae);
    }, U), this.on("resize", (e17) => this.stateManager.resize(e17.width, e17.height)), l3(() => {
      var _a;
      return (_a = this.animationManager) == null ? void 0 : _a.animation;
    }, (e17) => {
      this.animation = e17;
    })]), c7();
  }
  destroy() {
    this._set("preconditionsReady", false), this.frameTask = l(this.frameTask), this._gotoTask = null, this.rootLayerViews.destroy(), this.inputManager.destroy(), this._set("inputManager", null);
  }
  get graphicsTileStore() {
    return new d5(this.featuresTilingScheme);
  }
  get constraintsInfo() {
    var _a, _b;
    const e16 = (_a = this.defaultsFromMap) == null ? void 0 : _a.tileInfo, t23 = this.spatialReference;
    return { lods: ((_b = e16 == null ? void 0 : e16.spatialReference) == null ? void 0 : _b.equals(t23)) ? e16.lods : null, spatialReference: t23 };
  }
  get state() {
    return this.stateManager.state;
  }
  get initialExtentRequired() {
    var _a;
    if (!this.stateManager)
      return false;
    const { scale: e16, constraints: t23, center: i26, viewpoint: r19, extent: s19 } = this;
    let a31 = this.zoom;
    return !(this.map && "initialViewProperties" in this.map && ((_a = this.map.initialViewProperties) == null ? void 0 : _a.viewpoint)) && (!s19 && ((t23 == null ? void 0 : t23.effectiveLODs) || (a31 = -1), (!i26 || 0 === e16 && -1 === a31) && (!r19 || null == r19.targetGeometry || "extent" !== r19.targetGeometry.type && !r19.scale)));
  }
  get resourceManager() {
    return this._stage.resourceManager;
  }
  get textureManager() {
    return this._stage.painter.textureManager;
  }
  get _defaultsFromMapSettings() {
    return { required: { tileInfo: true, heightModelInfo: false, extent: false }, requiresExtentInSpatialReference: this.spatialReferenceLocked };
  }
  get _projectionEngineLoaded() {
    return !!Y() || (this._pePromise || (this._pePromise = $().finally(() => {
      this._pePromise = null;
    })), false);
  }
  get typeSpecificPreconditionsReady() {
    const e16 = this._getDefaultViewpoint();
    if (!e16)
      return false;
    const t23 = this.spatialReference, i26 = e16.targetGeometry;
    return !!Cn(i26.spatialReference, t23) || this._projectionEngineLoaded;
  }
  set animation(e16) {
    const t23 = this._get("animation");
    if (e16 === t23)
      return;
    if (t23 && t23.stop(), !e16 || e16.isFulfilled())
      return void this._set("animation", null);
    this._set("animation", e16), this.frameTask.animationInProgress = true;
    const i26 = () => {
      var _a;
      e16 === this._get("animation") && (this._set("animation", null), (_a = this.frameTask) == null ? void 0 : _a.requestFrame()), this.frameTask.animationInProgress = false;
    };
    e16.when(i26, i26);
  }
  get background() {
    return ce(this.map) ? this.map.initialViewProperties.background : null;
  }
  set background(e16) {
    this._override("background", e16);
  }
  get center() {
    var _a;
    return ((_a = this.stateManager) == null ? void 0 : _a.center) ?? null;
  }
  set center(e16) {
    this.stateManager.center = e16;
  }
  get constraints() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.constraints;
  }
  set constraints(e16) {
    e16.view = this;
    const t23 = this.stateManager.constraints;
    this.stateManager.constraints = e16, t23 == null ? void 0 : t23.destroy();
  }
  get extent() {
    var _a;
    return ((_a = this.stateManager) == null ? void 0 : _a.extent) ?? null;
  }
  set extent(e16) {
    this.stateManager.extent = e16;
  }
  get padding() {
    var _a;
    return (_a = this.stateManager) == null ? void 0 : _a.padding;
  }
  set padding(e16) {
    this.stateManager && (this.stateManager.padding = e16);
  }
  get resizeAlign() {
    return this.stateManager.resizeAlign;
  }
  set resizeAlign(e16) {
    this.stateManager.resizeAlign = e16;
  }
  get resolution() {
    return this.stateManager.resolution ?? 0;
  }
  get rotation() {
    return this.stateManager.rotation ?? 0;
  }
  set rotation(e16) {
    this.stateManager.rotation = e16;
  }
  get scale() {
    var _a;
    return ((_a = this.stateManager) == null ? void 0 : _a.scale) ?? 0;
  }
  set scale(e16) {
    this.stateManager && (this.stateManager.scale = e16);
  }
  get stationary() {
    return !(this.animation || this.navigating || this.resizing || this._stationaryTimer);
  }
  get updating() {
    var _a, _b, _c;
    const e16 = !this.destroyed && (!this.layerViewManager || !this.labelManager || !this.graphicsView || true === this.layerViewManager.updating || true === this.labelManager.updating || true === this.graphicsView.updating || this.allLayerViews.some((e17) => !e17.destroyed && !("layerViews" in e17) && true === e17.updating));
    if (has("esri-2d-log-updating")) {
      const t23 = this.allLayerViews.reduce((e17, t24) => ({ ...e17, [t24.layer.id]: !t24.destroyed && !("layerViews" in t24) && t24.updating }), {});
      console.log(`Updating MapView: ${e16}
-> Null LayerViewManager: ${!this.layerViewManager}
-> Null LabelManager: ${!this.labelManager}
-> Null GraphicsView: ${!this.graphicsView}
-> layerViewManager.updating: ${(_a = this.layerViewManager) == null ? void 0 : _a.updating}
-> labelManager.updating: ${(_b = this.labelManager) == null ? void 0 : _b.updating}
-> graphicsView.updating: ${(_c = this.graphicsView) == null ? void 0 : _c.updating}
-> allLayerViews: ${JSON.stringify(t23)}
`);
    }
    return e16;
  }
  get viewpoint() {
    return this.stateManager.viewpoint ?? null;
  }
  set viewpoint(e16) {
    this.stateManager.viewpoint = e16, this.frameTask.requestFrame();
  }
  get zoom() {
    return this.stateManager.zoom ?? -1;
  }
  set zoom(e16) {
    this.stateManager.zoom = e16;
  }
  get navigating() {
    return !(!this.mapViewNavigation || !this.mapViewNavigation.interacting);
  }
  goTo(e16, t23) {
    if (e16)
      return this.animation && (this.animation = null), this._createAnimation(), j(() => this.ready, t23).then(() => {
        var _a;
        const i26 = { animate: true, ...t23 }, r19 = J(e16, this);
        return (_a = this.animation) == null ? void 0 : _a.update(r19), this._gotoTask = {}, i26.animate ? this._gotoAnimated(r19, i26) : this._gotoImmediate(r19, i26);
      });
    s.getLogger(this).error("#goTo()", "target cannot be null or undefined");
  }
  async hitTest(e16, t23) {
    const i26 = o11(e16) ? r10(this, e16) : e16;
    if (!this.ready || isNaN(i26.x) || isNaN(i26.y))
      return { screenPoint: i26, results: [] };
    let s19 = /* @__PURE__ */ new Set(), a31 = false, n28 = null, o20 = null;
    (t23 == null ? void 0 : t23.include) ? ge(t23.include, he(this, (e17) => s19.add(e17), (e17) => {
      n28 || (n28 = /* @__PURE__ */ new Set()), n28.add(e17);
    }, (e17) => s19.add(e17), () => a31 = true)) : (a31 = true, s19 = new Set(this.allLayerViews)), (t23 == null ? void 0 : t23.exclude) && ge(t23.exclude, he(this, (e17) => s19.delete(e17), (e17) => {
      o20 || (o20 = /* @__PURE__ */ new Set()), o20.add(e17);
    }));
    const l17 = this.allLayerViews.filter((e17) => !e17.suspended && s19.has(e17)).reverse(), p22 = this.toMap(i26);
    let h13 = [...a31 ? this.graphicsView.hitTest(p22).map((e17) => ({ type: "graphic", graphic: e17, layer: null, mapPoint: p22 })) : [], ...await Promise.all(l17.map((e17) => e17.hitTest(p22, i26)).toArray())].filter(R).flat().filter(R);
    return n28 && (h13 = h13.filter((e17) => !("graphic" in e17) || !e17.graphic || (n28 == null ? void 0 : n28.has(pe(e17.graphic))))), o20 && (h13 = h13.filter((e17) => !("graphic" in e17) || !e17.graphic || !(o20 == null ? void 0 : o20.has(pe(e17.graphic))))), { screenPoint: i26, results: h13 };
  }
  async takeScreenshot(e16) {
    const t23 = this._createScreenshotPlan(e16), i26 = await this._stage.takeScreenshot(t23);
    return a7(i26, { format: t23.format, quality: t23.quality, rotation: 0, disableDecorations: false }, ne);
  }
  async _takeScreenshot(e16) {
    const t23 = this._createScreenshotPlan(e16), i26 = await this._stage.takeScreenshot(t23);
    return r8(i26, ne);
  }
  _createScreenshotPlan(e16) {
    e16 = e16 ?? {};
    const t23 = this.supersampleScreenshotsEnabled ? Math.min(4, s8(this.size, Math.min(4096, this._stage.context.parameters.maxTextureSize))) : 1;
    let i26;
    e16.layers ? (i26 = [], e16.layers.forEach((e17) => {
      const t24 = this.allLayerViews.find((t25) => t25.layer.id === e17.id);
      t24 && "container" in t24 && t24.container && i26.push(t24.container);
    })) : i26 = this._stage.children;
    const { format: r19, quality: s19 } = c8(e16.format, e16.quality);
    return t20(e16, t23, this.size, this.padding, r19, s19, i26, e16.rotation);
  }
  get test() {
    return { takeScreenshot: (e16) => this._takeScreenshot(e16) };
  }
  toMap(e16) {
    if (!this.ready)
      return null;
    const t23 = o11(e16) ? r10(this, e16) : e16;
    return this.stateManager.toMap(t23);
  }
  toScreen(e16) {
    return this.stateManager.toScreen(e16);
  }
  on(e16, t23, i26, r19) {
    const s19 = this.inputManager && this.viewEvents.on(e16, t23, i26, r19);
    return s19 || super.on(e16, t23);
  }
  hasEventListener(e16) {
    return super.hasEventListener(e16) || this.viewEvents.hasHandler(e16);
  }
  whenLayerView(e16) {
    return super.whenLayerView(e16);
  }
  graphicChanged(e16) {
    if (this.graphicsView) {
      this.graphicsView.graphicUpdateHandler(e16);
    }
  }
  whenReady() {
    return new Promise((e16) => {
      this.ready ? e16(this) : this._resolveWhenReady.push(e16);
    });
  }
  forceDOMReadyCycle() {
    this.forceReadyCycle();
  }
  getDefaultSpatialReference() {
    var _a, _b, _c;
    return this.map && "initialViewProperties" in this.map && ((_b = (_a = this.map) == null ? void 0 : _a.initialViewProperties) == null ? void 0 : _b.spatialReference) || ((_c = this.defaultsFromMap) == null ? void 0 : _c.spatialReference) || null;
  }
  hasLayerViewModule(e16) {
    return l10.hasLayerViewModule(e16);
  }
  importLayerView(e16) {
    return l10.importLayerView(e16);
  }
  pixelSizeAt() {
    return this.ready ? this.resolution : (s.getLogger(this).error("#pixelSizeAt()", "Map view cannot be used before it is ready"), null);
  }
  popupHitTest(e16) {
    return this.hitTest(e16).then((t23) => ({ ...t23, mapPoint: this.toMap(e16) }));
  }
  requestUpdate() {
    this.ready && this.frameTask.requestUpdate();
  }
  validate() {
    let e16 = i22(this.type);
    return has("safari") && has("safari") < 9 && (e16 = new s2("mapview:browser-not-supported", "This browser is not supported by MapView (Safari < 9)", { type: "safari", requiredVersion: 9, detectedVersion: has("safari") })), null != e16 ? (s.getLogger(this).warn("#validate()", e16.message), Promise.reject(e16)) : se();
  }
  _createAnimation() {
    return this.animation && !this.animation.done || (this.animation = new a15()), this.animation;
  }
  _cancellableGoTo(e16, t23, i26) {
    const r19 = () => e16 === this._gotoTask, s19 = i26.then(() => {
      r19() && (this.animation = null);
    }).catch((e17) => {
      throw r19() && (t23 && !t23.done && (t23.stop(), this.frameTask.animationInProgress = false), this.animation = null), e17;
    }), a31 = new Promise((e17) => e17(s19));
    return t23.when().catch(() => {
      r19() && a31.cancel && a31.cancel();
    }), a31;
  }
  _gotoImmediate(e16, t23) {
    const i26 = this._gotoTask, r19 = this.animation, s19 = e16.then((e17) => {
      if (s3(t23), i26 !== this._gotoTask)
        throw new s2("view:goto-interrupted", "Goto was interrupted");
      this.viewpoint = r19.target = e17, r19.finish();
    });
    return this._cancellableGoTo(i26, r19, s19);
  }
  _flipStationary(e16) {
    return null !== this._stationaryTimer || (this._stationaryTimer = setTimeout(() => {
      this._stationaryTimer = null;
      const e17 = performance.now() - this._lastStationaryEventTimestamp;
      e17 < ae && (this._stationaryTimer = this._flipStationary(e17));
    }, e16)), this._stationaryTimer;
  }
  _getDefaultViewpoint() {
    var _a;
    const { constraints: e16, initialExtent: t23, map: r19, padding: s19, size: a31 } = this;
    if (!e16)
      return null;
    const n28 = r19 && "initialViewProperties" in r19 ? r19.initialViewProperties : void 0, o20 = this.stateManager.getUserStartupOptions(this.size), l17 = n28 == null ? void 0 : n28.viewpoint, p22 = ((_a = l17 == null ? void 0 : l17.targetGeometry) == null ? void 0 : _a.extent) ?? t23, h13 = p22 == null ? void 0 : p22.center, g11 = (l17 == null ? void 0 : l17.rotation) ?? 0, c23 = (l17 == null ? void 0 : l17.scale) || p22 && D(p22, [a31[0] - s19.left - s19.right, a31[1] - s19.top - s19.bottom]), u9 = o20.center ?? h13, d16 = o20.rotation ?? g11, m15 = o20.scale ?? c23;
    return u9 && m15 ? new l6({ targetGeometry: u9, scale: m15, rotation: d16 }) : null;
  }
  _gotoAnimated(e16, t23) {
    const i26 = this._gotoTask, r19 = this.animation;
    if (!r19)
      return Promise.resolve();
    const s19 = e16.then((e17) => {
      if (s3(t23), i26 !== this._gotoTask)
        throw new s2("view:goto-interrupted", "Goto was interrupted");
      return r19.update(e17), this.animationManager.animate(r19, this.viewpoint, t23), r19.when().then(() => {
      }, () => {
      });
    });
    return this._cancellableGoTo(i26, r19, s19);
  }
  _startup() {
    var _a;
    this.timeline.begin("MapView Startup");
    const e16 = this._getDefaultViewpoint();
    this.stateManager.startup(e16, this.size, this.spatialReference, (_a = this.defaultsFromMap.extent) == null ? void 0 : _a.center), this.graphics.owner = this;
    const t23 = new X(this.surface, { canvas: this.renderCanvas, supersampleScreenshots: this.supersampleScreenshotsEnabled, contextOptions: { disabledExtensions: this.deactivatedWebGLExtensions, debugWebGLExtensions: this.debugWebGLExtensions }, renderingOptions: this.renderingOptions, timeline: this.timeline });
    this._stage = t23, this._magnifierView = new re(), this._magnifierView.magnifier = this.magnifier;
    const i26 = new te({ view: this });
    this._set("labelManager", i26);
    const r19 = new l9({ view: this });
    this._set("animationManager", r19);
    const s19 = new ie({ view: this, animationManager: r19 });
    this._set("mapViewNavigation", s19), this._setupSpatialReferenceDependentProperties(), this.handles.add([this.rootLayerViews.on("change", () => this._updateStageChildren()), t23.on("post-render", () => this._set("rendering", t23.renderRequested)), t23.on("will-render", () => this._set("rendering", t23.renderRequested)), t23.on("webgl-error", (e17) => this.fatalError = e17.error), l3(() => this.stationary, (e17) => t23.stationary = e17, w2), l3(() => this.background, (e17) => {
      t23.backgroundColor = e17 == null ? void 0 : e17.color, this._magnifierView.backgroundColor = e17 == null ? void 0 : e17.color;
    }, w2), l3(() => this.magnifier, (e17) => this._magnifierView.magnifier = e17, w2), l3(() => this.renderingOptions, (e17) => t23.renderingOptions = e17, w2), l3(() => this.highlightOptions, (e17) => t23.highlightOptions = e17, w2), l3(() => this.state.id, () => t23.state = this.state, w2)], "map-view"), this._updateStageChildren();
    const a31 = this._resolveWhenReady;
    this._resolveWhenReady = [], a31.forEach((e17) => e17(this)), this.timeline.end("MapView Startup"), this.frameTask.start(), this._set("ready", true);
  }
  _teardown() {
    this._destroySpatialReferenceDependentProperties(), this.handles.remove("map-view"), this.mapViewNavigation.destroy(), this._set("mapViewNavigation", null), this.animationManager.destroy(), this._set("animationManager", null), this.layerViewManager.clear(), this.labelManager.destroy(), this._magnifierView.destroy(), this._stage.destroy(), this._stage = null, this._set("graphicsView", null), this._magnifierView = null, this._set("labelManager", null), this._set("mapViewNavigation", null), this.graphics.owner = null, this.frameTask.stop(), this._stationaryTimer && (clearTimeout(this._stationaryTimer), this._stationaryTimer = null), this._set("ready", false), this.stateManager.teardown(), this.animation = null;
  }
  _updateStageChildren() {
    this._stage.removeAllChildren(), this.rootLayerViews.forEach((e17) => {
      this._stage.addChild(e17.container);
    });
    const e16 = this.graphicsView;
    this._stage.addChild(e16.container), this._stage.addChild(this._magnifierView);
  }
  _setupSpatialReferenceDependentProperties() {
    const e16 = new h4(j3.create({ spatialReference: this.spatialReference, size: 512, numLODs: 36 }));
    this._set("featuresTilingScheme", e16);
    const t23 = new Z2({ view: this, graphics: this.graphics, requestUpdateCallback: () => this.requestUpdate(), container: new ee(e16) });
    this._set("graphicsView", t23);
  }
  _destroySpatialReferenceDependentProperties() {
    const e16 = this.graphicsView;
    this._set("graphicsView", null), e16.destroy(), this._set("featuresTilingScheme", null);
  }
  _spatialReferenceChanged(e16) {
    if (this.ready) {
      this.frameTask.stop();
      for (const e17 of this.allLayerViews)
        e17.processDetach();
      this._destroySpatialReferenceDependentProperties(), this.stateManager.changeSpatialReference(e16), this._stage.state = this.state, this._setupSpatialReferenceDependentProperties();
      for (const e17 of this.allLayerViews)
        e17.processAttach();
      this.frameTask.requestFrame(), this.frameTask.start(), this._updateStageChildren();
    }
  }
};
oe.type = "2d", e([y2({ readOnly: true })], oe.prototype, "animationManager", void 0), e([y2({ constructOnly: true })], oe.prototype, "deactivatedWebGLExtensions", void 0), e([y2({ constructOnly: true })], oe.prototype, "debugWebGLExtensions", void 0), e([y2({ readOnly: true })], oe.prototype, "featuresTilingScheme", void 0), e([y2({ readOnly: true })], oe.prototype, "fullOpacity", void 0), e([y2({ readOnly: true })], oe.prototype, "graphicsTileStore", null), e([y2()], oe.prototype, "graphicsView", void 0), e([y2()], oe.prototype, "stateManager", void 0), e([y2()], oe.prototype, "constraintsInfo", null), e([y2({ readOnly: true })], oe.prototype, "state", null), e([y2()], oe.prototype, "initialExtentRequired", null), e([y2()], oe.prototype, "labelManager", void 0), e([y2({ readOnly: true })], oe.prototype, "resourceManager", null), e([y2({ readOnly: true })], oe.prototype, "textureManager", null), e([y2({ readOnly: true })], oe.prototype, "mapViewNavigation", void 0), e([y2({ constructOnly: true })], oe.prototype, "renderCanvas", void 0), e([y2()], oe.prototype, "renderingOptions", void 0), e([y2({ readOnly: true })], oe.prototype, "rendering", void 0), e([y2({ constructOnly: true })], oe.prototype, "supersampleScreenshotsEnabled", void 0), e([y2({ readOnly: true })], oe.prototype, "supportsGround", void 0), e([y2()], oe.prototype, "_stationaryTimer", void 0), e([y2()], oe.prototype, "_defaultsFromMapSettings", null), e([y2()], oe.prototype, "_pePromise", void 0), e([y2({ readOnly: true })], oe.prototype, "typeSpecificPreconditionsReady", null), e([y2()], oe.prototype, "animation", null), e([y2({ type: m14 })], oe.prototype, "background", null), e([y2()], oe.prototype, "center", null), e([y2({ type: f9 })], oe.prototype, "constraints", null), e([y2()], oe.prototype, "extent", null), e([y2()], oe.prototype, "floors", void 0), e([y2({ type: c9 })], oe.prototype, "highlightOptions", void 0), e([y2({ readOnly: true })], oe.prototype, "inputManager", void 0), e([y2()], oe.prototype, "map", void 0), e([y2()], oe.prototype, "padding", null), e([y2()], oe.prototype, "resizeAlign", null), e([y2({ readOnly: true })], oe.prototype, "resolution", null), e([y2()], oe.prototype, "rotation", null), e([y2()], oe.prototype, "scale", null), e([y2({ constructOnly: true })], oe.prototype, "spatialReferenceLocked", void 0), e([y2()], oe.prototype, "stationary", null), e([y2({ type: e9, readOnly: true })], oe.prototype, "timeline", void 0), e([y2({ readOnly: true })], oe.prototype, "type", void 0), e([y2({ readOnly: true })], oe.prototype, "updating", null), e([y2()], oe.prototype, "viewpoint", null), e([y2()], oe.prototype, "zoom", null), e([y2({ readOnly: true })], oe.prototype, "navigating", null), e([y2(), s6((e16) => e16 instanceof h12 ? e16 : v2(p20, e16))], oe.prototype, "ui", void 0), oe = e([a3("esri.views.MapView")], oe);
var le = oe;
function pe(e16) {
  var _a, _b;
  const t23 = e16.getObjectId();
  return t23 ? `${((_a = e16.layer) == null ? void 0 : _a.uid) ?? ((_b = e16.sourceLayer) == null ? void 0 : _b.uid) ?? "MapView"}/${t23}` : `"MapView/${e16.uid}`;
}
function he(e16, i26, r19, s19, a31) {
  return (n28) => {
    if (n28 instanceof h6) {
      if (n28.layer === e16)
        a31 == null ? void 0 : a31();
      else {
        const t23 = e16.allLayerViews.find((e17) => e17.layer === n28.layer);
        t23 && (s19 == null ? void 0 : s19(t23));
      }
      r19(pe(n28));
    } else {
      const t23 = e16.allLayerViews.find((e17) => e17.layer === n28);
      t23 && i26(t23);
    }
  };
}
function ge(e16, t23) {
  if (e16)
    if (t2(e16))
      for (const i26 of e16)
        if (t2(i26))
          for (const e17 of i26)
            t23(e17);
        else
          t23(i26);
    else
      t23(e16);
}
function ce(e16) {
  return "esri.WebMap" === (e16 == null ? void 0 : e16.declaredClass);
}
export {
  le as default
};
//# sourceMappingURL=@arcgis_core_views_MapView.js.map
