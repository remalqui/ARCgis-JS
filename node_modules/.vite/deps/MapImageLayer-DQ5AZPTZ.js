import {
  m
} from "./chunk-COXKXU74.js";
import "./chunk-WON6TZX6.js";
import {
  i as i2
} from "./chunk-NSS3KYAR.js";
import {
  E,
  Y,
  f as f3
} from "./chunk-NNK5DMSQ.js";
import {
  e as e3
} from "./chunk-2XVUXMWQ.js";
import {
  t as t3
} from "./chunk-IUXYWQJG.js";
import "./chunk-7NKY3QXH.js";
import "./chunk-BDD7KT6D.js";
import "./chunk-4QESYAV3.js";
import "./chunk-P2MEGQP6.js";
import "./chunk-QRIMDBVP.js";
import "./chunk-7XRP3RPT.js";
import {
  e as e2
} from "./chunk-2YTFL6AC.js";
import {
  i
} from "./chunk-CGPOGDO6.js";
import {
  l
} from "./chunk-ZCZT2HZV.js";
import "./chunk-7MOGRCW6.js";
import "./chunk-3Y3ICAIL.js";
import "./chunk-TNXVIMSN.js";
import "./chunk-XFLBB3FK.js";
import {
  a as a4
} from "./chunk-77BBQQ7Y.js";
import {
  o as o2
} from "./chunk-FGWFWDIM.js";
import "./chunk-UCGDNB2P.js";
import "./chunk-E4GDJ764.js";
import "./chunk-Z2T56FN3.js";
import "./chunk-ZMKH5ZRU.js";
import {
  j as j2
} from "./chunk-P46VVEIN.js";
import {
  p
} from "./chunk-X34I34RW.js";
import {
  a as a2
} from "./chunk-5NBE4HDI.js";
import "./chunk-4NLQ63FV.js";
import "./chunk-Y7HVH6RU.js";
import {
  t as t2
} from "./chunk-2HDAD5Q3.js";
import {
  c as c3
} from "./chunk-PPU6QR6F.js";
import {
  O
} from "./chunk-PCVJI7J2.js";
import {
  f as f2
} from "./chunk-HZHMZHPT.js";
import "./chunk-NU5WEWCI.js";
import "./chunk-UIVGJZCT.js";
import "./chunk-MVR2W3C6.js";
import "./chunk-RNXN3MSP.js";
import "./chunk-4NWXO2LT.js";
import "./chunk-6ETVGJDF.js";
import "./chunk-34QQ6GDH.js";
import "./chunk-KTII3LWY.js";
import "./chunk-JDYLSHC3.js";
import "./chunk-QAWS7Y22.js";
import "./chunk-UX5D32RO.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-NYLF7BL2.js";
import "./chunk-HTY52TPQ.js";
import "./chunk-YC4PIRSZ.js";
import "./chunk-MSLDEOHR.js";
import "./chunk-B5TYSRH2.js";
import "./chunk-32JSK7KN.js";
import "./chunk-YIJWIXDP.js";
import "./chunk-6DURKJBD.js";
import "./chunk-FN5LEP6H.js";
import "./chunk-EISDT6B4.js";
import "./chunk-LREUW66K.js";
import "./chunk-PM3CFO6N.js";
import "./chunk-6VJWKAPY.js";
import "./chunk-UQOM5GR4.js";
import "./chunk-YBMFRTPB.js";
import "./chunk-KKGVORR5.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-RR2V4HRU.js";
import "./chunk-WZAASLQW.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import {
  c as c2
} from "./chunk-CNCZBOLJ.js";
import "./chunk-4SARN32Z.js";
import "./chunk-QA4FMJA6.js";
import "./chunk-VFQINJTY.js";
import "./chunk-4J6R7QH6.js";
import "./chunk-HB3KZNZ3.js";
import "./chunk-MUO4EIZP.js";
import {
  c
} from "./chunk-42RWGG3D.js";
import "./chunk-G5WJIWPP.js";
import {
  a as a3
} from "./chunk-LNMNRMVX.js";
import "./chunk-OO4A3EBQ.js";
import "./chunk-ZBWBCN2I.js";
import "./chunk-KTEJJM3A.js";
import "./chunk-SO6DBMQG.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-QXGO5RRL.js";
import "./chunk-EIE3W25Z.js";
import "./chunk-7KM4XBUC.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-PXHKLVGZ.js";
import {
  t
} from "./chunk-AFZS4SWK.js";
import "./chunk-CGK6BJQA.js";
import "./chunk-XR4HIGQP.js";
import {
  b
} from "./chunk-XU2Q4SCK.js";
import "./chunk-KIEN3CY2.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7E3Q7HTF.js";
import "./chunk-FXDEKQIL.js";
import "./chunk-GJ5WE5D3.js";
import "./chunk-KKGH4SRQ.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-4RFFPIT2.js";
import "./chunk-UKJF25H6.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-D5MIJ6WT.js";
import "./chunk-7KX64CAH.js";
import "./chunk-J4R3XNTP.js";
import "./chunk-Y6FRAP2R.js";
import "./chunk-BVNZ3ETW.js";
import "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-4H5JODOT.js";
import "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-CWQ6Q3PH.js";
import "./chunk-XN5VV437.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-WBSPL6CJ.js";
import "./chunk-N5ULYWRU.js";
import "./chunk-LQVUN6IS.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-MOIETNWJ.js";
import {
  M
} from "./chunk-3GSONYPC.js";
import {
  o2 as o,
  r as r2
} from "./chunk-SFV6XLDZ.js";
import "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import "./chunk-7A5C2EQ3.js";
import {
  n2 as n,
  r2 as r,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import {
  T
} from "./chunk-2YSHZRCT.js";
import {
  j
} from "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import "./chunk-O3CHVGVF.js";
import {
  d,
  f
} from "./chunk-HNHXEGH2.js";
import "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-W2N7YT6I.js";
import "./chunk-I5JT24BO.js";
import "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/MapImageLayer.js
var q = class extends a2(a4(t2(E(f3(l(c3(j2(O(p(i(o2(a3(b))))))))))))) {
  constructor(...e4) {
    super(...e4), this.dateFieldsTimeReference = null, this.datesInUnknownTimezone = false, this.dpi = 96, this.gdbVersion = null, this.imageFormat = "png24", this.imageMaxHeight = 2048, this.imageMaxWidth = 2048, this.imageTransparency = true, this.isReference = null, this.labelsVisible = false, this.operationalLayerType = "ArcGISMapServiceLayer", this.preferredTimeReference = null, this.sourceJSON = null, this.sublayers = null, this.type = "map-image", this.url = null;
  }
  normalizeCtorArgs(e4, r3) {
    return "string" == typeof e4 ? { url: e4, ...r3 } : e4;
  }
  load(e4) {
    const r3 = null != e4 ? e4.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Map Service"] }, e4).catch(f).then(() => this._fetchService(r3))), Promise.resolve(this);
  }
  readImageFormat(e4, r3) {
    const t4 = r3.supportedImageFormatTypes;
    return t4 && t4.includes("PNG32") ? "png32" : "png24";
  }
  writeSublayers(e4, r3, t4, i3) {
    var _a;
    if (!this.loaded || !e4)
      return;
    const o3 = e4.slice().reverse().flatten(({ sublayers: e5 }) => e5 && e5.toArray().reverse()).toArray();
    let s2 = false;
    if (this.capabilities && this.capabilities.operations.supportsExportMap && ((_a = this.capabilities.exportMap) == null ? void 0 : _a.supportsDynamicLayers)) {
      const e5 = n(i3.origin);
      if (e5 === r.PORTAL_ITEM) {
        const e6 = this.createSublayersForOrigin("service").sublayers;
        s2 = e3(o3, e6, r.SERVICE);
      } else if (e5 > r.PORTAL_ITEM) {
        const e6 = this.createSublayersForOrigin("portal-item");
        s2 = e3(o3, e6.sublayers, n(e6.origin));
      }
    }
    const a5 = [], p2 = { writeSublayerStructure: s2, ...i3 };
    let n2 = s2;
    o3.forEach((e5) => {
      const r4 = e5.write({}, p2);
      a5.push(r4), n2 = n2 || "user" === e5.originOf("visible");
    });
    a5.some((e5) => Object.keys(e5).length > 1) && (r3.layers = a5), n2 && (r3.visibleLayers = o3.filter((e5) => e5.visible).map((e5) => e5.id));
  }
  createExportImageParameters(e4, r3, t4, i3) {
    const o3 = i3 && i3.pixelRatio || 1;
    e4 && this.version >= 10 && (e4 = e4.clone().shiftCentralMeridian());
    const s2 = new m({ layer: this, floors: i3 == null ? void 0 : i3.floors, scale: i2({ extent: e4, width: r3 }) * o3 }), a5 = s2.toJSON();
    s2.destroy();
    const p2 = !i3 || !i3.rotation || this.version < 10.3 ? {} : { rotation: -i3.rotation }, n2 = e4 && e4.spatialReference, m2 = n2.wkid || JSON.stringify(n2.toJSON());
    a5.dpi *= o3;
    const l2 = {};
    if (i3 == null ? void 0 : i3.timeExtent) {
      const { start: e5, end: r4 } = i3.timeExtent.toJSON();
      l2.time = e5 && r4 && e5 === r4 ? "" + e5 : `${e5 ?? "null"},${r4 ?? "null"}`;
    } else
      this.timeInfo && !this.timeInfo.hasLiveData && (l2.time = "null,null");
    return { bbox: e4 && e4.xmin + "," + e4.ymin + "," + e4.xmax + "," + e4.ymax, bboxSR: m2, imageSR: m2, size: r3 + "," + t4, ...a5, ...p2, ...l2 };
  }
  async fetchImage(e4, r3, t4, i3) {
    const { data: o3 } = await this._fetchImage("image", e4, r3, t4, i3);
    return o3;
  }
  async fetchImageBitmap(e4, r3, t4, i3) {
    const { data: o3, url: s2 } = await this._fetchImage("blob", e4, r3, t4, i3);
    return t3(o3, s2, i3 == null ? void 0 : i3.signal);
  }
  async fetchRecomputedExtents(e4 = {}) {
    const i3 = { ...e4, query: { returnUpdates: true, f: "json", ...this.customParameters, token: this.apiKey } }, { data: o3 } = await j(this.url, i3), { extent: s2, fullExtent: a5, timeExtent: p2 } = o3, n2 = s2 || a5;
    return { fullExtent: n2 && M.fromJSON(n2), timeExtent: p2 && c.fromJSON({ start: p2[0], end: p2[1] }) };
  }
  loadAll() {
    return t(this, (e4) => {
      e4(this.allSublayers);
    });
  }
  serviceSupportsSpatialReference(e4) {
    return e2(this, e4);
  }
  async _fetchImage(e4, t4, o3, s2, a5) {
    var _a, _b, _c;
    const p2 = { responseType: e4, signal: (a5 == null ? void 0 : a5.signal) ?? null, query: { ...this.parsedUrl.query, ...this.createExportImageParameters(t4, o3, s2, a5), f: "image", ...this.refreshParameters, ...this.customParameters, token: this.apiKey } }, m2 = this.parsedUrl.path + "/export";
    if (null != ((_a = p2.query) == null ? void 0 : _a.dynamicLayers) && !((_c = (_b = this.capabilities) == null ? void 0 : _b.exportMap) == null ? void 0 : _c.supportsDynamicLayers))
      throw new s("mapimagelayer:dynamiclayer-not-supported", `service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`, { query: p2.query });
    try {
      const { data: e5 } = await j(m2, p2);
      return { data: e5, url: m2 };
    } catch (l2) {
      if (d(l2))
        throw l2;
      throw new s("mapimagelayer:image-fetch-error", `Unable to load image: ${m2}`, { error: l2 });
    }
  }
  async _fetchService(e4) {
    if (this.sourceJSON)
      return void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    const { data: t4, ssl: i3 } = await j(this.parsedUrl.path, { query: { f: "json", ...this.parsedUrl.query, ...this.customParameters, token: this.apiKey }, signal: e4 });
    i3 && (this.url = this.url.replace(/^http:/i, "https:")), this.sourceJSON = t4, this.read(t4, { origin: "service", url: this.parsedUrl });
  }
};
e([y({ type: c2 })], q.prototype, "dateFieldsTimeReference", void 0), e([y({ type: Boolean })], q.prototype, "datesInUnknownTimezone", void 0), e([y()], q.prototype, "dpi", void 0), e([y()], q.prototype, "gdbVersion", void 0), e([y()], q.prototype, "imageFormat", void 0), e([o("imageFormat", ["supportedImageFormatTypes"])], q.prototype, "readImageFormat", null), e([y({ json: { origins: { service: { read: { source: "maxImageHeight" } } } } })], q.prototype, "imageMaxHeight", void 0), e([y({ json: { origins: { service: { read: { source: "maxImageWidth" } } } } })], q.prototype, "imageMaxWidth", void 0), e([y()], q.prototype, "imageTransparency", void 0), e([y({ type: Boolean, json: { read: false, write: { enabled: true, overridePolicy: () => ({ enabled: false }) } } })], q.prototype, "isReference", void 0), e([y({ json: { read: false, write: false } })], q.prototype, "labelsVisible", void 0), e([y({ type: ["ArcGISMapServiceLayer"] })], q.prototype, "operationalLayerType", void 0), e([y({ json: { read: false, write: false } })], q.prototype, "popupEnabled", void 0), e([y({ type: c2 })], q.prototype, "preferredTimeReference", void 0), e([y()], q.prototype, "sourceJSON", void 0), e([y({ json: { write: { ignoreOrigin: true } } })], q.prototype, "sublayers", void 0), e([r2("sublayers", { layers: { type: [Y] }, visibleLayers: { type: [T] } })], q.prototype, "writeSublayers", null), e([y({ type: ["show", "hide", "hide-children"] })], q.prototype, "listMode", void 0), e([y({ json: { read: false }, readOnly: true, value: "map-image" })], q.prototype, "type", void 0), e([y(f2)], q.prototype, "url", void 0), q = e([a("esri.layers.MapImageLayer")], q);
var k = q;
export {
  k as default
};
//# sourceMappingURL=MapImageLayer-DQ5AZPTZ.js.map
