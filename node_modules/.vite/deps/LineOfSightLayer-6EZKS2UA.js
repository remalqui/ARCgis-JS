import {
  g
} from "./chunk-OE4BQAGN.js";
import "./chunk-MW2UW5KK.js";
import {
  c as c3
} from "./chunk-C4FA2S2G.js";
import "./chunk-FLVP2XLK.js";
import {
  c as c2
} from "./chunk-PPU6QR6F.js";
import {
  O
} from "./chunk-PCVJI7J2.js";
import "./chunk-HZHMZHPT.js";
import {
  h as h2
} from "./chunk-NYLF7BL2.js";
import "./chunk-32JSK7KN.js";
import "./chunk-42RWGG3D.js";
import "./chunk-OO4A3EBQ.js";
import {
  a as a2,
  e as e2,
  h
} from "./chunk-ZBWBCN2I.js";
import {
  i,
  l as l2
} from "./chunk-KTEJJM3A.js";
import {
  tn
} from "./chunk-SO6DBMQG.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-QXGO5RRL.js";
import "./chunk-7KM4XBUC.js";
import {
  b
} from "./chunk-XU2Q4SCK.js";
import "./chunk-KIEN3CY2.js";
import {
  n as n2,
  t
} from "./chunk-FXDEKQIL.js";
import "./chunk-GJ5WE5D3.js";
import {
  V
} from "./chunk-4RFFPIT2.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-J4R3XNTP.js";
import "./chunk-BVNZ3ETW.js";
import "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-5EXFDBQJ.js";
import {
  l,
  w
} from "./chunk-XN5VV437.js";
import "./chunk-WBSPL6CJ.js";
import "./chunk-N5ULYWRU.js";
import "./chunk-LQVUN6IS.js";
import "./chunk-3GSONYPC.js";
import {
  x2 as x
} from "./chunk-SFV6XLDZ.js";
import "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import {
  u2 as u
} from "./chunk-7A5C2EQ3.js";
import {
  m,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import "./chunk-2YSHZRCT.js";
import "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import "./chunk-O3CHVGVF.js";
import "./chunk-HNHXEGH2.js";
import {
  c,
  n
} from "./chunk-DWOEYHKS.js";
import "./chunk-W2N7YT6I.js";
import "./chunk-I5JT24BO.js";
import "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/analysis/featureReferenceUtils.js
function e3(e4, t4) {
  return l3(e4) === l3(t4);
}
function l3(e4) {
  if (null == e4)
    return null;
  const l5 = null != e4.layer ? e4.layer.id : "";
  let t4 = null;
  return t4 = null != e4.objectId ? e4.objectId : null != e4.layer && "objectIdField" in e4.layer && null != e4.layer.objectIdField && null != e4.attributes ? e4.attributes[e4.layer.objectIdField] : e4.uid, null == t4 ? null : `o-${l5}-${t4}`;
}
var t2 = { json: { write: { writer: r, target: { "feature.layerId": { type: [Number, String] }, "feature.objectId": { type: [Number, String] } } }, origins: { "web-scene": { read: n3 } } } };
function r(e4, l5) {
  var _a;
  null != e4 && null != ((_a = e4.layer) == null ? void 0 : _a.objectIdField) && null != e4.attributes && (l5.feature = { layerId: e4.layer.id, objectId: e4.attributes[e4.layer.objectIdField] });
}
function n3(e4) {
  if (null != e4.layerId && null != e4.objectId)
    return { uid: null, layer: { id: e4.layerId, objectIdField: "ObjectId" }, attributes: { ObjectId: e4.objectId } };
}

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisObserver.js
var f = class extends u(i(m)) {
  constructor(o) {
    super(o), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o) {
    return c(this.position, o.position) && c(this.elevationInfo, o.elevationInfo) && e3(this.feature, o.feature);
  }
};
e([y({ type: x, json: { write: { isRequired: true } } })], f.prototype, "position", void 0), e([y({ type: h2 }), g()], f.prototype, "elevationInfo", void 0), e([y(t2)], f.prototype, "feature", void 0), f = e([a("esri.analysis.LineOfSightAnalysisObserver")], f);
var u2 = f;

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisTarget.js
var l4 = class extends u(l2) {
  constructor(o) {
    super(o), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o) {
    return c(this.position, o.position) && c(this.elevationInfo, o.elevationInfo) && e3(this.feature, o.feature);
  }
};
e([y({ type: x }), g()], l4.prototype, "position", void 0), e([y({ type: h2 }), g()], l4.prototype, "elevationInfo", void 0), e([y(t2)], l4.prototype, "feature", void 0), l4 = e([a("esri.analysis.LineOfSightAnalysisTarget")], l4);
var f2 = l4;

// node_modules/@arcgis/core/support/elevationInfoUtils.js
function n4(e4) {
  return e4 ? b2 : p;
}
function t3(e4, t4) {
  return null != t4 && t4.mode ? t4.mode : n4(e4).mode;
}
function r3(e4, n5) {
  return t3(null != e4 && e4.hasZ, n5);
}
var b2 = { mode: "absolute-height", offset: 0 };
var p = { mode: "on-the-ground", offset: null };

// node_modules/@arcgis/core/analysis/LineOfSightAnalysis.js
var d = V.ofType(f2);
var v = class extends c3 {
  constructor(e4) {
    super(e4), this.type = "line-of-sight", this.observer = null, this.extent = null;
  }
  initialize() {
    this.addHandles(l(() => this._computeExtent(), (e4) => {
      null != e4 && null != e4.pending || this._set("extent", null != e4 ? e4.extent : null);
    }, w));
  }
  get targets() {
    return this._get("targets") || new d();
  }
  set targets(e4) {
    this._set("targets", n2(e4, this.targets, d));
  }
  get spatialReference() {
    return null != this.observer && null != this.observer.position ? this.observer.position.spatialReference : null;
  }
  get requiredPropertiesForEditing() {
    return [n(this.observer, (e4) => e4.position)];
  }
  async waitComputeExtent() {
    const e4 = this._computeExtent();
    return null != e4 ? e4.pending : Promise.resolve();
  }
  _computeExtent() {
    const e4 = this.spatialReference;
    if (null == this.observer || null == this.observer.position || null == e4)
      return null;
    const t4 = (e5) => "absolute-height" === r3(e5.position, e5.elevationInfo), r4 = this.observer.position, o = a2(r4.x, r4.y, r4.z, r4.x, r4.y, r4.z);
    for (const i2 of this.targets)
      if (null != i2.position) {
        const t5 = tn(i2.position, e4);
        if (null != t5.pending)
          return { pending: t5.pending, extent: null };
        if (null != t5.geometry) {
          const { x: e5, y: r5, z: s2 } = t5.geometry;
          h(o, [e5, r5, s2]);
        }
      }
    const s = e2(o, e4);
    return t4(this.observer) && this.targets.every(t4) || (s.zmin = void 0, s.zmax = void 0), { pending: null, extent: s };
  }
  clear() {
    this.observer = null, this.targets.removeAll();
  }
};
e([y({ type: ["line-of-sight"] })], v.prototype, "type", void 0), e([y({ type: u2, json: { read: true, write: true } })], v.prototype, "observer", void 0), e([y({ cast: t, type: d, nonNullable: true, json: { read: true, write: true } })], v.prototype, "targets", null), e([y({ value: null, readOnly: true })], v.prototype, "extent", void 0), e([y({ readOnly: true })], v.prototype, "spatialReference", null), e([y({ readOnly: true })], v.prototype, "requiredPropertiesForEditing", null), v = e([a("esri.analysis.LineOfSightAnalysis")], v);
var j = v;

// node_modules/@arcgis/core/layers/LineOfSightLayer.js
var h3 = V.ofType(f2);
var d2 = class extends c2(O(b)) {
  constructor(e4) {
    super(e4), this.type = "line-of-sight", this.operationalLayerType = "LineOfSightLayer", this.analysis = new j(), this.opacity = 1;
  }
  initialize() {
    this.addHandles(l(() => this.analysis, (e4, s) => {
      null != s && s.parent === this && (s.parent = null), null != e4 && (e4.parent = this);
    }, w));
  }
  async load() {
    return null != this.analysis && this.addResolvingPromise(this.analysis.waitComputeExtent()), this;
  }
  get observer() {
    return n(this.analysis, (e4) => e4.observer);
  }
  set observer(e4) {
    n(this.analysis, (s) => s.observer = e4);
  }
  get targets() {
    return null != this.analysis ? this.analysis.targets : new V();
  }
  set targets(e4) {
    var _a;
    n2(e4, (_a = this.analysis) == null ? void 0 : _a.targets);
  }
  get fullExtent() {
    return null != this.analysis ? this.analysis.extent : null;
  }
  get spatialReference() {
    return null != this.analysis ? this.analysis.spatialReference : null;
  }
  releaseAnalysis(e4) {
    this.analysis === e4 && (this.analysis = new j());
  }
};
e([y({ json: { read: false }, readOnly: true })], d2.prototype, "type", void 0), e([y({ type: ["LineOfSightLayer"] })], d2.prototype, "operationalLayerType", void 0), e([y({ type: u2, json: { read: true, write: { isRequired: true, ignoreOrigin: true } } })], d2.prototype, "observer", null), e([y({ type: h3, json: { read: true, write: { ignoreOrigin: true } } })], d2.prototype, "targets", null), e([y({ nonNullable: true, json: { read: false, write: false } })], d2.prototype, "analysis", void 0), e([y({ readOnly: true })], d2.prototype, "fullExtent", null), e([y({ readOnly: true })], d2.prototype, "spatialReference", null), e([y({ readOnly: true, json: { read: false, write: false, origins: { service: { read: false, write: false }, "portal-item": { read: false, write: false }, "web-document": { read: false, write: false } } } })], d2.prototype, "opacity", void 0), e([y({ type: ["show", "hide"] })], d2.prototype, "listMode", void 0), d2 = e([a("esri.layers.LineOfSightLayer")], d2);
var f3 = d2;
export {
  f3 as default
};
//# sourceMappingURL=LineOfSightLayer-6EZKS2UA.js.map
