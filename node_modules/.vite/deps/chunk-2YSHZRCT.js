import {
  s2 as s
} from "./chunk-W2N7YT6I.js";

// node_modules/@arcgis/core/core/MapUtils.js
function n(n2, t3) {
  for (const [r3, o2] of n2)
    if (t3(o2, r3))
      return true;
  return false;
}
function r(n2, t3, r3) {
  const o2 = n2.get(t3);
  if (void 0 !== o2)
    return o2;
  const u2 = r3();
  return n2.set(t3, u2), u2;
}

// node_modules/@arcgis/core/core/accessorSupport/ensureType.js
var r2 = s.getLogger("esri.core.accessorSupport.ensureTypes");
function t(e2) {
  return null == e2 ? e2 : new Date(e2);
}
function o(e2) {
  return null == e2 ? e2 : !!e2;
}
function u(e2) {
  return null == e2 ? e2 : e2.toString();
}
function a(e2) {
  return null == e2 ? e2 : (e2 = parseFloat(e2), isNaN(e2) ? 0 : e2);
}
function s2(e2) {
  return null == e2 ? e2 : Math.round(parseFloat(e2));
}
function i(e2) {
  return e2 && e2.constructor && void 0 !== e2.constructor.__accessorMetadata__;
}
function c(e2, n2) {
  return null != n2 && e2 && !(n2 instanceof e2);
}
function l(e2) {
  return e2 && "isCollection" in e2;
}
function f(e2) {
  return e2 && e2.Type ? "function" == typeof e2.Type ? e2.Type : e2.Type.base : null;
}
function p(e2, n2) {
  if (!n2 || !n2.constructor || !l(n2.constructor))
    return y(e2, n2) ? n2 : new e2(n2);
  const r3 = f(e2.prototype.itemType), t3 = f(n2.constructor.prototype.itemType);
  return r3 ? t3 ? r3 === t3 ? n2 : r3.prototype.isPrototypeOf(t3.prototype) ? new e2(n2) : (y(e2, n2), n2) : new e2(n2) : n2;
}
function y(e2, n2) {
  return !!i(n2) && (r2.error("Accessor#set", "Assigning an instance of '" + (n2.declaredClass || "unknown") + "' which is not a subclass of '" + g(e2) + "'"), true);
}
function v(e2, n2) {
  return null == n2 ? n2 : l(e2) ? p(e2, n2) : c(e2, n2) ? y(e2, n2) ? n2 : new e2(n2) : n2;
}
function g(e2) {
  return e2 && e2.prototype && e2.prototype.declaredClass || "unknown";
}
var h = /* @__PURE__ */ new WeakMap();
function m(e2) {
  switch (e2) {
    case Number:
      return a;
    case T:
      return s2;
    case Boolean:
      return o;
    case String:
      return u;
    case Date:
      return t;
    default:
      return r(h, e2, () => v.bind(null, e2));
  }
}
function d(e2, n2) {
  const r3 = m(e2);
  return 1 === arguments.length ? r3 : r3(n2);
}
function b(e2, n2, r3) {
  return 1 === arguments.length ? b.bind(null, e2) : n2 ? Array.isArray(n2) ? n2.map((n3) => e2(n3, r3)) : [e2(n2, r3)] : n2;
}
function w(e2, n2) {
  return 1 === arguments.length ? b((n3) => d(e2, n3)) : b((n3) => d(e2, n3), n2);
}
function A(e2, n2, r3) {
  return 0 !== n2 && Array.isArray(r3) ? r3.map((r4) => A(e2, n2 - 1, r4)) : e2(r3);
}
function $(e2, n2, r3) {
  if (2 === arguments.length)
    return (r4) => $(e2, n2, r4);
  if (!r3)
    return r3;
  r3 = A(e2, n2, r3);
  let t3 = n2, o2 = r3;
  for (; t3 > 0 && Array.isArray(o2); )
    t3--, o2 = o2[0];
  if (void 0 !== o2)
    for (let u2 = 0; u2 < t3; u2++)
      r3 = [r3];
  return r3;
}
function j(e2, n2, r3) {
  return 2 === arguments.length ? $((n3) => d(e2, n3), n2) : $((n3) => d(e2, n3), n2, r3);
}
function k(e2) {
  return !!Array.isArray(e2) && !e2.some((n2) => {
    const r3 = typeof n2;
    return !("string" === r3 || "number" === r3 || "function" === r3 && e2.length > 1);
  });
}
function M(e2, n2) {
  if (2 === arguments.length)
    return M(e2).call(null, n2);
  const t3 = /* @__PURE__ */ new Set(), o2 = e2.filter((e3) => "function" != typeof e3), u2 = e2.filter((e3) => "function" == typeof e3);
  for (const r3 of e2)
    "string" != typeof r3 && "number" != typeof r3 || t3.add(r3);
  let a2 = null, s3 = null;
  return (e3, n3) => {
    if (null == e3)
      return e3;
    const i3 = typeof e3, l2 = "string" === i3 || "number" === i3;
    return l2 && (t3.has(e3) || u2.some((e4) => "string" === i3 && e4 === String || "number" === i3 && e4 === Number)) || "object" === i3 && u2.some((n4) => !c(e3, n4)) ? e3 : (l2 && o2.length ? (a2 || (a2 = o2.map((e4) => "string" == typeof e4 ? `'${e4}'` : `${e4}`).join(", ")), r2.error("Accessor#set", `'${e3}' is not a valid value for this property, only the following values are valid: ${a2}`)) : "object" == typeof e3 && u2.length ? (s3 || (s3 = u2.map((e4) => g(e4)).join(", ")), r2.error("Accessor#set", `'${e3}' is not a valid value for this property, value must be one of ${s3}`)) : r2.error("Accessor#set", `'${e3}' is not a valid value for this property`), n3 && (n3.valid = false), null);
  };
}
function S(e2, n2) {
  if (2 === arguments.length)
    return S(e2).call(null, n2);
  const t3 = {}, o2 = [], u2 = [];
  for (const r3 in e2.typeMap) {
    const n3 = e2.typeMap[r3];
    t3[r3] = d(n3), o2.push(g(n3)), u2.push(r3);
  }
  const a2 = () => `'${o2.join("', '")}'`, s3 = () => `'${u2.join("', '")}'`, l2 = "string" == typeof e2.key ? (n3) => n3[e2.key] : e2.key;
  return (n3) => {
    if (e2.base && !c(e2.base, n3))
      return n3;
    if (null == n3)
      return n3;
    const o3 = l2(n3) || e2.defaultKeyValue, u3 = t3[o3];
    if (!u3)
      return r2.error("Accessor#set", `Invalid property value, value needs to be one of ${a2()}, or a plain object that can autocast (having .type = ${s3()})`), null;
    if (!c(e2.typeMap[o3], n3))
      return n3;
    if ("string" == typeof e2.key && !i(n3)) {
      const r3 = {};
      for (const t4 in n3)
        t4 !== e2.key && (r3[t4] = n3[t4]);
      return u3(r3);
    }
    return u3(n3);
  };
}
var T = class {
};
var N = { native: (e2) => ({ type: "native", value: e2 }), array: (e2) => ({ type: "array", value: e2 }), oneOf: (e2) => ({ type: "one-of", values: e2 }) };
function _(e2) {
  if (!e2 || !("type" in e2))
    return false;
  switch (e2.type) {
    case "native":
    case "array":
    case "one-of":
      return true;
  }
  return false;
}
function B(e2) {
  switch (e2.type) {
    case "native":
      return d(e2.value);
    case "array":
      return b(B(e2.value));
    case "one-of":
      return C(e2);
    default:
      return null;
  }
}
function C(e2) {
  let n2 = null;
  return (t3, o2) => F(t3, e2) ? t3 : (null == n2 && (n2 = D(e2)), r2.error("Accessor#set", `Invalid property value, value needs to be of type ${n2}`), o2 && (o2.valid = false), null);
}
function D(e2) {
  switch (e2.type) {
    case "native":
      switch (e2.value) {
        case Number:
          return "number";
        case String:
          return "string";
        case Boolean:
          return "boolean";
        case T:
          return "integer";
        case Date:
          return "date";
        default:
          return g(e2.value);
      }
    case "array":
      return `array of ${D(e2.value)}`;
    case "one-of": {
      const n2 = e2.values.map((e3) => D(e3));
      return `one of ${n2.slice(0, n2.length - 1)} or ${n2[n2.length - 1]}`;
    }
  }
  return "unknown";
}
function F(e2, n2) {
  if (null == e2)
    return true;
  switch (n2.type) {
    case "native":
      switch (n2.value) {
        case Number:
        case T:
          return "number" == typeof e2;
        case Boolean:
          return "boolean" == typeof e2;
        case String:
          return "string" == typeof e2;
      }
      return e2 instanceof n2.value;
    case "array":
      return !!Array.isArray(e2) && !e2.some((e3) => !F(e3, n2.value));
    case "one-of":
      return n2.values.some((n3) => F(e2, n3));
  }
}

// node_modules/@arcgis/core/core/ObjectPool.js
function t2(t3) {
  return t3 && t3.release && "function" == typeof t3.release;
}
function i2(t3) {
  return t3 && t3.acquire && "function" == typeof t3.acquire;
}
var e = class _e {
  constructor(t3, i3, e2, o2 = 1, s3 = 0) {
    if (this._ctor = t3, this._acquireFunction = i3, this._releaseFunction = e2, this.allocationSize = o2, this._pool = new Array(s3), this._initialSize = s3, this._ctor)
      for (let n2 = 0; n2 < s3; n2++)
        this._pool[n2] = new this._ctor();
    this.allocationSize = Math.max(o2, 1);
  }
  destroy() {
    this.prune(0);
  }
  acquire(...t3) {
    let o2;
    if (_e.test.disabled)
      o2 = new this._ctor();
    else {
      if (0 === this._pool.length) {
        const t4 = this.allocationSize;
        for (let i3 = 0; i3 < t4; i3++)
          this._pool[i3] = new this._ctor();
      }
      o2 = this._pool.pop();
    }
    return this._acquireFunction ? this._acquireFunction(o2, ...t3) : i2(o2) && o2.acquire(...t3), o2;
  }
  release(i3) {
    i3 && !_e.test.disabled && (this._releaseFunction ? this._releaseFunction(i3) : t2(i3) && i3.release(), this._pool.push(i3));
  }
  prune(t3 = this._initialSize) {
    if (!(t3 >= this._pool.length)) {
      for (let i3 = t3; i3 < this._pool.length; ++i3) {
        const t4 = this._pool[i3];
        this._dispose(t4);
      }
      this._pool.length = t3;
    }
  }
  _dispose(t3) {
    t3.dispose && "function" == typeof t3.dispose && t3.dispose();
  }
};
e.test = { disabled: false };

export {
  e,
  n,
  r,
  u,
  a,
  s2 as s,
  v,
  d,
  b,
  w,
  $,
  j,
  k,
  M,
  S,
  T,
  N,
  _,
  B
};
//# sourceMappingURL=chunk-2YSHZRCT.js.map
