import {
  a as a5,
  i as i4,
  u as u2
} from "./chunk-4J6R7QH6.js";
import {
  a as a4,
  d
} from "./chunk-HB3KZNZ3.js";
import {
  c,
  i as i2,
  m as m2,
  p
} from "./chunk-OO4A3EBQ.js";
import {
  i as i3
} from "./chunk-KTEJJM3A.js";
import {
  e as e2,
  o as o3
} from "./chunk-EIE3W25Z.js";
import {
  n,
  t
} from "./chunk-FXDEKQIL.js";
import {
  n as n2,
  r as r2
} from "./chunk-GJ5WE5D3.js";
import {
  h
} from "./chunk-KKGH4SRQ.js";
import {
  V
} from "./chunk-4RFFPIT2.js";
import {
  j
} from "./chunk-7KX64CAH.js";
import {
  o as o4
} from "./chunk-4H5JODOT.js";
import {
  i
} from "./chunk-MOPR7RFH.js";
import {
  o2,
  r
} from "./chunk-SFV6XLDZ.js";
import {
  s as s5
} from "./chunk-3PLRSFLA.js";
import {
  o,
  s as s4
} from "./chunk-VBD33VNW.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  m,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a3,
  s2 as s3,
  u
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  S,
  T,
  a as a2
} from "./chunk-2YSHZRCT.js";
import {
  K,
  V as V2,
  W,
  Y,
  it,
  ot,
  tt
} from "./chunk-O3CHVGVF.js";
import {
  s as s2
} from "./chunk-HNHXEGH2.js";
import {
  s2 as s
} from "./chunk-W2N7YT6I.js";
import {
  a
} from "./chunk-I5JT24BO.js";

// node_modules/@arcgis/core/symbols/LineSymbol.js
var i5 = class extends a4 {
  constructor(r6) {
    super(r6), this.type = "simple-line", this.width = 0.75;
  }
  hash() {
    return `${this.type}.${this.width}`;
  }
};
e([o4({ esriSLS: "simple-line" }, { readOnly: true })], i5.prototype, "type", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], i5.prototype, "width", void 0), i5 = e([a3("esri.symbols.LineSymbol")], i5);
var c2 = i5;

// node_modules/@arcgis/core/symbols/support/lineMarkers.js
var e3 = ["begin", "end", "begin-end"];
var n3 = ["arrow", "circle", "square", "diamond", "cross", "x"];

// node_modules/@arcgis/core/symbols/LineSymbolMarker.js
var n4;
var m3 = n4 = class extends l {
  constructor(r6) {
    super(r6), this.placement = "begin-end", this.type = "line-marker", this.style = "arrow";
  }
  writeStyle(r6, o9, e8, t12) {
    o9[e8] = "web-map" === (t12 == null ? void 0 : t12.origin) ? "arrow" : r6;
  }
  set color(r6) {
    this._set("color", r6);
  }
  readColor(r6) {
    return r6 && null != r6[0] ? [r6[0], r6[1], r6[2], r6[3] / 255] : r6;
  }
  writeColor(r6, o9, e8, t12) {
    "web-map" === (t12 == null ? void 0 : t12.origin) || (o9[e8] = r6);
  }
  clone() {
    return new n4({ color: a(this.color), placement: this.placement, style: this.style });
  }
  hash() {
    var _a;
    return `${this.placement}.${(_a = this.color) == null ? void 0 : _a.hash()}.${this.style}`;
  }
};
e([y({ type: ["begin", "end", "begin-end"], json: { write: true } })], m3.prototype, "placement", void 0), e([o4({ "line-marker": "line-marker" }, { readOnly: true }), y({ json: { origins: { "web-map": { write: false } } } })], m3.prototype, "type", void 0), e([y({ type: n3 })], m3.prototype, "style", void 0), e([r("style")], m3.prototype, "writeStyle", null), e([y({ type: h, value: null, json: { write: { allowNull: true } } })], m3.prototype, "color", null), e([o2("color")], m3.prototype, "readColor", null), e([r("color")], m3.prototype, "writeColor", null), m3 = n4 = e([a3("esri.symbols.LineSymbolMarker")], m3);
var u3 = m3;

// node_modules/@arcgis/core/symbols/SimpleLineSymbol.js
var p2;
var h2 = new s4({ esriSLSSolid: "solid", esriSLSDash: "dash", esriSLSDot: "dot", esriSLSDashDot: "dash-dot", esriSLSDashDotDot: "long-dash-dot-dot", esriSLSNull: "none", esriSLSInsideFrame: "inside-frame", esriSLSShortDash: "short-dash", esriSLSShortDot: "short-dot", esriSLSShortDashDot: "short-dash-dot", esriSLSShortDashDotDot: "short-dash-dot-dot", esriSLSLongDash: "long-dash", esriSLSLongDashDot: "long-dash-dot" });
var d2 = p2 = class extends c2 {
  constructor(...r6) {
    super(...r6), this.type = "simple-line", this.style = "solid", this.cap = "round", this.join = "round", this.marker = null, this.miterLimit = 2;
  }
  normalizeCtorArgs(r6, o9, e8, s10, i11, n16) {
    if (r6 && "string" != typeof r6)
      return r6;
    const l17 = {};
    return null != r6 && (l17.style = r6), null != o9 && (l17.color = o9), null != e8 && (l17.width = o3(e8)), null != s10 && (l17.cap = s10), null != i11 && (l17.join = i11), null != n16 && (l17.miterLimit = o3(n16)), l17;
  }
  clone() {
    var _a;
    return new p2({ color: a(this.color), style: this.style, width: this.width, cap: this.cap, join: this.join, miterLimit: this.miterLimit, marker: (_a = this.marker) == null ? void 0 : _a.clone() });
  }
  hash() {
    var _a, _b;
    return `${super.hash()}.${(_a = this.color) == null ? void 0 : _a.hash()}.${this.style}.${this.cap}.${this.join}.${this.miterLimit}.${(_b = this.marker) == null ? void 0 : _b.hash()}`;
  }
};
e([o4({ esriSLS: "simple-line" }, { readOnly: true })], d2.prototype, "type", void 0), e([y({ type: h2.apiValues, json: { read: h2.read, write: h2.write } })], d2.prototype, "style", void 0), e([y({ type: ["butt", "round", "square"], json: { write: { overridePolicy: (r6, o9, e8) => ({ enabled: "round" !== r6 && (null == e8 || null == e8.origin) }) } } })], d2.prototype, "cap", void 0), e([y({ type: ["miter", "round", "bevel"], json: { write: { overridePolicy: (r6, o9, e8) => ({ enabled: "round" !== r6 && (null == e8 || null == e8.origin) }) } } })], d2.prototype, "join", void 0), e([y({ types: { key: "type", base: null, defaultKeyValue: "line-marker", typeMap: { "line-marker": u3 } }, json: { write: true, origins: { "web-scene": { write: false } } } })], d2.prototype, "marker", void 0), e([y({ type: Number, json: { read: false, write: false } })], d2.prototype, "miterLimit", void 0), d2 = p2 = e([a3("esri.symbols.SimpleLineSymbol")], d2);
var m4 = d2;

// node_modules/@arcgis/core/symbols/support/textUtils.js
var l2 = ["none", "underline", "line-through"];
var t2 = ["normal", "italic", "oblique"];
var r3 = ["normal", "lighter", "bold", "bolder"];
var n5 = { type: Number, cast: (l17) => {
  const t12 = a2(l17);
  return 0 === t12 ? 1 : i(t12, 0.1, 4);
}, nonNullable: true };
var i6 = ["left", "right", "center"];
var a6 = ["baseline", "top", "middle", "bottom"];
var m5 = { type: i6, nonNullable: true };
var p3 = { type: a6, nonNullable: true };
var s6 = 8;

// node_modules/@arcgis/core/symbols/support/IconSymbol3DLayerResource.js
var l3;
var d3 = o()({ circle: "circle", square: "square", cross: "cross", x: "x", kite: "kite", triangle: "triangle" });
var h3 = l3 = class extends l {
  constructor(r6) {
    super(r6);
  }
  readHref(r6, e8, o9) {
    return r6 ? i2(r6, o9) : e8.dataURI;
  }
  writeHref(r6, e8, o9, c19) {
    r6 && (tt(r6) ? e8.dataURI = r6 : (e8.href = c(r6, c19), Y(e8.href) && (e8.href = K(e8.href))));
  }
  clone() {
    return new l3({ href: this.href, primitive: this.primitive });
  }
};
e([y({ type: String, json: { write: true, read: { source: ["href", "dataURI"] } } })], h3.prototype, "href", void 0), e([o2("href")], h3.prototype, "readHref", null), e([r("href", { href: { type: String }, dataURI: { type: String } })], h3.prototype, "writeHref", null), e([o4(d3)], h3.prototype, "primitive", void 0), h3 = l3 = e([a3("esri.symbols.support.IconSymbol3DLayerResource")], h3);
var j2 = "circle";

// node_modules/@arcgis/core/symbols/support/ObjectSymbol3DLayerResource.js
var n6;
var a7 = o()({ sphere: "sphere", cylinder: "cylinder", cube: "cube", cone: "cone", diamond: "diamond", tetrahedron: "tetrahedron", invertedCone: "inverted-cone" });
var m6 = n6 = class extends l {
  clone() {
    return new n6({ href: this.href, primitive: this.primitive });
  }
};
e([y({ type: String, json: { read: m2, write: p } })], m6.prototype, "href", void 0), e([o4(a7)], m6.prototype, "primitive", void 0), m6 = n6 = e([a3("esri.symbols.support.ObjectSymbol3DLayerResource")], m6);
var d4 = "sphere";

// node_modules/@arcgis/core/symbols/support/StyleOrigin.js
var p4;
var l4 = p4 = class extends m {
  constructor(t12) {
    super(t12), this.name = null, this.styleUrl = null, this.styleName = null, this.portal = null;
  }
  clone() {
    return new p4({ name: this.name, styleUrl: this.styleUrl, styleName: this.styleName, portal: this.portal });
  }
};
e([y({ type: String })], l4.prototype, "name", void 0), e([y({ type: String })], l4.prototype, "styleUrl", void 0), e([y({ type: String })], l4.prototype, "styleName", void 0), e([y({ type: j })], l4.prototype, "portal", void 0), l4 = p4 = e([a3("esri.symbols.support.StyleOrigin")], l4);
var a8 = l4;

// node_modules/@arcgis/core/symbols/support/Thumbnail.js
var t3;
var p5 = t3 = class extends m {
  constructor() {
    super(...arguments), this.url = "";
  }
  clone() {
    return new t3({ url: this.url });
  }
};
e([y({ type: String })], p5.prototype, "url", void 0), p5 = t3 = e([a3("esri.symbols.support.Thumbnail")], p5);

// node_modules/@arcgis/core/symbols/MarkerSymbol.js
var p6 = class extends a4 {
  constructor(t12) {
    super(t12), this.angle = 0, this.type = null, this.xoffset = 0, this.yoffset = 0, this.size = 9;
  }
  hash() {
    return `${this.type}.${this.angle}.${this.size}.${this.xoffset}.${this.yoffset}`;
  }
};
e([y({ type: Number, json: { read: (t12) => t12 && -1 * t12, write: (t12, e8) => e8.angle = t12 && -1 * t12 } })], p6.prototype, "angle", void 0), e([y({ type: ["simple-marker", "picture-marker"], readOnly: true })], p6.prototype, "type", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], p6.prototype, "xoffset", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], p6.prototype, "yoffset", void 0), e([y({ type: Number, cast: (t12) => "auto" === t12 ? t12 : o3(t12), json: { write: true } })], p6.prototype, "size", void 0), p6 = e([a3("esri.symbols.MarkerSymbol")], p6);
var i7 = p6;

// node_modules/@arcgis/core/symbols/support/urlUtils.js
function o5(a19, r6, t12) {
  return r6.imageData ? it({ mediaType: r6.contentType || "image/png", isBase64: true, data: r6.imageData }) : s7(r6.url, t12);
}
function s7(e8, t12) {
  var _a;
  return p7(t12) && !Y(e8) && ((_a = t12 == null ? void 0 : t12.layer) == null ? void 0 : _a.parsedUrl) ? V2(t12.layer.parsedUrl.path, "images", e8) : i2(e8, t12);
}
function u4(e8, a19, r6, n16) {
  if (tt(e8)) {
    const t12 = ot(e8);
    if (!t12)
      return;
    a19.contentType = t12.mediaType, a19.imageData = t12.data, r6 && r6.imageData === a19.imageData && r6.url && p(r6.url, a19, "url", n16);
  } else
    p(e8, a19, "url", n16);
}
var m7 = { json: { read: { source: ["imageData", "url"], reader: o5 }, write: { writer(e8, a19, r6, t12) {
  u4(e8, a19, this.source, t12);
} } } };
var c3 = { readOnly: true, json: { read: { source: ["imageData", "url"], reader(e8, a19, r6) {
  const t12 = {};
  return a19.imageData && (t12.imageData = a19.imageData), a19.contentType && (t12.contentType = a19.contentType), a19.url && (t12.url = s7(a19.url, r6)), t12;
} } } };
function p7(e8) {
  var _a, _b;
  return !(null == e8 || "service" !== e8.origin && "portal-item" !== e8.origin || "feature" !== ((_a = e8.layer) == null ? void 0 : _a.type) && "stream" !== ((_b = e8.layer) == null ? void 0 : _b.type));
}

// node_modules/@arcgis/core/symbols/PictureMarkerSymbol.js
var l5;
var a9 = l5 = class extends i7 {
  constructor(...r6) {
    super(...r6), this.color = null, this.type = "picture-marker", this.url = null, this.source = null, this.height = 12, this.width = 12, this.size = null;
  }
  normalizeCtorArgs(r6, t12, o9) {
    if (r6 && "string" != typeof r6 && null == r6.imageData)
      return r6;
    const s10 = {};
    return r6 && (s10.url = r6), null != t12 && (s10.width = o3(t12)), null != o9 && (s10.height = o3(o9)), s10;
  }
  readHeight(r6, t12) {
    return t12.size || r6;
  }
  readWidth(r6, t12) {
    return t12.size || r6;
  }
  clone() {
    const r6 = new l5({ angle: this.angle, height: this.height, url: this.url, width: this.width, xoffset: this.xoffset, yoffset: this.yoffset });
    return r6._set("source", a(this.source)), r6;
  }
  hash() {
    return `${super.hash()}.${this.height}.${this.url}.${this.width}`;
  }
};
e([y({ json: { write: false } })], a9.prototype, "color", void 0), e([o4({ esriPMS: "picture-marker" }, { readOnly: true })], a9.prototype, "type", void 0), e([y(m7)], a9.prototype, "url", void 0), e([y(c3)], a9.prototype, "source", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], a9.prototype, "height", void 0), e([o2("height", ["height", "size"])], a9.prototype, "readHeight", null), e([y({ type: Number, cast: o3, json: { write: true } })], a9.prototype, "width", void 0), e([y({ json: { write: false } })], a9.prototype, "size", void 0), a9 = l5 = e([a3("esri.symbols.PictureMarkerSymbol")], a9);
var n7 = a9;

// node_modules/@arcgis/core/symbols/FillSymbol.js
var l6 = class extends a4 {
  constructor(e8) {
    super(e8), this.outline = null, this.type = null;
  }
  hash() {
    return `${this.type}.${this.outline && this.outline.hash()}`;
  }
};
e([y({ types: { key: "type", base: null, defaultKeyValue: "simple-line", typeMap: { "simple-line": m4 } }, json: { default: null, write: true } })], l6.prototype, "outline", void 0), e([y({ type: ["simple-fill", "picture-fill"], readOnly: true })], l6.prototype, "type", void 0), l6 = e([a3("esri.symbols.FillSymbol")], l6);
var p8 = l6;

// node_modules/@arcgis/core/symbols/SimpleFillSymbol.js
var p9;
var c4 = new s4({ esriSFSSolid: "solid", esriSFSNull: "none", esriSFSHorizontal: "horizontal", esriSFSVertical: "vertical", esriSFSForwardDiagonal: "forward-diagonal", esriSFSBackwardDiagonal: "backward-diagonal", esriSFSCross: "cross", esriSFSDiagonalCross: "diagonal-cross" });
var m8 = p9 = class extends p8 {
  constructor(...o9) {
    super(...o9), this.color = new h([0, 0, 0, 0.25]), this.outline = new m4(), this.type = "simple-fill", this.style = "solid";
  }
  normalizeCtorArgs(o9, r6, s10) {
    if (o9 && "string" != typeof o9)
      return o9;
    const e8 = {};
    return o9 && (e8.style = o9), r6 && (e8.outline = r6), s10 && (e8.color = s10), e8;
  }
  clone() {
    return new p9({ color: a(this.color), outline: this.outline && this.outline.clone(), style: this.style });
  }
  hash() {
    return `${super.hash()}${this.style}.${this.color && this.color.hash()}`;
  }
};
e([y()], m8.prototype, "color", void 0), e([y()], m8.prototype, "outline", void 0), e([o4({ esriSFS: "simple-fill" }, { readOnly: true })], m8.prototype, "type", void 0), e([y({ type: c4.apiValues, json: { read: c4.read, write: c4.write } })], m8.prototype, "style", void 0), m8 = p9 = e([a3("esri.symbols.SimpleFillSymbol")], m8);
var S2 = m8;

// node_modules/@arcgis/core/symbols/SimpleMarkerSymbol.js
var h4;
var m9 = new s4({ esriSMSCircle: "circle", esriSMSSquare: "square", esriSMSCross: "cross", esriSMSX: "x", esriSMSDiamond: "diamond", esriSMSTriangle: "triangle", esriSMSPath: "path" });
var u5 = h4 = class extends i7 {
  constructor(...e8) {
    super(...e8), this.color = new h([255, 255, 255, 0.25]), this.type = "simple-marker", this.size = 12, this.style = "circle", this.outline = new m4();
  }
  normalizeCtorArgs(e8, o9, r6, t12) {
    if (e8 && "string" != typeof e8)
      return e8;
    const i11 = {};
    return e8 && (i11.style = e8), null != o9 && (i11.size = o3(o9)), r6 && (i11.outline = r6), t12 && (i11.color = t12), i11;
  }
  writeColor(e8, o9) {
    e8 && "x" !== this.style && "cross" !== this.style && (o9.color = e8.toJSON()), null === e8 && (o9.color = null);
  }
  set path(e8) {
    this.style = "path", this._set("path", e8);
  }
  clone() {
    return new h4({ angle: this.angle, color: a(this.color), outline: this.outline && this.outline.clone(), path: this.path, size: this.size, style: this.style, xoffset: this.xoffset, yoffset: this.yoffset });
  }
  hash() {
    var _a;
    return `${super.hash()}.${this.color && this.color.hash()}.${this.path}.${this.style}.${(_a = this.outline) == null ? void 0 : _a.hash()}`;
  }
};
e([y()], u5.prototype, "color", void 0), e([r("color")], u5.prototype, "writeColor", null), e([o4({ esriSMS: "simple-marker" }, { readOnly: true })], u5.prototype, "type", void 0), e([y()], u5.prototype, "size", void 0), e([y({ type: m9.apiValues, json: { read: m9.read, write: m9.write } })], u5.prototype, "style", void 0), e([y({ type: String, json: { write: true } })], u5.prototype, "path", null), e([y({ types: { key: "type", base: null, defaultKeyValue: "simple-line", typeMap: { "simple-line": m4 } }, json: { default: null, write: true } })], u5.prototype, "outline", void 0), u5 = h4 = e([a3("esri.symbols.SimpleMarkerSymbol")], u5);
var y2 = u5;

// node_modules/@arcgis/core/symbols/Font.js
var n8;
var l7 = n8 = class extends l {
  constructor(t12) {
    super(t12), this.decoration = "none", this.family = "sans-serif", this.size = 9, this.style = "normal", this.weight = "normal";
  }
  castSize(t12) {
    return o3(t12);
  }
  clone() {
    return new n8({ decoration: this.decoration, family: this.family, size: this.size, style: this.style, weight: this.weight });
  }
  hash() {
    return `${this.decoration}.${this.family}.${this.size}.${this.style}.${this.weight}`;
  }
};
e([y({ type: l2, json: { default: "none", write: true } })], l7.prototype, "decoration", void 0), e([y({ type: String, json: { write: true } })], l7.prototype, "family", void 0), e([y({ type: Number, json: { write: { overridePolicy: (t12, o9, e8) => ({ enabled: !e8 || !e8.textSymbol3D }) } } })], l7.prototype, "size", void 0), e([s5("size")], l7.prototype, "castSize", null), e([y({ type: t2, json: { default: "normal", write: true } })], l7.prototype, "style", void 0), e([y({ type: r3, json: { default: "normal", write: true } })], l7.prototype, "weight", void 0), l7 = n8 = e([a3("esri.symbols.Font")], l7);
var m10 = l7;

// node_modules/@arcgis/core/symbols/TextSymbol.js
var f;
var g = f = class extends a4 {
  constructor(...t12) {
    super(...t12), this.backgroundColor = null, this.borderLineColor = null, this.borderLineSize = null, this.font = new m10(), this.horizontalAlignment = "center", this.kerning = true, this.haloColor = null, this.haloSize = null, this.rightToLeft = null, this.rotated = false, this.text = "", this.type = "text", this.verticalAlignment = "baseline", this.xoffset = 0, this.yoffset = 0, this.angle = 0, this.width = null, this.lineWidth = 192, this.lineHeight = 1;
  }
  normalizeCtorArgs(t12, o9, e8) {
    if (t12 && "string" != typeof t12)
      return t12;
    const i11 = {};
    return t12 && (i11.text = t12), o9 && (i11.font = o9), e8 && (i11.color = e8), i11;
  }
  writeLineWidth(t12, o9, e8, i11) {
    i11 && "string" != typeof i11 ? i11.origin : o9[e8] = t12;
  }
  castLineWidth(t12) {
    return o3(t12);
  }
  writeLineHeight(t12, o9, e8, i11) {
    i11 && "string" != typeof i11 ? i11.origin : o9[e8] = t12;
  }
  clone() {
    return new f({ angle: this.angle, backgroundColor: a(this.backgroundColor), borderLineColor: a(this.borderLineColor), borderLineSize: this.borderLineSize, color: a(this.color), font: this.font && this.font.clone(), haloColor: a(this.haloColor), haloSize: this.haloSize, horizontalAlignment: this.horizontalAlignment, kerning: this.kerning, lineHeight: this.lineHeight, lineWidth: this.lineWidth, rightToLeft: this.rightToLeft, rotated: this.rotated, text: this.text, verticalAlignment: this.verticalAlignment, width: this.width, xoffset: this.xoffset, yoffset: this.yoffset });
  }
  hash() {
    var _a;
    return `${this.backgroundColor && this.backgroundColor.hash()}.${this.borderLineColor}.${this.borderLineSize}.${(_a = this.color) == null ? void 0 : _a.hash()}.${this.font && this.font.hash()}.${this.haloColor && this.haloColor.hash()}.${this.haloSize}.${this.horizontalAlignment}.${this.kerning}.${this.rightToLeft}.${this.rotated}.${this.text}.${this.verticalAlignment}.${this.width}.${this.xoffset}.${this.yoffset}.${this.lineHeight}.${this.lineWidth}.${this.angle}`;
  }
};
e([y({ type: h, json: { write: true } })], g.prototype, "backgroundColor", void 0), e([y({ type: h, json: { write: true } })], g.prototype, "borderLineColor", void 0), e([y({ type: Number, json: { write: true }, cast: o3 })], g.prototype, "borderLineSize", void 0), e([y({ type: m10, json: { write: true } })], g.prototype, "font", void 0), e([y({ ...m5, json: { write: true } })], g.prototype, "horizontalAlignment", void 0), e([y({ type: Boolean, json: { write: true } })], g.prototype, "kerning", void 0), e([y({ type: h, json: { write: true } })], g.prototype, "haloColor", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], g.prototype, "haloSize", void 0), e([y({ type: Boolean, json: { write: true } })], g.prototype, "rightToLeft", void 0), e([y({ type: Boolean, json: { write: true } })], g.prototype, "rotated", void 0), e([y({ type: String, json: { write: true } })], g.prototype, "text", void 0), e([o4({ esriTS: "text" }, { readOnly: true })], g.prototype, "type", void 0), e([y({ ...p3, json: { write: true } })], g.prototype, "verticalAlignment", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], g.prototype, "xoffset", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], g.prototype, "yoffset", void 0), e([y({ type: Number, json: { read: (t12) => t12 && -1 * t12, write: (t12, o9) => o9.angle = t12 && -1 * t12 } })], g.prototype, "angle", void 0), e([y({ type: Number, json: { write: true } })], g.prototype, "width", void 0), e([y({ type: Number })], g.prototype, "lineWidth", void 0), e([r("lineWidth")], g.prototype, "writeLineWidth", null), e([s5("lineWidth")], g.prototype, "castLineWidth", null), e([y(n5)], g.prototype, "lineHeight", void 0), e([r("lineHeight")], g.prototype, "writeLineHeight", null), g = f = e([a3("esri.symbols.TextSymbol")], g);
var m11 = g;

// node_modules/@arcgis/core/symbols/Symbol3DLayer.js
var p10 = class extends l {
  constructor(e8) {
    super(e8), this.enabled = true, this.type = null, this.ignoreDrivers = false;
  }
  writeEnabled(e8, r6, o9) {
    e8 || (r6[o9] = e8);
  }
};
e([y({ type: Boolean, json: { read: { source: "enable" }, write: { target: "enable" } } })], p10.prototype, "enabled", void 0), e([r("enabled")], p10.prototype, "writeEnabled", null), e([y({ type: ["icon", "object", "line", "path", "fill", "water", "extrude", "text"], readOnly: true })], p10.prototype, "type", void 0), p10 = e([a3("esri.symbols.Symbol3DLayer")], p10);
var a10 = p10;

// node_modules/@arcgis/core/symbols/support/materialUtils.js
function s8(o9, t12) {
  const n16 = null != t12.transparency ? r2(t12.transparency) : 1, s10 = t12.color;
  return s10 && Array.isArray(s10) ? new h([s10[0] || 0, s10[1] || 0, s10[2] || 0, n16]) : null;
}
function c5(r6, o9) {
  o9.color = r6.toJSON().slice(0, 3);
  const t12 = n2(r6.a);
  0 !== t12 && (o9.transparency = t12);
}
var p11 = { type: h, json: { type: [T], default: null, read: { source: ["color", "transparency"], reader: s8 }, write: { target: { color: { type: [T] }, transparency: { type: T } }, writer: c5 } } };
var a11 = { type: Number, cast: o3, json: { write: true } };

// node_modules/@arcgis/core/symbols/edges/Edges3D.js
var l8 = class extends l {
  constructor(o9) {
    super(o9), this.color = new h([0, 0, 0, 1]), this.extensionLength = 0, this.size = e2(1);
  }
  clone() {
  }
  cloneProperties() {
    return { color: a(this.color), size: this.size, extensionLength: this.extensionLength };
  }
};
e([y({ type: ["solid", "sketch"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], l8.prototype, "type", void 0), e([y(p11)], l8.prototype, "color", void 0), e([y({ ...a11, json: { write: { overridePolicy: (o9) => ({ enabled: !!o9 }) } } })], l8.prototype, "extensionLength", void 0), e([y(a11)], l8.prototype, "size", void 0), l8 = e([a3("esri.symbols.edges.Edges3D")], l8);
var m12 = l8;

// node_modules/@arcgis/core/symbols/edges/SketchEdges3D.js
var t4;
var c6 = t4 = class extends m12 {
  constructor(r6) {
    super(r6), this.type = "sketch";
  }
  clone() {
    return new t4(this.cloneProperties());
  }
};
e([o4({ sketch: "sketch" }, { readOnly: true })], c6.prototype, "type", void 0), c6 = t4 = e([a3("esri.symbols.edges.SketchEdges3D")], c6);
var p12 = c6;

// node_modules/@arcgis/core/symbols/edges/SolidEdges3D.js
var t5;
var p13 = t5 = class extends m12 {
  constructor(r6) {
    super(r6), this.type = "solid";
  }
  clone() {
    return new t5(this.cloneProperties());
  }
};
e([o4({ solid: "solid" }, { readOnly: true })], p13.prototype, "type", void 0), p13 = t5 = e([a3("esri.symbols.support.SolidEdges3D")], p13);
var c7 = p13;

// node_modules/@arcgis/core/symbols/edges/utils.js
var t6 = { types: { key: "type", base: m12, typeMap: { solid: c7, sketch: p12 } }, json: { write: true } };

// node_modules/@arcgis/core/symbols/support/Symbol3DMaterial.js
var c8;
var p14 = c8 = class extends l {
  constructor(o9) {
    super(o9), this.color = null;
  }
  clone() {
    const o9 = { color: null != this.color ? this.color.clone() : null };
    return new c8(o9);
  }
};
e([y(p11)], p14.prototype, "color", void 0), p14 = c8 = e([a3("esri.symbols.support.Symbol3DMaterial")], p14);

// node_modules/@arcgis/core/symbols/ExtrudeSymbol3DLayer.js
var l9;
var p15 = l9 = class extends a10 {
  constructor(e8) {
    super(e8), this.type = "extrude", this.size = 1, this.material = null, this.castShadows = true, this.edges = null;
  }
  clone() {
    return new l9({ edges: this.edges && this.edges.clone(), enabled: this.enabled, material: null != this.material ? this.material.clone() : null, castShadows: this.castShadows, size: this.size });
  }
};
e([o4({ Extrude: "extrude" }, { readOnly: true })], p15.prototype, "type", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } }, nonNullable: true })], p15.prototype, "size", void 0), e([y({ type: p14, json: { write: true } })], p15.prototype, "material", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], p15.prototype, "castShadows", void 0), e([y(t6)], p15.prototype, "edges", void 0), p15 = l9 = e([a3("esri.symbols.ExtrudeSymbol3DLayer")], p15);
var c9 = p15;

// node_modules/@arcgis/core/symbols/patterns/LinePattern3D.js
var t7 = class extends l {
  constructor(r6) {
    super(r6);
  }
  clone() {
  }
};
e([y({ type: ["style"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], t7.prototype, "type", void 0), t7 = e([a3("esri.symbols.patterns.LinePattern3D")], t7);
var p16 = t7;

// node_modules/@arcgis/core/symbols/patterns/lineStyles.js
var o6 = ["dash", "dash-dot", "dot", "long-dash", "long-dash-dot", "long-dash-dot-dot", "none", "short-dash", "short-dash-dot", "short-dash-dot-dot", "short-dot", "solid"];

// node_modules/@arcgis/core/symbols/patterns/LineStylePattern3D.js
var p17;
var h5 = o()({ dash: "dash", "dash-dot": "dash-dot", "dash-dot-dot": "long-dash-dot-dot", dot: "dot", "long-dash": "long-dash", "long-dash-dot": "long-dash-dot", null: "none", "short-dash": "short-dash", "short-dash-dot": "short-dash-dot", "short-dash-dot-dot": "short-dash-dot-dot", "short-dot": "short-dot", solid: "solid" });
var c10 = p17 = class extends p16 {
  constructor(o9) {
    super(o9), this.type = "style", this.style = "solid";
  }
  clone() {
    const o9 = { style: this.style };
    return new p17(o9);
  }
};
e([y({ type: ["style"] })], c10.prototype, "type", void 0), e([o4(h5), y({ type: o6 })], c10.prototype, "style", void 0), c10 = p17 = e([a3("esri.symbols.patterns.LineStylePattern3D")], c10);
var l10 = c10;

// node_modules/@arcgis/core/symbols/patterns/Pattern3D.js
var t8 = class extends l {
  constructor(r6) {
    super(r6);
  }
  clone() {
  }
};
e([y({ type: ["style"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], t8.prototype, "type", void 0), t8 = e([a3("esri.symbols.patterns.Pattern3D")], t8);
var p18 = t8;

// node_modules/@arcgis/core/symbols/patterns/styles.js
var a12 = ["backward-diagonal", "cross", "diagonal-cross", "forward-diagonal", "horizontal", "none", "solid", "vertical"];

// node_modules/@arcgis/core/symbols/patterns/StylePattern3D.js
var p19;
var c11 = p19 = class extends p18 {
  constructor(s10) {
    super(s10), this.type = "style", this.style = "solid";
  }
  clone() {
    const s10 = { style: this.style };
    return new p19(s10);
  }
};
e([y({ type: ["style"] })], c11.prototype, "type", void 0), e([y({ type: a12, json: { read: true, write: true } })], c11.prototype, "style", void 0), c11 = p19 = e([a3("esri.symbols.patterns.StylePattern3D")], c11);
var a13 = c11;

// node_modules/@arcgis/core/symbols/patterns/utils.js
var s9 = { types: { key: "type", base: p18, typeMap: { style: a13 } }, json: { write: true } };
var o7 = { types: { key: "type", base: p16, typeMap: { style: l10 } }, json: { write: true } };

// node_modules/@arcgis/core/symbols/support/colors.js
var o8 = new h("white");
var r4 = new h("black");
var e4 = new h([255, 255, 255, 0]);
function t9(n16) {
  return 0 === n16.r && 0 === n16.g && 0 === n16.b;
}

// node_modules/@arcgis/core/symbols/support/Symbol3DFillMaterial.js
var t10;
var l11 = t10 = class extends p14 {
  constructor(o9) {
    super(o9), this.colorMixMode = null;
  }
  clone() {
    const o9 = { color: null != this.color ? this.color.clone() : null, colorMixMode: this.colorMixMode };
    return new t10(o9);
  }
};
e([o4({ multiply: "multiply", replace: "replace", tint: "tint" })], l11.prototype, "colorMixMode", void 0), l11 = t10 = e([a3("esri.symbols.support.Symbol3DFillMaterial")], l11);

// node_modules/@arcgis/core/symbols/support/Symbol3DOutline.js
var c12;
var m13 = c12 = class extends l {
  constructor(t12) {
    super(t12), this.color = new h([0, 0, 0, 1]), this.size = e2(1), this.pattern = null, this.patternCap = "butt";
  }
  clone() {
    const t12 = { color: null != this.color ? this.color.clone() : null, size: this.size, pattern: null != this.pattern ? this.pattern.clone() : null, patternCap: this.patternCap };
    return new c12(t12);
  }
};
e([y(p11)], m13.prototype, "color", void 0), e([y(a11)], m13.prototype, "size", void 0), e([y(o7)], m13.prototype, "pattern", void 0), e([y({ type: u2, json: { default: "butt", write: { overridePolicy() {
  return { enabled: null != this.pattern };
} } } })], m13.prototype, "patternCap", void 0), m13 = c12 = e([a3("esri.symbols.support.Symbol3DOutline")], m13);

// node_modules/@arcgis/core/symbols/FillSymbol3DLayer.js
var y3;
var d5 = y3 = class extends a10 {
  constructor(t12) {
    super(t12), this.type = "fill", this.material = null, this.pattern = null, this.castShadows = true, this.outline = null, this.edges = null;
  }
  clone() {
    const t12 = { edges: null != this.edges ? this.edges.clone() : null, enabled: this.enabled, material: null != this.material ? this.material.clone() : null, pattern: null != this.pattern ? this.pattern.clone() : null, castShadows: this.castShadows, outline: null != this.outline ? this.outline.clone() : null };
    return new y3(t12);
  }
  static fromSimpleFillSymbol(t12) {
    var _a, _b, _c;
    const e8 = t12.outline && t12.outline.style && "inside-frame" !== t12.outline.style && "solid" !== t12.outline.style ? new l10({ style: t12.outline.style }) : null, o9 = { size: ((_a = t12.outline) == null ? void 0 : _a.width) ?? 0, color: (((_b = t12.outline) == null ? void 0 : _b.color) ?? o8).clone(), pattern: e8 };
    return e8 && ((_c = t12.outline) == null ? void 0 : _c.cap) && (o9.patternCap = t12.outline.cap), new y3({ material: new l11({ color: (t12.color ?? e4).clone() }), pattern: t12.style && "solid" !== t12.style ? new a13({ style: t12.style }) : null, outline: o9 });
  }
};
e([o4({ Fill: "fill" }, { readOnly: true })], d5.prototype, "type", void 0), e([y({ type: l11, json: { write: true } })], d5.prototype, "material", void 0), e([y(s9)], d5.prototype, "pattern", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], d5.prototype, "castShadows", void 0), e([y({ type: m13, json: { write: true } })], d5.prototype, "outline", void 0), e([y(t6)], d5.prototype, "edges", void 0), d5 = y3 = e([a3("esri.symbols.FillSymbol3DLayer")], d5);
var h6 = d5;

// node_modules/@arcgis/core/symbols/support/Symbol3DAnchorPosition2D.js
var e5;
var p20 = e5 = class extends m {
  constructor() {
    super(...arguments), this.x = 0, this.y = 0;
  }
  clone() {
    return new e5({ x: this.x, y: this.y });
  }
};
e([y({ type: Number })], p20.prototype, "x", void 0), e([y({ type: Number })], p20.prototype, "y", void 0), p20 = e5 = e([a3("esri.symbols.support.Symbol3DAnchorPosition2D")], p20);

// node_modules/@arcgis/core/symbols/support/Symbol3DIconOutline.js
var l12;
var m14 = l12 = class extends l {
  constructor(o9) {
    super(o9), this.color = new h([0, 0, 0, 1]), this.size = e2(1);
  }
  clone() {
    const o9 = { color: null != this.color ? this.color.clone() : null, size: this.size };
    return new l12(o9);
  }
};
e([y(p11)], m14.prototype, "color", void 0), e([y(a11)], m14.prototype, "size", void 0), m14 = l12 = e([a3("esri.symbols.support.Symbol3DIconOutline")], m14);

// node_modules/@arcgis/core/symbols/IconSymbol3DLayer.js
var y4;
var d6 = "esri.symbols.IconSymbol3DLayer";
var f2 = y4 = class extends a10 {
  constructor(o9) {
    super(o9), this.material = null, this.resource = null, this.type = "icon", this.size = 12, this.anchor = "center", this.anchorPosition = null, this.outline = null;
  }
  clone() {
    return new y4({ anchor: this.anchor, anchorPosition: this.anchorPosition && this.anchorPosition.clone(), enabled: this.enabled, material: null != this.material ? this.material.clone() : null, outline: null != this.outline ? this.outline.clone() : null, resource: this.resource && this.resource.clone(), size: this.size });
  }
  static fromSimpleMarkerSymbol(o9) {
    const t12 = o9.color || o8, r6 = b(o9), e8 = o9.outline && o9.outline.width > 0 ? { size: o9.outline.width, color: (o9.outline.color || o8).clone() } : null;
    return new y4({ size: o9.size, resource: { primitive: v(o9.style) }, material: { color: t12 }, outline: e8, anchor: r6 ? "relative" : void 0, anchorPosition: r6 });
  }
  static fromPictureMarkerSymbol(o9) {
    const t12 = !o9.color || t9(o9.color) ? o8 : o9.color, r6 = b(o9);
    return new y4({ size: o9.width <= o9.height ? o9.height : o9.width, resource: { href: o9.url }, material: { color: t12.clone() }, anchor: r6 ? "relative" : void 0, anchorPosition: r6 });
  }
  static fromCIMSymbol(o9) {
    return new y4({ resource: { href: it({ mediaType: "application/json", data: JSON.stringify(o9.data) }) } });
  }
};
function b(o9) {
  const t12 = "width" in o9 ? o9.width : o9.size, r6 = "height" in o9 ? o9.height : o9.size, e8 = j3(o9.xoffset), i11 = j3(o9.yoffset);
  return (e8 || i11) && t12 && r6 ? { x: -e8 / t12, y: i11 / r6 } : null;
}
function j3(o9) {
  return isFinite(o9) ? o9 : 0;
}
e([y({ type: p14, json: { write: true } })], f2.prototype, "material", void 0), e([y({ type: h3, json: { write: true } })], f2.prototype, "resource", void 0), e([o4({ Icon: "icon" }, { readOnly: true })], f2.prototype, "type", void 0), e([y(a11)], f2.prototype, "size", void 0), e([o4({ center: "center", left: "left", right: "right", top: "top", bottom: "bottom", topLeft: "top-left", topRight: "top-right", bottomLeft: "bottom-left", bottomRight: "bottom-right", relative: "relative" }), y({ json: { default: "center" } })], f2.prototype, "anchor", void 0), e([y({ type: p20, json: { type: [Number], read: { reader: (o9) => new p20({ x: o9[0], y: o9[1] }) }, write: { writer: (o9, t12) => {
  t12.anchorPosition = [o9.x, o9.y];
}, overridePolicy() {
  return { enabled: "relative" === this.anchor };
} } } })], f2.prototype, "anchorPosition", void 0), e([y({ type: m14, json: { write: true } })], f2.prototype, "outline", void 0), f2 = y4 = e([a3(d6)], f2);
var g2 = { circle: "circle", cross: "cross", diamond: "kite", square: "square", x: "x", triangle: "triangle", path: null };
function v(o9) {
  const r6 = g2[o9];
  return r6 || (s.getLogger(d6).warn(`${o9} cannot be mapped to Icon symbol. Fallback to "circle"`), "circle");
}
var w = f2;

// node_modules/@arcgis/core/symbols/LineStyleMarker3D.js
var n9 = class extends i3(l) {
  constructor(o9) {
    super(o9), this.type = "style", this.placement = "begin-end", this.style = "arrow", this.color = null;
  }
  equals(o9) {
    return null != o9 && o9.placement === this.placement && o9.style === this.style && (null == this.color && null == o9.color || null != this.color && null != o9.color && this.color.toJSON() === o9.color.toJSON());
  }
};
e([y({ type: ["style"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], n9.prototype, "type", void 0), e([y({ type: e3, json: { default: "begin-end", write: true } })], n9.prototype, "placement", void 0), e([y({ type: n3, json: { default: "arrow", write: true } })], n9.prototype, "style", void 0), e([y({ type: h, json: { type: [T], default: null, write: true } })], n9.prototype, "color", void 0), n9 = e([a3("esri.symbols.LineStyleMarker3D")], n9);
var a14 = n9;

// node_modules/@arcgis/core/symbols/LineSymbol3DLayer.js
var j4;
var d7 = j4 = class extends a10 {
  constructor(t12) {
    super(t12), this.material = null, this.type = "line", this.join = "miter", this.cap = "butt", this.size = e2(1), this.pattern = null, this.marker = null;
  }
  clone() {
    const t12 = { enabled: this.enabled, material: null != this.material ? this.material.clone() : null, size: this.size, join: this.join, cap: this.cap, pattern: null != this.pattern ? this.pattern.clone() : null, marker: null != this.marker ? this.marker.clone() : null };
    return new j4(t12);
  }
  static fromSimpleLineSymbol(t12) {
    var _a;
    const r6 = { enabled: true, size: t12.width ?? e2(1), cap: t12.cap || "butt", join: t12.join || "miter", pattern: t12.style && "inside-frame" !== t12.style ? new l10({ style: t12.style }) : null, material: new p14({ color: (t12.color || o8).clone() }), marker: t12.marker ? new a14({ placement: t12.marker.placement, style: t12.marker.style, color: ((_a = t12.marker.color) == null ? void 0 : _a.clone()) ?? null }) : null };
    return new j4(r6);
  }
};
e([y({ type: p14, json: { write: true } })], d7.prototype, "material", void 0), e([o4({ Line: "line" }, { readOnly: true })], d7.prototype, "type", void 0), e([y({ type: a5, json: { write: true, default: "miter" } })], d7.prototype, "join", void 0), e([y({ type: u2, json: { write: true, default: "butt" } })], d7.prototype, "cap", void 0), e([y(a11)], d7.prototype, "size", void 0), e([y(o7)], d7.prototype, "pattern", void 0), e([y({ types: { key: "type", base: a14, typeMap: { style: a14 } }, json: { write: true } })], d7.prototype, "marker", void 0), d7 = j4 = e([a3("esri.symbols.LineSymbol3DLayer")], d7);
var h7 = d7;

// node_modules/@arcgis/core/symbols/support/Symbol3DAnchorPosition3D.js
var e6;
var p21 = e6 = class extends m {
  constructor() {
    super(...arguments), this.x = 0, this.y = 0, this.z = 0;
  }
  clone() {
    return new e6({ x: this.x, y: this.y, z: this.z });
  }
};
e([y({ type: Number })], p21.prototype, "x", void 0), e([y({ type: Number })], p21.prototype, "y", void 0), e([y({ type: Number })], p21.prototype, "z", void 0), p21 = e6 = e([a3("esri.symbols.support.Symbol3DAnchorPosition3D")], p21);

// node_modules/@arcgis/core/symbols/ObjectSymbol3DLayer.js
var h8;
var n10 = h8 = class extends a10 {
  constructor(t12) {
    super(t12), this.material = null, this.castShadows = true, this.resource = null, this.type = "object", this.width = void 0, this.height = void 0, this.depth = void 0, this.anchor = void 0, this.anchorPosition = void 0, this.heading = void 0, this.tilt = void 0, this.roll = void 0;
  }
  clone() {
    return new h8({ heading: this.heading, tilt: this.tilt, roll: this.roll, anchor: this.anchor, anchorPosition: this.anchorPosition && this.anchorPosition.clone(), depth: this.depth, enabled: this.enabled, height: this.height, material: null != this.material ? this.material.clone() : null, castShadows: this.castShadows, resource: this.resource && this.resource.clone(), width: this.width });
  }
  get isPrimitive() {
    return !this.resource || "string" != typeof this.resource.href;
  }
};
e([y({ type: p14, json: { write: true } })], n10.prototype, "material", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], n10.prototype, "castShadows", void 0), e([y({ type: m6, json: { write: true } })], n10.prototype, "resource", void 0), e([o4({ Object: "object" }, { readOnly: true })], n10.prototype, "type", void 0), e([y({ type: Number, json: { write: true } })], n10.prototype, "width", void 0), e([y({ type: Number, json: { write: true } })], n10.prototype, "height", void 0), e([y({ type: Number, json: { write: true } })], n10.prototype, "depth", void 0), e([o4({ center: "center", top: "top", bottom: "bottom", origin: "origin", relative: "relative" }), y({ json: { default: "origin" } })], n10.prototype, "anchor", void 0), e([y({ type: p21, json: { type: [Number], read: { reader: (t12) => new p21({ x: t12[0], y: t12[1], z: t12[2] }) }, write: { writer: (t12, o9) => {
  o9.anchorPosition = [t12.x, t12.y, t12.z];
}, overridePolicy() {
  return { enabled: "relative" === this.anchor };
} } } })], n10.prototype, "anchorPosition", void 0), e([y({ type: Number, json: { write: true } })], n10.prototype, "heading", void 0), e([y({ type: Number, json: { write: true } })], n10.prototype, "tilt", void 0), e([y({ type: Number, json: { write: true } })], n10.prototype, "roll", void 0), e([y({ readOnly: true })], n10.prototype, "isPrimitive", null), n10 = h8 = e([a3("esri.symbols.ObjectSymbol3DLayer")], n10);
var c13 = n10;

// node_modules/@arcgis/core/symbols/PathSymbol3DLayer.js
var h9;
var n11 = h9 = class extends a10 {
  constructor(t12) {
    super(t12), this.material = null, this.castShadows = true, this.type = "path", this.profile = "circle", this.join = "miter", this.cap = "butt", this.width = void 0, this.height = void 0, this.anchor = "center", this.profileRotation = "all";
  }
  readWidth(t12, e8) {
    return null != t12 ? t12 : null == e8.height && null != e8.size ? e8.size : void 0;
  }
  readHeight(t12, e8) {
    return null != t12 ? t12 : null == e8.width && null != e8.size ? e8.size : void 0;
  }
  clone() {
    return new h9({ enabled: this.enabled, material: null != this.material ? this.material.clone() : null, castShadows: this.castShadows, profile: this.profile, join: this.join, cap: this.cap, width: this.width, height: this.height, profileRotation: this.profileRotation, anchor: this.anchor });
  }
};
e([y({ type: p14, json: { write: true } })], n11.prototype, "material", void 0), e([y({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], n11.prototype, "castShadows", void 0), e([o4({ Path: "path" }, { readOnly: true })], n11.prototype, "type", void 0), e([y({ type: ["circle", "quad"], json: { write: true, default: "circle" } })], n11.prototype, "profile", void 0), e([y({ type: a5, json: { write: true, default: "miter" } })], n11.prototype, "join", void 0), e([y({ type: i4, json: { write: true, default: "butt" } })], n11.prototype, "cap", void 0), e([y({ type: Number, json: { write: { enabled: true, target: { width: { type: Number }, size: { type: Number } } } } })], n11.prototype, "width", void 0), e([o2("width", ["width", "size", "height"])], n11.prototype, "readWidth", null), e([y({ type: Number, json: { write: true } })], n11.prototype, "height", void 0), e([o2("height", ["height", "size", "width"])], n11.prototype, "readHeight", null), e([y({ type: ["center", "bottom", "top"], json: { write: true, default: "center" } })], n11.prototype, "anchor", void 0), e([y({ type: ["heading", "all"], json: { write: true, default: "all" } })], n11.prototype, "profileRotation", void 0), n11 = h9 = e([a3("esri.symbols.PathSymbol3DLayer")], n11);
var d8 = n11;

// node_modules/@arcgis/core/symbols/support/Symbol3DHalo.js
var m15;
var l13 = m15 = class extends l {
  constructor() {
    super(...arguments), this.color = new h([0, 0, 0, 1]), this.size = 0;
  }
  clone() {
    const o9 = { color: a(this.color), size: this.size };
    return new m15(o9);
  }
};
e([y(p11)], l13.prototype, "color", void 0), e([y(a11)], l13.prototype, "size", void 0), l13 = m15 = e([a3("esri.symbols.support.Symbol3DHalo")], l13);

// node_modules/@arcgis/core/symbols/support/Symbol3DTextBackground.js
var c14 = class extends i3(l) {
  constructor(o9) {
    super(o9), this.color = null;
  }
};
e([y(p11)], c14.prototype, "color", void 0), c14 = e([a3("esri.symbols.support.Symbol3DTextBackground")], c14);

// node_modules/@arcgis/core/symbols/TextSymbol3DLayer.js
var g3;
var y5 = g3 = class extends a10 {
  constructor(t12) {
    super(t12), this._userSize = void 0, this.halo = null, this.horizontalAlignment = "center", this.lineHeight = 1, this.material = null, this.background = null, this.text = null, this.type = "text", this.verticalAlignment = "baseline";
  }
  get font() {
    return this._get("font") || null;
  }
  set font(t12) {
    null != t12 && null != this._userSize && (t12.size = this._userSize), this._set("font", t12);
  }
  writeFont(t12, o9, e8, r6) {
    const i11 = { ...r6, textSymbol3D: true };
    o9.font = t12.write({}, i11), delete o9.font.size;
  }
  get size() {
    return null != this._userSize ? this._userSize : null != this.font && null != this.font.size ? this.font.size : 9;
  }
  set size(t12) {
    this._userSize = t12, null != this.font && (this.font.size = this._userSize), this.notifyChange("size");
  }
  clone() {
    const t12 = new g3({ enabled: this.enabled, font: this.font && a(this.font), halo: this.halo && a(this.halo), horizontalAlignment: this.horizontalAlignment, lineHeight: this.lineHeight, material: null != this.material ? this.material.clone() : null, text: this.text, verticalAlignment: this.verticalAlignment, background: a(this.background) });
    return t12._userSize = this._userSize, t12;
  }
  static fromTextSymbol(t12) {
    return new g3({ font: null != t12.font ? t12.font.clone() : new m10(), halo: d9(t12.haloColor, t12.haloSize), horizontalAlignment: t12.horizontalAlignment, lineHeight: t12.lineHeight, material: t12.color ? new p14({ color: t12.color.clone() }) : null, text: t12.text, verticalAlignment: t12.verticalAlignment, background: t12.backgroundColor ? new c14({ color: t12.backgroundColor.clone() }) : null });
  }
};
function d9(t12, e8) {
  return t12 && null != e8 && e8 > 0 ? new l13({ color: a(t12), size: e8 }) : null;
}
e([y({ type: m10, json: { write: true } })], y5.prototype, "font", null), e([r("font")], y5.prototype, "writeFont", null), e([y({ type: l13, json: { write: true } })], y5.prototype, "halo", void 0), e([y({ ...m5, json: { default: "center", write: true } })], y5.prototype, "horizontalAlignment", void 0), e([y({ ...n5, json: { default: 1, write: true } })], y5.prototype, "lineHeight", void 0), e([y({ type: p14, json: { write: true } })], y5.prototype, "material", void 0), e([y({ type: c14, json: { write: true } })], y5.prototype, "background", void 0), e([y(a11)], y5.prototype, "size", null), e([y({ type: String, json: { write: true } })], y5.prototype, "text", void 0), e([o4({ Text: "text" }, { readOnly: true })], y5.prototype, "type", void 0), e([y({ ...p3, json: { default: "baseline", write: true } })], y5.prototype, "verticalAlignment", void 0), y5 = g3 = e([a3("esri.symbols.TextSymbol3DLayer")], y5);
var z = y5;

// node_modules/@arcgis/core/symbols/WaterSymbol3DLayer.js
var l14;
var c15 = l14 = class extends a10 {
  constructor(e8) {
    super(e8), this.color = m16.clone(), this.type = "water", this.waterbodySize = "medium", this.waveDirection = null, this.waveStrength = "moderate";
  }
  clone() {
    return new l14({ color: a(this.color), waterbodySize: this.waterbodySize, waveDirection: this.waveDirection, waveStrength: this.waveStrength });
  }
};
e([y({ type: h, nonNullable: true, json: { type: [T], write: (e8, r6, t12) => r6[t12] = e8.toArray(h.AlphaMode.UNLESS_OPAQUE), default: () => m16.clone(), defaultEquals: (e8) => e8.toCss(true) === m16.toCss(true) } })], c15.prototype, "color", void 0), e([o4({ Water: "water" }, { readOnly: true })], c15.prototype, "type", void 0), e([y({ type: ["small", "medium", "large"], json: { write: true, default: "medium" } })], c15.prototype, "waterbodySize", void 0), e([y({ type: Number, json: { write: true, default: null } })], c15.prototype, "waveDirection", void 0), e([y({ type: ["calm", "rippled", "slight", "moderate"], json: { write: true, default: "moderate" } })], c15.prototype, "waveStrength", void 0), c15 = l14 = e([a3("esri.symbols.WaterSymbol3DLayer")], c15);
var m16 = new h([0, 119, 190]);
var n12 = c15;

// node_modules/@arcgis/core/symbols/Symbol3D.js
var v2 = { icon: w, object: c13, line: h7, path: d8, fill: h6, extrude: c9, text: z, water: n12 };
var C = V.ofType({ base: a10, key: "type", typeMap: v2, errorContext: "symbol-layer" });
var T2 = class extends a4 {
  constructor(e8) {
    super(e8), this.styleOrigin = null, this.thumbnail = null, this.type = null;
    const t12 = this.__accessor__ && this.__accessor__.metadatas && this.__accessor__.metadatas.symbolLayers, o9 = t12 && t12.type || V;
    this._set("symbolLayers", new o9());
  }
  get color() {
    return null;
  }
  set color(e8) {
    this.constructed && s.getLogger(this).error("Symbol3D does not support colors on the symbol level. Colors may be set on individual symbol layer materials instead.");
  }
  set symbolLayers(e8) {
    n(e8, this._get("symbolLayers"));
  }
  readStyleOrigin(e8, r6, t12) {
    if (e8.styleUrl && e8.name) {
      const r7 = i2(e8.styleUrl, t12);
      return new a8({ styleUrl: r7, name: e8.name });
    }
    if (e8.styleName && e8.name)
      return new a8({ portal: t12 && t12.portal || j.getDefault(), styleName: e8.styleName, name: e8.name });
    t12 && t12.messages && t12.messages.push(new s3("symbol3d:incomplete-style-origin", "Style origin requires either a 'styleUrl' or 'styleName' and a 'name' property", { context: t12, definition: e8 }));
  }
  writeStyleOrigin(e8, r6, t12, o9) {
    if (e8.styleUrl && e8.name) {
      let t13 = c(e8.styleUrl, o9);
      Y(t13) && (t13 = K(t13)), r6.styleOrigin = { styleUrl: t13, name: e8.name };
    } else
      e8.styleName && e8.name && (e8.portal && o9 && o9.portal && !W(e8.portal.restUrl, o9.portal.restUrl) ? o9 && o9.messages && o9.messages.push(new s3("symbol:cross-portal", "The symbol style origin cannot be persisted because it refers to an item on a different portal than the one being saved to.", { symbol: this })) : r6.styleOrigin = { styleName: e8.styleName, name: e8.name });
  }
  normalizeCtorArgs(e8) {
    return e8 instanceof a10 || e8 && v2[e8.type] ? { symbolLayers: [e8] } : Array.isArray(e8) ? { symbolLayers: e8 } : e8;
  }
};
e([y({ json: { read: false, write: false } })], T2.prototype, "color", null), e([y({ type: C, nonNullable: true, json: { write: true } }), s5(t)], T2.prototype, "symbolLayers", null), e([y({ type: a8 })], T2.prototype, "styleOrigin", void 0), e([o2("styleOrigin")], T2.prototype, "readStyleOrigin", null), e([r("styleOrigin", { "styleOrigin.styleUrl": { type: String }, "styleOrigin.styleName": { type: String }, "styleOrigin.name": { type: String } })], T2.prototype, "writeStyleOrigin", null), e([y({ type: p5, json: { read: false } })], T2.prototype, "thumbnail", void 0), e([y({ type: ["point-3d", "line-3d", "polygon-3d", "mesh-3d", "label-3d"], readOnly: true })], T2.prototype, "type", void 0), T2 = e([a3("esri.symbols.Symbol3D")], T2);
var k = T2;

// node_modules/@arcgis/core/symbols/callouts/Callout3D.js
var t11 = class extends l {
  constructor(r6) {
    super(r6), this.visible = true;
  }
  clone() {
  }
};
e([y({ type: ["line"], readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], t11.prototype, "type", void 0), e([y({ readOnly: true })], t11.prototype, "visible", void 0), t11 = e([a3("esri.symbols.callouts.Callout3D")], t11);
var p22 = t11;

// node_modules/@arcgis/core/chunks/LineCallout3DBorder.js
var l15;
var a15 = l15 = class extends l {
  constructor() {
    super(...arguments), this.color = new h("white");
  }
  clone() {
    return new l15({ color: a(this.color) });
  }
};
e([y(p11)], a15.prototype, "color", void 0), a15 = l15 = e([a3("esri.symbols.callouts.LineCallout3DBorder")], a15);
var i8 = a15;
var m17 = Object.freeze(Object.defineProperty({ __proto__: null, default: i8 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/symbols/callouts/LineCallout3D.js
var m18;
var u6 = m18 = class extends p22 {
  constructor(o9) {
    super(o9), this.type = "line", this.color = new h([0, 0, 0, 1]), this.size = e2(1), this.border = null;
  }
  get visible() {
    return this.size > 0 && null != this.color && this.color.a > 0;
  }
  clone() {
    return new m18({ color: a(this.color), size: this.size, border: a(this.border) });
  }
};
e([o4({ line: "line" }, { readOnly: true })], u6.prototype, "type", void 0), e([y(p11)], u6.prototype, "color", void 0), e([y(a11)], u6.prototype, "size", void 0), e([y({ type: i8, json: { write: true } })], u6.prototype, "border", void 0), e([y({ readOnly: true })], u6.prototype, "visible", null), u6 = m18 = e([a3("esri.symbols.callouts.LineCallout3D")], u6);
var d10 = u6;

// node_modules/@arcgis/core/symbols/callouts/calloutUtils.js
function e7(t12) {
  if (!t12)
    return false;
  const n16 = t12.verticalOffset;
  return !!n16 && !(n16.screenLength <= 0 || null != n16.maxWorldLength && n16.maxWorldLength <= 0);
}
function r5(t12) {
  if (!t12)
    return false;
  if (!t12.supportsCallout || !t12.supportsCallout())
    return false;
  const n16 = t12.callout;
  return !!n16 && (!!n16.visible && !!e7(t12));
}
var u7 = { types: { key: "type", base: p22, typeMap: { line: d10 } }, json: { write: true } };

// node_modules/@arcgis/core/symbols/support/Symbol3DVerticalOffset.js
var n13;
var p23 = n13 = class extends l {
  constructor(r6) {
    super(r6), this.screenLength = 0, this.minWorldLength = 0, this.maxWorldLength = null;
  }
  clone() {
    return new n13({ screenLength: this.screenLength, minWorldLength: this.minWorldLength, maxWorldLength: this.maxWorldLength });
  }
};
e([y(a11)], p23.prototype, "screenLength", void 0), e([y({ type: Number, nonNullable: true, json: { write: true, default: 0 } })], p23.prototype, "minWorldLength", void 0), e([y({ type: Number, json: { write: true } })], p23.prototype, "maxWorldLength", void 0), p23 = n13 = e([a3("esri.symbols.support.Symbol3DVerticalOffset")], p23);
var i9 = p23;

// node_modules/@arcgis/core/symbols/LabelSymbol3D.js
var n14;
var u8 = V.ofType({ base: null, key: "type", typeMap: { text: z } });
var f3 = n14 = class extends k {
  constructor(t12) {
    super(t12), this.verticalOffset = null, this.callout = null, this.styleOrigin = null, this.symbolLayers = new u8(), this.type = "label-3d";
  }
  supportsCallout() {
    return true;
  }
  hasVisibleCallout() {
    return r5(this);
  }
  hasVisibleVerticalOffset() {
    return e7(this);
  }
  clone() {
    return new n14({ styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail), callout: a(this.callout), verticalOffset: a(this.verticalOffset) });
  }
  static fromTextSymbol(t12) {
    return new n14({ symbolLayers: [z.fromTextSymbol(t12)] });
  }
};
e([y({ type: i9, json: { write: true } })], f3.prototype, "verticalOffset", void 0), e([y(u7)], f3.prototype, "callout", void 0), e([y({ json: { read: false, write: false } })], f3.prototype, "styleOrigin", void 0), e([y({ type: u8 })], f3.prototype, "symbolLayers", void 0), e([o4({ LabelSymbol3D: "label-3d" }, { readOnly: true })], f3.prototype, "type", void 0), f3 = n14 = e([a3("esri.symbols.LabelSymbol3D")], f3);
var b2 = f3;

// node_modules/@arcgis/core/symbols/LineSymbol3D.js
var l16;
var a16 = V.ofType({ base: null, key: "type", typeMap: { line: h7, path: d8 } });
var n15 = V.ofType({ base: null, key: "type", typeMap: { line: h7, path: d8 } });
var c16 = l16 = class extends k {
  constructor(o9) {
    super(o9), this.symbolLayers = new a16(), this.type = "line-3d";
  }
  clone() {
    return new l16({ styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail) });
  }
  static fromSimpleLineSymbol(o9) {
    return new l16({ symbolLayers: [h7.fromSimpleLineSymbol(o9)] });
  }
};
e([y({ type: a16, json: { type: n15 } })], c16.prototype, "symbolLayers", void 0), e([o4({ LineSymbol3D: "line-3d" }, { readOnly: true })], c16.prototype, "type", void 0), c16 = l16 = e([a3("esri.symbols.LineSymbol3D")], c16);
var b3 = c16;

// node_modules/@arcgis/core/symbols/MeshSymbol3D.js
var i10;
var y6 = V.ofType({ base: null, key: "type", typeMap: { fill: h6 } });
var a17 = i10 = class extends k {
  constructor(o9) {
    super(o9), this.symbolLayers = new y6(), this.type = "mesh-3d";
  }
  clone() {
    return new i10({ styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail) });
  }
  static fromSimpleFillSymbol(o9) {
    return new i10({ symbolLayers: [h6.fromSimpleFillSymbol(o9)] });
  }
};
e([y({ type: y6 })], a17.prototype, "symbolLayers", void 0), e([o4({ MeshSymbol3D: "mesh-3d" }, { readOnly: true })], a17.prototype, "type", void 0), a17 = i10 = e([a3("esri.symbols.MeshSymbol3D")], a17);
var c17 = a17;

// node_modules/@arcgis/core/symbols/PictureFillSymbol.js
var c18;
var u9 = c18 = class extends p8 {
  constructor(...t12) {
    super(...t12), this.type = "picture-fill", this.url = null, this.xscale = 1, this.yscale = 1, this.width = 12, this.height = 12, this.xoffset = 0, this.yoffset = 0, this.source = null;
  }
  normalizeCtorArgs(t12, s10, e8, r6) {
    if (t12 && "string" != typeof t12 && null == t12.imageData)
      return t12;
    const i11 = {};
    return t12 && (i11.url = t12), s10 && (i11.outline = s10), null != e8 && (i11.width = o3(e8)), null != r6 && (i11.height = o3(r6)), i11;
  }
  clone() {
    const t12 = new c18({ color: a(this.color), height: this.height, outline: this.outline && this.outline.clone(), url: this.url, width: this.width, xoffset: this.xoffset, xscale: this.xscale, yoffset: this.yoffset, yscale: this.yscale });
    return t12._set("source", a(this.source)), t12;
  }
  hash() {
    var _a;
    return `${super.hash()}.${(_a = this.color) == null ? void 0 : _a.hash()}.${this.height}.${this.url}.${this.width}.${this.xoffset}.${this.xscale}.${this.yoffset}.${this.yscale}`;
  }
};
e([o4({ esriPFS: "picture-fill" }, { readOnly: true })], u9.prototype, "type", void 0), e([y(m7)], u9.prototype, "url", void 0), e([y({ type: Number, json: { write: true } })], u9.prototype, "xscale", void 0), e([y({ type: Number, json: { write: true } })], u9.prototype, "yscale", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], u9.prototype, "width", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], u9.prototype, "height", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], u9.prototype, "xoffset", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], u9.prototype, "yoffset", void 0), e([y(c3)], u9.prototype, "source", void 0), u9 = c18 = e([a3("esri.symbols.PictureFillSymbol")], u9);
var a18 = u9;

// node_modules/@arcgis/core/symbols/PointSymbol3D.js
var b4;
var f4 = V.ofType({ base: null, key: "type", typeMap: { icon: w, object: c13, text: z } });
var S3 = b4 = class extends k {
  constructor(t12) {
    super(t12), this.verticalOffset = null, this.callout = null, this.symbolLayers = new f4(), this.type = "point-3d";
  }
  supportsCallout() {
    if ((this.symbolLayers ? this.symbolLayers.length : 0) < 1)
      return false;
    for (const t12 of this.symbolLayers.items)
      switch (t12.type) {
        case "icon":
        case "text":
        case "object":
          continue;
        default:
          return false;
      }
    return true;
  }
  hasVisibleCallout() {
    return r5(this);
  }
  hasVisibleVerticalOffset() {
    return e7(this);
  }
  clone() {
    return new b4({ verticalOffset: a(this.verticalOffset), callout: a(this.callout), styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail) });
  }
  static fromSimpleMarkerSymbol(t12) {
    return new b4({ symbolLayers: [w.fromSimpleMarkerSymbol(t12)] });
  }
  static fromPictureMarkerSymbol(t12) {
    return new b4({ symbolLayers: [w.fromPictureMarkerSymbol(t12)] });
  }
  static fromCIMSymbol(t12) {
    var _a, _b;
    const o9 = (_b = (_a = t12.data) == null ? void 0 : _a.symbol) == null ? void 0 : _b.type;
    if ("CIMPointSymbol" !== o9)
      return null;
    const r6 = t12.data.symbol;
    return new b4((r6 == null ? void 0 : r6.callout) ? { symbolLayers: [w.fromCIMSymbol(t12)], callout: { type: "line", size: 0.5, color: [0, 0, 0] }, verticalOffset: { screenLength: 40 } } : { symbolLayers: [w.fromCIMSymbol(t12)] });
  }
  static fromTextSymbol(t12) {
    return new b4({ symbolLayers: [z.fromTextSymbol(t12)] });
  }
};
e([y({ type: i9, json: { write: true } })], S3.prototype, "verticalOffset", void 0), e([y(u7)], S3.prototype, "callout", void 0), e([y({ type: f4, json: { origins: { "web-scene": { write: true } } } })], S3.prototype, "symbolLayers", void 0), e([o4({ PointSymbol3D: "point-3d" }, { readOnly: true })], S3.prototype, "type", void 0), S3 = b4 = e([a3("esri.symbols.PointSymbol3D")], S3);
var h10 = S3;

// node_modules/@arcgis/core/symbols/PolygonSymbol3D.js
var f5;
var u10 = V.ofType({ base: null, key: "type", typeMap: { extrude: c9, fill: h6, icon: w, line: h7, object: c13, text: z, water: n12 } });
var L = f5 = class extends k {
  constructor(o9) {
    super(o9), this.symbolLayers = new u10(), this.type = "polygon-3d";
  }
  clone() {
    return new f5({ styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail) });
  }
  static fromJSON(o9) {
    const r6 = new f5();
    if (r6.read(o9), 2 === r6.symbolLayers.length && "fill" === r6.symbolLayers.at(0).type && "line" === r6.symbolLayers.at(1).type) {
      const e8 = r6.symbolLayers.at(0), s10 = r6.symbolLayers.at(1);
      !s10.enabled || o9.symbolLayers && o9.symbolLayers[1] && false === o9.symbolLayers[1].enable || (e8.outline = { size: s10.size, color: null != s10.material ? s10.material.color : null }), r6.symbolLayers.removeAt(1);
    }
    return r6;
  }
  static fromSimpleFillSymbol(o9) {
    return new f5({ symbolLayers: [h6.fromSimpleFillSymbol(o9)] });
  }
};
e([y({ type: u10, json: { write: true } })], L.prototype, "symbolLayers", void 0), e([o4({ PolygonSymbol3D: "polygon-3d" }, { readOnly: true })], L.prototype, "type", void 0), L = f5 = e([a3("esri.symbols.PolygonSymbol3D")], L);
var S4 = L;

// node_modules/@arcgis/core/symbols/WebStyleSymbol.js
var m19;
var y7 = m19 = class extends a4 {
  constructor(t12) {
    super(t12), this.styleName = null, this.portal = null, this.styleUrl = null, this.thumbnail = null, this.name = null, this.type = "web-style";
  }
  get _fetchCacheKey() {
    const t12 = null != this.portal ? this.portal : j.getDefault(), e8 = t12.user ? t12.user.username : null;
    return `${this.styleName}:${this.styleUrl}:${this.name}:${e8}:${t12.url}`;
  }
  read(t12, e8) {
    this.portal = e8 == null ? void 0 : e8.portal, super.read(t12, e8);
  }
  clone() {
    return new m19({ name: this.name, styleUrl: this.styleUrl, styleName: this.styleName, portal: this.portal });
  }
  fetchSymbol(t12) {
    return this._fetchSymbol("webRef", t12);
  }
  fetchCIMSymbol(t12) {
    return this._fetchSymbol("cimRef", t12);
  }
  async _fetchSymbol(t12, o9) {
    const s10 = null != o9 ? o9.cache : null, l17 = s10 ? this._fetchCacheKey : null;
    if (null != s10) {
      const t13 = l17 && s10.get(l17);
      if (t13)
        return t13.clone();
    }
    const { resolveWebStyleSymbol: i11 } = await import("./webStyleSymbolUtils-S34DJWXN.js");
    s2(o9);
    const p24 = i11(this, { portal: this.portal }, t12, o9);
    p24.catch((t13) => {
      s.getLogger(this).error("#fetchSymbol()", "Failed to create symbol from style", t13);
    });
    const a19 = await p24;
    return "webRef" === t12 && "point-3d" === a19.type || "cimRef" === t12 && "cim" === a19.type ? (null != s10 && s10.set(l17, a19.clone()), a19) : null;
  }
};
e([y({ json: { write: false } })], y7.prototype, "color", void 0), e([y({ type: String, json: { write: true } })], y7.prototype, "styleName", void 0), e([y({ type: j, json: { write: false } })], y7.prototype, "portal", void 0), e([y({ type: String, json: { read: m2, write: p } })], y7.prototype, "styleUrl", void 0), e([y({ type: p5, json: { read: false } })], y7.prototype, "thumbnail", void 0), e([y({ type: String, json: { write: true } })], y7.prototype, "name", void 0), e([o4({ styleSymbolReference: "web-style" }, { readOnly: true })], y7.prototype, "type", void 0), e([y()], y7.prototype, "_fetchCacheKey", null), y7 = m19 = e([a3("esri.symbols.WebStyleSymbol")], y7);
var u11 = y7;

// node_modules/@arcgis/core/symbols.js
function S5(e8) {
  if (!e8)
    return false;
  switch (e8.type) {
    case "picture-fill":
    case "picture-marker":
    case "simple-fill":
    case "simple-line":
    case "simple-marker":
    case "text":
    case "cim":
      return true;
    default:
      return false;
  }
}
function x(e8) {
  if (!e8)
    return false;
  switch (e8.type) {
    case "label-3d":
    case "line-3d":
    case "mesh-3d":
    case "point-3d":
    case "polygon-3d":
      return true;
    default:
      return false;
  }
}
var j5 = { base: a4, key: "type", typeMap: { "simple-fill": S2, "picture-fill": a18, "picture-marker": n7, "simple-line": m4, "simple-marker": y2, text: m11, "label-3d": b2, "line-3d": b3, "mesh-3d": c17, "point-3d": h10, "polygon-3d": S4, "web-style": u11, cim: d }, errorContext: "symbol" };
var D = { base: a4, key: "type", typeMap: { "picture-marker": n7, "simple-marker": y2, text: m11, "web-style": u11, cim: d }, errorContext: "symbol" };
var k2 = u({ types: j5 });
var M = { base: a4, key: "type", typeMap: { "simple-fill": S2, "picture-fill": a18, "picture-marker": n7, "simple-line": m4, "simple-marker": y2, text: m11, "line-3d": b3, "mesh-3d": c17, "point-3d": h10, "polygon-3d": S4, "web-style": u11, cim: d }, errorContext: "symbol" };
var C2 = { base: a4, key: "type", typeMap: { text: m11, "label-3d": b2 }, errorContext: "symbol" };
var F = { base: a4, key: "type", typeMap: { "line-3d": b3, "mesh-3d": c17, "point-3d": h10, "polygon-3d": S4, "web-style": u11, cim: d }, errorContext: "symbol" };
var w2 = { base: a4, key: "type", typeMap: { "label-3d": b2 }, errorContext: "symbol" };
var P = S(j5);

export {
  t6 as t,
  p14 as p,
  m4 as m,
  s6 as s,
  m10 as m2,
  j2 as j,
  p20 as p2,
  d4 as d,
  a8 as a,
  p5 as p3,
  k,
  b2 as b,
  b3 as b2,
  c17 as c,
  n7 as n,
  h10 as h,
  S4 as S,
  S2,
  y2 as y,
  m11 as m3,
  u11 as u,
  S5 as S3,
  x,
  j5 as j2,
  D,
  k2,
  M,
  C2 as C,
  F,
  w2 as w,
  P
};
//# sourceMappingURL=chunk-VFQINJTY.js.map
