import {
  h
} from "./chunk-NYLF7BL2.js";
import {
  c,
  n
} from "./chunk-42RWGG3D.js";
import {
  p
} from "./chunk-OO4A3EBQ.js";
import {
  r
} from "./chunk-GJ5WE5D3.js";
import {
  M
} from "./chunk-3GSONYPC.js";
import {
  f
} from "./chunk-SFV6XLDZ.js";

// node_modules/@arcgis/core/support/timeUtils.js
function m(e) {
  if (!e)
    return e;
  const { start: n2, end: r2 } = e;
  return new c({ start: null != n2 ? n(n2, -n2.getTimezoneOffset(), "minutes") : n2, end: null != r2 ? n(r2, -r2.getTimezoneOffset(), "minutes") : r2 });
}
function s(e) {
  if (!e)
    return e;
  const { start: n2, end: r2 } = e;
  return new c({ start: null != n2 ? n(n2, n2.getTimezoneOffset(), "minutes") : n2, end: null != r2 ? n(r2, r2.getTimezoneOffset(), "minutes") : r2 });
}

// node_modules/@arcgis/core/layers/support/commonProperties.js
var l = { type: Boolean, value: true, json: { origins: { service: { read: false, write: false }, "web-map": { read: false, write: false } }, name: "screenSizePerspective", write: true } };
var p2 = { type: Boolean, value: true, json: { name: "disablePopup", read: { reader: (e, r2) => !r2.disablePopup }, write: { enabled: true, writer(e, r2, i) {
  r2[i] = !e;
} } } };
var m2 = { type: Boolean, value: true, nonNullable: true, json: { name: "showLabels", write: true } };
var f2 = { type: String, json: { origins: { "portal-item": { write: false } }, write: { isRequired: true, ignoreOrigin: true, writer: p } } };
var c2 = { type: Boolean, value: true, nonNullable: true, json: { origins: { service: { read: { enabled: false } } }, name: "showLegend", write: true } };
var d = { value: null, type: h, json: { origins: { service: { name: "elevationInfo", write: true } }, name: "layerDefinition.elevationInfo", write: true } };
function y(e) {
  return { type: e, readOnly: true, json: { origins: { service: { read: true } }, read: false } };
}
var w = { write: true, read: true };
var u = { type: Number, json: { origins: { "web-document": w, "portal-item": { write: true } } } };
var g = { ...u, json: { ...u.json, origins: { "web-document": { ...w, write: { enabled: true, target: { opacity: { type: Number }, "layerDefinition.drawingInfo.transparency": { type: Number } } } } }, read: { source: ["layerDefinition.drawingInfo.transparency", "drawingInfo.transparency"], reader: (e, r2, i) => i && "service" !== i.origin || !r2.drawingInfo || void 0 === r2.drawingInfo.transparency ? r2.layerDefinition && r2.layerDefinition.drawingInfo && void 0 !== r2.layerDefinition.drawingInfo.transparency ? r(r2.layerDefinition.drawingInfo.transparency) : void 0 : r(r2.drawingInfo.transparency) } } };
var b = { type: c, readOnly: true, get() {
  var _a, _b;
  if (!((_a = this.layer) == null ? void 0 : _a.timeInfo))
    return null;
  const { datesInUnknownTimezone: e, timeOffset: r2, useViewTime: i } = this.layer, n2 = (_b = this.view) == null ? void 0 : _b.timeExtent;
  let a = this.layer.timeExtent;
  e && (a = s(a));
  let s2 = i ? n2 && a ? n2.intersection(a) : n2 || a : a;
  if (!s2 || s2.isEmpty || s2.isAllTime)
    return s2;
  r2 && (s2 = s2.offset(-r2.value, r2.unit)), e && (s2 = m(s2));
  const l2 = this._get("timeExtent");
  return s2.equals(l2) ? l2 : s2;
} };
var j2 = { type: M, readOnly: true, json: { origins: { service: { read: { source: ["fullExtent", "spatialReference"], reader: (e, n2) => {
  const t = M.fromJSON(e);
  return null != n2.spatialReference && "object" == typeof n2.spatialReference && (t.spatialReference = f.fromJSON(n2.spatialReference)), t;
} } } }, read: false } };
var v = { type: String, json: { origins: { service: { read: false }, "portal-item": { read: false } } } };
var I = { type: Number, json: { origins: { service: { write: { enabled: false } } }, read: { source: "layerDefinition.minScale" }, write: { target: "layerDefinition.minScale" } } };
var D = { type: Number, json: { origins: { service: { write: { enabled: false } } }, read: { source: "layerDefinition.maxScale" }, write: { target: "layerDefinition.maxScale" } } };
var S = { json: { write: { ignoreOrigin: true }, origins: { "web-map": { read: false, write: false } } } };

export {
  l,
  p2 as p,
  m2 as m,
  f2 as f,
  c2 as c,
  d,
  y,
  u,
  g,
  b,
  j2 as j,
  v,
  I,
  D,
  S
};
//# sourceMappingURL=chunk-HZHMZHPT.js.map
