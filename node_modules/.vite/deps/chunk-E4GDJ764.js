import {
  A,
  l as l2,
  p,
  v as v2,
  w
} from "./chunk-Z2T56FN3.js";
import {
  j
} from "./chunk-ZMKH5ZRU.js";
import {
  y as y3
} from "./chunk-4NWXO2LT.js";
import {
  a as a3,
  c,
  i as i2
} from "./chunk-SCOBW7KR.js";
import {
  S2 as S,
  m,
  y as y2
} from "./chunk-VFQINJTY.js";
import {
  i
} from "./chunk-KTEJJM3A.js";
import {
  o
} from "./chunk-EIE3W25Z.js";
import {
  I,
  T as T2
} from "./chunk-7KM4XBUC.js";
import {
  t
} from "./chunk-CGK6BJQA.js";
import {
  h
} from "./chunk-KKGH4SRQ.js";
import {
  o as o2
} from "./chunk-4H5JODOT.js";
import {
  r
} from "./chunk-SFV6XLDZ.js";
import {
  s as s3
} from "./chunk-3PLRSFLA.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  v,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2,
  e2,
  s2,
  u as u2
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  T,
  u
} from "./chunk-2YSHZRCT.js";
import {
  s2 as s
} from "./chunk-W2N7YT6I.js";
import {
  a
} from "./chunk-I5JT24BO.js";
import {
  R
} from "./chunk-I4U7MQNO.js";

// node_modules/@arcgis/core/renderers/DictionaryRenderer.js
var p2;
var c2 = p2 = class extends v2(p) {
  constructor(e4) {
    super(e4), this.config = null, this.fieldMap = null, this.scaleExpression = null, this.scaleExpressionTitle = null, this.url = null, this.type = "dictionary";
  }
  get _loader() {
    return new y3(this.url, this.config, this.fieldMap);
  }
  writeData(e4, r2) {
    e4 && (r2.scalingExpressionInfo = { expression: e4, returnType: "number" });
  }
  writeVisualVariables(e4, r2, s5, i5) {
    (i5 == null ? void 0 : i5.origin) || super.writeVisualVariables(e4, r2, s5, i5);
  }
  clone() {
    return new p2({ config: a(this.config), scaleExpression: this.scaleExpression, scaleExpressionTitle: this.scaleExpressionTitle, fieldMap: a(this.fieldMap), url: a(this.url), visualVariables: a(this.visualVariables) });
  }
  async getSymbolAsync(e4, r2) {
    return this._loader.getSymbolAsync(e4, r2);
  }
  async collectRequiredFields(e4, r2) {
    await this.collectVVRequiredFields(e4, r2), this.scaleExpression && await T2(e4, r2, this.scaleExpression);
    for (const s5 in this.fieldMap) {
      const i5 = this.fieldMap[s5];
      r2.has(i5) && e4.add(i5);
    }
  }
  get arcadeRequired() {
    return true;
  }
  getSymbol() {
    return null;
  }
  getSymbols() {
    return [];
  }
  getAttributeHash() {
    return this.visualVariables && this.visualVariables.reduce((e4, r2) => e4 + r2.getAttributeHash(), "");
  }
  getMeshHash() {
    return `${this.url}-${JSON.stringify(this.fieldMap)}`;
  }
  getSymbolFields() {
    return this._loader.getSymbolFields();
  }
};
e([y({ type: y3 })], c2.prototype, "_loader", null), e([y({ type: Object, json: { read: { source: "configuration" }, write: { target: "configuration" } } })], c2.prototype, "config", void 0), e([y({ type: Object, json: { write: true } })], c2.prototype, "fieldMap", void 0), e([y({ type: String, json: { read: { source: "scalingExpressionInfo.expression" }, write: true } })], c2.prototype, "scaleExpression", void 0), e([r("scaleExpression")], c2.prototype, "writeData", null), e([y({ type: String, json: { read: { source: "scalingExpressionInfo.title" }, write: { target: "scalingExpressionInfo.title", overridePolicy(e4) {
  return { enabled: !!e4 && !!this.scaleExpression };
} } } })], c2.prototype, "scaleExpressionTitle", void 0), e([y({ type: String, json: { write: true } })], c2.prototype, "url", void 0), e([r("visualVariables")], c2.prototype, "writeVisualVariables", null), c2 = p2 = e([a2("esri.renderers.DictionaryRenderer")], c2);
var u3 = c2;

// node_modules/@arcgis/core/renderers/support/AttributeColorInfo.js
var n;
var u4 = n = class extends l {
  constructor(r2) {
    super(r2), this.color = null, this.field = null, this.label = null, this.valueExpression = null, this.valueExpressionTitle = null;
  }
  castField(r2) {
    return null == r2 ? r2 : "function" == typeof r2 ? (s.getLogger(this).error(".field: field must be a string value"), null) : u(r2);
  }
  getAttributeHash() {
    return `${this.field}-${this.valueExpression}`;
  }
  clone() {
    return new n({ color: this.color && this.color.clone(), field: this.field, label: this.label, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle });
  }
};
e([y({ type: h, json: { type: [Number], write: true } })], u4.prototype, "color", void 0), e([y({ type: String, json: { write: true } })], u4.prototype, "field", void 0), e([s3("field")], u4.prototype, "castField", null), e([y({ type: String, json: { write: true } })], u4.prototype, "label", void 0), e([y({ type: String, json: { write: true } })], u4.prototype, "valueExpression", void 0), e([y({ type: String, json: { write: true } })], u4.prototype, "valueExpressionTitle", void 0), u4 = n = e([a2("esri.renderers.support.AttributeColorInfo")], u4);
var c3 = u4;

// node_modules/@arcgis/core/renderers/support/DotDensityLegendOptions.js
var e3;
var p3 = e3 = class extends l {
  constructor() {
    super(...arguments), this.unit = null;
  }
  clone() {
    return new e3({ unit: this.unit });
  }
};
e([y({ type: String, json: { write: true } })], p3.prototype, "unit", void 0), p3 = e3 = e([a2("esri.renderers.support.DotDensityLegendOptions")], p3);
var c4 = p3;

// node_modules/@arcgis/core/renderers/DotDensityRenderer.js
var h2;
var m2 = h2 = class extends v2(p) {
  constructor(t3) {
    super(t3), this.attributes = null, this.backgroundColor = new h([0, 0, 0, 0]), this.dotBlendingEnabled = true, this.dotShape = "square", this.dotSize = 1, this.legendOptions = null, this.outline = new m(), this.dotValue = null, this.referenceScale = null, this.seed = 1, this.type = "dot-density";
  }
  calculateDotValue(t3) {
    if (null == this.referenceScale)
      return this.dotValue;
    const e4 = t3 / this.referenceScale * this.dotValue;
    return e4 < 1 ? 1 : e4;
  }
  getSymbol() {
    return new S({ outline: this.outline });
  }
  async getSymbolAsync() {
    return this.getSymbol();
  }
  getSymbols() {
    return [this.getSymbol()];
  }
  getAttributeHash() {
    var _a;
    return ((_a = this.attributes) == null ? void 0 : _a.reduce((t3, e4) => t3 + e4.getAttributeHash(), "")) ?? "";
  }
  getMeshHash() {
    return JSON.stringify(this.outline);
  }
  clone() {
    return new h2({ attributes: a(this.attributes), backgroundColor: a(this.backgroundColor), dotBlendingEnabled: a(this.dotBlendingEnabled), dotShape: a(this.dotShape), dotSize: a(this.dotSize), dotValue: a(this.dotValue), legendOptions: a(this.legendOptions), outline: a(this.outline), referenceScale: a(this.referenceScale), visualVariables: a(this.visualVariables), authoringInfo: this.authoringInfo && this.authoringInfo.clone() });
  }
  getControllerHash() {
    var _a;
    const t3 = (_a = this.attributes) == null ? void 0 : _a.map((t4) => t4.field || t4.valueExpression || "");
    return `${t3}-${this.outline && JSON.stringify(this.outline.toJSON()) || ""}`;
  }
  async collectRequiredFields(t3, e4) {
    await this.collectVVRequiredFields(t3, e4);
    for (const o4 of this.attributes ?? [])
      o4.valueExpression && await T2(t3, e4, o4.valueExpression), o4.field && t3.add(o4.field);
  }
};
e([y({ type: [c3], json: { write: true } })], m2.prototype, "attributes", void 0), e([y({ type: h, json: { write: true } })], m2.prototype, "backgroundColor", void 0), e([y({ type: Boolean, json: { write: true } })], m2.prototype, "dotBlendingEnabled", void 0), e([y({ type: String, json: { write: false } })], m2.prototype, "dotShape", void 0), e([y({ type: Number, json: { write: true } })], m2.prototype, "dotSize", void 0), e([y({ type: c4, json: { write: true } })], m2.prototype, "legendOptions", void 0), e([y({ type: m, json: { default: null, write: true } })], m2.prototype, "outline", void 0), e([y({ type: Number, json: { write: true } })], m2.prototype, "dotValue", void 0), e([y({ type: Number, json: { write: true } })], m2.prototype, "referenceScale", void 0), e([y({ type: Number, json: { write: true } })], m2.prototype, "seed", void 0), e([o2({ dotDensity: "dot-density" })], m2.prototype, "type", void 0), m2 = h2 = e([a2("esri.renderers.DotDensityRenderer")], m2);
var y4 = m2;

// node_modules/@arcgis/core/renderers/support/HeatmapColorStop.js
var c5;
var i3 = c5 = class extends l {
  constructor(o4) {
    super(o4), this.color = null, this.ratio = null;
  }
  clone() {
    return new c5({ color: this.color, ratio: this.ratio });
  }
};
e([y({ type: h, json: { type: [T], default: null, write: true } })], i3.prototype, "color", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "ratio", void 0), i3 = c5 = e([a2("esri.renderers.support.HeatmapColorStop")], i3);
var a4 = i3;

// node_modules/@arcgis/core/renderers/support/HeatmapLegendOptions.js
var p4 = class extends i(l) {
  constructor() {
    super(...arguments), this.minLabel = null, this.maxLabel = null, this.title = null;
  }
};
e([y({ type: String, json: { write: true } })], p4.prototype, "minLabel", void 0), e([y({ type: String, json: { write: true } })], p4.prototype, "maxLabel", void 0), e([y({ type: String, json: { write: true } })], p4.prototype, "title", void 0), p4 = e([a2("esri.renderers.support.HeatmapLegendOptions")], p4);

// node_modules/@arcgis/core/renderers/HeatmapRenderer.js
var j2;
var D = "esri.renderers.HeatmapRenderer";
var I2 = s.getLogger(D);
function S2(e4) {
  if (null != e4) {
    const { maxDensity: t3, minDensity: i5, radius: s5 } = e4;
    if (null != t3 || null != i5 || null != s5) {
      const { blurRadius: t4, maxPixelIntensity: i6, minPixelIntensity: s6, ...r2 } = e4;
      return r2;
    }
  }
  return e4;
}
var v3 = j2 = class extends p {
  constructor(e4) {
    super(e4), this.authoringInfo = null, this.colorStops = [new a4({ ratio: 0, color: new h("rgba(255, 140, 0, 0)") }), new a4({ ratio: 0.75, color: new h("rgba(255, 140, 0, 1)") }), new a4({ ratio: 0.9, color: new h("rgba(255, 0,   0, 1)") })], this.field = null, this.fieldOffset = 0, this.legendOptions = null, this.maxDensity = 0.04, this.minDensity = 0, this.radius = 18, this.referenceScale = 0, this.type = "heatmap", this.valueExpression = null, this.valueExpressionTitle = null, this._warnedProps = { blurRadius: false, maxPixelIntensity: false, minPixelIntensity: false };
  }
  normalizeCtorArgs(e4) {
    return S2(e4);
  }
  get blurRadius() {
    return c(this.radius);
  }
  set blurRadius(e4) {
    const t3 = this.maxPixelIntensity, i5 = this.minPixelIntensity;
    this._set("radius", i2(e4)), this._warnAboutDeprecatedGaussianBlurProp("blurRadius", "radius"), this._set("maxDensity", t3 * this._pixelIntensityToDensity), this._set("minDensity", i5 * this._pixelIntensityToDensity);
  }
  get maxPixelIntensity() {
    return this.maxDensity / this._pixelIntensityToDensity;
  }
  set maxPixelIntensity(e4) {
    this._set("maxDensity", e4 * this._pixelIntensityToDensity), this._warnAboutDeprecatedGaussianBlurProp("maxPixelIntensity", "maxDensity");
  }
  get minPixelIntensity() {
    return this.minDensity / this._pixelIntensityToDensity;
  }
  set minPixelIntensity(e4) {
    this._set("minDensity", e4 * this._pixelIntensityToDensity), this._warnAboutDeprecatedGaussianBlurProp("minPixelIntensity", "minDensity");
  }
  get _pixelIntensityToDensity() {
    return 24 / (a3 ** 2 * this.blurRadius ** 4);
  }
  _warnAboutDeprecatedGaussianBlurProp(e4, t3) {
    if (this._warnedProps[e4])
      return;
    "user" === e2(this).getDefaultOrigin() && (this._warnedProps[e4] = true, v(() => {
      t(I2, e4, { replacement: `${String(t3)} (suggested value: ${this._get(t3)})`, version: "4.24" });
    }));
  }
  read(e4, t3) {
    e4 = S2(e4), super.read(e4, t3);
  }
  getSymbol() {
    return new y2();
  }
  async getSymbolAsync() {
    return this.getSymbol();
  }
  getSymbols() {
    return [this.getSymbol()];
  }
  async collectRequiredFields(e4, t3) {
    const i5 = this.field, s5 = this.valueExpression;
    i5 && "string" == typeof i5 && await I(e4, t3, i5), s5 && "string" == typeof s5 && await T2(e4, t3, s5);
  }
  getAttributeHash() {
    return null;
  }
  getMeshHash() {
    return `${JSON.stringify(this.colorStops)}.${this.blurRadius}.${this.field}`;
  }
  clone() {
    return new j2({ authoringInfo: this.authoringInfo && this.authoringInfo.clone(), colorStops: a(this.colorStops), field: this.field, legendOptions: a(this.legendOptions), maxDensity: this.maxDensity, minDensity: this.minDensity, radius: this.radius, referenceScale: this.referenceScale, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle });
  }
};
e([y({ type: j, json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], v3.prototype, "authoringInfo", void 0), e([y({ type: Number, json: { origins: { "portal-item": { write: true }, "web-map": { write: true } } } })], v3.prototype, "blurRadius", null), e([y({ type: [a4], json: { write: true } })], v3.prototype, "colorStops", void 0), e([y({ type: String, json: { write: true } })], v3.prototype, "field", void 0), e([y({ type: Number, json: { write: { overridePolicy: (e4, t3, i5) => ({ enabled: null == i5 }) }, origins: { "web-scene": { write: false } } } })], v3.prototype, "fieldOffset", void 0), e([y({ type: p4, json: { write: true } })], v3.prototype, "legendOptions", void 0), e([y({ type: Number, json: { write: true } })], v3.prototype, "maxDensity", void 0), e([y({ type: Number, json: { origins: { "portal-item": { write: true }, "web-map": { write: true } } } })], v3.prototype, "maxPixelIntensity", null), e([y({ type: Number, json: { write: true } })], v3.prototype, "minDensity", void 0), e([y({ type: Number, json: { origins: { "portal-item": { write: true }, "web-map": { write: true } } } })], v3.prototype, "minPixelIntensity", null), e([y({ type: Number, cast: o, json: { write: true } })], v3.prototype, "radius", void 0), e([y({ type: Number, range: { min: 0 }, json: { default: 0, write: true } })], v3.prototype, "referenceScale", void 0), e([o2({ heatmap: "heatmap" })], v3.prototype, "type", void 0), e([y({ type: String, json: { write: true, origins: { "web-document": { write: false }, "portal-item": { write: false } } } })], v3.prototype, "valueExpression", void 0), e([y({ type: String })], v3.prototype, "valueExpressionTitle", void 0), e([y({ readOnly: true })], v3.prototype, "_pixelIntensityToDensity", null), v3 = j2 = e([a2(D)], v3);
var P = v3;

// node_modules/@arcgis/core/renderers/support/OthersCategory.js
var i4 = class extends i(l) {
  constructor() {
    super(...arguments), this.color = new h([0, 0, 0, 0]), this.label = null, this.threshold = 0;
  }
};
e([y({ type: h, json: { write: true } })], i4.prototype, "color", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "label", void 0), e([y({ type: Number, range: { min: 0, max: 1 }, json: { write: true } })], i4.prototype, "threshold", void 0), i4 = e([a2("esri.renderers.support.OthersCategory")], i4);

// node_modules/@arcgis/core/renderers/support/PieChartLegendOptions.js
var p5 = class extends i(l) {
  constructor() {
    super(...arguments), this.title = null;
  }
};
e([y({ type: String, json: { write: true } })], p5.prototype, "title", void 0), p5 = e([a2("esri.renderers.support.PieChartLegendOptions")], p5);

// node_modules/@arcgis/core/renderers/PieChartRenderer.js
var f = class extends v2(i(p)) {
  constructor(t3) {
    super(t3), this.attributes = null, this.backgroundFillSymbol = null, this.defaultColor = new h([0, 0, 0, 0]), this.defaultLabel = null, this.holePercentage = 0, this.othersCategory = new i4(), this.legendOptions = null, this.outline = null, this.size = 12, this.type = "pie-chart";
  }
  getSymbol() {
    var _a;
    return new y2({ size: this.size ? this.size / 2 + (((_a = this.outline) == null ? void 0 : _a.width) || 0) : 0 });
  }
  async getSymbolAsync() {
    return this.getSymbol();
  }
  getSymbols() {
    return [this.getSymbol(), this.backgroundFillSymbol].filter(R);
  }
  getAttributeHash() {
    return this.visualVariables && this.visualVariables.reduce((t3, e4) => t3 + e4.getAttributeHash(), "");
  }
  getMeshHash() {
    return this.getSymbols().reduce((t3, e4) => t3 + JSON.stringify(e4), "");
  }
  async collectRequiredFields(t3, e4) {
    await this.collectVVRequiredFields(t3, e4);
    for (const o4 of this.attributes)
      o4.valueExpression && await T2(t3, e4, o4.valueExpression), o4.field && t3.add(o4.field);
  }
};
e([y({ type: [c3], json: { write: true } })], f.prototype, "attributes", void 0), e([y({ type: S, json: { default: null, write: true } })], f.prototype, "backgroundFillSymbol", void 0), e([y({ type: h, json: { write: true } })], f.prototype, "defaultColor", void 0), e([y({ type: String, json: { write: true } })], f.prototype, "defaultLabel", void 0), e([y({ type: Number, range: { min: 0, max: 1 }, json: { write: true } })], f.prototype, "holePercentage", void 0), e([y({ type: i4, json: { write: true } })], f.prototype, "othersCategory", void 0), e([y({ type: p5, json: { write: true } })], f.prototype, "legendOptions", void 0), e([y({ type: m, json: { default: null, write: true } })], f.prototype, "outline", void 0), e([y({ type: Number, cast: o, json: { write: true } })], f.prototype, "size", void 0), e([o2({ pieChart: "pie-chart" })], f.prototype, "type", void 0), f = e([a2("esri.renderers.PieChartRenderer")], f);
var j3 = f;

// node_modules/@arcgis/core/renderers/SimpleRenderer.js
var c6;
var n2 = c6 = class extends v2(p) {
  constructor(e4) {
    super(e4), this.description = null, this.label = null, this.symbol = null, this.type = "simple";
  }
  async collectRequiredFields(e4, s5) {
    await Promise.all([this.collectSymbolFields(e4, s5), this.collectVVRequiredFields(e4, s5)]);
  }
  async collectSymbolFields(e4, s5) {
    await Promise.all(this.getSymbols().map((r2) => r2.collectRequiredFields(e4, s5)));
  }
  getSymbol(e4, s5) {
    return this.symbol;
  }
  async getSymbolAsync(e4, s5) {
    return this.symbol;
  }
  getSymbols() {
    return this.symbol ? [this.symbol] : [];
  }
  getAttributeHash() {
    return this.visualVariables && this.visualVariables.reduce((e4, s5) => e4 + s5.getAttributeHash(), "");
  }
  getMeshHash() {
    return this.getSymbols().reduce((e4, s5) => e4 + JSON.stringify(s5), "");
  }
  get arcadeRequired() {
    return this.arcadeRequiredForVisualVariables;
  }
  clone() {
    return new c6({ description: this.description, label: this.label, symbol: this.symbol && this.symbol.clone(), visualVariables: a(this.visualVariables), authoringInfo: this.authoringInfo && this.authoringInfo.clone() });
  }
};
e([y({ type: String, json: { write: true } })], n2.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], n2.prototype, "label", void 0), e([y(l2)], n2.prototype, "symbol", void 0), e([o2({ simple: "simple" })], n2.prototype, "type", void 0), n2 = c6 = e([a2("esri.renderers.SimpleRenderer")], n2);
var p6 = n2;

// node_modules/@arcgis/core/renderers/support/types.js
var p7 = { key: "type", base: p, typeMap: { heatmap: P, simple: p6, "unique-value": A, "class-breaks": w, "dot-density": y4, dictionary: u3, "pie-chart": j3 }, errorContext: "renderer" };
var n3 = { key: "type", base: p, typeMap: { simple: p6, "unique-value": A, "class-breaks": w, heatmap: P }, errorContext: "renderer" };

// node_modules/@arcgis/core/renderers/support/jsonUtils.js
function t2(e4, r2) {
  return o3(e4, null, r2);
}
var s4 = u2({ types: p7 });
function o3(r2, n4, t3) {
  return r2 ? r2 && (r2.styleName || r2.styleUrl) && "uniqueValue" !== r2.type ? (t3 && t3.messages && t3.messages.push(new s2("renderer:unsupported", "Only UniqueValueRenderer can be referenced from a web style, but found '" + r2.type + "'", { definition: r2, context: t3 })), null) : s4(r2, n4, t3) : null;
}

export {
  a4 as a,
  p6 as p,
  p7 as p2,
  n3 as n,
  t2 as t,
  o3 as o
};
//# sourceMappingURL=chunk-E4GDJ764.js.map
