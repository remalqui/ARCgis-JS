import {
  i
} from "./chunk-TBMS67KR.js";
import {
  L
} from "./chunk-BCDDCNQ2.js";

// node_modules/@arcgis/core/views/2d/engine/webgl/GroupContainer.js
var r = class extends i {
  constructor() {
    super(...arguments), this._prevFBO = void 0, this.requiresDedicatedFBO = false;
  }
  dispose() {
  }
  doRender(e) {
    const r2 = this.createRenderParams(e), { context: o, painter: s, profiler: n } = r2;
    this._prevFBO = o.getBoundFramebufferObject(), n.recordContainerStart(this.name);
    const i2 = this._getFbo(r2), a = s.getRenderTarget();
    o.bindFramebuffer(i2), s.setRenderTarget(i2), o.setDepthWriteEnabled(true), o.setColorMask(true, true, true, true), o.setClearColor(0, 0, 0, 0), o.setClearDepth(1), o.clear(o.gl.COLOR_BUFFER_BIT | o.gl.DEPTH_BUFFER_BIT), o.setDepthWriteEnabled(false);
    for (const t of this.children)
      t.beforeRender(e);
    for (const t of this.children)
      t.processRender(r2);
    for (const t of this.children)
      t.afterRender(e);
    s.setRenderTarget(a), s.releaseFbo(i2), o.bindFramebuffer(this._prevFBO), s.beforeRenderLayer(r2, this._clippingInfos ? 255 : 0, this.computedOpacity), i2.colorTexture && (o.setStencilTestEnabled(false), o.setStencilWriteMask(0), s.blitTexture(o, i2.colorTexture, L.NEAREST)), s.compositeLayer(r2, this.computedOpacity), n.recordContainerEnd();
  }
  createRenderParams(e) {
    return { ...super.createRenderParams(e), blendMode: this.blendMode, effects: this.computedEffects, globalOpacity: 1 };
  }
  _getFbo(e) {
    const { context: t, painter: r2 } = e, { width: o, height: s } = t.getViewport();
    return r2.acquireFbo(o, s);
  }
};

export {
  r
};
//# sourceMappingURL=chunk-HO7D7VOQ.js.map
