import {
  b,
  j,
  l as l2
} from "./chunk-ZMKH5ZRU.js";
import {
  e as e2
} from "./chunk-KTII3LWY.js";
import {
  i
} from "./chunk-KTEJJM3A.js";
import {
  r
} from "./chunk-SFV6XLDZ.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-W2N7YT6I.js";
import {
  a
} from "./chunk-I5JT24BO.js";
import {
  has
} from "./chunk-I4U7MQNO.js";

// node_modules/@arcgis/core/core/MD5.js
var n = { Base64: 0, Hex: 1, String: 2, Raw: 3 };
var t = 8;
var r2 = (1 << t) - 1;
function e3(n4, t2) {
  const r3 = (65535 & n4) + (65535 & t2);
  return (n4 >> 16) + (t2 >> 16) + (r3 >> 16) << 16 | 65535 & r3;
}
function o(n4) {
  const e4 = [];
  for (let o3 = 0, u2 = n4.length * t; o3 < u2; o3 += t)
    e4[o3 >> 5] |= (n4.charCodeAt(o3 / t) & r2) << o3 % 32;
  return e4;
}
function u(n4) {
  const e4 = [];
  for (let o3 = 0, u2 = 32 * n4.length; o3 < u2; o3 += t)
    e4.push(String.fromCharCode(n4[o3 >> 5] >>> o3 % 32 & r2));
  return e4.join("");
}
function c(n4) {
  const t2 = "0123456789abcdef", r3 = [];
  for (let e4 = 0, o3 = 4 * n4.length; e4 < o3; e4++)
    r3.push(t2.charAt(n4[e4 >> 2] >> e4 % 4 * 8 + 4 & 15) + t2.charAt(n4[e4 >> 2] >> e4 % 4 * 8 & 15));
  return r3.join("");
}
function f(n4) {
  const t2 = "=", r3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", e4 = [];
  for (let o3 = 0, u2 = 4 * n4.length; o3 < u2; o3 += 3) {
    const u3 = (n4[o3 >> 2] >> o3 % 4 * 8 & 255) << 16 | (n4[o3 + 1 >> 2] >> (o3 + 1) % 4 * 8 & 255) << 8 | n4[o3 + 2 >> 2] >> (o3 + 2) % 4 * 8 & 255;
    for (let c3 = 0; c3 < 4; c3++)
      8 * o3 + 6 * c3 > 32 * n4.length ? e4.push(t2) : e4.push(r3.charAt(u3 >> 6 * (3 - c3) & 63));
  }
  return e4.join("");
}
function s3(n4, t2) {
  return n4 << t2 | n4 >>> 32 - t2;
}
function i2(n4, t2, r3, o3, u2, c3) {
  return e3(s3(e3(e3(t2, n4), e3(o3, c3)), u2), r3);
}
function h(n4, t2, r3, e4, o3, u2, c3) {
  return i2(t2 & r3 | ~t2 & e4, n4, t2, o3, u2, c3);
}
function a3(n4, t2, r3, e4, o3, u2, c3) {
  return i2(t2 & e4 | r3 & ~e4, n4, t2, o3, u2, c3);
}
function l3(n4, t2, r3, e4, o3, u2, c3) {
  return i2(t2 ^ r3 ^ e4, n4, t2, o3, u2, c3);
}
function g(n4, t2, r3, e4, o3, u2, c3) {
  return i2(r3 ^ (t2 | ~e4), n4, t2, o3, u2, c3);
}
function p(n4, t2) {
  n4[t2 >> 5] |= 128 << t2 % 32, n4[14 + (t2 + 64 >>> 9 << 4)] = t2;
  let r3 = 1732584193, o3 = -271733879, u2 = -1732584194, c3 = 271733878;
  for (let f3 = 0; f3 < n4.length; f3 += 16) {
    const t3 = r3, s4 = o3, i4 = u2, p5 = c3;
    r3 = h(r3, o3, u2, c3, n4[f3], 7, -680876936), c3 = h(c3, r3, o3, u2, n4[f3 + 1], 12, -389564586), u2 = h(u2, c3, r3, o3, n4[f3 + 2], 17, 606105819), o3 = h(o3, u2, c3, r3, n4[f3 + 3], 22, -1044525330), r3 = h(r3, o3, u2, c3, n4[f3 + 4], 7, -176418897), c3 = h(c3, r3, o3, u2, n4[f3 + 5], 12, 1200080426), u2 = h(u2, c3, r3, o3, n4[f3 + 6], 17, -1473231341), o3 = h(o3, u2, c3, r3, n4[f3 + 7], 22, -45705983), r3 = h(r3, o3, u2, c3, n4[f3 + 8], 7, 1770035416), c3 = h(c3, r3, o3, u2, n4[f3 + 9], 12, -1958414417), u2 = h(u2, c3, r3, o3, n4[f3 + 10], 17, -42063), o3 = h(o3, u2, c3, r3, n4[f3 + 11], 22, -1990404162), r3 = h(r3, o3, u2, c3, n4[f3 + 12], 7, 1804603682), c3 = h(c3, r3, o3, u2, n4[f3 + 13], 12, -40341101), u2 = h(u2, c3, r3, o3, n4[f3 + 14], 17, -1502002290), o3 = h(o3, u2, c3, r3, n4[f3 + 15], 22, 1236535329), r3 = a3(r3, o3, u2, c3, n4[f3 + 1], 5, -165796510), c3 = a3(c3, r3, o3, u2, n4[f3 + 6], 9, -1069501632), u2 = a3(u2, c3, r3, o3, n4[f3 + 11], 14, 643717713), o3 = a3(o3, u2, c3, r3, n4[f3], 20, -373897302), r3 = a3(r3, o3, u2, c3, n4[f3 + 5], 5, -701558691), c3 = a3(c3, r3, o3, u2, n4[f3 + 10], 9, 38016083), u2 = a3(u2, c3, r3, o3, n4[f3 + 15], 14, -660478335), o3 = a3(o3, u2, c3, r3, n4[f3 + 4], 20, -405537848), r3 = a3(r3, o3, u2, c3, n4[f3 + 9], 5, 568446438), c3 = a3(c3, r3, o3, u2, n4[f3 + 14], 9, -1019803690), u2 = a3(u2, c3, r3, o3, n4[f3 + 3], 14, -187363961), o3 = a3(o3, u2, c3, r3, n4[f3 + 8], 20, 1163531501), r3 = a3(r3, o3, u2, c3, n4[f3 + 13], 5, -1444681467), c3 = a3(c3, r3, o3, u2, n4[f3 + 2], 9, -51403784), u2 = a3(u2, c3, r3, o3, n4[f3 + 7], 14, 1735328473), o3 = a3(o3, u2, c3, r3, n4[f3 + 12], 20, -1926607734), r3 = l3(r3, o3, u2, c3, n4[f3 + 5], 4, -378558), c3 = l3(c3, r3, o3, u2, n4[f3 + 8], 11, -2022574463), u2 = l3(u2, c3, r3, o3, n4[f3 + 11], 16, 1839030562), o3 = l3(o3, u2, c3, r3, n4[f3 + 14], 23, -35309556), r3 = l3(r3, o3, u2, c3, n4[f3 + 1], 4, -1530992060), c3 = l3(c3, r3, o3, u2, n4[f3 + 4], 11, 1272893353), u2 = l3(u2, c3, r3, o3, n4[f3 + 7], 16, -155497632), o3 = l3(o3, u2, c3, r3, n4[f3 + 10], 23, -1094730640), r3 = l3(r3, o3, u2, c3, n4[f3 + 13], 4, 681279174), c3 = l3(c3, r3, o3, u2, n4[f3], 11, -358537222), u2 = l3(u2, c3, r3, o3, n4[f3 + 3], 16, -722521979), o3 = l3(o3, u2, c3, r3, n4[f3 + 6], 23, 76029189), r3 = l3(r3, o3, u2, c3, n4[f3 + 9], 4, -640364487), c3 = l3(c3, r3, o3, u2, n4[f3 + 12], 11, -421815835), u2 = l3(u2, c3, r3, o3, n4[f3 + 15], 16, 530742520), o3 = l3(o3, u2, c3, r3, n4[f3 + 2], 23, -995338651), r3 = g(r3, o3, u2, c3, n4[f3], 6, -198630844), c3 = g(c3, r3, o3, u2, n4[f3 + 7], 10, 1126891415), u2 = g(u2, c3, r3, o3, n4[f3 + 14], 15, -1416354905), o3 = g(o3, u2, c3, r3, n4[f3 + 5], 21, -57434055), r3 = g(r3, o3, u2, c3, n4[f3 + 12], 6, 1700485571), c3 = g(c3, r3, o3, u2, n4[f3 + 3], 10, -1894986606), u2 = g(u2, c3, r3, o3, n4[f3 + 10], 15, -1051523), o3 = g(o3, u2, c3, r3, n4[f3 + 1], 21, -2054922799), r3 = g(r3, o3, u2, c3, n4[f3 + 8], 6, 1873313359), c3 = g(c3, r3, o3, u2, n4[f3 + 15], 10, -30611744), u2 = g(u2, c3, r3, o3, n4[f3 + 6], 15, -1560198380), o3 = g(o3, u2, c3, r3, n4[f3 + 13], 21, 1309151649), r3 = g(r3, o3, u2, c3, n4[f3 + 4], 6, -145523070), c3 = g(c3, r3, o3, u2, n4[f3 + 11], 10, -1120210379), u2 = g(u2, c3, r3, o3, n4[f3 + 2], 15, 718787259), o3 = g(o3, u2, c3, r3, n4[f3 + 9], 21, -343485551), r3 = e3(r3, t3), o3 = e3(o3, s4), u2 = e3(u2, i4), c3 = e3(c3, p5);
  }
  return [r3, o3, u2, c3];
}
function x(r3, e4 = n.Hex) {
  const s4 = e4 || n.Base64, i4 = p(o(r3), r3.length * t);
  switch (s4) {
    case n.Raw:
      return i4;
    case n.Hex:
      return c(i4);
    case n.String:
      return u(i4);
    case n.Base64:
      return f(i4);
  }
}

// node_modules/@arcgis/core/layers/support/ExpressionInfo.js
var p2 = class extends i(l) {
  constructor(r3) {
    super(r3), this.expression = null, this.title = null, this.returnType = null;
  }
};
e([y({ type: String, json: { write: true } })], p2.prototype, "expression", void 0), e([y({ type: String, json: { write: true } })], p2.prototype, "title", void 0), e([y({ type: String, json: { write: true } })], p2.prototype, "returnType", void 0), p2 = e([a2("esri.layers.support.ExpressionInfo")], p2);
var i3 = p2;

// node_modules/@arcgis/core/layers/support/AggregateField.js
var p3;
var n2 = p3 = class extends l {
  constructor(t2) {
    super(t2), this.isAutoGenerated = false, this.name = null, this.alias = null, this.onStatisticField = null, this.onStatisticExpression = null, this.statisticType = null;
  }
  clone() {
    return new p3({ name: this.name, alias: this.alias, isAutoGenerated: this.isAutoGenerated, onStatisticExpression: a(this.onStatisticExpression), onStatisticField: this.onStatisticField, statisticType: this.statisticType });
  }
};
e([y({ type: Boolean, json: { write: true } })], n2.prototype, "isAutoGenerated", void 0), e([y({ type: String, json: { write: true } })], n2.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], n2.prototype, "alias", void 0), e([y({ type: String, json: { write: true } })], n2.prototype, "onStatisticField", void 0), e([y({ type: i3, json: { write: true } })], n2.prototype, "onStatisticExpression", void 0), e([y({ type: String, json: { write: true } })], n2.prototype, "statisticType", void 0), n2 = p3 = e([a2("esri.layers.support.AggregateField")], n2);
var a4 = n2;

// node_modules/@arcgis/core/views/2d/engine/LevelDependentSizeVariable.js
var l4;
var n3 = l4 = class extends b {
  writeLevels(e4, s4, i4) {
    for (const t2 in e4) {
      const e5 = this.levels[t2];
      return void (s4.stops = e5);
    }
  }
  clone() {
    return new l4({ axis: this.axis, field: this.field, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, maxDataValue: this.maxDataValue, maxSize: e2(this.maxSize) ? this.maxSize.clone() : this.maxSize, minDataValue: this.minDataValue, minSize: e2(this.minSize) ? this.minSize.clone() : this.minSize, normalizationField: this.normalizationField, stops: this.stops && this.stops.map((e4) => e4.clone()), target: this.target, useSymbolValue: this.useSymbolValue, valueRepresentation: this.valueRepresentation, valueUnit: this.valueUnit, legendOptions: this.legendOptions && this.legendOptions.clone(), levels: a(this.levels) });
  }
};
e([y()], n3.prototype, "levels", void 0), e([r("levels")], n3.prototype, "writeLevels", null), n3 = l4 = e([a2("esri.views.2d.engine.LevelDependentSizeVariable")], n3);

// node_modules/@arcgis/core/views/2d/layers/support/clusterUtils.js
var o2 = s.getLogger("esri.views.2d.layers.support.clusterUtils");
has.add("esri-cluster-arcade-enabled", true);
var p4 = has("esri-cluster-arcade-enabled");
var c2 = (e4, r3, s4, i4, n4) => {
  const t2 = r3.clone();
  if (!b2(t2))
    return t2;
  if (t2.authoringInfo || (t2.authoringInfo = new j()), t2.authoringInfo.isAutoGenerated = true, "visualVariables" in t2) {
    const r4 = (t2.visualVariables || []).filter((e5) => "$view.scale" !== e5.valueExpression), a5 = d(r4);
    r4.forEach((r5) => {
      "rotation" === r5.type ? r5.field ? r5.field = E(e4, r5.field, "avg_angle", "number") : r5.valueExpression && (r5.field = x2(e4, r5.valueExpression, "avg_angle", "number"), r5.valueExpression = null) : r5.normalizationField ? (r5.field = E(e4, r5.field, "avg_norm", "number", r5.normalizationField), r5.normalizationField = null) : r5.field ? r5.field = E(e4, r5.field, "avg", "number") : r5.valueExpression && (r5.field = x2(e4, r5.valueExpression, "avg", "number"), r5.valueExpression = null);
    }), null == a5 && !m(r4) && n4 && (r4.push(v(s4, i4)), t2.dynamicClusterSize = true), t2.visualVariables = r4;
  }
  switch (t2.type) {
    case "simple":
      break;
    case "pie-chart":
      for (const r4 of t2.attributes)
        r4.field ? r4.field = E(e4, r4.field, "sum", "number") : r4.valueExpression && (r4.field = x2(e4, r4.valueExpression, "sum", "number"), r4.valueExpression = null);
      break;
    case "unique-value":
      t2.field ? t2.field = E(e4, t2.field, "mode", "string") : t2.valueExpression && (t2.field = x2(e4, t2.valueExpression, "mode", "string"), t2.valueExpression = null);
      break;
    case "class-breaks":
      t2.normalizationField ? (t2.field = E(e4, t2.field, "avg_norm", "number", t2.normalizationField), t2.normalizationField = null) : t2.field ? t2.field = E(e4, t2.field, "avg", "number") : t2.valueExpression && (t2.field = x2(e4, t2.valueExpression, "avg", "number"), t2.valueExpression = null);
  }
  return t2;
};
var d = (e4) => {
  for (const r3 of e4)
    if ("size" === r3.type)
      return r3;
  return null;
};
function f2(e4, r3, s4) {
  const i4 = e4.clone();
  let n4 = false;
  if ("visualVariables" in i4) {
    const e5 = (i4.visualVariables || []).filter((e6) => "$view.scale" !== e6.valueExpression);
    null == d(e5) && (i4.visualVariables || (i4.visualVariables = []), i4.visualVariables.push(v(r3, s4)), i4.dynamicClusterSize = true, n4 = true);
  }
  return { renderer: i4, didInject: n4 };
}
var m = (e4) => {
  for (const r3 of e4)
    if ("cluster_count" === r3.field)
      return true;
  return false;
};
var v = (e4, r3) => {
  const s4 = [new l2({ value: 0, size: 0 }), new l2({ value: 1 })];
  if (null == r3)
    return new b({ field: "cluster_count", stops: [...s4, new l2({ value: 2, size: 0 })] });
  const i4 = Object.keys(r3).reduce((i5, n4) => ({ ...i5, [n4]: [...s4, new l2({ value: Math.max(2, r3[n4].minValue), size: e4.clusterMinSize }), new l2({ value: Math.max(3, r3[n4].maxValue), size: e4.clusterMaxSize })] }), {});
  return new n3({ field: "cluster_count", levels: i4 });
};
var b2 = (r3) => {
  const s4 = (s5) => o2.error(new s2("Unsupported-renderer", s5, { renderer: r3 }));
  if (!r3)
    return false;
  switch (r3.type) {
    case "unique-value":
      if (r3.field2 || r3.field3)
        return s4("FeatureReductionCluster does not support multi-field UniqueValueRenderers"), false;
      break;
    case "class-breaks":
      if (r3.normalizationField) {
        const e4 = r3.normalizationType;
        if ("field" !== e4)
          return s4(`FeatureReductionCluster does not support a normalizationType of ${e4}`), false;
      }
      break;
    case "simple":
    case "pie-chart":
      break;
    default:
      return s4(`FeatureReductionCluster does not support renderers of type ${r3.type}`), false;
  }
  if (!p4) {
    if ("valueExpression" in r3 && r3.valueExpression)
      return s4("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"), false;
    if (("visualVariables" in r3 && r3.visualVariables || []).some((e4) => !(!("valueExpression" in e4) || !e4.valueExpression)))
      return s4("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"), false;
  }
  return true;
};
function g2(e4, r3, i4) {
  switch (e4) {
    case "sum":
      return `cluster_sum_${r3}`;
    case "avg":
    case "avg_angle":
      return `cluster_avg_${r3}`;
    case "mode":
      return `cluster_type_${r3}`;
    case "avg_norm": {
      const e5 = i4, n4 = "field", a5 = r3.toLowerCase() + ",norm:" + n4 + "," + e5.toLowerCase();
      return "cluster_avg_" + x(a5);
    }
  }
}
function x2(e4, r3, a5, t2) {
  const l5 = x(r3), u2 = "mode" === a5 ? `cluster_type_${l5}` : "sum" === a5 ? `cluster_sum_${l5}` : `cluster_avg_${l5}`;
  return e4.some((e5) => e5.name === u2) || e4.push(new a4({ name: u2, isAutoGenerated: true, onStatisticExpression: new i3({ expression: r3, returnType: t2 }), statisticType: a5 })), u2;
}
function E(e4, r3, s4, a5, t2) {
  if ("cluster_count" === r3 || e4.some((e5) => e5.name === r3))
    return r3;
  const l5 = g2(s4, r3, t2);
  return e4.some((e5) => e5.name === l5) || ("avg_norm" === s4 ? e4.push(new a4({ name: l5, isAutoGenerated: true, onStatisticExpression: new i3({ expression: `$feature.${r3} / $feature.${t2}`, returnType: a5 }), statisticType: "avg" })) : e4.push(new a4({ name: l5, isAutoGenerated: true, onStatisticField: r3, statisticType: s4 }))), l5;
}

export {
  a4 as a,
  n,
  x,
  c2 as c,
  d,
  f2 as f,
  v,
  b2 as b
};
//# sourceMappingURL=chunk-YM46NRFF.js.map
