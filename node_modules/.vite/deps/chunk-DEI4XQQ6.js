import {
  j
} from "./chunk-HKVL2MJK.js";
import {
  Bt,
  V
} from "./chunk-O3CHVGVF.js";
import {
  s3 as s
} from "./chunk-W2N7YT6I.js";

// node_modules/@arcgis/core/portal/support/resourceUtils.js
async function s2(e, t = {}, a) {
  await e.load(a);
  const s3 = V(e.itemUrl, "resources"), { start: o2 = 1, num: n2 = 10, sortOrder: u2 = "asc", sortField: l2 = "created" } = t, c2 = { query: { start: o2, num: n2, sortOrder: u2, sortField: l2, token: e.apiKey }, signal: a == null ? void 0 : a.signal }, i2 = await e.portal.request(s3, c2);
  return { total: i2.total, nextStart: i2.nextStart, resources: i2.resources.map(({ created: t2, size: r, resource: a2 }) => ({ created: new Date(t2), size: r, resource: e.resourceFromPath(a2) })) };
}
async function o(e, a, s3, o2) {
  if (!e.hasPath())
    throw new s(`portal-item-resource-${a}:invalid-path`, "Resource does not have a valid path");
  const n2 = e.portalItem;
  await n2.load(o2);
  const u2 = V(n2.userItemUrl, "add" === a ? "addResources" : "updateResources"), [c2, i2] = l(e.path), d2 = await p(s3), m2 = new FormData();
  return c2 && "." !== c2 && m2.append("resourcesPrefix", c2), null != o2 && o2.compress && m2.append("compress", "true"), m2.append("fileName", i2), m2.append("file", d2, i2), m2.append("f", "json"), null != o2 && o2.access && m2.append("access", o2.access), await n2.portal.request(u2, { method: "post", body: m2, signal: o2 == null ? void 0 : o2.signal }), e;
}
async function n(e, a, s3) {
  if (!a.hasPath())
    throw new s("portal-item-resources-remove:invalid-path", "Resource does not have a valid path");
  await e.load(s3);
  const o2 = V(e.userItemUrl, "removeResources");
  await e.portal.request(o2, { method: "post", query: { resource: a.path }, signal: s3 == null ? void 0 : s3.signal }), a.portalItem = null;
}
async function u(e, t) {
  await e.load(t);
  const a = V(e.userItemUrl, "removeResources");
  return e.portal.request(a, { method: "post", query: { deleteAll: true }, signal: t == null ? void 0 : t.signal });
}
function l(e) {
  const t = e.lastIndexOf("/");
  return -1 === t ? [".", e] : [e.slice(0, t), e.slice(t + 1)];
}
function c(e) {
  const [t, r] = i(e), [a, s3] = l(t);
  return [a, s3, r];
}
function i(e) {
  const t = Bt(e);
  return null == t ? [e, ""] : [e.slice(0, e.length - t.length - 1), `.${t}`];
}
async function p(t) {
  if (t instanceof Blob)
    return t;
  return (await j(t.url, { responseType: "blob" })).data;
}
function d(e, t) {
  if (!e.hasPath())
    return null;
  const [a, , s3] = c(e.path);
  return e.portalItem.resourceFromPath(V(a, t + s3));
}
function m(e, t) {
  if (!e.hasPath())
    return null;
  const [a, , s3] = c(e.path);
  return e.portalItem.resourceFromPath(V(a, t + s3));
}

export {
  s2 as s,
  o,
  n,
  u,
  c,
  p,
  d,
  m
};
//# sourceMappingURL=chunk-DEI4XQQ6.js.map
