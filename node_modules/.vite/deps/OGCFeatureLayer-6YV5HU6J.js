import {
  c
} from "./chunk-V3KDZQUR.js";
import {
  p as p3
} from "./chunk-XSL4XKVS.js";
import "./chunk-PLCQTNGD.js";
import {
  n as n2
} from "./chunk-UMKNA5PR.js";
import "./chunk-YM46NRFF.js";
import {
  n as n3
} from "./chunk-QRIMDBVP.js";
import {
  i as i2
} from "./chunk-CGPOGDO6.js";
import "./chunk-62M25QKF.js";
import {
  s as s2
} from "./chunk-W52WZL2F.js";
import "./chunk-7MOGRCW6.js";
import {
  i as i3
} from "./chunk-3Y3ICAIL.js";
import {
  C
} from "./chunk-TNXVIMSN.js";
import "./chunk-XFLBB3FK.js";
import {
  a as a3
} from "./chunk-77BBQQ7Y.js";
import {
  o as o2
} from "./chunk-FGWFWDIM.js";
import {
  p as p4
} from "./chunk-UCGDNB2P.js";
import {
  n,
  p2
} from "./chunk-E4GDJ764.js";
import "./chunk-Z2T56FN3.js";
import "./chunk-ZMKH5ZRU.js";
import {
  j as j2
} from "./chunk-P46VVEIN.js";
import {
  p
} from "./chunk-X34I34RW.js";
import {
  a as a2
} from "./chunk-5NBE4HDI.js";
import "./chunk-4NLQ63FV.js";
import "./chunk-Y7HVH6RU.js";
import {
  t
} from "./chunk-2HDAD5Q3.js";
import {
  c as c4
} from "./chunk-PPU6QR6F.js";
import {
  O
} from "./chunk-PCVJI7J2.js";
import {
  c as c3,
  d as d2,
  f as f2,
  l,
  m,
  p as p6
} from "./chunk-HZHMZHPT.js";
import "./chunk-NU5WEWCI.js";
import "./chunk-UIVGJZCT.js";
import "./chunk-MVR2W3C6.js";
import {
  F,
  I,
  T,
  b as b2,
  h,
  j,
  k,
  w,
  x
} from "./chunk-QLQDVQ2I.js";
import {
  d
} from "./chunk-RNXN3MSP.js";
import "./chunk-4NWXO2LT.js";
import "./chunk-6ETVGJDF.js";
import "./chunk-34QQ6GDH.js";
import "./chunk-KTII3LWY.js";
import "./chunk-RL6GG46M.js";
import "./chunk-JDYLSHC3.js";
import "./chunk-CKK5HS7D.js";
import "./chunk-QAWS7Y22.js";
import "./chunk-UX5D32RO.js";
import "./chunk-P34MS5MD.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-NYLF7BL2.js";
import {
  b
} from "./chunk-YC4PIRSZ.js";
import "./chunk-32JSK7KN.js";
import "./chunk-YIJWIXDP.js";
import "./chunk-LLQHB2ZB.js";
import "./chunk-EISDT6B4.js";
import "./chunk-LREUW66K.js";
import "./chunk-KKGVORR5.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import {
  y as y2
} from "./chunk-RR2V4HRU.js";
import "./chunk-WZAASLQW.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import "./chunk-CNCZBOLJ.js";
import "./chunk-4SARN32Z.js";
import {
  k as k2
} from "./chunk-QA4FMJA6.js";
import "./chunk-VFQINJTY.js";
import "./chunk-4J6R7QH6.js";
import "./chunk-HB3KZNZ3.js";
import "./chunk-MUO4EIZP.js";
import "./chunk-42RWGG3D.js";
import "./chunk-OO4A3EBQ.js";
import "./chunk-ZBWBCN2I.js";
import "./chunk-KTEJJM3A.js";
import "./chunk-SO6DBMQG.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-QXGO5RRL.js";
import "./chunk-EIE3W25Z.js";
import {
  c2,
  p as p5
} from "./chunk-7KM4XBUC.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-CGK6BJQA.js";
import {
  b as b3
} from "./chunk-XU2Q4SCK.js";
import "./chunk-KIEN3CY2.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7E3Q7HTF.js";
import "./chunk-FXDEKQIL.js";
import "./chunk-GJ5WE5D3.js";
import "./chunk-KKGH4SRQ.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-4RFFPIT2.js";
import "./chunk-UKJF25H6.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-D5MIJ6WT.js";
import "./chunk-7KX64CAH.js";
import {
  _
} from "./chunk-J4R3XNTP.js";
import "./chunk-Y6FRAP2R.js";
import "./chunk-BVNZ3ETW.js";
import {
  i,
  o
} from "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-4H5JODOT.js";
import "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-CWQ6Q3PH.js";
import "./chunk-XN5VV437.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-WBSPL6CJ.js";
import "./chunk-N5ULYWRU.js";
import "./chunk-LQVUN6IS.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-MOIETNWJ.js";
import {
  M
} from "./chunk-3GSONYPC.js";
import {
  f
} from "./chunk-SFV6XLDZ.js";
import "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import "./chunk-7A5C2EQ3.js";
import {
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import "./chunk-2YSHZRCT.js";
import "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import "./chunk-O3CHVGVF.js";
import "./chunk-HNHXEGH2.js";
import "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-W2N7YT6I.js";
import "./chunk-I5JT24BO.js";
import "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/graphics/sources/OGCFeatureSource.js
var h2 = class extends _ {
  constructor() {
    super(...arguments), this.featureDefinition = null, this.type = "ogc-feature";
  }
  load(e2) {
    return this.addResolvingPromise(this._loadOGCServices(this.layer, e2)), this.when();
  }
  getSource() {
    const { featureDefinition: { collection: e2, layerDefinition: t2, spatialReference: s3, supportedCrs: r }, layer: { apiKey: o3, customParameters: p7, effectiveMaxRecordCount: i4 } } = this;
    return { type: "ogc-source", collection: e2, layerDefinition: t2, maxRecordCount: i4, queryParameters: { apiKey: o3, customParameters: p7 }, spatialReference: s3, supportedCrs: r };
  }
  queryExtent(e2, t2 = {}) {
    return null;
  }
  queryFeatureCount(e2, t2 = {}) {
    return null;
  }
  queryFeatures(e2, t2 = {}) {
    return this.queryFeaturesJSON(e2, t2).then((e3) => d.fromJSON(e3));
  }
  queryFeaturesJSON(e2, t2 = {}) {
    const s3 = this.getSource();
    return this.load(t2).then(() => x(s3, e2, t2));
  }
  queryObjectIds(e2, t2 = {}) {
    return null;
  }
  serviceSupportsSpatialReference(e2) {
    return !(!e2.isWGS84 && !e2.isWebMercator) || !!this.featureDefinition.supportedCrs[e2.wkid];
  }
  _conformsToType(e2, t2) {
    const s3 = new RegExp(`^${t2}$`, "i");
    return e2.conformsTo.some((e3) => s3.test(e3)) ?? false;
  }
  _getCapabilities(e2, t2) {
    return { analytics: { supportsCacheHint: false }, attachment: null, data: { isVersioned: false, supportsAttachment: false, supportsM: false, supportsZ: e2 }, metadata: { supportsAdvancedFieldProperties: false }, operations: { supportsCalculate: false, supportsTruncate: false, supportsValidateSql: false, supportsAdd: false, supportsDelete: false, supportsEditing: false, supportsChangeTracking: false, supportsQuery: false, supportsQueryAnalytics: false, supportsQueryAttachments: false, supportsQueryTopFeatures: false, supportsResizeAttachments: false, supportsSync: false, supportsUpdate: false, supportsExceedsLimitStatistics: false, supportsAsyncConvert3D: false }, query: { maxRecordCount: t2, maxRecordCountFactor: void 0, standardMaxRecordCount: void 0, supportsCacheHint: false, supportsCentroid: false, supportsDisjointSpatialRelationship: false, supportsDistance: false, supportsDistinct: false, supportsExtent: false, supportsFormatPBF: false, supportsGeometryProperties: false, supportsHavingClause: false, supportsHistoricMoment: false, supportsMaxRecordCountFactor: false, supportsOrderBy: false, supportsPagination: false, supportsPercentileStatistics: false, supportsQuantization: false, supportsQuantizationEditMode: false, supportsQueryByOthers: false, supportsQueryGeometry: false, supportsResultType: false, supportsStandardizedQueriesOnly: false, supportsTopFeaturesQuery: false, supportsStatistics: false, supportsSpatialAggregationStatistics: false, supportedSpatialAggregationStatistics: { envelope: false, centroid: false, convexHull: false }, supportsDefaultSpatialReference: false, supportsFullTextSearch: false, supportsCompactGeometry: false, supportsSqlExpression: false, tileMaxRecordCount: void 0 }, queryRelated: { supportsCount: false, supportsOrderBy: false, supportsPagination: false, supportsCacheHint: false }, queryTopFeatures: { supportsCacheHint: false }, editing: { supportsDeleteByAnonymous: false, supportsDeleteByOthers: false, supportsGeometryUpdate: false, supportsGlobalId: false, supportsReturnServiceEditsInSourceSpatialReference: false, supportsRollbackOnFailure: false, supportsUpdateByAnonymous: false, supportsUpdateByOthers: false, supportsUploadWithItemId: false, supportsUpdateWithoutM: false, supportsAsyncApplyEdits: false } };
  }
  _getMaxRecordCount(e2) {
    var _a, _b, _c, _d, _e;
    const t2 = (_a = e2 == null ? void 0 : e2.components) == null ? void 0 : _a.parameters;
    return ((_c = (_b = t2 == null ? void 0 : t2.limit) == null ? void 0 : _b.schema) == null ? void 0 : _c.maximum) ?? ((_e = (_d = t2 == null ? void 0 : t2.limitFeatures) == null ? void 0 : _d.schema) == null ? void 0 : _e.maximum);
  }
  _getStorageSpatialReference(e2) {
    const t2 = e2.storageCrs ?? b2, s3 = k(t2);
    return null == s3 ? f.WGS84 : new f({ wkid: s3 });
  }
  _getSupportedSpatialReferences(e2, t2) {
    const s3 = "#/crs", r = e2.crs ?? [b2], o3 = r.includes(s3) ? r.filter((e3) => e3 !== s3).concat(t2.crs ?? []) : r, p7 = /^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;
    return o3.filter((e3) => !p7.test(e3));
  }
  async _loadOGCServices(e2, s3) {
    const r = null != s3 ? s3.signal : null, { apiKey: o3, collectionId: p7, customParameters: i4, fields: y3, geometryType: f3, hasZ: h3, objectIdField: S, timeInfo: C2, url: R } = e2, w2 = { fields: y3 == null ? void 0 : y3.map((e3) => e3.toJSON()), geometryType: i.toJSON(f3), hasZ: h3 ?? false, objectIdField: S, timeInfo: C2 == null ? void 0 : C2.toJSON() }, x2 = { apiKey: o3, customParameters: i4, signal: r }, j3 = await I(R, x2), [F2, v] = await Promise.all([F(j3, x2), j(j3, x2)]);
    if (!this._conformsToType(F2, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))
      throw new s("ogc-feature-layer:no-geojson-support", "Server does not support geojson");
    const O2 = v.collections.find((e3) => e3.id === p7);
    if (!O2)
      throw new s("ogc-feature-layer:collection-not-found", "Server does not contain the named collection");
    const T2 = this._conformsToType(F2, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30") ? await T(j3, x2) : null, D = await h(O2, w2, x2), _2 = this._getMaxRecordCount(T2), A = this._getCapabilities(D.hasZ, _2), P = this._getStorageSpatialReference(O2).toJSON(), b4 = this._getSupportedSpatialReferences(O2, v), q = new RegExp(`^${w}`, "i"), E = {};
    for (const t2 of b4) {
      const e3 = k(t2);
      null != e3 && (E[e3] || (E[e3] = t2.replace(q, "")));
    }
    this.featureDefinition = { capabilities: A, collection: O2, layerDefinition: D, spatialReference: P, supportedCrs: E };
  }
};
e([y()], h2.prototype, "featureDefinition", void 0), e([y({ constructOnly: true })], h2.prototype, "layer", void 0), e([y()], h2.prototype, "type", void 0), h2 = e([a("esri.layers.graphics.sources.OGCFeatureSource")], h2);

// node_modules/@arcgis/core/layers/OGCFeatureLayer.js
var M2 = s2();
var B = class extends i2(o2(n2(p3(a2(c(a3(t(c4(j2(p(O(b3)))))))))))) {
  constructor(e2) {
    super(e2), this.capabilities = null, this.collectionId = null, this.copyright = null, this.definitionExpression = null, this.description = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.hasZ = void 0, this.labelingInfo = null, this.labelsVisible = true, this.legendEnabled = true, this.maxRecordCount = null, this.objectIdField = null, this.operationalLayerType = "OGCFeatureLayer", this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new h2({ layer: this }), this.spatialReference = null, this.title = null, this.type = "ogc-feature", this.typeIdField = null, this.types = null, this.url = null;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e2) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["OGCFeatureServer"] }, e2).then(() => this._fetchService(e2))), this.when();
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get effectiveMaxRecordCount() {
    var _a;
    return this.maxRecordCount ?? ((_a = this.capabilities) == null ? void 0 : _a.query.maxRecordCount) ?? 5e3;
  }
  get isTable() {
    return this.loaded && null == this.geometryType;
  }
  set renderer(e2) {
    c2(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  on(e2, r) {
    return super.on(e2, r);
  }
  createPopupTemplate(e2) {
    return p4(this, e2);
  }
  createQuery() {
    return new b();
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  getFieldDomain(e2, r) {
    var _a;
    let t2, i4 = false;
    const o3 = (_a = r == null ? void 0 : r.feature) == null ? void 0 : _a.attributes, s3 = this.typeIdField && (o3 == null ? void 0 : o3[this.typeIdField]);
    return null != s3 && this.types && (i4 = this.types.some((r2) => {
      var _a2;
      return r2.id == s3 && (t2 = (_a2 = r2.domains) == null ? void 0 : _a2[e2], "inherited" === (t2 == null ? void 0 : t2.type) && (t2 = this._getLayerDomain(e2)), true);
    })), i4 || t2 || (t2 = this._getLayerDomain(e2)), t2;
  }
  queryFeatures(e2, r) {
    return this.load().then(() => this.source.queryFeatures(b.from(e2) || this.createQuery(), r)).then((e3) => {
      var _a;
      return (_a = e3 == null ? void 0 : e3.features) == null ? void 0 : _a.forEach((e4) => {
        e4.layer = e4.sourceLayer = this;
      }), e3;
    });
  }
  serviceSupportsSpatialReference(e2) {
    var _a;
    return ((_a = this.source) == null ? void 0 : _a.serviceSupportsSpatialReference(e2)) ?? false;
  }
  async _fetchService(e2) {
    await this.source.load(e2), this.read(this.source.featureDefinition, { origin: "service" }), c2(this.renderer, this.fieldsIndex), p5(this.timeInfo, this.fieldsIndex);
  }
  _getLayerDomain(e2) {
    if (!this.fields)
      return null;
    for (const r of this.fields)
      if (r.name === e2 && r.domain)
        return r.domain;
    return null;
  }
};
e([y({ readOnly: true, json: { origins: { service: { read: true } } } })], B.prototype, "capabilities", void 0), e([y({ type: String, json: { write: true } })], B.prototype, "collectionId", void 0), e([y({ type: String })], B.prototype, "copyright", void 0), e([y({ readOnly: true })], B.prototype, "defaultPopupTemplate", null), e([y({ type: String })], B.prototype, "definitionExpression", void 0), e([y({ readOnly: true, type: String, json: { origins: { service: { name: "collection.description" } } } })], B.prototype, "description", void 0), e([y({ type: String })], B.prototype, "displayField", void 0), e([y({ type: Number })], B.prototype, "effectiveMaxRecordCount", null), e([y(d2)], B.prototype, "elevationInfo", void 0), e([y({ type: [y2], json: { origins: { service: { name: "layerDefinition.fields" } } } })], B.prototype, "fields", void 0), e([y(M2.fieldsIndex)], B.prototype, "fieldsIndex", void 0), e([y({ readOnly: true, type: M, json: { origins: { service: { name: "layerDefinition.extent" } } } })], B.prototype, "fullExtent", void 0), e([y({ type: o.apiValues, json: { origins: { service: { name: "layerDefinition.geometryType", read: { reader: o.read } } } } })], B.prototype, "geometryType", void 0), e([y({ type: Boolean, json: { origins: { service: { name: "layerDefinition.hasZ" } } } })], B.prototype, "hasZ", void 0), e([y({ type: Boolean, readOnly: true })], B.prototype, "isTable", null), e([y({ type: [C], json: { origins: { "web-document": { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i3 }, write: true } } } })], B.prototype, "labelingInfo", void 0), e([y(m)], B.prototype, "labelsVisible", void 0), e([y(c3)], B.prototype, "legendEnabled", void 0), e([y({ type: Number })], B.prototype, "maxRecordCount", void 0), e([y({ type: String, json: { origins: { service: { name: "layerDefinition.objectIdField" } } } })], B.prototype, "objectIdField", void 0), e([y({ type: ["OGCFeatureLayer"] })], B.prototype, "operationalLayerType", void 0), e([y(p6)], B.prototype, "popupEnabled", void 0), e([y({ type: k2, json: { name: "popupInfo", write: true } })], B.prototype, "popupTemplate", void 0), e([y({ types: p2, json: { origins: { service: { name: "layerDefinition.drawingInfo.renderer", write: false }, "web-scene": { types: n, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: true } })], B.prototype, "renderer", null), e([y(l)], B.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ readOnly: true })], B.prototype, "source", void 0), e([y({ readOnly: true, type: f, json: { origins: { service: { read: true } } } })], B.prototype, "spatialReference", void 0), e([y({ type: String, json: { write: { enabled: true, ignoreOrigin: true, isRequired: true }, origins: { service: { name: "collection.title" } } } })], B.prototype, "title", void 0), e([y({ readOnly: true, json: { read: false } })], B.prototype, "type", void 0), e([y({ type: String, readOnly: true })], B.prototype, "typeIdField", void 0), e([y({ type: [n3] })], B.prototype, "types", void 0), e([y(f2)], B.prototype, "url", void 0), B = e([a("esri.layers.OGCFeatureLayer")], B);
var V = B;
export {
  V as default
};
//# sourceMappingURL=OGCFeatureLayer-6YV5HU6J.js.map
