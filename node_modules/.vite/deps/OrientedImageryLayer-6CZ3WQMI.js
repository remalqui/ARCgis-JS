import {
  Be
} from "./chunk-3SADEOML.js";
import "./chunk-V3KDZQUR.js";
import "./chunk-XSL4XKVS.js";
import "./chunk-PLCQTNGD.js";
import "./chunk-UMKNA5PR.js";
import "./chunk-YM46NRFF.js";
import "./chunk-QRIMDBVP.js";
import "./chunk-DIRCMTXV.js";
import "./chunk-7XRP3RPT.js";
import "./chunk-2YTFL6AC.js";
import "./chunk-CGPOGDO6.js";
import "./chunk-ZCZT2HZV.js";
import "./chunk-62M25QKF.js";
import "./chunk-W52WZL2F.js";
import "./chunk-7MOGRCW6.js";
import "./chunk-3Y3ICAIL.js";
import "./chunk-TNXVIMSN.js";
import "./chunk-XFLBB3FK.js";
import "./chunk-77BBQQ7Y.js";
import "./chunk-FGWFWDIM.js";
import "./chunk-UCGDNB2P.js";
import "./chunk-E4GDJ764.js";
import "./chunk-Z2T56FN3.js";
import "./chunk-ZMKH5ZRU.js";
import "./chunk-P46VVEIN.js";
import "./chunk-X34I34RW.js";
import "./chunk-5NBE4HDI.js";
import "./chunk-4NLQ63FV.js";
import "./chunk-Y7HVH6RU.js";
import "./chunk-2HDAD5Q3.js";
import "./chunk-PPU6QR6F.js";
import "./chunk-PCVJI7J2.js";
import "./chunk-HZHMZHPT.js";
import "./chunk-NU5WEWCI.js";
import "./chunk-UIVGJZCT.js";
import "./chunk-MVR2W3C6.js";
import "./chunk-7MFOV26D.js";
import "./chunk-RNXN3MSP.js";
import "./chunk-DIXAOEHS.js";
import "./chunk-4NWXO2LT.js";
import "./chunk-6ETVGJDF.js";
import "./chunk-34QQ6GDH.js";
import "./chunk-KTII3LWY.js";
import "./chunk-RL6GG46M.js";
import "./chunk-MLNTHYHD.js";
import "./chunk-I3XMP33U.js";
import "./chunk-JDYLSHC3.js";
import "./chunk-QAWS7Y22.js";
import "./chunk-UX5D32RO.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-NYLF7BL2.js";
import "./chunk-YC4PIRSZ.js";
import "./chunk-MSLDEOHR.js";
import "./chunk-32JSK7KN.js";
import "./chunk-YIJWIXDP.js";
import "./chunk-EISDT6B4.js";
import "./chunk-LREUW66K.js";
import "./chunk-RR2V4HRU.js";
import "./chunk-WZAASLQW.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import "./chunk-5WXPQVZD.js";
import "./chunk-AF36K5Y6.js";
import "./chunk-5K6FTFN4.js";
import "./chunk-CNCZBOLJ.js";
import "./chunk-QXPTMFGZ.js";
import "./chunk-4SARN32Z.js";
import "./chunk-QA4FMJA6.js";
import "./chunk-VFQINJTY.js";
import "./chunk-4J6R7QH6.js";
import "./chunk-HB3KZNZ3.js";
import "./chunk-MUO4EIZP.js";
import "./chunk-42RWGG3D.js";
import "./chunk-G5WJIWPP.js";
import "./chunk-LNMNRMVX.js";
import "./chunk-OO4A3EBQ.js";
import "./chunk-ZBWBCN2I.js";
import "./chunk-KTEJJM3A.js";
import "./chunk-SO6DBMQG.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-QXGO5RRL.js";
import "./chunk-EIE3W25Z.js";
import "./chunk-7KM4XBUC.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-CGK6BJQA.js";
import "./chunk-XU2Q4SCK.js";
import "./chunk-KIEN3CY2.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7E3Q7HTF.js";
import "./chunk-FXDEKQIL.js";
import "./chunk-GJ5WE5D3.js";
import "./chunk-KKGH4SRQ.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-4RFFPIT2.js";
import "./chunk-UKJF25H6.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-D5MIJ6WT.js";
import "./chunk-7KX64CAH.js";
import "./chunk-J4R3XNTP.js";
import "./chunk-Y6FRAP2R.js";
import "./chunk-BVNZ3ETW.js";
import "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-4H5JODOT.js";
import "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-4NOOGA4U.js";
import "./chunk-CWQ6Q3PH.js";
import "./chunk-XN5VV437.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-74O2T7JC.js";
import "./chunk-WBSPL6CJ.js";
import "./chunk-N5ULYWRU.js";
import "./chunk-LQVUN6IS.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-MOIETNWJ.js";
import "./chunk-3GSONYPC.js";
import "./chunk-SFV6XLDZ.js";
import "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import "./chunk-7A5C2EQ3.js";
import {
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import "./chunk-2YSHZRCT.js";
import "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import "./chunk-O3CHVGVF.js";
import "./chunk-HNHXEGH2.js";
import "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-W2N7YT6I.js";
import "./chunk-I5JT24BO.js";
import "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/OrientedImageryLayer.js
function i(e2) {
  return (r, t, o) => {
    if (!r)
      return null;
    const a2 = r[0].orientedImageryProperties;
    return (a2 == null ? void 0 : a2[e2]) ?? null;
  };
}
var s2 = class extends Be {
  constructor() {
    super(...arguments), this.geometryType = "point", this.operationalLayerType = "OrientedImageryLayer", this.type = "oriented-imagery";
  }
  get effectiveElevationSource() {
    var _a;
    const { elevationSource: e2, demPathPrefix: r, demPathSuffix: t } = this;
    if (!((_a = e2 == null ? void 0 : e2.url) == null ? void 0 : _a.trim()))
      return e2;
    let o = e2.url.trim();
    return (r == null ? void 0 : r.trim()) && (o = `${r.trim()}/${o}`), (t == null ? void 0 : t.trim()) && (o += `/${t.trim()}`), { ...e2, url: o };
  }
  _verifySource() {
    if (super._verifySource(), "point" !== this.geometryType)
      throw new s("oriented-imagery-layer:invalid-geometry-type", "OrientedImageryLayer only supports point geometry type");
  }
};
e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraHeading") } } })], s2.prototype, "cameraHeading", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraHeight") } } })], s2.prototype, "cameraHeight", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraPitch") } } })], s2.prototype, "cameraPitch", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("cameraRoll") } } })], s2.prototype, "cameraRoll", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("coveragePercent") } } })], s2.prototype, "coveragePercent", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("demPathPrefix") } } })], s2.prototype, "demPathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("demPathSuffix") } } })], s2.prototype, "demPathSuffix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("depthImagePathPrefix") } } })], s2.prototype, "depthImagePathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("depthImagePathSuffix") } } })], s2.prototype, "depthImagePathSuffix", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("farDistance") } } })], s2.prototype, "farDistance", void 0), e([y({ json: { write: true } })], s2.prototype, "geometryType", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("horizontalFieldOfView") } } })], s2.prototype, "horizontalFieldOfView", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("horizontalMeasurementUnit") } } })], s2.prototype, "horizontalMeasurementUnit", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("imagePathPrefix") } } })], s2.prototype, "imagePathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("imagePathSuffix") } } })], s2.prototype, "imagePathSuffix", void 0), e([y({ json: { type: Number, write: true, read: { source: "layers", reader: i("imageRotation") } } })], s2.prototype, "imageRotation", void 0), e([y({ type: Number, json: { write: true, read: { source: "layers", reader: i("maximumDistance") } } })], s2.prototype, "maximumDistance", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("nearDistance") } } })], s2.prototype, "nearDistance", void 0), e([y({ type: ["OrientedImageryLayer"] })], s2.prototype, "operationalLayerType", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("orientedImageryType") } } })], s2.prototype, "orientedImageryType", void 0), e([y({ json: { read: false }, value: "oriented-imagery", readOnly: true })], s2.prototype, "type", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("verticalFieldOfView") } } })], s2.prototype, "verticalFieldOfView", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("verticalMeasurementUnit") } } })], s2.prototype, "verticalMeasurementUnit", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("videoPathPrefix") } } })], s2.prototype, "videoPathPrefix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("videoPathSuffix") } } })], s2.prototype, "videoPathSuffix", void 0), e([y({ json: { write: true, read: { source: "layers", reader: i("elevationSource") } } })], s2.prototype, "elevationSource", void 0), e([y()], s2.prototype, "effectiveElevationSource", null), s2 = e([a("esri.layers.OrientedImageryLayer")], s2);
var d = s2;
export {
  d as default
};
//# sourceMappingURL=OrientedImageryLayer-6CZ3WQMI.js.map
