import {
  e as e5
} from "./chunk-44OKOXKA.js";
import "./chunk-IZITEQY4.js";
import "./chunk-ROAORTI3.js";
import "./chunk-NGH54QS3.js";
import {
  It
} from "./chunk-QMSOZNYF.js";
import "./chunk-UVKRF2GY.js";
import "./chunk-EX2LTU3A.js";
import "./chunk-7WSXGFCK.js";
import {
  D,
  I as I2,
  b as b3,
  g2,
  q
} from "./chunk-ZEKM2THG.js";
import "./chunk-2735WBYK.js";
import {
  s as s6
} from "./chunk-P2MEGQP6.js";
import {
  Be
} from "./chunk-3SADEOML.js";
import "./chunk-V3KDZQUR.js";
import "./chunk-XSL4XKVS.js";
import "./chunk-PLCQTNGD.js";
import "./chunk-UMKNA5PR.js";
import "./chunk-YM46NRFF.js";
import "./chunk-QRIMDBVP.js";
import "./chunk-DIRCMTXV.js";
import "./chunk-7XRP3RPT.js";
import "./chunk-2YTFL6AC.js";
import "./chunk-CGPOGDO6.js";
import "./chunk-ZCZT2HZV.js";
import "./chunk-62M25QKF.js";
import "./chunk-W52WZL2F.js";
import "./chunk-7MOGRCW6.js";
import "./chunk-3Y3ICAIL.js";
import "./chunk-TNXVIMSN.js";
import {
  c as c7
} from "./chunk-XFLBB3FK.js";
import "./chunk-77BBQQ7Y.js";
import "./chunk-FGWFWDIM.js";
import "./chunk-UCGDNB2P.js";
import {
  a as a6
} from "./chunk-E4GDJ764.js";
import "./chunk-Z2T56FN3.js";
import "./chunk-ZMKH5ZRU.js";
import "./chunk-P46VVEIN.js";
import "./chunk-X34I34RW.js";
import "./chunk-5NBE4HDI.js";
import "./chunk-4NLQ63FV.js";
import "./chunk-Y7HVH6RU.js";
import "./chunk-2HDAD5Q3.js";
import "./chunk-PPU6QR6F.js";
import "./chunk-PCVJI7J2.js";
import "./chunk-HZHMZHPT.js";
import "./chunk-NU5WEWCI.js";
import "./chunk-UIVGJZCT.js";
import "./chunk-MVR2W3C6.js";
import "./chunk-7MFOV26D.js";
import {
  l as l3
} from "./chunk-4PJMJTU2.js";
import "./chunk-RNXN3MSP.js";
import "./chunk-DIXAOEHS.js";
import "./chunk-4NWXO2LT.js";
import "./chunk-6ETVGJDF.js";
import "./chunk-ZL3HOHNK.js";
import "./chunk-34QQ6GDH.js";
import "./chunk-KTII3LWY.js";
import {
  d as d3
} from "./chunk-RL6GG46M.js";
import "./chunk-MLNTHYHD.js";
import "./chunk-I3XMP33U.js";
import "./chunk-JDYLSHC3.js";
import "./chunk-QAWS7Y22.js";
import "./chunk-OCIERVFA.js";
import "./chunk-QOWAKGE4.js";
import "./chunk-UX5D32RO.js";
import "./chunk-FHYNSVC4.js";
import {
  E as E2
} from "./chunk-WWUAHPIM.js";
import "./chunk-NYLF7BL2.js";
import "./chunk-HTY52TPQ.js";
import {
  b as b2,
  m as m4
} from "./chunk-YC4PIRSZ.js";
import "./chunk-MSLDEOHR.js";
import "./chunk-B5TYSRH2.js";
import "./chunk-32JSK7KN.js";
import "./chunk-YIJWIXDP.js";
import "./chunk-6DURKJBD.js";
import "./chunk-FN5LEP6H.js";
import "./chunk-EISDT6B4.js";
import "./chunk-LREUW66K.js";
import "./chunk-PM3CFO6N.js";
import "./chunk-6VJWKAPY.js";
import "./chunk-UQOM5GR4.js";
import "./chunk-YBMFRTPB.js";
import "./chunk-KKGVORR5.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-RR2V4HRU.js";
import "./chunk-WZAASLQW.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import {
  t as t5
} from "./chunk-JTFWLA4D.js";
import "./chunk-JUHOAKXP.js";
import "./chunk-5WXPQVZD.js";
import "./chunk-AF36K5Y6.js";
import "./chunk-5K6FTFN4.js";
import "./chunk-CNCZBOLJ.js";
import "./chunk-QNFDBY7V.js";
import "./chunk-EL72ISXP.js";
import "./chunk-QXPTMFGZ.js";
import {
  h as h4
} from "./chunk-4SARN32Z.js";
import {
  F,
  I,
  a as a5,
  c as c3,
  c2 as c4,
  c4 as c5,
  c5 as c6,
  i2 as i5,
  i3 as i6,
  i4 as i7,
  p as p3
} from "./chunk-QA4FMJA6.js";
import {
  S2 as S
} from "./chunk-VFQINJTY.js";
import "./chunk-4J6R7QH6.js";
import "./chunk-HB3KZNZ3.js";
import "./chunk-MUO4EIZP.js";
import "./chunk-42RWGG3D.js";
import "./chunk-G5WJIWPP.js";
import {
  a as a4
} from "./chunk-LNMNRMVX.js";
import "./chunk-OO4A3EBQ.js";
import "./chunk-ZBWBCN2I.js";
import {
  i as i4
} from "./chunk-KTEJJM3A.js";
import "./chunk-SO6DBMQG.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-QXGO5RRL.js";
import "./chunk-EIE3W25Z.js";
import {
  Ee,
  Se,
  i as i8,
  se,
  ue
} from "./chunk-7KM4XBUC.js";
import "./chunk-OZXJDVTE.js";
import {
  t as t2
} from "./chunk-CGK6BJQA.js";
import {
  b as b4
} from "./chunk-XU2Q4SCK.js";
import {
  s as s5
} from "./chunk-KIEN3CY2.js";
import "./chunk-4CZO65BK.js";
import {
  E,
  r as r4
} from "./chunk-7E3Q7HTF.js";
import "./chunk-FXDEKQIL.js";
import "./chunk-GJ5WE5D3.js";
import {
  h as h3
} from "./chunk-KKGH4SRQ.js";
import "./chunk-Y2CLYMXQ.js";
import {
  V
} from "./chunk-4RFFPIT2.js";
import "./chunk-UKJF25H6.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-D5MIJ6WT.js";
import "./chunk-7KX64CAH.js";
import "./chunk-J4R3XNTP.js";
import "./chunk-Y6FRAP2R.js";
import "./chunk-BVNZ3ETW.js";
import "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-4H5JODOT.js";
import "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import {
  i as i3
} from "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import {
  e as e3,
  e2 as e4,
  t as t4
} from "./chunk-6BO2IG32.js";
import {
  W,
  e2,
  n2 as n3,
  r as r3,
  t as t3
} from "./chunk-65NFKTSD.js";
import {
  L,
  b,
  h as h2,
  m as m3,
  n2 as n4,
  w
} from "./chunk-KUQPXYNJ.js";
import "./chunk-XUY2GLHG.js";
import "./chunk-JYZSPYYW.js";
import "./chunk-5EXFDBQJ.js";
import {
  s as s3
} from "./chunk-4NOOGA4U.js";
import {
  M,
  Y,
  c2,
  f as f2,
  p as p2,
  u,
  v
} from "./chunk-CWQ6Q3PH.js";
import {
  U,
  a as a2,
  f,
  h,
  j as j2,
  l as l2
} from "./chunk-XN5VV437.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-74O2T7JC.js";
import {
  n as n2
} from "./chunk-WBSPL6CJ.js";
import "./chunk-N5ULYWRU.js";
import {
  a as a3
} from "./chunk-LQVUN6IS.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-MOIETNWJ.js";
import "./chunk-3GSONYPC.js";
import {
  d2,
  x2 as x
} from "./chunk-SFV6XLDZ.js";
import {
  s as s4
} from "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import "./chunk-7A5C2EQ3.js";
import {
  m as m2,
  t2 as t,
  y3 as y2
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import {
  r as r2
} from "./chunk-2YSHZRCT.js";
import {
  j as j3
} from "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import "./chunk-O3CHVGVF.js";
import {
  d,
  g,
  i as i2,
  j,
  k,
  m,
  p,
  y
} from "./chunk-HNHXEGH2.js";
import {
  l,
  n
} from "./chunk-DWOEYHKS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-W2N7YT6I.js";
import {
  i,
  r
} from "./chunk-I5JT24BO.js";
import {
  R,
  c
} from "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/core/unitFormatUtils.js
var T = ["B", "kB", "MB", "GB", "TB"];
function v3(n14, e12) {
  let o9 = 0 === e12 ? 0 : Math.floor(Math.log(e12) / Math.log(E2.KILOBYTES));
  o9 = i3(o9, 0, T.length - 1);
  const u9 = c2(e12 / E2.KILOBYTES ** o9, { maximumFractionDigits: 2 });
  return r(n14.units.bytes[T[o9]], { fileSize: u9 });
}

// node_modules/@arcgis/core/widgets/Feature/support/featureUtils.js
var m5 = "esri.widgets.Feature.support.featureUtils";
var g3 = s.getLogger(m5);
var h5 = /href=(""|'')/gi;
var I3 = /(\{([^\{\r\n]+)\})/g;
var b5 = /\'/g;
var F3 = /^\s*expression\//i;
var w2 = /(\n)/gi;
var N = /[\u00A0-\u9999<>\&]/gim;
var j5 = /href\s*=\s*(?:\"([^\"]+)\"|\'([^\']+)\')/gi;
var E4 = /^(?:mailto:|tel:)/;
var T2 = "relationships/";
var x2 = M("short-date-short-time");
function C(e12) {
  if (null != e12)
    return e12.get("sourceLayer") || e12.get("layer");
}
async function q2(e12, t12) {
  return "function" == typeof e12 ? e12(t12) : e12;
}
function A(e12 = "") {
  if (e12)
    return !E4.test(e12.trim().toLowerCase());
}
function M2(e12) {
  return !!e12 && F3.test(e12);
}
function R2(e12, t12) {
  if (!M2(t12) || !e12)
    return null;
  const r9 = t12.replace(F3, "").toLowerCase();
  let n14 = null;
  return e12.some((e13) => e13.name.toLowerCase() === r9 && (n14 = e13, true)), n14;
}
function L2(e12, t12) {
  const r9 = R2(t12, e12 == null ? void 0 : e12.fieldName);
  return r9 ? r9.title || null : e12 ? e12.label || e12.fieldName : null;
}
function D2(e12, t12) {
  const r9 = t12.get(e12.toLowerCase());
  return `{${r9 && r9.fieldName || e12}}`;
}
function v4(e12) {
  return e12.replaceAll(h5, "");
}
function U2(e12, t12) {
  const r9 = O2(t12, e12);
  return r9 ? r9.name : e12;
}
function $(e12, t12) {
  return e12 && e12.map((e13) => U2(e13, t12));
}
function O2(e12, t12) {
  return e12 && "function" == typeof e12.getField && t12 ? e12.getField(t12) ?? null : null;
}
function S2(e12) {
  return `${e12}`.trim();
}
function G({ attributes: e12, globalAttributes: t12, layer: r9, text: n14, expressionAttributes: i13, fieldInfoMap: o9 }) {
  return n14 ? k2({ formattedAttributes: t12, template: H(n14, { ...t12, ...i13, ...e12 }, r9), fieldInfoMap: o9 }) : "";
}
function k2({ formattedAttributes: e12, template: r9, fieldInfoMap: n14 }) {
  return S2(v4(r(r(r9, (e13) => D2(e13, n14)), e12)));
}
function P(e12, t12, r9 = false) {
  const n14 = t12[e12];
  if ("string" == typeof n14) {
    const i13 = "%27", o9 = (r9 ? encodeURIComponent(n14) : n14).replaceAll(b5, i13);
    t12[e12] = o9;
  }
}
function Q(e12, t12 = false) {
  const r9 = { ...e12 };
  return Object.keys(r9).forEach((e13) => P(e13, r9, t12)), r9;
}
function _(e12, r9, n14) {
  const i13 = (r9 = S2(r9)) && "{" !== r9[0];
  return r(e12, Q(n14, i13 || false));
}
function z(e12, t12) {
  return e12.replaceAll(I3, (e13, r9, n14) => {
    const i13 = O2(t12, n14);
    return i13 ? `{${i13.name}}` : r9;
  });
}
function H(e12, t12, r9) {
  const n14 = z(e12, r9);
  return n14 ? n14.replaceAll(j5, (e13, r10, n15) => _(e13, r10 || n15, t12)) : n14;
}
function V2(e12, t12) {
  if ("string" == typeof e12 && t12 && null == t12.dateFormat && (null != t12.places || null != t12.digitSeparator)) {
    const t13 = Number(e12);
    if (!isNaN(t13))
      return t13;
  }
  return e12;
}
function Z(e12) {
  return null != e12 && "object" == typeof e12 && "layer" in e12 && !!e12.layer;
}
function B(e12) {
  return null != e12 && "object" == typeof e12 && "type" in e12 && "map-image" === e12.type;
}
function J2(e12) {
  return null != e12 && "object" == typeof e12 && "fieldsIndex" in e12 && "geometryType" in e12 && "getField" in e12 && "load" in e12 && "loaded" in e12 && "objectIdField" in e12 && "spatialReference" in e12 && "type" in e12 && "feature" === e12.type && "when" in e12;
}
function K2(e12) {
  return null != e12 && "object" == typeof e12 && "createQuery" in e12 && "queryFeatureCount" in e12 && "queryObjectIds" in e12 && "queryRelatedFeatures" in e12 && "queryRelatedFeaturesCount" in e12 && "relationships" in e12;
}
function W2(e12) {
  return J2(e12) && K2(e12);
}
function Y2(e12, t12) {
  var _a;
  const { fieldInfos: r9, fieldName: n14, preventPlacesFormatting: i13, layer: o9 } = t12, a14 = ee(r9, n14), f11 = a14 == null ? void 0 : a14.clone(), d10 = O2(o9, n14);
  if (f11 && !Se(n14)) {
    const t13 = d10 == null ? void 0 : d10.type;
    if ("date" === t13 || "date-only" === t13 || "time-only" === t13 || "timestamp-offset" === t13 || ((_a = f11.format) == null ? void 0 : _a.dateFormat)) {
      const r10 = f11.format ?? new F();
      if (r10.dateFormat ?? (r10.dateFormat = "date-only" === t13 ? "short-date" : "short-date-short-time"), "number" == typeof e12) {
        const t14 = !Z(o9) && r4(o9) && o9.datesInUnknownTimezone || Z(o9) && B(o9.layer) && o9.layer.datesInUnknownTimezone;
        return r10.formatDate(e12, t14);
      }
      switch (t13) {
        case "date-only":
          return r10.formatDateOnly(e12);
        case "time-only":
          return r10.formatTimeOnly(e12);
        case "timestamp-offset":
          return r10.formatTimestamp(e12);
      }
    }
  }
  const y11 = f11 == null ? void 0 : f11.format;
  return "string" == typeof e12 && Se(n14) && y11 ? y11.formatRasterPixelValue(e12) : "string" == typeof (e12 = V2(e12, y11)) || null == e12 || null == y11 ? le(e12) : i13 ? c2(e12, { ...u(y11), minimumFractionDigits: 0, maximumFractionDigits: 20 }) : y11.formatNumber(e12);
}
function ee(e12, t12) {
  if (e12 && e12.length && t12)
    return e12.find((e13) => {
      var _a;
      return ((_a = e13.fieldName) == null ? void 0 : _a.toLowerCase()) === t12.toLowerCase();
    });
}
function te({ fieldName: e12, graphic: t12, layer: r9 }) {
  if (pe(e12))
    return null;
  if (!r9 || "function" != typeof r9.getFeatureType)
    return null;
  const { typeIdField: n14 } = r9;
  if (!n14 || e12 !== n14)
    return null;
  const i13 = r9.getFeatureType(t12);
  return i13 ? i13.name : null;
}
function re({ fieldName: e12, value: t12, graphic: r9, layer: n14 }) {
  if (pe(e12))
    return null;
  if (!n14 || "function" != typeof n14.getFieldDomain)
    return null;
  const i13 = r9 && n14.getFieldDomain(e12, { feature: r9 });
  return i13 && "coded-value" === i13.type ? i13.getName(t12) : null;
}
function ne(e12, t12) {
  const { creatorField: n14, creationDateField: i13, editorField: o9, editDateField: a14 } = e12;
  if (!t12)
    return;
  const l12 = t12[a14];
  if ("number" == typeof l12) {
    const e13 = t12[o9];
    return { type: "edit", date: f2(l12, x2), user: e13 };
  }
  const u9 = t12[i13];
  if ("number" == typeof u9) {
    const e13 = t12[n14];
    return { type: "create", date: f2(u9, x2), user: e13 };
  }
  return null;
}
function ie(e12, t12) {
  const r9 = /* @__PURE__ */ new Map();
  return e12 ? (e12.forEach((e13) => {
    const n14 = U2(e13.fieldName, t12);
    e13.fieldName = n14, r9.set(n14.toLowerCase(), e13);
  }), r9) : r9;
}
function oe(e12) {
  const t12 = [];
  if (!e12)
    return t12;
  const { fieldInfos: r9, content: n14 } = e12;
  return r9 && t12.push(...r9), n14 && Array.isArray(n14) ? (n14.forEach((e13) => {
    if ("fields" === e13.type) {
      const r10 = e13 && e13.fieldInfos;
      r10 && t12.push(...r10);
    }
  }), t12) : t12;
}
function ae(e12) {
  return e12.replaceAll(N, (e13) => `&#${e13.charCodeAt(0)};`);
}
function le(e12) {
  return "string" == typeof e12 ? e12.replaceAll(w2, '<br class="esri-text-new-line" />') : e12;
}
function ue2(e12) {
  var _a, _b;
  const { value: t12, fieldName: a14, fieldInfos: l12, fieldInfoMap: u9, layer: s12, graphic: f11 } = e12;
  if (null == t12)
    return "";
  const c21 = re({ fieldName: a14, value: t12, graphic: f11, layer: s12 });
  if (c21)
    return c21;
  const d10 = te({ fieldName: a14, graphic: f11, layer: s12 });
  if (d10)
    return d10;
  if (u9.get(a14.toLowerCase()))
    return Y2(t12, { fieldInfos: l12 || Array.from(u9.values()), fieldName: a14, layer: s12 });
  switch ((_b = (_a = s12 == null ? void 0 : s12.fieldsIndex) == null ? void 0 : _a.get(a14)) == null ? void 0 : _b.type) {
    case "date":
      return f2(t12);
    case "date-only":
      return Y(t12);
    case "time-only":
      return p2(t12);
    case "timestamp-offset":
      return v(t12);
  }
  return le(t12);
}
function se2({ fieldInfos: e12, attributes: t12, layer: r9, graphic: n14, fieldInfoMap: i13, relatedInfos: o9 }) {
  const a14 = {};
  return o9 == null ? void 0 : o9.forEach((t13) => ge({ attributes: a14, relatedInfo: t13, fieldInfoMap: i13, fieldInfos: e12, layer: r9 })), t12 && Object.keys(t12).forEach((o10) => {
    const l12 = t12[o10];
    a14[o10] = ue2({ fieldName: o10, fieldInfos: e12, fieldInfoMap: i13, layer: r9, value: l12, graphic: n14 });
  }), a14;
}
async function fe(e12, t12) {
  var _a, _b;
  const { layer: r9, graphic: n14, outFields: i13, objectIds: o9, returnGeometry: a14, spatialReference: l12 } = e12, u9 = o9[0];
  if ("number" != typeof u9 && "string" != typeof u9) {
    const e13 = "Could not query required fields for the specified feature. The feature's ID is invalid.", t13 = { layer: r9, graphic: n14, objectId: u9, requiredFields: i13 };
    return g3.warn(e13, t13), null;
  }
  if (!((_b = (_a = E(r9)) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsQuery)) {
    const e13 = "The specified layer cannot be queried. The following fields will not be available.", t13 = { layer: r9, graphic: n14, requiredFields: i13, returnGeometry: a14 };
    return g3.warn(e13, t13), null;
  }
  const s12 = r9.createQuery();
  s12.objectIds = o9, s12.outFields = (i13 == null ? void 0 : i13.length) ? i13 : [r9.objectIdField], s12.returnGeometry = !!a14, s12.returnZ = !!a14, s12.returnM = !!a14, s12.outSpatialReference = l12;
  return (await r9.queryFeatures(s12, t12)).features[0];
}
async function ce(e12) {
  var _a;
  if (!((_a = e12.expressionInfos) == null ? void 0 : _a.length))
    return false;
  const t12 = await i8(), { arcadeUtils: { hasGeometryFunctions: r9 } } = t12;
  return r9(e12);
}
async function de({ graphic: e12, popupTemplate: t12, layer: r9, spatialReference: n14 }, i13) {
  if (!r9 || !t12)
    return;
  if ("function" == typeof r9.load && await r9.load(i13), !e12.attributes)
    return;
  const o9 = e12.attributes[r9.objectIdField];
  if (null == o9)
    return;
  const a14 = [o9], l12 = await t12.getRequiredFields(r9.fieldsIndex), u9 = Ee(l12, e12), s12 = u9 ? [] : l12, c21 = t12.returnGeometry || await ce(t12);
  if (u9 && !c21)
    return;
  const d10 = await fe({ layer: r9, graphic: e12, outFields: s12, objectIds: a14, returnGeometry: c21, spatialReference: n14 }, i13);
  d10 && (d10.geometry && (e12.geometry = d10.geometry), d10.attributes && (e12.attributes = { ...e12.attributes, ...d10.attributes }));
}
function pe(e12 = "") {
  return !!e12 && e12.includes(T2);
}
function ye(e12) {
  return e12 ? `${T2}${e12.layerId}/${e12.fieldName}` : "";
}
function me({ attributes: e12, graphic: t12, relatedInfo: r9, fieldInfos: n14, fieldInfoMap: i13, layer: o9 }) {
  e12 && t12 && r9 && Object.keys(t12.attributes).forEach((a14) => {
    const l12 = ye({ layerId: r9.relation.id.toString(), fieldName: a14 }), u9 = t12.attributes[a14];
    e12[l12] = ue2({ fieldName: l12, fieldInfos: n14, fieldInfoMap: i13, layer: o9, value: u9, graphic: t12 });
  });
}
function ge({ attributes: e12, relatedInfo: t12, fieldInfoMap: r9, fieldInfos: n14, layer: i13 }) {
  e12 && t12 && (t12.relatedFeatures && t12.relatedFeatures && t12.relatedFeatures.forEach((o9) => me({ attributes: e12, graphic: o9, relatedInfo: t12, fieldInfoMap: r9, fieldInfos: n14, layer: i13 })), t12.relatedStatsFeatures && t12.relatedStatsFeatures && t12.relatedStatsFeatures.forEach((o9) => me({ attributes: e12, graphic: o9, relatedInfo: t12, fieldInfoMap: r9, fieldInfos: n14, layer: i13 })));
}
var he = (e12) => {
  if (!e12)
    return false;
  const t12 = e12.toUpperCase();
  return t12.includes("CURRENT_TIMESTAMP") || t12.includes("CURRENT_DATE") || t12.includes("CURRENT_TIME");
};
var Ie = ({ layer: e12, method: t12, query: r9, definitionExpression: n14 }) => {
  var _a, _b;
  if (!((_b = (_a = e12.capabilities) == null ? void 0 : _a.query) == null ? void 0 : _b.supportsCacheHint) || "attachments" === t12)
    return;
  const i13 = null != r9.where ? r9.where : null, o9 = null != r9.geometry ? r9.geometry : null;
  he(n14) || he(i13) || "extent" === (o9 == null ? void 0 : o9.type) || "tile" === r9.resultType || (r9.cacheHint = true);
};
var be = ({ query: e12, layer: t12, method: r9 }) => {
  Ie({ layer: t12, method: r9, query: e12, definitionExpression: `${t12.definitionExpression} ${t12.serviceDefinitionExpression}` });
};
var Fe = ({ queryPayload: e12, layer: t12, method: r9 }) => {
  Ie({ layer: t12, method: r9, query: e12, definitionExpression: `${t12.definitionExpression} ${t12.serviceDefinitionExpression}` });
};
function we(e12, t12, r9) {
  return e12 && t12 && r9 ? Ne(e12.allLayers, t12, r9) || Ne(e12.allTables, t12, r9) : null;
}
function Ne(e12, t12, r9) {
  return e12.filter(W2).find((e13) => e13 !== t12 && e13.url === t12.url && e13.layerId === r9.relatedTableId);
}

// node_modules/@arcgis/core/widgets/Attachments/AttachmentsViewModel.js
var m6 = { editing: false, operations: { add: true, update: true, delete: true } };
var f3 = V.ofType(l3);
var u2 = class extends m2 {
  constructor(t12) {
    super(t12), this._getAttachmentsPromise = null, this._attachmentLayer = null, this.capabilities = { ...m6 }, this.activeAttachmentInfo = null, this.activeFileInfo = null, this.attachmentInfos = new f3(), this.fileInfos = new V(), this.graphic = null, this.mode = "view", this.filesEnabled = false, this.addHandles(l2(() => this.graphic, () => this._graphicChanged(), h));
  }
  destroy() {
    this._attachmentLayer = null, this.graphic = null;
  }
  castCapabilities(t12) {
    return { ...m6, ...t12 };
  }
  get state() {
    return this._getAttachmentsPromise ? "loading" : this.graphic ? "ready" : "disabled";
  }
  get supportsResizeAttachments() {
    const { graphic: t12 } = this;
    if (!t12)
      return false;
    const e12 = t12.layer || t12.sourceLayer;
    return (e12 == null ? void 0 : e12.loaded) && "capabilities" in e12 && e12.capabilities && "operations" in e12.capabilities && "supportsResizeAttachments" in e12.capabilities.operations && e12.capabilities.operations.supportsResizeAttachments || false;
  }
  async getAttachments() {
    const { _attachmentLayer: t12, attachmentInfos: e12 } = this;
    if (!t12 || "function" != typeof t12.queryAttachments)
      throw new s2("invalid-layer", "getAttachments(): A valid layer is required.");
    const a14 = this._getObjectId(), i13 = new c7({ objectIds: [a14], returnMetadata: true }), r9 = [], s12 = t12.queryAttachments(i13).then((t13) => t13[a14] || r9).catch(() => r9);
    this._getAttachmentsPromise = s12, this.notifyChange("state");
    const o9 = await s12;
    return e12.removeAll(), o9.length && e12.addMany(o9), this._getAttachmentsPromise = null, this.notifyChange("state"), o9;
  }
  async addAttachment(t12, e12 = this.graphic) {
    var _a;
    const { _attachmentLayer: a14, attachmentInfos: i13, capabilities: r9 } = this;
    if (!e12)
      throw new s2("invalid-graphic", "addAttachment(): A valid graphic is required.", { graphic: e12 });
    if (!t12)
      throw new s2("invalid-attachment", "addAttachment(): An attachment is required.", { attachment: t12 });
    if (!((_a = r9.operations) == null ? void 0 : _a.add))
      throw new s2("invalid-capabilities", "addAttachment(): add capabilities are required.");
    if (!a14 || "function" != typeof a14.addAttachment)
      throw new s2("invalid-layer", "addAttachment(): A valid layer is required.");
    const s12 = a14.addAttachment(e12, t12).then((t13) => this._queryAttachment(t13.objectId, e12)), o9 = await s12;
    return i13.add(o9), o9;
  }
  async deleteAttachment(t12) {
    var _a;
    const { _attachmentLayer: e12, attachmentInfos: a14, graphic: i13, capabilities: r9 } = this;
    if (!t12)
      throw new s2("invalid-attachment-info", "deleteAttachment(): An attachmentInfo is required.", { attachmentInfo: t12 });
    if (!((_a = r9.operations) == null ? void 0 : _a.delete))
      throw new s2("invalid-capabilities", "deleteAttachment(): delete capabilities are required.");
    if (!e12 || "function" != typeof e12.deleteAttachments)
      throw new s2("invalid-layer", "deleteAttachment(): A valid layer is required.");
    if (!i13)
      throw new s2("invalid-graphic", "deleteAttachment(): A graphic is required.");
    const s12 = e12.deleteAttachments(i13, [t12.id]).then(() => t12), o9 = await s12;
    return a14.remove(o9), o9;
  }
  async updateAttachment(t12, e12 = this.activeAttachmentInfo) {
    var _a;
    const { _attachmentLayer: a14, attachmentInfos: i13, graphic: r9, capabilities: s12 } = this;
    if (!t12)
      throw new s2("invalid-attachment", "updateAttachment(): An attachment is required.", { attachment: t12 });
    if (!e12)
      throw new s2("invalid-attachment-info", "updateAttachment(): An attachmentInfo is required.", { attachmentInfo: e12 });
    if (!((_a = s12.operations) == null ? void 0 : _a.update))
      throw new s2("invalid-capabilities", "updateAttachment(): Update capabilities are required.");
    const o9 = i13.findIndex((t13) => t13 === e12);
    if (!a14 || "function" != typeof a14.updateAttachment)
      throw new s2("invalid-layer", "updateAttachment(): A valid layer is required.");
    if (!r9)
      throw new s2("invalid-graphic", "updateAttachment(): A graphic is required.");
    const c21 = a14.updateAttachment(r9, e12.id, t12).then((t13) => this._queryAttachment(t13.objectId)), h13 = await c21;
    return i13.splice(o9, 1, h13), h13;
  }
  async commitFiles() {
    return await Promise.all(this.fileInfos.items.map((t12) => this.addAttachment(t12.form))), this.fileInfos.removeAll(), this.getAttachments();
  }
  addFile(t12, e12) {
    if (!t12 || !e12)
      return null;
    const a14 = { file: t12, form: e12 };
    return this.fileInfos.add(a14), a14;
  }
  updateFile(t12, e12, a14 = this.activeFileInfo) {
    if (!t12 || !e12 || !a14)
      return null;
    const i13 = this.fileInfos.findIndex((t13) => a14 === t13);
    return i13 > -1 && this.fileInfos.splice(i13, 1, { file: t12, form: e12 }), this.fileInfos.items[i13];
  }
  deleteFile(t12) {
    const e12 = this.fileInfos.find((e13) => e13.file === t12);
    return e12 ? (this.fileInfos.remove(e12), e12) : null;
  }
  async _queryAttachment(t12, e12) {
    const { _attachmentLayer: a14 } = this;
    if (!t12 || !(a14 == null ? void 0 : a14.queryAttachments))
      throw new s2("invalid-attachment-id", "Could not query attachment.");
    const i13 = this._getObjectId(e12), r9 = new c7({ objectIds: [i13], attachmentsWhere: `AttachmentId=${t12}`, returnMetadata: true });
    return a14.queryAttachments(r9).then((t13) => t13[i13][0]);
  }
  _getObjectId(t12 = this.graphic) {
    return (t12 == null ? void 0 : t12.getObjectId()) ?? null;
  }
  _graphicChanged() {
    this.graphic && (this._setAttachmentLayer(), this.getAttachments().catch(() => {
    }));
  }
  _setAttachmentLayer() {
    const { graphic: t12 } = this, e12 = C(t12);
    this._attachmentLayer = e12 ? "scene" === e12.type && null != e12.associatedLayer ? e12.associatedLayer : e12 : null;
  }
};
e([y2()], u2.prototype, "capabilities", void 0), e([s4("capabilities")], u2.prototype, "castCapabilities", null), e([y2()], u2.prototype, "activeAttachmentInfo", void 0), e([y2()], u2.prototype, "activeFileInfo", void 0), e([y2({ readOnly: true, type: f3 })], u2.prototype, "attachmentInfos", void 0), e([y2()], u2.prototype, "fileInfos", void 0), e([y2({ type: h4 })], u2.prototype, "graphic", void 0), e([y2()], u2.prototype, "mode", void 0), e([y2({ readOnly: true })], u2.prototype, "state", null), e([y2()], u2.prototype, "filesEnabled", void 0), e([y2({ readOnly: true })], u2.prototype, "supportsResizeAttachments", null), u2 = e([a("esri.widgets.Attachments.AttachmentsViewModel")], u2);
var y3 = u2;

// node_modules/@arcgis/core/widgets/Attachments/support/attachmentUtils.js
function e6(i13) {
  const e12 = i13.toLowerCase();
  return "image/bmp" === e12 || "image/emf" === e12 || "image/exif" === e12 || "image/gif" === e12 || "image/x-icon" === e12 || "image/jpeg" === e12 || "image/png" === e12 || "image/tiff" === e12 || "image/x-wmf" === e12;
}
function p4(e12) {
  const p16 = a3("esri/themes/base/images/files/");
  return e12 ? "text/plain" === e12 ? `${p16}text-32.svg` : "application/pdf" === e12 ? `${p16}pdf-32.svg` : "text/csv" === e12 ? `${p16}csv-32.svg` : "application/gpx+xml" === e12 ? `${p16}gpx-32.svg` : "application/x-dwf" === e12 ? `${p16}cad-32.svg` : "application/postscript" === e12 || "application/json" === e12 || "text/xml" === e12 || "model/vrml" === e12 ? `${p16}code-32.svg` : "application/x-zip-compressed" === e12 || "application/x-7z-compressed" === e12 || "application/x-gzip" === e12 || "application/x-tar" === e12 || "application/x-gtar" === e12 || "application/x-bzip2" === e12 || "application/gzip" === e12 || "application/x-compress" === e12 || "application/x-apple-diskimage" === e12 || "application/x-rar-compressed" === e12 || "application/zip" === e12 ? `${p16}zip-32.svg` : e12.includes("image/") ? `${p16}image-32.svg` : e12.includes("audio/") ? `${p16}sound-32.svg` : e12.includes("video/") ? `${p16}video-32.svg` : e12.includes("msexcel") || e12.includes("ms-excel") || e12.includes("spreadsheetml") ? `${p16}excel-32.svg` : e12.includes("msword") || e12.includes("ms-word") || e12.includes("wordprocessingml") ? `${p16}word-32.svg` : e12.includes("powerpoint") || e12.includes("presentationml") ? `${p16}report-32.svg` : `${p16}generic-32.svg` : `${p16}generic-32.svg`;
}

// node_modules/@arcgis/core/widgets/Attachments.js
var v5 = { addButton: true, addSubmitButton: true, cancelAddButton: true, cancelUpdateButton: true, deleteButton: true, errorMessage: true, progressBar: true, updateButton: true };
var y4 = "esri-attachments";
var w3 = "esri-button";
var A2 = { base: y4, loaderContainer: `${y4}__loader-container`, loader: `${y4}__loader`, fadeIn: `${y4}--fade-in`, container: `${y4}__container`, containerList: `${y4}__container--list`, containerPreview: `${y4}__container--preview`, actions: `${y4}__actions`, deleteButton: `${y4}__delete-button`, addAttachmentButton: `${y4}__add-attachment-button`, errorMessage: `${y4}__error-message`, items: `${y4}__items`, item: `${y4}__item`, itemButton: `${y4}__item-button`, itemMask: `${y4}__item-mask`, itemMaskIcon: `${y4}__item-mask--icon`, itemImage: `${y4}__image`, itemImageResizable: `${y4}__image--resizable`, itemLabel: `${y4}__label`, itemFilename: `${y4}__filename`, itemChevronIcon: `${y4}__item-chevron-icon`, itemLink: `${y4}__item-link`, itemLinkOverlay: `${y4}__item-link-overlay`, itemLinkOverlayIcon: `${y4}__item-link-overlay-icon`, itemEditIcon: `${y4}__item-edit-icon`, itemAddIcon: `${y4}__item-add-icon`, itemAddButton: `${y4}__item-add-button`, formNode: `${y4}__form-node`, fileFieldset: `${y4}__file-fieldset`, fileLabel: `${y4}__file-label`, fileName: `${y4}__file-name`, fileInput: `${y4}__file-input`, metadata: `${y4}__metadata`, metadataFieldset: `${y4}__metadata-fieldset`, progressBar: `${y4}__progress-bar`, esriWidget: "esri-widget", esriButton: w3, buttonDisabled: `${w3}--disabled`, esriButtonSecondary: `${w3}--secondary`, esriButtonTertiary: `${w3}--tertiary`, esriButtonThird: `${w3}--third`, esriButtonSmall: `${w3}--small`, esriButtonHalf: `${w3}--half`, empty: "esri-widget__content--empty", iconExternalLink: "esri-icon-link-external", iconEdit: "esri-icon-edit", iconRight: "esri-icon-right", iconLeft: "esri-icon-left", iconPlus: "esri-icon-plus" };
var k3 = window.CSS;
var F4 = class extends W {
  constructor(e12, t12) {
    super(e12, t12), this.displayType = "auto", this.messages = null, this.messagesUnits = null, this.selectedFile = null, this.submitting = false, this.viewModel = null, this.visibleElements = { ...v5 }, this._supportsImageOrientation = k3 && k3.supports && k3.supports("image-orientation", "from-image"), this._addAttachmentForm = null, this._updateAttachmentForm = null;
  }
  initialize() {
    this.viewModel || (this.viewModel = new y3()), this.addHandles([a2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.attachmentInfos;
    }, "change", () => this.scheduleRender()), a2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.fileInfos;
    }, "change", () => this.scheduleRender()), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.mode;
    }, () => this._modeChanged(), h)]);
  }
  loadDependencies() {
    return n3({ icon: () => import("./calcite-icon-GNDPNTWV.js") });
  }
  get capabilities() {
    return this.viewModel.capabilities;
  }
  set capabilities(e12) {
    this.viewModel.capabilities = e12;
  }
  get effectiveDisplayType() {
    const { displayType: e12 } = this;
    return e12 && "auto" !== e12 ? e12 : this.viewModel.supportsResizeAttachments ? "preview" : "list";
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e12) {
    this.viewModel.graphic = e12;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e12) {
    this._overrideIfSome("label", e12);
  }
  castVisibleElements(e12) {
    return { ...v5, ...e12 };
  }
  addAttachment() {
    const { _addAttachmentForm: e12, viewModel: s12 } = this;
    return this._set("submitting", true), this._set("error", null), s12.addAttachment(e12).then((e13) => (this._set("submitting", false), this._set("error", null), s12.mode = "view", e13)).catch((e13) => {
      throw this._set("submitting", false), this._set("error", new s2("attachments:add-attachment", this.messages.addErrorMessage, e13)), e13;
    });
  }
  deleteAttachment(e12) {
    const { viewModel: s12 } = this;
    return this._set("submitting", true), this._set("error", null), s12.deleteAttachment(e12).then((e13) => (this._set("submitting", false), this._set("error", null), s12.mode = "view", e13)).catch((e13) => {
      throw this._set("submitting", false), this._set("error", new s2("attachments:delete-attachment", this.messages.deleteErrorMessage, e13)), e13;
    });
  }
  updateAttachment() {
    const { viewModel: e12 } = this, { _updateAttachmentForm: s12 } = this;
    return this._set("submitting", true), this._set("error", null), e12.updateAttachment(s12).then((t12) => (this._set("submitting", false), this._set("error", null), e12.mode = "view", t12)).catch((e13) => {
      throw this._set("submitting", false), this._set("error", new s2("attachments:update-attachment", this.messages.updateErrorMessage, e13)), e13;
    });
  }
  addFile() {
    const e12 = this.viewModel.addFile(this.selectedFile, this._addAttachmentForm);
    return this.viewModel.mode = "view", e12;
  }
  updateFile() {
    const { viewModel: e12 } = this, t12 = e12.updateFile(this.selectedFile, this._updateAttachmentForm, e12.activeFileInfo);
    return e12.mode = "view", t12;
  }
  deleteFile(e12) {
    var _a;
    const t12 = this.viewModel.deleteFile(e12 || ((_a = this.viewModel.activeFileInfo) == null ? void 0 : _a.file));
    return this.viewModel.mode = "view", t12;
  }
  render() {
    const { submitting: e12, viewModel: t12 } = this, { state: s12 } = t12;
    return n4("div", { class: this.classes(A2.base, A2.esriWidget) }, e12 ? this.renderProgressBar() : null, "loading" === s12 ? this.renderLoading() : this.renderAttachments(), this.renderErrorMessage());
  }
  renderErrorMessage() {
    const { error: e12, visibleElements: t12 } = this;
    return e12 && t12.errorMessage ? n4("div", { key: "error-message", class: A2.errorMessage }, e12.message) : null;
  }
  renderAttachments() {
    const { activeFileInfo: e12, mode: t12, activeAttachmentInfo: s12 } = this.viewModel;
    return "add" === t12 ? this.renderAddForm() : "edit" === t12 ? this.renderDetailsForm(s12 || e12) : this.renderAttachmentContainer();
  }
  renderLoading() {
    return n4("div", { class: A2.loaderContainer, key: "loader" }, n4("div", { class: A2.loader }));
  }
  renderProgressBar() {
    return this.visibleElements.progressBar ? n4("div", { class: A2.progressBar, key: "progress-bar" }) : null;
  }
  renderAddForm() {
    const { submitting: e12, selectedFile: t12 } = this, s12 = e12 || !t12, i13 = this.visibleElements.cancelAddButton ? n4("button", { type: "button", bind: this, disabled: e12, onclick: this._cancelForm, class: this.classes(A2.esriButton, A2.esriButtonTertiary, A2.esriButtonSmall, A2.esriButtonHalf, e12 && A2.buttonDisabled) }, this.messages.cancel) : null, a14 = this.visibleElements.addSubmitButton ? n4("button", { type: "submit", disabled: s12, class: this.classes(A2.esriButton, A2.esriButtonSecondary, A2.esriButtonSmall, A2.esriButtonHalf, { [A2.buttonDisabled]: s12 }) }, this.messages.add) : null, n14 = t12 ? n4("span", { key: "file-name", class: A2.fileName }, t12.name) : null, r9 = n4("form", { bind: this, afterCreate: L, afterRemoved: w, "data-node-ref": "_addAttachmentForm", onsubmit: this._submitAddAttachment }, n4("fieldset", { class: A2.fileFieldset }, n14, n4("label", { class: this.classes(A2.fileLabel, A2.esriButton, A2.esriButtonSecondary) }, t12 ? this.messages.changeFile : this.messages.selectFile, n4("input", { class: A2.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))), a14, i13);
    return n4("div", { key: "add-form-container", class: A2.formNode }, r9);
  }
  renderDetailsForm(e12) {
    var _a, _b, _c;
    const { visibleElements: t12, viewModel: s12, selectedFile: i13, submitting: a14 } = this, { capabilities: r9 } = s12, l12 = a14 || !i13;
    let o9, d10, c21, m15;
    i13 ? (o9 = i13.type, d10 = i13.name, c21 = i13.size) : e12 && "file" in e12 ? (o9 = e12.file.type, d10 = e12.file.name, c21 = e12.file.size) : e12 && "contentType" in e12 && (o9 = e12.contentType, d10 = e12.name, c21 = e12.size, m15 = e12.url);
    const h13 = r9.editing && ((_a = r9.operations) == null ? void 0 : _a.delete) && t12.deleteButton ? n4("button", { key: "delete-button", type: "button", disabled: a14, bind: this, onclick: (t13) => this._submitDeleteAttachment(t13, e12), class: this.classes(A2.esriButton, A2.esriButtonSmall, A2.esriButtonTertiary, A2.deleteButton, { [A2.buttonDisabled]: a14 }) }, this.messages.delete) : void 0, u9 = r9.editing && ((_b = r9.operations) == null ? void 0 : _b.update) && t12.updateButton ? n4("button", { disabled: l12, key: "update-button", type: "submit", class: this.classes(A2.esriButton, A2.esriButtonSmall, A2.esriButtonThird, { [A2.buttonDisabled]: l12 }) }, this.messages.update) : void 0, b12 = this.visibleElements.cancelUpdateButton ? n4("button", { disabled: a14, key: "cancel-button", type: "button", bind: this, onclick: this._cancelForm, class: this.classes(A2.esriButton, A2.esriButtonSmall, A2.esriButtonTertiary, A2.esriButtonThird, { [A2.buttonDisabled]: a14 }) }, this.messages.cancel) : void 0, f11 = r9.editing && ((_c = r9.operations) == null ? void 0 : _c.update) ? n4("fieldset", { key: "file", class: A2.fileFieldset }, n4("span", { key: "file-name", class: A2.fileName }, d10), n4("label", { class: this.classes(A2.fileLabel, A2.esriButton, A2.esriButtonSecondary) }, this.messages.changeFile, n4("input", { class: A2.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))) : void 0, v8 = n4("fieldset", { key: "size", class: A2.metadataFieldset }, n4("label", null, v3(this.messagesUnits, c21 ?? 0))), y11 = n4("fieldset", { key: "content-type", class: A2.metadataFieldset }, n4("label", null, o9)), w9 = null != m15 ? n4("a", { class: A2.itemLink, href: m15, rel: "noreferrer", target: "_blank" }, this.renderImageMask(e12, 400), n4("div", { class: A2.itemLinkOverlay }, n4("span", { class: A2.itemLinkOverlayIcon }, n4("calcite-icon", { icon: "launch" })))) : this.renderImageMask(e12, 400), k4 = n4("form", { bind: this, afterCreate: L, afterRemoved: w, "data-node-ref": "_updateAttachmentForm", onsubmit: (t13) => this._submitUpdateAttachment(t13, e12) }, n4("div", { class: A2.metadata }, v8, y11), f11, n4("div", { class: A2.actions }, h13, b12, u9));
    return n4("div", { key: "edit-form-container", class: A2.formNode }, w9, k4);
  }
  renderImageMask(e12, t12) {
    return e12 ? "file" in e12 ? this.renderGenericImageMask(e12.file.name, e12.file.type) : this.renderImageMaskForAttachment(e12, t12) : null;
  }
  renderGenericImageMask(e12, t12) {
    const { supportsResizeAttachments: s12 } = this.viewModel, i13 = p4(t12), a14 = { [A2.itemImageResizable]: s12 };
    return n4("div", { key: i13, class: this.classes(A2.itemMaskIcon, A2.itemMask) }, n4("img", { title: e12, alt: e12, src: i13, class: this.classes(a14, A2.itemImage) }));
  }
  renderImageMaskForAttachment(e12, t12) {
    const { supportsResizeAttachments: s12 } = this.viewModel;
    if (!e12)
      return null;
    const { contentType: i13, name: a14, url: n14 } = e12;
    if (!s12 || !e6(i13))
      return this.renderGenericImageMask(a14, i13);
    const r9 = this._getCSSTransform(e12), l12 = r9 ? { transform: r9, "image-orientation": "none" } : {}, o9 = `${n14}${(n14 == null ? void 0 : n14.includes("?")) ? "&" : "?"}w=${t12}`, d10 = { [A2.itemImageResizable]: s12 };
    return n4("div", { key: o9, class: this.classes(A2.itemMask) }, n4("img", { styles: l12, alt: a14, title: a14, src: o9, class: this.classes(d10, A2.itemImage) }));
  }
  renderFile(e12) {
    const { file: t12 } = e12;
    return n4("li", { class: A2.item, key: t12 }, n4("button", { key: "details-button", bind: this, class: A2.itemButton, title: this.messages.attachmentDetails, "aria-label": this.messages.attachmentDetails, onclick: () => this._startEditFile(e12), type: "button" }, this.renderImageMask(e12), n4("label", { class: A2.itemLabel }, n4("span", { class: A2.itemFilename }, t12.name || this.messages.noTitle), n4("span", { "aria-hidden": "true", class: this.classes(A2.itemChevronIcon, h2(this.container) ? A2.iconLeft : A2.iconRight) }))));
  }
  renderAttachmentInfo({ attachmentInfo: e12, displayType: t12 }) {
    const { viewModel: s12, effectiveDisplayType: i13 } = this, { capabilities: a14, supportsResizeAttachments: n14 } = s12, { contentType: r9, name: l12, url: o9 } = e12, d10 = this.renderImageMask(e12, "list" === t12 ? 48 : 400), c21 = a14.editing ? n4("span", { "aria-hidden": "true", class: this.classes(A2.itemChevronIcon, h2(this.container) ? A2.iconLeft : A2.iconRight) }) : null, m15 = [d10, "preview" === i13 && n14 && e6(r9) ? null : n4("label", { class: A2.itemLabel }, n4("span", { class: A2.itemFilename }, l12 || this.messages.noTitle), c21)], u9 = a14.editing ? n4("button", { key: "details-button", bind: this, class: A2.itemButton, title: this.messages.attachmentDetails, "aria-label": this.messages.attachmentDetails, "data-attachment-info-id": e12.id, onclick: () => this._startEditAttachment(e12), type: "button" }, m15) : n4("a", { key: "details-link", class: A2.itemButton, href: o9 ?? void 0, target: "_blank" }, m15);
    return n4("li", { class: A2.item, key: e12 }, u9);
  }
  renderAttachmentContainer() {
    var _a;
    const { effectiveDisplayType: e12, viewModel: t12, visibleElements: s12 } = this, { attachmentInfos: i13, capabilities: a14, fileInfos: n14 } = t12, r9 = !!(i13 == null ? void 0 : i13.length), l12 = !!(n14 == null ? void 0 : n14.length), o9 = { [A2.containerList]: "preview" !== e12, [A2.containerPreview]: "preview" === e12 }, d10 = a14.editing && ((_a = a14.operations) == null ? void 0 : _a.add) && s12.addButton ? n4("button", { bind: this, onclick: () => this._startAddAttachment(), class: this.classes(A2.esriButton, A2.esriButtonTertiary, A2.addAttachmentButton), type: "button" }, n4("span", { "aria-hidden": "true", class: this.classes(A2.itemAddIcon, A2.iconPlus) }), this.messages.add) : void 0, c21 = r9 ? n4("ul", { key: "attachments-list", class: A2.items }, i13.toArray().map((t13) => this.renderAttachmentInfo({ attachmentInfo: t13, displayType: e12 }))) : void 0, m15 = l12 ? n4("ul", { key: "file-list", class: A2.items }, n14.toArray().map((e13) => this.renderFile(e13))) : void 0, h13 = l12 || r9 ? void 0 : n4("div", { class: A2.empty }, this.messages.noAttachments);
    return n4("div", { key: "attachments-container", class: this.classes(A2.container, o9) }, c21, m15, h13, d10);
  }
  _modeChanged() {
    this._set("error", null), this._set("selectedFile", null);
  }
  _handleFileInputChange(e12) {
    const t12 = e12.target, s12 = t12 && t12.files && t12.files.item(0);
    this._set("selectedFile", s12);
  }
  _submitDeleteAttachment(e12, t12) {
    e12.preventDefault(), t12 && ("file" in t12 ? this.deleteFile(t12.file) : t12 && this.deleteAttachment(t12));
  }
  _submitAddAttachment(e12) {
    e12.preventDefault(), this.viewModel.filesEnabled ? this.addFile() : this.addAttachment();
  }
  _submitUpdateAttachment(e12, t12) {
    e12.preventDefault(), t12 && "file" in t12 ? this.updateFile() : this.updateAttachment();
  }
  _startEditAttachment(e12) {
    const { viewModel: t12 } = this;
    t12.activeFileInfo = null, t12.activeAttachmentInfo = e12, t12.mode = "edit";
  }
  _startEditFile(e12) {
    const { viewModel: t12 } = this;
    t12.activeAttachmentInfo = null, t12.activeFileInfo = e12, t12.mode = "edit";
  }
  _startAddAttachment() {
    this.viewModel.mode = "add";
  }
  _cancelForm(e12) {
    e12.preventDefault(), this.viewModel.mode = "view";
  }
  _getCSSTransform(e12) {
    const { orientationInfo: t12 } = e12;
    return !this._supportsImageOrientation && t12 ? [t12.rotation ? `rotate(${t12.rotation}deg)` : "", t12.mirrored ? "scaleX(-1)" : ""].join(" ") : "";
  }
};
e([y2()], F4.prototype, "capabilities", null), e([y2()], F4.prototype, "displayType", void 0), e([y2({ readOnly: true })], F4.prototype, "effectiveDisplayType", null), e([y2()], F4.prototype, "graphic", null), e([y2()], F4.prototype, "label", null), e([y2(), e2("esri/widgets/Attachments/t9n/Attachments")], F4.prototype, "messages", void 0), e([y2(), e2("esri/core/t9n/Units")], F4.prototype, "messagesUnits", void 0), e([y2({ readOnly: true })], F4.prototype, "selectedFile", void 0), e([y2({ readOnly: true })], F4.prototype, "submitting", void 0), e([y2({ readOnly: true })], F4.prototype, "error", void 0), e([y2({ type: y3 })], F4.prototype, "viewModel", void 0), e([y2()], F4.prototype, "visibleElements", void 0), e([s4("visibleElements")], F4.prototype, "castVisibleElements", null), F4 = e([a("esri.widgets.Attachments")], F4);
var B2 = F4;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments/FeatureAttachmentsViewModel.js
var o = class extends y3 {
  constructor(t12) {
    super(t12), this.description = null, this.title = null;
  }
};
e([y2()], o.prototype, "description", void 0), e([y2()], o.prototype, "title", void 0), o = e([a("esri.widgets.Feature.FeatureAttachments.FeatureAttachmentsViewModel")], o);
var c8 = o;

// node_modules/@arcgis/core/widgets/support/Heading.js
var i9 = { heading: "esri-widget__heading" };
function n5({ level: t12, class: n14, ...s12 }, a14) {
  const c21 = o2(t12);
  return n4(`h${c21}`, { ...s12, class: m3(i9.heading, n14), role: "heading", "aria-level": String(c21) }, a14);
}
function o2(r9) {
  return i3(Math.ceil(r9), 1, 6);
}

// node_modules/@arcgis/core/widgets/Feature/support/FeatureElementInfo.js
var p5 = "esri-feature-element-info";
var n6 = { base: p5, title: `${p5}__title`, description: `${p5}__description` };
var c9 = class extends W {
  constructor(e12, t12) {
    super(e12, t12), this.description = null, this.headingLevel = 2, this.title = null;
  }
  render() {
    return n4("div", { class: n6.base }, this.renderTitle(), this.renderDescription());
  }
  renderTitle() {
    const { title: e12 } = this;
    return e12 ? n4(n5, { level: this.headingLevel, class: n6.title }, e12) : null;
  }
  renderDescription() {
    const { description: e12 } = this;
    return e12 ? n4("div", { key: "description", class: n6.description }, e12) : null;
  }
};
e([y2()], c9.prototype, "description", void 0), e([y2()], c9.prototype, "headingLevel", void 0), e([y2()], c9.prototype, "title", void 0), c9 = e([a("esri.widgets.Feature.support.FeatureElementInfo")], c9);
var l4 = c9;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments.js
var d4 = { base: "esri-feature-attachments" };
var c10 = class extends W {
  constructor(e12, t12) {
    super(e12, t12), this._featureElementInfo = null, this.attachmentsWidget = new B2(), this.headingLevel = 2, this.viewModel = new c8();
  }
  initialize() {
    this._featureElementInfo = new l4(), this.addHandles([l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title, this.headingLevel];
    }, () => this._setupFeatureElementInfo(), h), l2(() => this.viewModel, (e12) => this.attachmentsWidget.viewModel = e12, h)]);
  }
  destroy() {
    var _a;
    this.attachmentsWidget.viewModel = null, this.attachmentsWidget.destroy(), (_a = this._featureElementInfo) == null ? void 0 : _a.destroy();
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e12) {
    this.viewModel.description = e12;
  }
  get displayType() {
    return this.attachmentsWidget.displayType;
  }
  set displayType(e12) {
    this.attachmentsWidget.displayType = e12;
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e12) {
    this.viewModel.graphic = e12;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e12) {
    this.viewModel.title = e12;
  }
  render() {
    var _a;
    const { attachmentsWidget: e12 } = this;
    return n4("div", { class: d4.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), e12 == null ? void 0 : e12.render());
  }
  _setupFeatureElementInfo() {
    var _a;
    const { description: e12, title: t12, headingLevel: i13 } = this;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: e12, title: t12, headingLevel: i13 });
  }
};
e([y2({ readOnly: true })], c10.prototype, "attachmentsWidget", void 0), e([y2()], c10.prototype, "description", null), e([y2()], c10.prototype, "displayType", null), e([y2()], c10.prototype, "graphic", null), e([y2()], c10.prototype, "headingLevel", void 0), e([y2()], c10.prototype, "title", null), e([y2({ type: c8 })], c10.prototype, "viewModel", void 0), c10 = e([a("esri.widgets.Feature.FeatureAttachments")], c10);
var h6 = c10;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent/FeatureContentViewModel.js
var p6 = class extends a4(m2) {
  constructor(t12) {
    super(t12), this._loadingPromise = null, this.created = null, this.creator = null, this.destroyer = null, this.graphic = null, this.handles.add(l2(() => this.creator, (t13) => {
      this._destroyContent(), this._createContent(t13);
    }, h));
  }
  destroy() {
    this._destroyContent();
  }
  get state() {
    return this._loadingPromise ? "loading" : "ready";
  }
  _destroyContent() {
    const { created: t12, graphic: r9, destroyer: e12 } = this;
    t12 && r9 && (q2(e12, { graphic: r9 }).catch(() => null), this._set("created", null));
  }
  async _createContent(t12) {
    const r9 = this.graphic;
    if (!r9 || !t12)
      return;
    const e12 = q2(t12, { graphic: r9 }).catch(() => null);
    this._loadingPromise = e12, this.notifyChange("state");
    const o9 = await e12;
    e12 === this._loadingPromise && (this._loadingPromise = null, this.notifyChange("state"), this._set("created", o9));
  }
};
e([y2({ readOnly: true })], p6.prototype, "created", void 0), e([y2()], p6.prototype, "creator", void 0), e([y2()], p6.prototype, "destroyer", void 0), e([y2({ type: h4 })], p6.prototype, "graphic", void 0), e([y2({ readOnly: true })], p6.prototype, "state", null), p6 = e([a("esri.widgets.Feature.FeatureContent.FeatureContentViewModel")], p6);
var l5 = p6;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent.js
var n7 = "esri-feature-content";
var c11 = { base: n7, loaderContainer: `${n7}__loader-container`, loader: `${n7}__loader` };
var l6 = class extends W {
  constructor(e12, r9) {
    super(e12, r9), this.viewModel = null, this._addTargetToAnchors = (e13) => {
      Array.from(e13.querySelectorAll("a")).forEach((e14) => {
        A(e14.href) && !e14.hasAttribute("target") && e14.setAttribute("target", "_blank");
      });
    };
  }
  get creator() {
    var _a;
    return (_a = this.viewModel) == null ? void 0 : _a.creator;
  }
  set creator(e12) {
    this.viewModel && (this.viewModel.creator = e12);
  }
  get graphic() {
    var _a;
    return (_a = this.viewModel) == null ? void 0 : _a.graphic;
  }
  set graphic(e12) {
    this.viewModel && (this.viewModel.graphic = e12);
  }
  renderLoading() {
    return n4("div", { class: c11.loaderContainer, key: "loader" }, n4("div", { class: c11.loader }));
  }
  renderCreated() {
    var _a;
    const e12 = (_a = this.viewModel) == null ? void 0 : _a.created;
    return e12 ? e12 instanceof HTMLElement ? n4("div", { key: e12, bind: e12, afterCreate: this._attachToNode }) : e4(e12) ? n4("div", { key: e12 }, !e12.destroyed && e12.render()) : n4("div", { key: e12, innerHTML: e12, afterCreate: this._addTargetToAnchors }) : null;
  }
  render() {
    var _a;
    const e12 = (_a = this.viewModel) == null ? void 0 : _a.state;
    return n4("div", { class: c11.base }, "loading" === e12 ? this.renderLoading() : this.renderCreated());
  }
  _attachToNode(e12) {
    const r9 = this;
    e12.appendChild(r9);
  }
};
e([y2()], l6.prototype, "creator", null), e([y2()], l6.prototype, "graphic", null), e([y2({ type: l5 })], l6.prototype, "viewModel", void 0), l6 = e([a("esri.widgets.Feature.FeatureContent")], l6);
var p7 = l6;

// node_modules/@arcgis/core/widgets/Feature/FeatureFields/FeatureFieldsViewModel.js
var l7 = class extends m2 {
  constructor(o9) {
    super(o9), this.attributes = null, this.expressionInfos = null, this.description = null, this.fieldInfos = null, this.title = null;
  }
  get formattedFieldInfos() {
    const { expressionInfos: o9, fieldInfos: e12 } = this, s12 = [];
    return e12 == null ? void 0 : e12.forEach((e13) => {
      if (!(!e13.hasOwnProperty("visible") || e13.visible))
        return;
      const t12 = e13.clone();
      t12.label = L2(t12, o9), s12.push(t12);
    }), s12;
  }
};
e([y2()], l7.prototype, "attributes", void 0), e([y2({ type: [i7] })], l7.prototype, "expressionInfos", void 0), e([y2()], l7.prototype, "description", void 0), e([y2({ type: [c3] })], l7.prototype, "fieldInfos", void 0), e([y2({ readOnly: true })], l7.prototype, "formattedFieldInfos", null), e([y2()], l7.prototype, "title", void 0), l7 = e([a("esri.widgets.Feature.FeatureFields.FeatureFieldsViewModel")], l7);
var n8 = l7;

// node_modules/@arcgis/core/widgets/support/uriUtils.js
var s8 = [{ pattern: /^\s*(https?:\/\/([^\s]+))\s*$/i, target: "_blank", label: "{messages.view}" }, { pattern: /^\s*(tel:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(mailto:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(arcgis-appstudio-player:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "App Studio Player" }, { pattern: /^\s*(arcgis-collector:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Collector" }, { pattern: /^\s*(arcgis-explorer:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Explorer" }, { pattern: /^\s*(arcgis-navigator:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Navigator" }, { pattern: /^\s*(arcgis-survey123:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Survey123" }, { pattern: /^\s*(arcgis-trek2there:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Trek2There" }, { pattern: /^\s*(arcgis-workforce:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Workforce" }, { pattern: /^\s*(iform:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "iForm" }, { pattern: /^\s*(flow:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "FlowFinity" }, { pattern: /^\s*(lfmobile:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Laserfische" }, { pattern: /^\s*(mspbi:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Microsoft Power Bi" }];
function a7(e12) {
  let a14 = null;
  return s8.some((s12) => (s12.pattern.test(e12) && (a14 = s12), !!a14)), a14;
}
function p8(s12, p16) {
  if ("string" != typeof p16 || !p16)
    return p16;
  const r9 = a7(p16);
  if (!r9)
    return p16;
  const t12 = p16.match(r9.pattern), n14 = t12 && t12[2], l12 = r(r(r9.label, { messages: s12, hierPart: n14 }), { appName: r9.appName }), i13 = r9.target ? ` target="${r9.target}"` : "", o9 = "_blank" === r9.target ? ' rel="noreferrer"' : "";
  return p16.replace(r9.pattern, `<a${i13} href="$1"${o9}>${l12}</a>`);
}

// node_modules/@arcgis/core/widgets/Feature/FeatureFields.js
var f4 = "esri-feature-fields";
var u3 = { base: f4, fieldHeader: `${f4}__field-header`, fieldData: `${f4}__field-data`, fieldDataDate: `${f4}__field-data--date`, esriTable: "esri-widget__table" };
var m7 = class extends W {
  constructor(e12, t12) {
    super(e12, t12), this._featureElementInfo = null, this.viewModel = new n8(), this.messages = null, this.messagesURIUtils = null;
  }
  initialize() {
    this._featureElementInfo = new l4(), this.addHandles(l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h));
  }
  destroy() {
    var _a;
    (_a = this._featureElementInfo) == null ? void 0 : _a.destroy();
  }
  get attributes() {
    return this.viewModel.attributes;
  }
  set attributes(e12) {
    this.viewModel.attributes = e12;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e12) {
    this.viewModel.description = e12;
  }
  get expressionInfos() {
    return this.viewModel.expressionInfos;
  }
  set expressionInfos(e12) {
    this.viewModel.expressionInfos = e12;
  }
  get fieldInfos() {
    return this.viewModel.fieldInfos;
  }
  set fieldInfos(e12) {
    this.viewModel.fieldInfos = e12;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e12) {
    this.viewModel.title = e12;
  }
  renderFieldInfo(e12, t12) {
    const { attributes: s12 } = this.viewModel, i13 = e12.fieldName, r9 = e12.label || i13, o9 = s12 ? null == s12[i13] ? "" : s12[i13] : "", l12 = !(!e12.format || !e12.format.dateFormat), n14 = "number" == typeof o9 && !l12 ? this._forceLTR(o9) : p8(this.messagesURIUtils, o9), a14 = { [u3.fieldDataDate]: l12 };
    return n4("tr", { key: `fields-element-info-row-${i13}-${t12}` }, n4("th", { key: `fields-element-info-row-header-${i13}-${t12}`, class: u3.fieldHeader, innerHTML: r9 }), n4("td", { key: `fields-element-info-row-data-${i13}-${t12}`, class: this.classes(u3.fieldData, a14), innerHTML: n14 }));
  }
  renderFields() {
    const { formattedFieldInfos: e12 } = this.viewModel;
    return (e12 == null ? void 0 : e12.length) ? n4("table", { class: u3.esriTable, summary: this.messages.fieldsSummary }, n4("tbody", null, e12.map((e13, t12) => this.renderFieldInfo(e13, t12)))) : null;
  }
  render() {
    var _a;
    return n4("div", { class: u3.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderFields());
  }
  _setupFeatureElementInfo() {
    var _a;
    const { description: e12, title: t12 } = this;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: e12, title: t12 });
  }
  _forceLTR(e12) {
    return `&lrm;${e12}`;
  }
};
e([y2()], m7.prototype, "attributes", null), e([y2()], m7.prototype, "description", null), e([y2()], m7.prototype, "expressionInfos", null), e([y2()], m7.prototype, "fieldInfos", null), e([y2()], m7.prototype, "title", null), e([y2({ type: n8, nonNullable: true })], m7.prototype, "viewModel", void 0), e([y2(), e2("esri/widgets/Feature/t9n/Feature")], m7.prototype, "messages", void 0), e([y2(), e2("esri/widgets/support/t9n/uriUtils")], m7.prototype, "messagesURIUtils", void 0), m7 = e([a("esri.widgets.Feature.FeatureFields")], m7);
var c12 = m7;

// node_modules/@arcgis/core/core/a11yUtils.js
var e7 = () => window.matchMedia("(prefers-reduced-motion: reduce)").matches;

// node_modules/@arcgis/core/renderers/support/numberUtils.js
var s9 = { maximumFractionDigits: 20 };
function c13(n14) {
  return c2(n14, s9);
}

// node_modules/@arcgis/core/widgets/Legend/support/utils.js
var a8 = "<";
var o3 = ">";
var r5 = M("short-date");
function n9(l12, i13, n14, s12) {
  let e12 = "";
  0 === i13 ? e12 = `${a8} ` : i13 === n14 && (e12 = `${o3} `);
  let u9 = null;
  return u9 = s12 ? f2(l12, r5) : c13(l12), e12 + u9;
}

// node_modules/@arcgis/core/widgets/Legend/support/colorRampUtils.js
var o4 = new h3([64, 64, 64]);
function n10(l12, o9) {
  const n14 = [], r9 = l12.length - 1;
  return 5 === l12.length ? n14.push(0, 2, 4) : n14.push(0, r9), l12.map((l13, t12) => n14.includes(t12) ? n9(l13, t12, r9, o9) : null);
}
async function r6(l12, e12, o9) {
  let r9 = false, a14 = [], u9 = [];
  if (l12.stops) {
    const e13 = l12.stops;
    a14 = e13.map((l13) => l13.value), r9 = e13.some((l13) => !!l13.label), r9 && (u9 = e13.map((l13) => l13.label));
  }
  const s12 = a14[0], i13 = a14[a14.length - 1];
  if (null == s12 && null == i13)
    return null;
  const c21 = r9 ? null : n10(a14, o9 ?? false);
  return (await Promise.all(a14.map(async (o10, n14) => ({ value: o10, color: "opacity" === l12.type ? await t6(o10, l12, e12) : (await import("./visualVariableUtils-MES5GLX7.js")).getColor(l12, o10), label: r9 ? u9[n14] : (c21 == null ? void 0 : c21[n14]) ?? "" })))).reverse();
}
async function t6(e12, n14, r9) {
  const t12 = new h3(r9 ?? o4), a14 = (await import("./visualVariableUtils-MES5GLX7.js")).getOpacity(n14, e12);
  return null != a14 && (t12.a = a14), t12;
}

// node_modules/@arcgis/core/widgets/Legend/support/heatmapRampUtils.js
function r7(r9) {
  if (!r9.colorStops)
    return [];
  const e12 = [...r9.colorStops].filter((o9) => {
    var _a;
    return ((_a = o9.color) == null ? void 0 : _a.a) > 0;
  });
  let t12 = e12.length - 1;
  if (e12 && e12[0]) {
    const r10 = e12[t12];
    r10 && 1 !== r10.ratio && (e12.push(new a6({ ratio: 1, color: r10.color })), t12++);
  }
  return e12.map((o9, e13) => {
    var _a, _b;
    let l12 = "";
    return 0 === e13 ? l12 = ((_a = r9.legendOptions) == null ? void 0 : _a.minLabel) || "low" : e13 === t12 && (l12 = ((_b = r9.legendOptions) == null ? void 0 : _b.maxLabel) || "high"), { color: o9.color, label: l12, ratio: o9.ratio };
  }).reverse();
}

// node_modules/@arcgis/core/renderers/support/utils.js
var p9 = s.getLogger("esri.renderers.support.utils");
var g4 = M("short-date");
async function h7(e12, l12, t12) {
  r2(e12, l12, () => []).push(...t12);
}
async function b6(l12) {
  var _a, _b;
  const t12 = /* @__PURE__ */ new Map();
  if (!l12)
    return t12;
  if ("visualVariables" in l12 && l12.visualVariables) {
    const e12 = l12.visualVariables.filter((e13) => "color" === e13.type);
    for (const l13 of e12) {
      const e13 = (await r6(l13) ?? []).map((e14) => e14.color);
      await h7(t12, l13.field || l13.valueExpression, e13);
    }
  }
  if ("heatmap" === l12.type) {
    const e12 = r7(l12).map((e13) => e13.color);
    await h7(t12, l12.field || l12.valueExpression, e12);
  } else if ("pie-chart" === l12.type) {
    for (const e12 of l12.attributes)
      await h7(t12, e12.field || e12.valueExpression, [e12.color]);
    await h7(t12, "default", [(_a = l12 == null ? void 0 : l12.othersCategory) == null ? void 0 : _a.color, b3(l12.backgroundFillSymbol, null)]);
  } else if ("dot-density" === l12.type) {
    for (const e12 of l12.attributes)
      await h7(t12, e12.field || e12.valueExpression, [e12.color]);
    await h7(t12, "default", [l12.backgroundColor]);
  } else if ("unique-value" === l12.type)
    if ("predominance" === ((_b = l12.authoringInfo) == null ? void 0 : _b.type))
      for (const e12 of l12.uniqueValueInfos ?? [])
        await h7(t12, e12.value.toString(), [b3(e12.symbol, null)]);
    else {
      const e12 = (l12.uniqueValueInfos ?? []).map((e13) => b3(e13.symbol, null)), { field: i13, field2: o9, field3: a14, valueExpression: n14 } = l12;
      (i13 || n14) && await h7(t12, i13 || n14, e12), o9 && await h7(t12, o9, e12), a14 && await h7(t12, a14, e12);
    }
  else if ("class-breaks" === l12.type) {
    const e12 = l12.classBreakInfos.map((e13) => b3(e13.symbol, null)), { field: i13, valueExpression: o9 } = l12;
    await h7(t12, i13 ?? o9, e12);
  } else
    "simple" === l12.type && await h7(t12, "default", [b3(l12.symbol, null)]);
  return "defaultSymbol" in l12 && l12.defaultSymbol && await h7(t12, "default", [b3(l12.defaultSymbol, null)]), t12.forEach((l13, i13) => {
    const o9 = c(l13.filter(Boolean), (e12, l14) => JSON.stringify(e12) === JSON.stringify(l14));
    t12.set(i13, o9);
  }), t12;
}

// node_modules/@arcgis/core/widgets/Feature/support/relatedFeatureUtils.js
var c14 = "esri.widgets.Feature.support.relatedFeatureUtils";
var f5 = s.getLogger(c14);
var d5 = /* @__PURE__ */ new Map();
function m9(e12) {
  if (!pe(e12))
    return null;
  const [t12, r9] = e12.split("/").slice(1);
  return { layerId: t12, fieldName: r9 };
}
function y5(e12, t12) {
  if (!t12.relationships)
    return null;
  let r9 = null;
  const { relationships: s12 } = t12;
  return s12.some((t13) => t13.id === parseInt(e12, 10) && (r9 = t13, true)), r9;
}
function j6({ originRelationship: e12, relationships: t12, layerId: r9 }) {
  let s12 = null;
  return t12 && t12.some((t13) => (`${t13.relatedTableId}` === r9 && t13.id === (e12 == null ? void 0 : e12.id) && (s12 = t13), !!s12)), s12;
}
function h8(e12, t12) {
  const r9 = t12.toLowerCase();
  for (const s12 in e12)
    if (s12.toLowerCase() === r9)
      return e12[s12];
  return null;
}
function g5(e12, t12) {
  const r9 = y5(e12, t12);
  if (!r9)
    return;
  return { url: `${t12.url}/${r9.relatedTableId}`, sourceSpatialReference: t12.spatialReference, relation: r9, relatedFields: [], outStatistics: [] };
}
function F5(e12, t12) {
  if (!t12)
    return;
  if (!e12)
    return;
  const { features: r9, statsFeatures: s12 } = e12, o9 = r9 && r9.value;
  t12.relatedFeatures = o9 ? o9.features : [];
  const i13 = s12 && s12.value;
  t12.relatedStatsFeatures = i13 ? i13.features : [];
}
function I4(e12, t12, r9, s12) {
  var _a;
  const o9 = new d3();
  return o9.outFields = ["*"], o9.relationshipId = "number" == typeof t12.id ? t12.id : parseInt(t12.id, 10), o9.objectIds = [e12.attributes[r9.objectIdField]], ((_a = r9.queryRelatedFeatures) == null ? void 0 : _a.call(r9, o9, s12)) ?? Promise.resolve({});
}
function S3(e12, t12, r9) {
  let s12 = 0;
  const o9 = [];
  for (; s12 < t12.length; )
    o9.push(`${e12} IN (${t12.slice(s12, r9 + s12)})`), s12 += r9;
  return o9.join(" OR ");
}
async function w4(e12, t12, r9, s12) {
  const l12 = r9.layerId.toString(), { layerInfo: u9, relation: p16, relatedFields: c21, outStatistics: f11, url: d10, sourceSpatialReference: m15 } = t12;
  if (!u9 || !p16)
    return null;
  const y11 = j6({ originRelationship: p16, relationships: u9.relationships, layerId: l12 });
  if ((y11 == null ? void 0 : y11.relationshipTableId) && y11.keyFieldInRelationshipTable) {
    const t13 = (await I4(e12, y11, r9, s12))[e12.attributes[r9.objectIdField]];
    if (!t13)
      return null;
    const i13 = t13.features.map((e13) => e13.attributes[u9.objectIdField]);
    if ((f11 == null ? void 0 : f11.length) && u9.supportsStatistics) {
      const e13 = new b2();
      e13.where = S3(u9.objectIdField, i13, 1e3), e13.outFields = c21, e13.outStatistics = f11, e13.sourceSpatialReference = m15;
      const r10 = { features: Promise.resolve(t13), statsFeatures: s6(d10, e13) };
      return j(r10);
    }
  }
  const g9 = y11 == null ? void 0 : y11.keyField;
  if (g9) {
    const r10 = se(T3(u9.fields, g9)), l13 = h8(e12.attributes, p16.keyField), c22 = r10 ? `${g9}=${l13}` : `${g9}='${l13}'`, f12 = s6(d10, new b2({ where: c22, outFields: t12.relatedFields, sourceSpatialReference: m15 }), s12), y12 = t12.outStatistics && t12.outStatistics.length > 0 && u9.supportsStatistics ? s6(d10, new b2({ where: c22, outFields: t12.relatedFields, outStatistics: t12.outStatistics, sourceSpatialReference: m15 }), s12) : null, j11 = { features: f12 };
    return y12 && (j11.statsFeatures = y12), j(j11);
  }
  return null;
}
function b7(t12, r9) {
  return j3(t12, { query: { f: "json" }, signal: r9 && r9.signal });
}
function R3({ relatedInfos: e12, layer: r9 }, i13) {
  const n14 = {};
  return e12.forEach((e13, s12) => {
    const { relation: o9 } = e13;
    if (!o9) {
      const e14 = new s2("relation-required", "A relation is required on a layer to retrieve related records.");
      throw f5.error(e14), e14;
    }
    const { relatedTableId: i14 } = o9;
    if ("number" != typeof i14) {
      const e14 = new s2("A related table ID is required on a layer to retrieve related records.");
      throw f5.error(e14), e14;
    }
    const a14 = `${r9.url}/${i14}`, l12 = d5.get(a14), u9 = l12 ?? b7(a14);
    l12 || d5.set(a14, u9), n14[s12] = u9;
  }), p(j(n14), i13);
}
function $2({ graphic: e12, relatedInfos: t12, layer: r9 }, s12) {
  const i13 = {};
  return t12.forEach((t13, o9) => {
    t13.layerInfo && (i13[o9] = w4(e12, t13, r9, s12));
  }), j(i13);
}
function U3({ relatedInfo: e12, fieldName: t12, fieldInfo: r9 }) {
  var _a, _b;
  if ((_a = e12.relatedFields) == null ? void 0 : _a.push(t12), r9.statisticType) {
    const s12 = new m4({ statisticType: r9.statisticType, onStatisticField: t12, outStatisticFieldName: t12 });
    (_b = e12.outStatistics) == null ? void 0 : _b.push(s12);
  }
}
function T3(e12, t12) {
  if (null != e12) {
    t12 = t12.toLowerCase();
    for (const r9 of e12)
      if (r9 && r9.name.toLowerCase() === t12)
        return r9;
  }
  return null;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia/FeatureMediaViewModel.js
var I5 = { chartAnimation: true };
var v6 = class extends m2 {
  constructor(t12) {
    super(t12), this.abilities = { ...I5 }, this.activeMediaInfoIndex = 0, this.attributes = null, this.description = null, this.fieldInfoMap = null, this.formattedAttributes = null, this.expressionAttributes = null, this.isAggregate = false, this.layer = null, this.mediaInfos = null, this.popupTemplate = null, this.relatedInfos = null, this.title = null;
  }
  castAbilities(t12) {
    return { ...I5, ...t12 };
  }
  get activeMediaInfo() {
    return this.formattedMediaInfos[this.activeMediaInfoIndex] || null;
  }
  get formattedMediaInfos() {
    return this._formatMediaInfos() || [];
  }
  get formattedMediaInfoCount() {
    return this.formattedMediaInfos.length;
  }
  setActiveMedia(t12) {
    this._setContentElementMedia(t12);
  }
  next() {
    this._pageContentElementMedia(1);
  }
  previous() {
    this._pageContentElementMedia(-1);
  }
  _setContentElementMedia(t12) {
    const { formattedMediaInfoCount: e12 } = this, i13 = (t12 + e12) % e12;
    this.activeMediaInfoIndex = i13;
  }
  _pageContentElementMedia(t12) {
    const { activeMediaInfoIndex: e12 } = this, i13 = e12 + t12;
    this._setContentElementMedia(i13);
  }
  _formatMediaInfos() {
    const { mediaInfos: t12, layer: e12 } = this, o9 = this.attributes ?? {}, r9 = this.formattedAttributes ?? {}, a14 = this.expressionAttributes ?? {}, s12 = this.fieldInfoMap ?? /* @__PURE__ */ new Map();
    return (t12 == null ? void 0 : t12.map((t13) => {
      const i13 = t13 == null ? void 0 : t13.clone();
      if (!i13)
        return null;
      if (i13.title = G({ attributes: o9, fieldInfoMap: s12, globalAttributes: r9, expressionAttributes: a14, layer: e12, text: i13.title }), i13.caption = G({ attributes: o9, fieldInfoMap: s12, globalAttributes: r9, expressionAttributes: a14, layer: e12, text: i13.caption }), i13.altText = G({ attributes: o9, fieldInfoMap: s12, globalAttributes: r9, expressionAttributes: a14, layer: e12, text: i13.altText }), "image" === i13.type) {
        const { value: t14 } = i13;
        return this._setImageValue({ value: t14, formattedAttributes: r9, layer: e12 }), i13.value.sourceURL ? i13 : void 0;
      }
      if ("pie-chart" === i13.type || "line-chart" === i13.type || "column-chart" === i13.type || "bar-chart" === i13.type) {
        const { value: t14 } = i13;
        return this._setChartValue({ value: t14, chartType: i13.type, attributes: o9, formattedAttributes: r9, layer: e12, expressionAttributes: a14 }), i13;
      }
      return null;
    }).filter(R)) ?? [];
  }
  _setImageValue(t12) {
    const e12 = this.fieldInfoMap ?? /* @__PURE__ */ new Map(), { value: i13, formattedAttributes: o9, layer: r9 } = t12, { linkURL: a14, sourceURL: s12 } = i13;
    if (s12) {
      const t13 = z(s12, r9);
      i13.sourceURL = k2({ formattedAttributes: o9, template: t13, fieldInfoMap: e12 });
    }
    if (a14) {
      const t13 = z(a14, r9);
      i13.linkURL = k2({ formattedAttributes: o9, template: t13, fieldInfoMap: e12 });
    }
  }
  _setChartValue(t12) {
    const { value: e12, attributes: i13, formattedAttributes: o9, chartType: r9, layer: a14, expressionAttributes: s12 } = t12, { popupTemplate: l12, relatedInfos: n14 } = this, { fields: p16, normalizeField: d10 } = e12, c21 = a14;
    e12.fields = $(p16, c21), d10 && (e12.normalizeField = U2(d10, c21));
    if (!p16.some((t13) => !!(null != o9[t13] || pe(t13) && (n14 == null ? void 0 : n14.size))))
      return;
    const h13 = (l12 == null ? void 0 : l12.fieldInfos) ?? [];
    p16.forEach((t13) => {
      if (pe(t13))
        return void (e12.series = [...e12.series, ...this._getRelatedChartInfos({ fieldInfos: h13, fieldName: t13, formattedAttributes: o9, chartType: r9, value: e12 })]);
      const a15 = this._getChartOption({ value: e12, attributes: i13, chartType: r9, formattedAttributes: o9, expressionAttributes: s12, fieldName: t13, fieldInfos: h13 });
      e12.series.push(a15);
    });
  }
  _getRelatedChartInfos(t12) {
    var _a;
    const { fieldInfos: e12, fieldName: i13, formattedAttributes: o9, chartType: r9, value: a14 } = t12, s12 = [], l12 = m9(i13), n14 = l12 && ((_a = this.relatedInfos) == null ? void 0 : _a.get(l12.layerId.toString()));
    if (!n14)
      return s12;
    const { relatedFeatures: p16, relation: d10 } = n14;
    if (!d10 || !p16)
      return s12;
    const { cardinality: u9 } = d10;
    p16.forEach((t13) => {
      const { attributes: n15 } = t13;
      n15 && Object.keys(n15).forEach((t14) => {
        t14 === l12.fieldName && s12.push(this._getChartOption({ value: a14, attributes: n15, formattedAttributes: o9, fieldName: i13, chartType: r9, relatedFieldName: t14, hasMultipleRelatedFeatures: (p16 == null ? void 0 : p16.length) > 1, fieldInfos: e12 }));
      });
    });
    return "one-to-many" === u9 || "many-to-many" === u9 ? s12 : [s12[0]];
  }
  _getTooltip({ label: t12, value: e12, chartType: i13 }) {
    return "pie-chart" === i13 ? `${t12}` : `${t12}: ${e12}`;
  }
  _getChartOption(t12) {
    var _a;
    const { value: e12, attributes: i13, formattedAttributes: o9, expressionAttributes: r9, fieldName: a14, relatedFieldName: n14, fieldInfos: p16, chartType: d10, hasMultipleRelatedFeatures: u9 } = t12, I9 = this.layer, v8 = this.fieldInfoMap ?? /* @__PURE__ */ new Map(), { normalizeField: M5, tooltipField: A5 } = e12, g9 = M5 ? pe(M5) ? i13[m9(M5).fieldName] : i13[M5] : null, x5 = M2(a14) && r9 && void 0 !== r9[a14] ? r9[a14] : n14 && void 0 !== i13[n14] ? i13[n14] : void 0 !== i13[a14] ? i13[a14] : o9[a14], _4 = new i6({ fieldName: a14, value: void 0 === x5 ? null : x5 && g9 ? x5 / g9 : x5 });
    if (pe(a14)) {
      const t13 = v8.get(a14.toLowerCase()), e13 = A5 && v8.get(A5.toLowerCase()), r10 = (t13 == null ? void 0 : t13.fieldName) ?? a14, s12 = u9 && A5 ? m9(A5).fieldName : (e13 == null ? void 0 : e13.fieldName) ?? A5, l12 = u9 && s12 ? i13[s12] : o9[s12] ?? (t13 == null ? void 0 : t13.label) ?? (t13 == null ? void 0 : t13.fieldName) ?? n14, p17 = u9 && n14 ? i13[n14] : o9[r10];
      return _4.tooltip = this._getTooltip({ label: l12, value: p17, chartType: d10 }), _4;
    }
    const C6 = ee(p16, a14), T6 = U2(a14, I9), N4 = A5 && void 0 !== o9[A5] ? o9[A5] : L2(C6 || new c3({ fieldName: T6 }), (_a = this.popupTemplate) == null ? void 0 : _a.expressionInfos), F8 = o9[T6];
    return _4.tooltip = this._getTooltip({ label: N4, value: F8, chartType: d10 }), _4;
  }
};
e([y2()], v6.prototype, "abilities", void 0), e([s4("abilities")], v6.prototype, "castAbilities", null), e([y2()], v6.prototype, "activeMediaInfoIndex", void 0), e([y2({ readOnly: true })], v6.prototype, "activeMediaInfo", null), e([y2()], v6.prototype, "attributes", void 0), e([y2()], v6.prototype, "description", void 0), e([y2()], v6.prototype, "fieldInfoMap", void 0), e([y2()], v6.prototype, "formattedAttributes", void 0), e([y2()], v6.prototype, "expressionAttributes", void 0), e([y2({ readOnly: true })], v6.prototype, "formattedMediaInfos", null), e([y2()], v6.prototype, "isAggregate", void 0), e([y2()], v6.prototype, "layer", void 0), e([y2({ readOnly: true })], v6.prototype, "formattedMediaInfoCount", null), e([y2()], v6.prototype, "mediaInfos", void 0), e([y2()], v6.prototype, "popupTemplate", void 0), e([y2()], v6.prototype, "relatedInfos", void 0), e([y2()], v6.prototype, "title", void 0), v6 = e([a("esri.widgets.Feature.FeatureMedia.FeatureMediaViewModel")], v6);
var M3 = v6;

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia.js
var g6 = "esri-feature-media";
var w5 = { base: g6, mediaContainer: `${g6}__container`, mediaItemContainer: `${g6}__item-container`, mediaItem: `${g6}__item`, mediaItemText: `${g6}__item-text`, mediaItemTitle: `${g6}__item-title`, mediaItemCaption: `${g6}__item-caption`, mediaNavigation: `${g6}__item-navigation`, mediaPagination: `${g6}__pagination`, mediaPaginationText: `${g6}__pagination-text`, mediaPrevious: `${g6}__previous`, mediaPreviousIconLTR: `${g6}__previous-icon`, mediaPreviousIconRTL: `${g6}__previous-icon--rtl`, mediaNext: `${g6}__next`, mediaNextIconLTR: `${g6}__next-icon`, mediaNextIconRTL: `${g6}__next-icon--rtl`, mediaChart: `${g6}__chart`, mediaPaginationButton: `${g6}__pagination-button`, mediaPaginationIcon: `${g6}__pagination-icon`, mediaChartRendered: `${g6}__chart--rendered` };
var I6 = 15;
var A3 = "category";
var y6 = "value";
var x3 = "rgba(50, 50, 50, 1)";
var C2 = 250;
var T4 = 500;
var b8 = 200;
var R4 = class extends W {
  constructor(e12, t12) {
    super(e12, t12), this._refreshTimer = null, this._refreshIntervalInfo = null, this._featureElementInfo = null, this._chartRootMap = /* @__PURE__ */ new WeakMap(), this.viewModel = new M3(), this.messages = null, this._disposeChart = (e13) => {
      var _a;
      (_a = this._chartRootMap.get(e13)) == null ? void 0 : _a.dispose(), this._chartRootMap.delete(e13);
    }, this._createChart = async (e13) => {
      const { destroyed: t13, viewModel: i13 } = this;
      if (t13 || !i13 || !e13)
        return;
      const { createRoot: r9 } = await import("./chartUtilsAm5-L4RNFVUM.js"), a14 = await r9(e13);
      this._chartRootMap.set(e13, a14), this._renderChart({ mediaInfo: i13.activeMediaInfo, root: a14 });
    };
  }
  initialize() {
    this._featureElementInfo = new l4(), this.addHandles([l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.activeMediaInfo, (_b = this.viewModel) == null ? void 0 : _b.activeMediaInfoIndex];
    }, () => this._setupMediaRefreshTimer(), h), l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h)]);
  }
  loadDependencies() {
    return n3({ icon: () => import("./calcite-icon-GNDPNTWV.js") });
  }
  destroy() {
    var _a;
    this._clearMediaRefreshTimer(), (_a = this._featureElementInfo) == null ? void 0 : _a.destroy();
  }
  get attributes() {
    return this.viewModel.attributes;
  }
  set attributes(e12) {
    this.viewModel.attributes = e12;
  }
  get activeMediaInfoIndex() {
    return this.viewModel.activeMediaInfoIndex;
  }
  set activeMediaInfoIndex(e12) {
    this.viewModel.activeMediaInfoIndex = e12;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e12) {
    this.viewModel.description = e12;
  }
  get fieldInfoMap() {
    return this.viewModel.fieldInfoMap;
  }
  set fieldInfoMap(e12) {
    this.viewModel.fieldInfoMap = e12;
  }
  get layer() {
    return this.viewModel.layer;
  }
  set layer(e12) {
    this.viewModel.layer = e12;
  }
  get mediaInfos() {
    return this.viewModel.mediaInfos;
  }
  set mediaInfos(e12) {
    this.viewModel.mediaInfos = e12;
  }
  get popupTemplate() {
    return this.viewModel.popupTemplate;
  }
  set popupTemplate(e12) {
    this.viewModel.popupTemplate = e12;
  }
  get relatedInfos() {
    return this.viewModel.relatedInfos;
  }
  set relatedInfos(e12) {
    this.viewModel.relatedInfos = e12;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e12) {
    this.viewModel.title = e12;
  }
  render() {
    var _a;
    return n4("div", { bind: this, class: w5.base, onkeyup: this._handleMediaKeyup }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderMedia());
  }
  renderMedia() {
    const { formattedMediaInfoCount: e12, activeMediaInfoIndex: t12 } = this.viewModel, i13 = this.renderMediaText();
    return e12 ? n4("div", { key: "media-element-container", class: w5.mediaContainer }, this.renderMediaInfo(), n4("div", { class: w5.mediaNavigation }, i13, n4("div", { class: w5.mediaPagination }, this.renderMediaPageButton("previous"), n4("span", { class: w5.mediaPaginationText }, s3(this.messages.pageText, { index: t12 + 1, total: e12 })), this.renderMediaPageButton("next")))) : null;
  }
  renderMediaText() {
    const { activeMediaInfo: e12 } = this.viewModel;
    if (!e12)
      return null;
    const t12 = e12 && e12.title ? n4("div", { key: "media-title", class: w5.mediaItemTitle, innerHTML: e12.title }) : null, i13 = e12 && e12.caption ? n4("div", { key: "media-caption", class: w5.mediaItemCaption, innerHTML: e12.caption }) : null;
    return t12 || i13 ? n4("div", { key: "media-text", class: w5.mediaItemText }, t12, i13) : null;
  }
  renderImageMediaInfo(e12) {
    const { _refreshIntervalInfo: t12 } = this, { activeMediaInfoIndex: i13, formattedMediaInfoCount: r9 } = this.viewModel, { value: a14, refreshInterval: s12, altText: o9, title: n14, type: l12 } = e12, { sourceURL: d10, linkURL: m15 } = a14, p16 = A(m15 ?? void 0) ? "_blank" : "_self", h13 = "_blank" === p16 ? "noreferrer" : "", u9 = s12 ? t12 : null, f11 = u9 ? u9.timestamp : 0, _4 = u9 ? u9.sourceURL : d10, M5 = n4("img", { alt: o9 || n14, key: `media-${l12}-${i13}-${r9}-${f11}`, src: _4 ?? void 0 });
    return (m15 ? n4("a", { title: n14, href: m15, rel: h13, target: p16 }, M5) : null) ?? M5;
  }
  renderChartMediaInfo(e12) {
    const { activeMediaInfoIndex: t12, formattedMediaInfoCount: i13 } = this.viewModel;
    return n4("div", { key: `media-${e12.type}-${t12}-${i13}`, bind: this, class: w5.mediaChart, afterCreate: this._createChart, afterRemoved: this._disposeChart });
  }
  renderMediaInfoType() {
    const { activeMediaInfo: e12 } = this.viewModel;
    return e12 ? "image" === e12.type ? this.renderImageMediaInfo(e12) : e12.type.includes("chart") ? this.renderChartMediaInfo(e12) : null : null;
  }
  renderMediaInfo() {
    const { activeMediaInfo: e12 } = this.viewModel;
    return e12 ? n4("div", { key: "media-container", class: w5.mediaItemContainer }, n4("div", { key: "media-item-container", class: w5.mediaItem }, this.renderMediaInfoType())) : null;
  }
  renderMediaPageButton(e12) {
    if (this.viewModel.formattedMediaInfoCount < 2)
      return null;
    const t12 = "previous" === e12, i13 = t12 ? this.messages.previous : this.messages.next, r9 = t12 ? "chevron-left" : "chevron-right", a14 = t12 ? "media-previous" : "media-next", s12 = t12 ? this._previous : this._next;
    return n4("button", { type: "button", key: a14, title: i13, "aria-label": i13, tabIndex: 0, class: w5.mediaPaginationButton, bind: this, onclick: s12 }, n4("calcite-icon", { class: w5.mediaPaginationIcon, scale: "s", icon: r9 }));
  }
  _setupFeatureElementInfo() {
    var _a;
    const { description: e12, title: t12 } = this;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: e12, title: t12 });
  }
  _next() {
    this.viewModel.next();
  }
  _previous() {
    this.viewModel.previous();
  }
  _getRenderer() {
    if (!this.viewModel)
      return;
    const { isAggregate: e12, layer: t12 } = this.viewModel;
    return e12 && (t12 == null ? void 0 : t12.featureReduction) && "renderer" in t12.featureReduction ? t12.featureReduction.renderer : t12 == null ? void 0 : t12.renderer;
  }
  async _getRendererColors() {
    const { colorAm5: e12 } = await import("./chartCommon-O7M2FSZM.js"), t12 = /* @__PURE__ */ new Map(), i13 = this._getRenderer(), r9 = "default";
    if (!i13)
      return t12;
    const a14 = await b6(i13);
    a14.delete(r9);
    return Array.from(a14.values()).every((e13) => 1 === (e13 == null ? void 0 : e13.length)) ? (Array.from(a14.keys()).forEach((i14) => {
      var _a, _b;
      const r10 = (_b = (_a = a14.get(i14)) == null ? void 0 : _a[0]) == null ? void 0 : _b.toCss(true);
      r10 && t12.set(i14, e12(r10));
    }), t12) : t12;
  }
  _handleMediaKeyup(e12) {
    const t12 = i2(e12);
    "ArrowLeft" === t12 && (e12.stopPropagation(), this.viewModel.previous()), "ArrowRight" === t12 && (e12.stopPropagation(), this.viewModel.next());
  }
  _canAnimateChart() {
    return !!this.viewModel && (!!this.viewModel.abilities.chartAnimation && !e7());
  }
  _getChartAnimationMS() {
    return this._canAnimateChart() ? C2 : 0;
  }
  _getChartSeriesAnimationMS() {
    return this._canAnimateChart() ? T4 : 0;
  }
  async _renderChart(e12) {
    const { root: t12, mediaInfo: i13 } = e12, { value: r9, type: a14 } = i13, { ResponsiveThemeAm5: s12, DarkThemeAm5: o9, AnimatedThemeAm5: n14, ColorSetAm5: l12, ThemeAm5: d10 } = await import("./chartCommon-O7M2FSZM.js"), m15 = d10.new(t12);
    m15.rule("ColorSet").set("colors", It);
    const c21 = [s12.new(t12), m15];
    r3() && c21.push(o9.new(t12)), this._canAnimateChart() && c21.push(n14.new(t12)), t12.setThemes(c21);
    const h13 = await this._getRendererColors(), u9 = l12.new(t12, {}), f11 = r9.series.map((e13, t13) => {
      const i14 = h13.get(e13.fieldName) || u9.getIndex(t13);
      return { [A3]: e13.tooltip, [y6]: e13.value, columnSettings: { fill: i14, stroke: i14 } };
    }).filter((e13) => "pie-chart" !== a14 || null != e13.value && e13.value > 0);
    "pie-chart" === a14 ? this._createPieChart(e12, f11) : this._createXYChart(e12, f11);
  }
  _getDirection() {
    return h2(this.container) ? "rtl" : "ltr";
  }
  _isInversed() {
    return !!h2(this.container);
  }
  async _customizeChartTooltip(e12, t12 = "horizontal") {
    var _a;
    const { colorAm5: i13 } = await import("./chartCommon-O7M2FSZM.js");
    e12.setAll({ pointerOrientation: t12 }), (_a = e12.get("background")) == null ? void 0 : _a.setAll({ stroke: i13(x3) }), e12.label.setAll({ direction: this._getDirection(), oversizedBehavior: "wrap", maxWidth: b8 });
  }
  async _createPieChart(e12, t12) {
    const { TooltipAm5: i13 } = await import("./chartCommon-O7M2FSZM.js"), { PieChartAm5: r9, PieSeriesAm5: a14 } = await import("./pieChart-2X63ACZ5.js"), { mediaInfo: s12, root: o9 } = e12, { title: n14 } = s12, l12 = 5, d10 = (s12 == null ? void 0 : s12.altText) || (s12 == null ? void 0 : s12.title) || "", m15 = o9.container.children.push(r9.new(o9, { ariaLabel: d10, focusable: true, paddingBottom: l12, paddingTop: l12, paddingLeft: l12, paddingRight: l12 })), c21 = "{category}: {valuePercentTotal.formatNumber('0.00')}%\n ({value})", p16 = i13.new(o9, { labelText: c21 }), h13 = m15.series.push(a14.new(o9, { name: n14, valueField: y6, categoryField: A3, tooltip: p16 }));
    h13.ticks.template.set("forceHidden", true), h13.labels.template.set("forceHidden", true), h13.slices.template.states.create("active", { shiftRadius: l12 }), this._customizeChartTooltip(p16), h13.slices.template.setAll({ ariaLabel: c21, focusable: true, templateField: "columnSettings" }), h13.data.setAll(t12), h13.appear(this._getChartSeriesAnimationMS()), m15.appear(this._getChartAnimationMS()), m15.root.dom.classList.toggle(w5.mediaChartRendered, true);
  }
  _getMinSeriesValue(e12) {
    let t12 = 0;
    return e12.forEach((e13) => t12 = Math.min(e13.value, t12)), t12;
  }
  async _createColumnChart(e12, t12, i13) {
    const { TooltipAm5: r9, ScrollbarAm5: a14 } = await import("./chartCommon-O7M2FSZM.js"), { CategoryAxisAm5: s12, AxisRendererXAm5: o9, ValueAxisAm5: n14, AxisRendererYAm5: l12, ColumnSeriesAm5: d10 } = await import("./xyChart-CA6MDUB5.js"), { mediaInfo: m15, root: c21 } = t12, { value: p16, title: h13 } = m15;
    e12.setAll({ wheelX: "panX", wheelY: "zoomX" });
    const u9 = e12.xAxes.push(s12.new(c21, { renderer: o9.new(c21, { inversed: this._isInversed() }), categoryField: A3 }));
    u9.get("renderer").labels.template.setAll({ forceHidden: true });
    const f11 = e12.yAxes.push(n14.new(c21, { renderer: l12.new(c21, { inside: false }), min: this._getMinSeriesValue(p16.series) }));
    f11.get("renderer").labels.template.setAll({ direction: this._getDirection() });
    const v8 = "{categoryX}", _4 = r9.new(c21, { labelText: v8 }), M5 = e12.series.push(d10.new(c21, { name: h13, xAxis: u9, yAxis: f11, valueYField: y6, categoryXField: A3, tooltip: _4 }));
    this._customizeChartTooltip(_4), M5.columns.template.setAll({ ariaLabel: v8, focusable: true, templateField: "columnSettings" }), p16.series.length > I6 && e12.set("scrollbarX", a14.new(c21, { orientation: "horizontal" })), u9.data.setAll(i13), M5.data.setAll(i13), M5.appear(this._getChartSeriesAnimationMS()), e12.appear(this._getChartAnimationMS());
  }
  async _createBarChart(e12, t12, i13) {
    const { TooltipAm5: r9, ScrollbarAm5: a14 } = await import("./chartCommon-O7M2FSZM.js"), { CategoryAxisAm5: s12, AxisRendererXAm5: o9, ValueAxisAm5: n14, AxisRendererYAm5: l12, ColumnSeriesAm5: d10 } = await import("./xyChart-CA6MDUB5.js"), { mediaInfo: m15, root: c21 } = t12, { value: p16, title: h13 } = m15;
    e12.setAll({ wheelX: "panY", wheelY: "zoomY" });
    const u9 = e12.yAxes.push(s12.new(c21, { renderer: l12.new(c21, { inversed: true }), categoryField: A3 }));
    u9.get("renderer").labels.template.setAll({ forceHidden: true });
    const f11 = e12.xAxes.push(n14.new(c21, { renderer: o9.new(c21, { inside: false, inversed: this._isInversed() }), min: this._getMinSeriesValue(p16.series) }));
    f11.get("renderer").labels.template.setAll({ direction: this._getDirection() });
    const v8 = "{categoryY}", _4 = r9.new(c21, { labelText: v8 }), M5 = e12.series.push(d10.new(c21, { name: h13, xAxis: f11, yAxis: u9, valueXField: y6, categoryYField: A3, tooltip: _4 }));
    this._customizeChartTooltip(_4, "vertical"), M5.columns.template.setAll({ ariaLabel: v8, focusable: true, templateField: "columnSettings" }), p16.series.length > I6 && e12.set("scrollbarY", a14.new(c21, { orientation: "vertical" })), u9.data.setAll(i13), M5.data.setAll(i13), M5.appear(this._getChartSeriesAnimationMS()), e12.appear(this._getChartAnimationMS());
  }
  async _createLineChart(e12, t12, i13) {
    const { TooltipAm5: r9, ScrollbarAm5: a14 } = await import("./chartCommon-O7M2FSZM.js"), { CategoryAxisAm5: s12, AxisRendererXAm5: o9, ValueAxisAm5: n14, AxisRendererYAm5: l12, LineSeriesAm5: d10 } = await import("./xyChart-CA6MDUB5.js"), { root: m15, mediaInfo: c21 } = t12, { value: p16, title: h13 } = c21;
    e12.setAll({ wheelX: "panX", wheelY: "zoomX" });
    const u9 = e12.xAxes.push(s12.new(m15, { renderer: o9.new(m15, { inversed: this._isInversed() }), categoryField: A3 }));
    u9.get("renderer").labels.template.setAll({ forceHidden: true });
    const f11 = e12.yAxes.push(n14.new(m15, { renderer: l12.new(m15, { inside: false }), min: this._getMinSeriesValue(p16.series) }));
    f11.get("renderer").labels.template.setAll({ direction: this._getDirection() });
    const v8 = "{categoryX}", _4 = r9.new(m15, { labelText: v8 }), M5 = e12.series.push(d10.new(m15, { name: h13, xAxis: u9, yAxis: f11, valueYField: y6, categoryXField: A3, tooltip: _4 }));
    this._customizeChartTooltip(_4, "vertical"), p16.series.length > I6 && e12.set("scrollbarX", a14.new(m15, { orientation: "horizontal" })), u9.data.setAll(i13), M5.data.setAll(i13), M5.appear(this._getChartSeriesAnimationMS()), e12.appear(this._getChartAnimationMS());
  }
  async _createXYChart(e12, t12) {
    const { XYChartAm5: i13, XYCursorAm5: r9 } = await import("./xyChart-CA6MDUB5.js"), { root: a14, mediaInfo: s12 } = e12, { type: o9 } = s12, n14 = (s12 == null ? void 0 : s12.altText) || (s12 == null ? void 0 : s12.title) || "", l12 = a14.container.children.push(i13.new(a14, { ariaLabel: n14, focusable: true, panX: true, panY: true }));
    l12.set("cursor", r9.new(a14, {})), "column-chart" === o9 && await this._createColumnChart(l12, e12, t12), "bar-chart" === o9 && await this._createBarChart(l12, e12, t12), "line-chart" === o9 && await this._createLineChart(l12, e12, t12), l12.root.dom.classList.toggle(w5.mediaChartRendered, true);
  }
  _clearMediaRefreshTimer() {
    const { _refreshTimer: e12 } = this;
    e12 && (clearTimeout(e12), this._refreshTimer = null);
  }
  _updateMediaInfoTimestamp(e12) {
    const t12 = Date.now();
    this._refreshIntervalInfo = { timestamp: t12, sourceURL: e12 && this._getImageSource(e12, t12) };
  }
  _setupMediaRefreshTimer() {
    this._clearMediaRefreshTimer();
    const { activeMediaInfo: e12 } = this.viewModel;
    e12 && "image" === e12.type && e12.refreshInterval && this._setRefreshTimeout(e12);
  }
  _setRefreshTimeout(e12) {
    const { refreshInterval: t12, value: i13 } = e12;
    if (!t12)
      return;
    const r9 = 6e4 * t12;
    this._updateMediaInfoTimestamp(i13.sourceURL);
    const a14 = setInterval(() => {
      this._updateMediaInfoTimestamp(i13.sourceURL);
    }, r9);
    this._refreshTimer = a14;
  }
  _getImageSource(e12, t12) {
    const i13 = e12.includes("?") ? "&" : "?", [r9, a14 = ""] = e12.split("#");
    return `${r9}${i13}timestamp=${t12}${a14 ? "#" : ""}${a14}`;
  }
};
e([y2()], R4.prototype, "_refreshIntervalInfo", void 0), e([y2()], R4.prototype, "attributes", null), e([y2()], R4.prototype, "activeMediaInfoIndex", null), e([y2()], R4.prototype, "description", null), e([y2()], R4.prototype, "fieldInfoMap", null), e([y2()], R4.prototype, "layer", null), e([y2()], R4.prototype, "mediaInfos", null), e([y2()], R4.prototype, "popupTemplate", null), e([y2()], R4.prototype, "relatedInfos", null), e([y2()], R4.prototype, "title", null), e([y2({ type: M3 })], R4.prototype, "viewModel", void 0), e([y2(), e2("esri/widgets/Feature/t9n/Feature")], R4.prototype, "messages", void 0), R4 = e([a("esri.widgets.Feature.FeatureMedia")], R4);
var j7 = R4;

// node_modules/@arcgis/core/widgets/Feature/support/arcadeFeatureUtils.js
var n11 = ["$datastore", "$map", "$layer", "$aggregatedfeatures"];
var s10 = "esri.widgets.Feature.support.arcadeFeatureUtils";
var o5 = s.getLogger(s10);
function c15(e12) {
  return "string" == typeof e12 ? le(ae(e12)) : Array.isArray(e12) ? p10(e12) : "esri.arcade.Dictionary" === (e12 == null ? void 0 : e12.declaredClass) ? l8(e12) : e12;
}
function p10(e12) {
  return `<ul class="esri-widget__list">${e12.map((e13) => `<li>${"string" == typeof e13 ? le(ae(e13)) : e13}</li>`).join("")}</ul>`;
}
function l8(e12) {
  return `<table class="esri-widget__table">${e12.keys().map((r9) => {
    const t12 = e12.field(r9);
    return `<tr><th>${r9}</th><td>${"string" == typeof t12 ? le(ae(t12)) : t12}</td></tr>`;
  }).join("")}</table>`;
}
function u5({ aggregatedFeatures: e12, arcadeUtils: r9, featureSetVars: a14, context: i13, viewInfo: n14, map: s12, graphic: o9, interceptor: c21 }) {
  a14.forEach((a15) => {
    const p16 = a15.toLowerCase(), l12 = n14.sr, u9 = { map: s12, spatialReference: l12, interceptor: c21 };
    if ("$map" === p16 && (i13.vars[p16] = r9.convertMapToFeatureSetCollection(u9)), "$layer" === p16 && (i13.vars[p16] = r9.convertFeatureLayerToFeatureSet({ layer: o9.sourceLayer, spatialReference: l12, interceptor: c21 })), "$datastore" === p16 && (i13.vars[p16] = r9.convertServiceUrlToWorkspace({ url: o9.sourceLayer.url, spatialReference: l12, interceptor: c21 })), "$aggregatedfeatures" === p16) {
      const a16 = o9.layer, { fields: n15, objectIdField: s13, geometryType: l13, spatialReference: u10, displayField: f11 } = a16, g9 = new Be({ fields: n15, objectIdField: s13, geometryType: l13, spatialReference: u10, displayField: f11, ..."feature" === a16.type ? { templates: a16.templates, typeIdField: a16.typeIdField, types: a16.types } : null, source: e12 });
      i13.vars[p16] = r9.convertFeatureLayerToFeatureSet({ layer: g9, spatialReference: u10, interceptor: c21 });
    }
  });
}
function f6() {
  return import("./arcadeUtils-Y5ZGURJB.js");
}
function g7(e12) {
  return "createQuery" in e12 && "queryFeatures" in e12;
}
async function y7({ graphic: e12, view: r9 }) {
  const { isAggregate: t12, layer: a14 } = e12;
  if (!t12 || !a14 || "2d" !== (r9 == null ? void 0 : r9.type))
    return [];
  const i13 = await r9.whenLayerView(a14);
  if (!g7(i13))
    return [];
  const n14 = i13.createQuery(), s12 = e12.getObjectId();
  n14.aggregateIds = null != s12 ? [s12] : [];
  const { features: o9 } = await i13.queryFeatures(n14);
  return o9;
}
async function d6({ expressionInfo: e12, arcadeUtils: r9, interceptor: t12, spatialReference: a14, map: i13, graphic: s12, view: c21 }) {
  if (!e12 || !e12.expression)
    return null;
  const p16 = r9.createSyntaxTree(e12.expression), l12 = n11.filter((e13) => r9.hasVariable(p16, e13)), [f11] = await Promise.all([y7({ graphic: s12, view: c21 }), r9.loadScriptDependencies(p16, true, l12)]), g9 = r9.getViewInfo({ spatialReference: a14 }), d10 = r9.createExecContext(s12, g9);
  d10.interceptor = t12, d10.useAsync = true, u5({ aggregatedFeatures: f11, arcadeUtils: r9, featureSetVars: l12, context: d10, viewInfo: g9, map: i13, graphic: s12, interceptor: t12 });
  const m15 = r9.createFunction(p16, d10);
  return r9.executeAsyncFunction(m15, d10).catch((r10) => o5.error("arcade-execution-error", { error: r10, graphic: s12, expressionInfo: e12 }));
}
async function m10({ expressionInfos: e12, spatialReference: t12, graphic: a14, interceptor: i13, map: n14, view: s12 }) {
  if (!e12 || !e12.length)
    return {};
  const o9 = await f6(), p16 = {};
  for (const r9 of e12)
    p16[`expression/${r9.name}`] = d6({ expressionInfo: r9, arcadeUtils: o9, interceptor: i13, spatialReference: t12, map: n14, graphic: a14, view: s12 });
  const l12 = await j(p16), u9 = {};
  for (const r9 in l12)
    u9[r9] = c15(l12[r9].value);
  return u9;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression/FeatureExpressionViewModel.js
var w6 = 1;
var j8 = class extends a4(m2) {
  constructor(t12) {
    super(t12), this._abortController = null, this.expressionInfo = null, this.graphic = null, this.contentElement = null, this.contentElementViewModel = null, this.interceptor = null, this.view = null, this._cancelQuery = () => {
      const { _abortController: t13 } = this;
      t13 && t13.abort(), this._abortController = null;
    }, this._createVM = () => {
      var _a, _b;
      const t13 = (_a = this.contentElement) == null ? void 0 : _a.type;
      (_b = this.contentElementViewModel) == null ? void 0 : _b.destroy();
      const e12 = "fields" === t13 ? new n8() : "media" === t13 ? new M3() : "text" === t13 ? new l5() : null;
      this._set("contentElementViewModel", e12);
    }, this._compile = async () => {
      this._cancelQuery();
      const t13 = new AbortController();
      this._abortController = t13, await this._compileExpression(), this._abortController === t13 && (this._abortController = null);
    }, this._compileThrottled = e5(this._compile, w6, this), this._compileExpression = async () => {
      const { expressionInfo: t13, graphic: e12, interceptor: o9, spatialReference: r9, map: n14, view: s12, _abortController: i13 } = this;
      if (!(t13 && e12 && r9 && n14))
        return void this._set("contentElement", null);
      const l12 = await f6();
      if (i13 !== this._abortController)
        return;
      const p16 = await d6({ arcadeUtils: l12, expressionInfo: t13, graphic: e12, interceptor: o9, map: n14, spatialReference: r9, view: s12 });
      if (!p16 || "esri.arcade.Dictionary" !== p16.declaredClass)
        return void this._set("contentElement", null);
      const h13 = await p16.castAsJsonAsync(i13 == null ? void 0 : i13.signal), d10 = h13 == null ? void 0 : h13.type, u9 = "media" === d10 ? I.fromJSON(h13) : "text" === d10 ? c5.fromJSON(h13) : "fields" === d10 ? c4.fromJSON(h13) : null;
      this._set("contentElement", u9);
    }, this.handles.add([l2(() => [this.expressionInfo, this.graphic, this.map, this.spatialReference, this.view], () => this._compileThrottled(), h), l2(() => [this.contentElement], () => this._createVM(), h)]);
  }
  initialize() {
    this.addHandles(this._compileThrottled);
  }
  destroy() {
    var _a;
    this._cancelQuery(), (_a = this.contentElementViewModel) == null ? void 0 : _a.destroy(), this._set("contentElementViewModel", null), this._set("contentElement", null);
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.spatialReference) ?? null;
  }
  set spatialReference(t12) {
    this._override("spatialReference", t12);
  }
  get state() {
    const { _abortController: t12, contentElement: e12, contentElementViewModel: o9 } = this;
    return t12 ? "loading" : e12 || o9 ? "ready" : "disabled";
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) ?? null;
  }
  set map(t12) {
    this._override("map", t12);
  }
};
e([y2()], j8.prototype, "_abortController", void 0), e([y2({ type: i5 })], j8.prototype, "expressionInfo", void 0), e([y2({ type: h4 })], j8.prototype, "graphic", void 0), e([y2({ readOnly: true })], j8.prototype, "contentElement", void 0), e([y2({ readOnly: true })], j8.prototype, "contentElementViewModel", void 0), e([y2()], j8.prototype, "interceptor", void 0), e([y2()], j8.prototype, "spatialReference", null), e([y2({ readOnly: true })], j8.prototype, "state", null), e([y2()], j8.prototype, "map", null), e([y2()], j8.prototype, "view", void 0), j8 = e([a("esri.widgets.Feature.FeatureExpression.FeatureExpressionViewModel")], j8);
var C3 = j8;

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression.js
var c16 = { iconLoading: "esri-icon-loading-indicator esri-rotating", base: "esri-feature-expression", loadingSpinnerContainer: "esri-feature__loading-container", spinner: "esri-feature__loading-spinner" };
var u6 = class extends W {
  constructor(e12, t12) {
    super(e12, t12), this._contentWidget = null, this.viewModel = new C3();
  }
  initialize() {
    this.addHandles(l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentElementViewModel;
    }, () => this._setupExpressionWidget(), h));
  }
  destroy() {
    this._destroyContentWidget();
  }
  renderLoading() {
    return n4("div", { key: "loading-container", class: c16.loadingSpinnerContainer }, n4("span", { class: this.classes(c16.iconLoading, c16.spinner) }));
  }
  render() {
    var _a;
    const { state: e12 } = this.viewModel;
    return n4("div", { class: c16.base }, "loading" === e12 ? this.renderLoading() : "disabled" === e12 ? null : (_a = this._contentWidget) == null ? void 0 : _a.render());
  }
  _destroyContentWidget() {
    const { _contentWidget: e12 } = this;
    e12 && (e12.viewModel = null, e12.destroy()), this._contentWidget = null;
  }
  _setupExpressionWidget() {
    const { contentElementViewModel: e12, contentElement: t12 } = this.viewModel, s12 = t12 == null ? void 0 : t12.type;
    this._destroyContentWidget();
    const o9 = e12 ? "fields" === s12 ? new c12({ viewModel: e12 }) : "media" === s12 ? new j7({ viewModel: e12 }) : "text" === s12 ? new p7({ viewModel: e12 }) : null : null;
    this._contentWidget = o9, this.scheduleRender();
  }
};
e([y2({ type: C3 })], u6.prototype, "viewModel", void 0), u6 = e([a("esri.widgets.Feature.FeatureExpression")], u6);
var m11 = u6;

// node_modules/@arcgis/core/widgets/FeatureForm/featureFormUtils.js
function L3(n14, r9, i13) {
  const o9 = Object.keys(r9).filter((e12) => i(n14, e12)), a14 = o9.map((e12) => r9[e12]), s12 = o9.map((e12) => i13.get(e12)).filter(R);
  return R5(n14, F6(a14, s12));
}
function F6(e12, t12) {
  const n14 = t12.map((t13, n15) => {
    let r9 = e12[n15];
    if (t13.domain && "coded-value" === t13.domain.type) {
      const e13 = t13.domain.codedValues.find((e14) => e14.code === r9);
      (e13 == null ? void 0 : e13.name) && (r9 = e13.name);
    }
    return ue(t13) && (r9 = I7(t13, r9)), [t13.name, r9];
  });
  return Object.fromEntries(n14);
}
function I7(e12, t12) {
  if (!e12 || null == t12)
    return null;
  switch (e12.type) {
    case "date":
      return f2(t12);
    case "date-only":
      return Y(t12);
    case "time-only":
      return p2(t12);
    case "timestamp-offset":
      return v(t12);
    default:
      return null;
  }
}
function R5(e12, t12) {
  return r(r(e12, (e13) => `{${e13.toLowerCase()}}`), Object.fromEntries(Object.entries(t12).map(([e13, t13]) => [e13.toLowerCase(), t13])));
}
var S4;
!function(e12) {
  e12.TOO_SHORT = "length-validation-error::too-short";
}(S4 || (S4 = {}));
var B3 = (e12) => {
  var _a;
  const n14 = [];
  if (e12.formTemplate) {
    const { description: r9, title: i13 } = e12.formTemplate;
    (_a = e12.fields) == null ? void 0 : _a.forEach((e13) => {
      const o9 = i13 && i(i13, e13.name), a14 = r9 && i(r9, e13.name);
      (o9 || a14) && n14.push(e13.name);
    });
  }
  return n14;
};

// node_modules/@arcgis/core/widgets/Feature/FeatureRelationship/FeatureRelationshipViewModel.js
var f7 = 100;
var m12 = class extends i4(s5(a4(m2))) {
  constructor(e12) {
    super(e12), this._loaded = false, this._queryAbortController = null, this._queryPageAbortController = null, this._queryFeatureCountAbortController = null, this.featuresPerPage = 10, this.description = null, this.graphic = null, this.layer = null, this.map = null, this.orderByFields = null, this.featureCount = 0, this.relationshipId = null, this.showAllEnabled = false, this.title = null, this._cancelQuery = () => {
      const { _queryAbortController: e13 } = this;
      e13 && e13.abort(), this._queryAbortController = null;
    }, this._cancelQueryFeatureCount = () => {
      const { _queryFeatureCountAbortController: e13 } = this;
      e13 && e13.abort(), this._queryFeatureCountAbortController = null;
    }, this._cancelQueryPage = () => {
      const { _queryPageAbortController: e13 } = this;
      e13 && e13.abort(), this._queryPageAbortController = null;
    }, this._queryController = async () => {
      this._cancelQuery();
      const e13 = new AbortController();
      this._queryAbortController = e13, await y(this._query()), this._queryAbortController === e13 && (this._queryAbortController = null);
    }, this._queryFeatureCountController = async () => {
      this._loaded = false, this._cancelQueryFeatureCount();
      const e13 = new AbortController();
      this._queryFeatureCountAbortController = e13, await y(this._queryFeatureCount()), this._queryFeatureCountAbortController === e13 && (this._queryFeatureCountAbortController = null), this._loaded = true;
    }, this._queryPageController = async () => {
      const e13 = new AbortController();
      this._queryPageAbortController = e13, await y(this._queryPage()), this._queryPageAbortController === e13 && (this._queryPageAbortController = null);
    }, this._queryDebounced = k(this._queryController, f7), this._queryFeatureCountDebounced = k(this._queryFeatureCountController, f7), this._queryPageDebounced = k(this._queryPageController, f7), this._query = async () => {
      const { _queryAbortController: e13, relatedFeatures: t12 } = this;
      this.featureCount && (this._destroyRelatedFeatureViewModels(), this.featurePage = 1, t12.removeAll(), this.destroyed || t12.addMany(this._sliceFeatures(await this._queryRelatedFeatures({ signal: e13 == null ? void 0 : e13.signal }))));
    }, this.handles.add([l2(() => {
      var _a;
      return [this.displayCount, this.graphic, this.layer, (_a = this.layer) == null ? void 0 : _a.loaded, this.map, this.orderByFields, this.relationshipId, this.featuresPerPage, this.showAllEnabled, this.canQuery, this.featureCount];
    }, () => this._queryDebounced(), h), l2(() => [this.featurePage, this.showAllEnabled], () => this._queryPageDebounced()), l2(() => [this.layer, this.relationshipId, this.objectId, this.canQuery], () => this._queryFeatureCountDebounced())]);
  }
  destroy() {
    this._destroyRelatedFeatureViewModels(), this.relatedFeatures.removeAll(), this._cancelQuery(), this._cancelQueryFeatureCount(), this._cancelQueryPage();
  }
  set featurePage(e12) {
    const { featuresPerPage: t12, featureCount: r9 } = this, o9 = 1, l12 = Math.ceil(r9 / t12) || 1;
    this._set("featurePage", Math.min(Math.max(e12, o9), l12));
  }
  get featurePage() {
    return this._get("featurePage");
  }
  get orderByFieldsFixedCasing() {
    const { orderByFields: e12, relatedLayer: t12 } = this;
    return e12 && (t12 == null ? void 0 : t12.loaded) ? e12.map((e13) => {
      const r9 = e13.clone();
      return r9.field = U2(e13.field, t12), r9;
    }) : e12 ?? [];
  }
  get supportsCacheHint() {
    var _a, _b, _c;
    return !!((_c = (_b = (_a = this.layer) == null ? void 0 : _a.capabilities) == null ? void 0 : _b.queryRelated) == null ? void 0 : _c.supportsCacheHint);
  }
  get canLoad() {
    return !!this.map && "number" == typeof this.relationshipId && "number" == typeof this.objectId;
  }
  get canQuery() {
    var _a, _b;
    const e12 = (_b = (_a = this.layer) == null ? void 0 : _a.capabilities) == null ? void 0 : _b.queryRelated;
    return !!(this.relatedLayer && this.relationship && "number" == typeof this.relationshipId && "number" == typeof this.objectId && (e12 == null ? void 0 : e12.supportsCount) && (e12 == null ? void 0 : e12.supportsPagination));
  }
  get itemDescriptionFieldName() {
    var _a;
    return ((_a = this.orderByFieldsFixedCasing[0]) == null ? void 0 : _a.field) || null;
  }
  set displayCount(e12) {
    const t12 = 0, r9 = 10;
    this._set("displayCount", Math.min(Math.max(e12, t12), r9));
  }
  get displayCount() {
    return this._get("displayCount");
  }
  get objectId() {
    var _a, _b;
    return (this.objectIdField && ((_b = (_a = this.graphic) == null ? void 0 : _a.attributes) == null ? void 0 : _b[this.objectIdField])) ?? null;
  }
  get objectIdField() {
    var _a;
    return ((_a = this.layer) == null ? void 0 : _a.objectIdField) || null;
  }
  get relatedFeatures() {
    return this._get("relatedFeatures") || new V();
  }
  get relatedFeatureInfos() {
    const { itemDescriptionFieldName: e12, relatedFeatures: t12, relatedLayer: r9 } = this;
    if (!t12.length || !r9)
      return [];
    const o9 = r9 && "formTemplate" in r9 && r9.formTemplate, l12 = o9 && (o9 == null ? void 0 : o9.title) || void 0;
    return t12.map((t13) => {
      let o10;
      if (e12) {
        const l13 = t13.getAttribute(e12), a14 = r9.fieldsIndex.get(e12);
        if (a14) {
          const t14 = F6([l13], [a14])[e12];
          null != t14 && (o10 = t14.toString());
        }
      }
      return { feature: t13, description: o10, title: l12 ? L3(l12, t13.attributes, r9.fieldsIndex) : void 0 };
    }).toArray();
  }
  get relatedLayer() {
    const { layer: e12, map: t12, relationship: r9 } = this;
    return (e12 == null ? void 0 : e12.loaded) && t12 && r9 ? we(t12, e12, r9) ?? null : null;
  }
  get relationship() {
    var _a;
    const { relationshipId: e12, layer: t12 } = this;
    return "number" == typeof e12 ? ((_a = t12 == null ? void 0 : t12.relationships) == null ? void 0 : _a.find(({ id: t13 }) => t13 === e12)) ?? null : null;
  }
  get relatedFeatureViewModels() {
    return this._get("relatedFeatureViewModels") || new V();
  }
  get state() {
    const { _queryAbortController: e12, _queryFeatureCountAbortController: t12, _queryPageAbortController: r9, canQuery: o9, _loaded: l12, canLoad: a14 } = this;
    return t12 || a14 && !l12 ? "loading" : e12 || r9 ? "querying" : o9 ? "ready" : "disabled";
  }
  getRelatedFeatureByObjectId(e12) {
    return this.relatedFeatures.find((t12) => t12.getObjectId() === e12);
  }
  _destroyRelatedFeatureViewModels() {
    var _a;
    (_a = this.relatedFeatureViewModels) == null ? void 0 : _a.forEach((e12) => !e12.destroyed && e12.destroy()), this.relatedFeatureViewModels.removeAll();
  }
  async _queryFeatureCount() {
    const { layer: e12, relatedLayer: t12, relationshipId: r9, objectId: o9, _queryFeatureCountAbortController: l12, canQuery: a14, supportsCacheHint: s12 } = this;
    if (await (e12 == null ? void 0 : e12.load()), await (t12 == null ? void 0 : t12.load()), !a14 || !e12 || !t12)
      return void this._set("featureCount", 0);
    const i13 = t12.createQuery(), n14 = new d3({ cacheHint: s12, relationshipId: r9, returnGeometry: false, objectIds: [o9], where: i13.where ?? void 0 }), u9 = await e12.queryRelatedFeaturesCount(n14, { signal: l12 == null ? void 0 : l12.signal });
    this._set("featureCount", u9[o9] || 0);
  }
  _sliceFeatures(e12) {
    const { showAllEnabled: t12, displayCount: r9 } = this;
    return t12 ? e12 : r9 ? e12.slice(0, r9) : [];
  }
  async _queryPage() {
    const { relatedFeatures: e12, featurePage: t12, showAllEnabled: r9, _queryPageAbortController: o9, featureCount: l12 } = this;
    !r9 || t12 < 2 || !l12 || e12.addMany(await this._queryRelatedFeatures({ signal: o9 == null ? void 0 : o9.signal }));
  }
  async _queryRelatedFeatures(e12) {
    var _a;
    const { orderByFieldsFixedCasing: t12, showAllEnabled: r9, featuresPerPage: l12, displayCount: a14, layer: s12, relationshipId: i13, featurePage: n14, featureCount: u9, relatedLayer: d10, supportsCacheHint: y11 } = this, { canQuery: h13, objectId: p16 } = this;
    if (!h13 || !s12 || !d10)
      return [];
    const C6 = r9 ? ((n14 - 1) * l12 + u9) % u9 : 0, b12 = r9 ? l12 : a14, g9 = d10.objectIdField, _4 = [...t12.map((e13) => e13.field), ...B3(d10), g9].filter(R), f11 = t12.map((e13) => `${e13.field} ${e13.order}`), m15 = d10.createQuery(), q4 = new d3({ orderByFields: f11, start: C6, num: b12, outFields: _4, cacheHint: y11, relationshipId: i13, returnGeometry: false, objectIds: [p16], where: m15.where ?? void 0 }), A5 = await s12.queryRelatedFeatures(q4, { signal: e12 == null ? void 0 : e12.signal }), w9 = ((_a = A5[p16]) == null ? void 0 : _a.features) || [];
    return w9.forEach((e13) => {
      e13.sourceLayer = d10, e13.layer = d10;
    }), w9;
  }
};
e([y2()], m12.prototype, "_loaded", void 0), e([y2()], m12.prototype, "_queryAbortController", void 0), e([y2()], m12.prototype, "_queryPageAbortController", void 0), e([y2()], m12.prototype, "_queryFeatureCountAbortController", void 0), e([y2({ value: 1 })], m12.prototype, "featurePage", null), e([y2()], m12.prototype, "featuresPerPage", void 0), e([y2({ readOnly: true })], m12.prototype, "orderByFieldsFixedCasing", null), e([y2({ readOnly: true })], m12.prototype, "supportsCacheHint", null), e([y2({ readOnly: true })], m12.prototype, "canLoad", null), e([y2({ readOnly: true })], m12.prototype, "canQuery", null), e([y2()], m12.prototype, "description", void 0), e([y2({ readOnly: true })], m12.prototype, "itemDescriptionFieldName", null), e([y2({ value: 3 })], m12.prototype, "displayCount", null), e([y2({ type: h4 })], m12.prototype, "graphic", void 0), e([y2()], m12.prototype, "layer", void 0), e([y2()], m12.prototype, "map", void 0), e([y2({ readOnly: true })], m12.prototype, "objectId", null), e([y2({ readOnly: true })], m12.prototype, "objectIdField", null), e([y2()], m12.prototype, "orderByFields", void 0), e([y2({ readOnly: true })], m12.prototype, "relatedFeatures", null), e([y2({ readOnly: true })], m12.prototype, "relatedFeatureInfos", null), e([y2({ readOnly: true })], m12.prototype, "relatedLayer", null), e([y2({ readOnly: true })], m12.prototype, "relationship", null), e([y2()], m12.prototype, "featureCount", void 0), e([y2({ readOnly: true })], m12.prototype, "relatedFeatureViewModels", null), e([y2()], m12.prototype, "relationshipId", void 0), e([y2()], m12.prototype, "showAllEnabled", void 0), e([y2()], m12.prototype, "state", null), e([y2()], m12.prototype, "title", void 0), e([y2()], m12.prototype, "getRelatedFeatureByObjectId", null), m12 = e([a("esri.widgets.Feature.FeatureRelationship.FeatureRelationshipViewModel")], m12);
var q3 = m12;

// node_modules/@arcgis/core/widgets/Feature/FeatureRelationship.js
var w7 = "esri-feature";
var b9 = `${w7}-relationship`;
var f8 = { base: b9, esriWidget: "esri-widget", listContainer: `${b9}__list`, listItem: `${b9}__list-item`, listItemHidden: `${b9}__list-item--hidden`, listContainerQuerying: `${b9}__list--querying`, featureObserver: `${w7}__feature-observer`, stickySpinnerContainer: `${w7}__sticky-loading-container`, loadingSpinnerContainer: `${w7}__loading-container`, spinner: `${w7}__loading-spinner`, iconLoading: "esri-icon-loading-indicator esri-rotating" };
var y8 = { title: true, description: true };
var F7 = class extends W {
  constructor(e12, t12) {
    super(e12, t12), this._featureElementInfo = null, this._relatedFeatureIntersectionObserverNode = null, this._relatedFeatureIntersectionObserver = new IntersectionObserver(([e13]) => {
      (e13 == null ? void 0 : e13.isIntersecting) && this._increaseFeaturePage();
    }, { root: window.document }), this.headingLevel = 2, this.viewModel = new q3(), this.messages = null, this.messagesCommon = null, this.visibleElements = { ...y8 }, this._increaseFeaturePage = () => {
      const { state: e13, showAllEnabled: t13, relatedFeatures: s12, featuresPerPage: i13, featurePage: r9 } = this.viewModel;
      "ready" === e13 && t13 && s12.length >= i13 * r9 && this.viewModel.featurePage++;
    };
  }
  initialize() {
    this._featureElementInfo = new l4(), this.addHandles([l2(() => [this.viewModel.description, this.viewModel.title, this.headingLevel], () => this._setupFeatureElementInfo(), h), l2(() => [this.viewModel.state, this.viewModel.showAllEnabled, this._relatedFeatureIntersectionObserverNode], () => this._handleRelatedFeatureObserverChange()), a2(() => this.viewModel.relatedFeatureViewModels, "change", () => this._setupRelatedFeatureViewModels())]);
  }
  loadDependencies() {
    return n3({ icon: () => import("./calcite-icon-GNDPNTWV.js"), list: () => import("./calcite-list-ANSENCN6.js"), "list-item": () => import("./calcite-list-item-ZYQWHXH6.js"), notice: () => import("./calcite-notice-K7YCXAPF.js") });
  }
  destroy() {
    this._unobserveRelatedFeatureObserver(), this._featureElementInfo = l(this._featureElementInfo);
  }
  get displayShowAllButton() {
    const { showAllEnabled: e12, featureCount: t12, displayCount: s12, state: i13 } = this.viewModel;
    return !e12 && !!t12 && "ready" === i13 && (t12 > s12 || 0 === s12);
  }
  get displayListItems() {
    return this.displayShowAllButton || this.viewModel.relatedFeatureViewModels.length > 0;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e12) {
    this.viewModel.description = e12;
  }
  get featureCountDescription() {
    const { messages: e12 } = this, { featureCount: t12 } = this.viewModel;
    return s3(e12 == null ? void 0 : e12.numberRecords, { number: t12 });
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e12) {
    this.viewModel.title = e12;
  }
  castVisibleElements(e12) {
    return { ...y8, ...e12 };
  }
  renderStickyLoading() {
    return "querying" === this.viewModel.state ? n4("div", { key: "sticky-loader", class: f8.stickySpinnerContainer }, this.renderLoadingIcon()) : null;
  }
  renderLoadingIcon() {
    return n4("span", { class: this.classes(f8.iconLoading, f8.spinner) });
  }
  renderLoading() {
    return n4("div", { key: "loading-container", class: f8.loadingSpinnerContainer }, this.renderLoadingIcon());
  }
  renderShowAllIconNode() {
    return n4("calcite-icon", { scale: "s", icon: "list", slot: "content-end" });
  }
  renderChevronIconNode() {
    const e12 = h2(this.container) ? "chevron-left" : "chevron-right";
    return n4("calcite-icon", { scale: "s", icon: e12, slot: "content-end" });
  }
  renderRelatedFeature(e12) {
    var _a;
    const { itemDescriptionFieldName: t12 } = this.viewModel, s12 = e12.title;
    e12.description = t12 && ((_a = e12.formattedAttributes) == null ? void 0 : _a.global[t12]);
    const i13 = "loading" === e12.state;
    return n4("calcite-list-item", { class: this.classes(f8.listItem, { [f8.listItemHidden]: i13 }), key: e12.uid, label: s12, description: e12.description ?? "", onCalciteListItemSelect: () => this.emit("select-record", { featureViewModel: e12 }) }, this.renderChevronIconNode());
  }
  renderShowAllListItem() {
    var _a;
    return this.displayShowAllButton ? n4("calcite-list-item", { key: "show-all-item", label: (_a = this.messages) == null ? void 0 : _a.showAll, description: this.featureCountDescription, onCalciteListItemSelect: () => this.emit("show-all-records") }, this.renderShowAllIconNode()) : null;
  }
  renderNoRelatedFeaturesMessage() {
    var _a;
    return n4("calcite-notice", { key: "no-related-features-message", icon: "information", open: true, kind: "brand", scale: "s", width: "full" }, n4("div", { slot: "message" }, (_a = this.messages) == null ? void 0 : _a.noRelatedFeatures));
  }
  renderFeatureObserver() {
    return n4("div", { key: "feature-observer", class: f8.featureObserver, bind: this, afterCreate: this._relatedFeatureIntersectionObserverCreated });
  }
  renderList() {
    const { relatedFeatureViewModels: e12 } = this.viewModel;
    return n4("calcite-list", null, e12.toArray().map((e13) => this.renderRelatedFeature(e13)), this.renderShowAllListItem());
  }
  renderRelatedFeatures() {
    const { displayListItems: e12 } = this, { state: t12 } = this.viewModel;
    return n4("div", { key: "list-container", class: this.classes(f8.listContainer, { [f8.listContainerQuerying]: "querying" === t12 }) }, e12 ? this.renderList() : "ready" === t12 ? this.renderNoRelatedFeaturesMessage() : null, this.renderStickyLoading(), this.renderFeatureObserver());
  }
  renderRelationshipNotFound() {
    var _a;
    return n4("calcite-notice", { key: "relationship-not-found", icon: "exclamation-mark-triangle", open: true, kind: "danger", scale: "s", width: "full" }, n4("div", { slot: "message" }, (_a = this.messages) == null ? void 0 : _a.relationshipNotFound));
  }
  render() {
    var _a;
    const { state: e12 } = this.viewModel;
    return n4("div", { class: this.classes(f8.base, f8.esriWidget) }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), "loading" === e12 ? this.renderLoading() : "disabled" === e12 ? this.renderRelationshipNotFound() : this.renderRelatedFeatures());
  }
  _setupRelatedFeatureViewModels() {
    const { relatedFeatureViewModels: e12 } = this.viewModel, t12 = "related-feature-viewmodels";
    this.removeHandles(t12), e12 == null ? void 0 : e12.forEach((e13) => {
      this.addHandles(l2(() => [e13.title, e13.state], () => this.scheduleRender(), h), t12);
    }), this.scheduleRender();
  }
  _setupFeatureElementInfo() {
    var _a;
    const { headingLevel: e12, visibleElements: t12 } = this, s12 = t12.description && this.description, i13 = t12.title && this.title;
    (_a = this._featureElementInfo) == null ? void 0 : _a.set({ description: s12, title: i13, headingLevel: e12 });
  }
  async _handleRelatedFeatureObserverChange() {
    this._unobserveRelatedFeatureObserver();
    const { state: e12, showAllEnabled: t12 } = this.viewModel;
    await g(0), this._relatedFeatureIntersectionObserverNode && "ready" === e12 && t12 && this._relatedFeatureIntersectionObserver.observe(this._relatedFeatureIntersectionObserverNode);
  }
  _relatedFeatureIntersectionObserverCreated(e12) {
    this._relatedFeatureIntersectionObserverNode = e12;
  }
  _unobserveRelatedFeatureObserver() {
    this._relatedFeatureIntersectionObserverNode && this._relatedFeatureIntersectionObserver.unobserve(this._relatedFeatureIntersectionObserverNode);
  }
};
e([y2()], F7.prototype, "_relatedFeatureIntersectionObserverNode", void 0), e([y2({ readOnly: true })], F7.prototype, "displayShowAllButton", null), e([y2({ readOnly: true })], F7.prototype, "displayListItems", null), e([y2()], F7.prototype, "description", null), e([y2({ readOnly: true })], F7.prototype, "featureCountDescription", null), e([y2()], F7.prototype, "headingLevel", void 0), e([y2()], F7.prototype, "title", null), e([y2({ type: q3 })], F7.prototype, "viewModel", void 0), e([y2(), e2("esri/widgets/Feature/t9n/Feature")], F7.prototype, "messages", void 0), e([y2(), e2("esri/t9n/common")], F7.prototype, "messagesCommon", void 0), e([y2()], F7.prototype, "visibleElements", void 0), e([s4("visibleElements")], F7.prototype, "castVisibleElements", null), F7 = e([a("esri.widgets.Feature.FeatureRelationship")], F7);
var _2 = F7;

// node_modules/@arcgis/core/arcade/featureset/support/FeatureSetQueryInterceptor.js
var e9 = class {
  constructor(e12, a14) {
    this.preLayerQueryCallback = e12, this.preRequestCallback = a14, this.preLayerQueryCallback || (this.preLayerQueryCallback = (e13) => {
    }), this.preRequestCallback || (this.preLayerQueryCallback = (e13) => {
    });
  }
};

// node_modules/@arcgis/core/widgets/Feature/FeatureViewModel.js
var H2;
var z2 = 1;
var J3 = "content-view-models";
var K3 = "relationship-view-models";
var W3 = { attachmentsContent: true, chartAnimation: true, customContent: true, expressionContent: true, fieldsContent: true, mediaContent: true, textContent: true, relationshipContent: true };
var X = H2 = class extends s5(m2) {
  constructor(e12) {
    super(e12), this._handles = new t(), this._error = null, this._featureAbortController = null, this._graphicChangedThrottled = e5(this._graphicChanged, z2, this), this._expressionAttributes = null, this._graphicExpressionAttributes = null, this.abilities = { ...W3 }, this.content = null, this.contentViewModels = [], this.description = null, this.defaultPopupTemplateEnabled = false, this.formattedAttributes = null, this.lastEditInfo = null, this.relatedInfos = /* @__PURE__ */ new Map(), this.title = "", this.view = null, this._isAllowedContentType = (e13) => {
      const { abilities: t12 } = this;
      return "attachments" === e13.type && !!t12.attachmentsContent || "custom" === e13.type && !!t12.customContent || "fields" === e13.type && !!t12.fieldsContent || "media" === e13.type && !!t12.mediaContent || "text" === e13.type && !!t12.textContent || "expression" === e13.type && !!t12.expressionContent || "relationship" === e13.type && !!t12.relationshipContent;
    }, this._handles.add(l2(() => [this.graphic, this._effectivePopupTemplate, this.abilities], () => this._graphicChangedThrottled(), h));
  }
  initialize() {
    this.addHandles(this._graphicChangedThrottled);
  }
  destroy() {
    this._clear(), this._cancelFeatureQuery(), this._error = null, this._handles.destroy(), this.graphic = null, this._destroyContentViewModels(), this.relatedInfos.clear();
  }
  get _effectivePopupTemplate() {
    return null != this.graphic ? this.graphic.getEffectivePopupTemplate(this.defaultPopupTemplateEnabled) : null;
  }
  get _fieldInfoMap() {
    return ie(oe(this._effectivePopupTemplate), this._sourceLayer);
  }
  get _sourceLayer() {
    return C(this.graphic);
  }
  castAbilities(e12) {
    return { ...W3, ...e12 };
  }
  get isTable() {
    var _a;
    return ((_a = this._sourceLayer) == null ? void 0 : _a.isTable) || false;
  }
  get state() {
    return this.graphic ? this._error ? "error" : this.waitingForContent ? "loading" : "ready" : "disabled";
  }
  set graphic(e12) {
    this._set("graphic", e12 ? e12.clone() : null);
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.spatialReference) ?? null;
  }
  set spatialReference(e12) {
    this._override("spatialReference", e12);
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) || null;
  }
  set map(e12) {
    this._override("map", e12);
  }
  get waitingForContent() {
    return !!this._featureAbortController;
  }
  setActiveMedia(e12, t12) {
    const i13 = this.contentViewModels[e12];
    i13 instanceof M3 && i13.setActiveMedia(t12);
  }
  nextMedia(e12) {
    const t12 = this.contentViewModels[e12];
    t12 instanceof M3 && t12.next();
  }
  previousMedia(e12) {
    const t12 = this.contentViewModels[e12];
    t12 instanceof M3 && t12.previous();
  }
  async updateGeometry() {
    var _a;
    const { graphic: e12, spatialReference: t12, _sourceLayer: i13 } = this;
    await (i13 == null ? void 0 : i13.load());
    const r9 = i13 == null ? void 0 : i13.objectIdField;
    if (!r9 || !e12 || !i13)
      return;
    const s12 = (_a = e12 == null ? void 0 : e12.attributes) == null ? void 0 : _a[r9];
    if (null == s12)
      return;
    const o9 = [s12];
    if (!e12.geometry) {
      const r10 = await fe({ layer: i13, graphic: e12, outFields: [], objectIds: o9, returnGeometry: true, spatialReference: t12 }), s13 = r10 == null ? void 0 : r10.geometry;
      s13 && (e12.geometry = s13);
    }
  }
  _clear() {
    this._set("title", ""), this._set("content", null), this._set("formattedAttributes", null);
  }
  async _graphicChanged() {
    this._cancelFeatureQuery(), this._error = null, this._clear();
    const { graphic: e12 } = this;
    if (!e12)
      return;
    const t12 = new AbortController();
    this._featureAbortController = t12;
    try {
      await this._queryFeature({ signal: t12.signal });
    } catch (i13) {
      d(i13) || (this._error = i13, s.getLogger(this).error("error", "The popupTemplate could not be displayed for this feature.", { error: i13, graphic: e12, popupTemplate: this._effectivePopupTemplate }));
    }
    this._featureAbortController === t12 && (this._featureAbortController = null);
  }
  _cancelFeatureQuery() {
    const { _featureAbortController: e12 } = this;
    e12 && e12.abort(), this._featureAbortController = null;
  }
  _compileContentElement(e12, t12) {
    return "attachments" === e12.type ? this._compileAttachments(e12, t12) : "custom" === e12.type ? this._compileCustom(e12, t12) : "fields" === e12.type ? this._compileFields(e12, t12) : "media" === e12.type ? this._compileMedia(e12, t12) : "text" === e12.type ? this._compileText(e12, t12) : "expression" === e12.type ? this._compileExpression(e12, t12) : "relationship" === e12.type ? this._compileRelationship(e12, t12) : void 0;
  }
  _compileContent(e12) {
    if (this._destroyContentViewModels(), this.graphic)
      return Array.isArray(e12) ? e12.filter(this._isAllowedContentType).map((e13, t12) => this._compileContentElement(e13, t12)).filter(R) : "string" == typeof e12 ? this._compileText(new c5({ text: e12 }), 0).text : e12;
  }
  _destroyContentViewModels() {
    var _a, _b;
    (_a = this._handles) == null ? void 0 : _a.remove(K3), (_b = this._handles) == null ? void 0 : _b.remove(J3), this.contentViewModels.forEach((e12) => e12 && !e12.destroyed && e12.destroy()), this._set("contentViewModels", []);
  }
  _matchesFeature(e12, t12) {
    var _a;
    const i13 = (_a = e12 == null ? void 0 : e12.graphic) == null ? void 0 : _a.getObjectId(), r9 = t12 == null ? void 0 : t12.getObjectId();
    return null != i13 && null != r9 && i13 === r9;
  }
  _setRelatedFeaturesViewModels({ relatedFeatureViewModels: e12, relatedFeatures: t12, map: i13 }) {
    const { view: r9, spatialReference: s12 } = this;
    t12 == null ? void 0 : t12.filter(Boolean).forEach((t13) => {
      e12.find((e13) => this._matchesFeature(e13, t13)) || e12.add(new H2({ abilities: { relationshipContent: false }, map: i13, view: r9, spatialReference: s12, graphic: t13 }));
    }), e12.forEach((i14) => {
      const r10 = t12 == null ? void 0 : t12.find((e13) => this._matchesFeature(i14, e13));
      r10 || e12.remove(i14);
    });
  }
  _setExpressionContentVM(e12, t12) {
    const i13 = this.formattedAttributes, { contentElement: r9, contentElementViewModel: s12 } = e12, o9 = r9 == null ? void 0 : r9.type;
    s12 && o9 && ("fields" === o9 && (this._createFieldsFormattedAttributes({ contentElement: r9, contentElementIndex: t12, formattedAttributes: i13 }), s12.set(this._createFieldsVMParams(r9, t12))), "media" === o9 && (this._createMediaFormattedAttributes({ contentElement: r9, contentElementIndex: t12, formattedAttributes: i13 }), s12.set(this._createMediaVMParams(r9, t12))), "text" === o9 && s12.set(this._createTextVMParams(r9)));
  }
  _compileRelationship(e12, t12) {
    const { displayCount: i13, orderByFields: r9, relationshipId: s12, title: o9, description: n14 } = e12, { _sourceLayer: a14, graphic: l12, map: p16 } = this;
    if (!W2(a14))
      return;
    const c21 = new q3({ displayCount: i13, graphic: l12, orderByFields: r9, relationshipId: s12, layer: a14, map: p16, ...this._compileTitleAndDesc({ title: o9, description: n14 }) });
    return this.contentViewModels[t12] = c21, this._handles.add(a2(() => c21.relatedFeatures, "change", () => this._setRelatedFeaturesViewModels(c21)), K3), e12;
  }
  _compileExpression(e12, t12) {
    const { expressionInfo: i13 } = e12, { graphic: r9, map: s12, spatialReference: o9, view: n14 } = this, a14 = new C3({ expressionInfo: i13, graphic: r9, interceptor: H2.interceptor, map: s12, spatialReference: o9, view: n14 });
    return this.contentViewModels[t12] = a14, this._handles.add(l2(() => a14.contentElementViewModel, () => this._setExpressionContentVM(a14, t12), h), J3), e12;
  }
  _compileAttachments(e12, t12) {
    const { graphic: i13 } = this, { description: r9, title: s12 } = e12;
    return this.contentViewModels[t12] = new c8({ graphic: i13, ...this._compileTitleAndDesc({ title: s12, description: r9 }) }), e12;
  }
  _compileCustom(e12, t12) {
    const { graphic: i13 } = this, { creator: r9, destroyer: s12 } = e12;
    return this.contentViewModels[t12] = new l5({ graphic: i13, creator: r9, destroyer: s12 }), e12;
  }
  _compileTitleAndDesc({ title: e12, description: t12 }) {
    const { _fieldInfoMap: i13, _sourceLayer: r9, graphic: s12, formattedAttributes: o9 } = this, n14 = s12 == null ? void 0 : s12.attributes, a14 = this._expressionAttributes, l12 = o9.global;
    return { title: G({ attributes: n14, fieldInfoMap: i13, globalAttributes: l12, expressionAttributes: a14, layer: r9, text: e12 }), description: G({ attributes: n14, fieldInfoMap: i13, globalAttributes: l12, expressionAttributes: a14, layer: r9, text: t12 }) };
  }
  _createFieldsVMParams(e12, t12) {
    const i13 = this._effectivePopupTemplate, r9 = this.formattedAttributes, s12 = { ...r9 == null ? void 0 : r9.global, ...r9 == null ? void 0 : r9.content[t12] }, o9 = (e12 == null ? void 0 : e12.fieldInfos) || (i13 == null ? void 0 : i13.fieldInfos), n14 = o9 == null ? void 0 : o9.filter(({ fieldName: e13 }) => M2(e13) || pe(e13) || s12.hasOwnProperty(e13)), a14 = i13 == null ? void 0 : i13.expressionInfos, { description: l12, title: p16 } = e12;
    return { attributes: s12, expressionInfos: a14, fieldInfos: n14, ...this._compileTitleAndDesc({ title: p16, description: l12 }) };
  }
  _compileFields(e12, t12) {
    const i13 = e12.clone(), r9 = new n8(this._createFieldsVMParams(e12, t12));
    return this.contentViewModels[t12] = r9, i13.fieldInfos = r9.formattedFieldInfos.slice(0), i13;
  }
  _createMediaVMParams(e12, t12) {
    const { abilities: i13, graphic: r9, _fieldInfoMap: s12, _effectivePopupTemplate: o9, relatedInfos: n14, _sourceLayer: a14, _expressionAttributes: l12 } = this, p16 = this.formattedAttributes, c21 = (r9 == null ? void 0 : r9.attributes) ?? {}, { description: d10, mediaInfos: u9, title: h13 } = e12;
    return { abilities: { chartAnimation: i13.chartAnimation }, activeMediaInfoIndex: e12.activeMediaInfoIndex || 0, attributes: c21, isAggregate: r9 == null ? void 0 : r9.isAggregate, layer: a14, fieldInfoMap: s12, formattedAttributes: { ...p16 == null ? void 0 : p16.global, ...p16 == null ? void 0 : p16.content[t12] }, expressionAttributes: l12, mediaInfos: u9, popupTemplate: o9, relatedInfos: n14, ...this._compileTitleAndDesc({ title: h13, description: d10 }) };
  }
  _compileMedia(e12, t12) {
    const i13 = e12.clone(), r9 = new M3(this._createMediaVMParams(e12, t12));
    return i13.mediaInfos = r9.formattedMediaInfos.slice(0), this.contentViewModels[t12] = r9, i13;
  }
  _createTextVMParams(e12) {
    var _a;
    const { graphic: t12, _fieldInfoMap: i13, _sourceLayer: r9, _expressionAttributes: s12 } = this;
    if (e12 && e12.text) {
      const o9 = (t12 == null ? void 0 : t12.attributes) ?? {}, n14 = ((_a = this.formattedAttributes) == null ? void 0 : _a.global) ?? {};
      e12.text = G({ attributes: o9, fieldInfoMap: i13, globalAttributes: n14, expressionAttributes: s12, layer: r9, text: e12.text });
    }
    return { graphic: t12, creator: e12.text };
  }
  _compileText(e12, t12) {
    const i13 = e12.clone();
    return this.contentViewModels[t12] = new l5(this._createTextVMParams(i13)), i13;
  }
  _compileLastEditInfo() {
    const { _effectivePopupTemplate: e12, _sourceLayer: t12, graphic: i13 } = this;
    if (!e12)
      return;
    const { lastEditInfoEnabled: r9 } = e12, s12 = t12 == null ? void 0 : t12.editFieldsInfo;
    return r9 && s12 ? ne(s12, i13 == null ? void 0 : i13.attributes) : void 0;
  }
  _compileTitle(e12) {
    var _a;
    const { _fieldInfoMap: t12, _sourceLayer: i13, graphic: r9, _expressionAttributes: s12 } = this, o9 = (r9 == null ? void 0 : r9.attributes) ?? {}, n14 = ((_a = this.formattedAttributes) == null ? void 0 : _a.global) ?? {};
    return G({ attributes: o9, fieldInfoMap: t12, globalAttributes: n14, expressionAttributes: s12, layer: i13, text: e12 });
  }
  async _getTitle() {
    const { _effectivePopupTemplate: e12, graphic: t12 } = this;
    if (!t12)
      return null;
    const i13 = e12 == null ? void 0 : e12.title;
    return q2(i13, { graphic: t12 });
  }
  async _getContent() {
    const { _effectivePopupTemplate: e12, graphic: t12 } = this;
    if (!t12)
      return null;
    const i13 = e12 == null ? void 0 : e12.content;
    return q2(i13, { graphic: t12 });
  }
  async _queryFeature(e12) {
    const { _featureAbortController: t12, _sourceLayer: i13, graphic: r9, _effectivePopupTemplate: s12 } = this, o9 = this.map, n14 = this.view, a14 = this.spatialReference;
    if (t12 !== this._featureAbortController || !r9)
      return;
    await de({ graphic: r9, popupTemplate: s12, layer: i13, spatialReference: a14 }, e12);
    const { content: { value: l12 }, title: { value: c21 } } = await j({ content: this._getContent(), title: this._getTitle() }), { expressionAttributes: { value: d10 } } = await j({ checkForRelatedFeatures: this._checkForRelatedFeatures(e12), expressionAttributes: m10({ expressionInfos: s12 == null ? void 0 : s12.expressionInfos, spatialReference: a14, graphic: r9, map: o9, interceptor: H2.interceptor, view: n14 }) });
    t12 === this._featureAbortController && r9 && (this._expressionAttributes = d10, this._graphicExpressionAttributes = { ...r9.attributes, ...d10 }, this._set("formattedAttributes", this._createFormattedAttributes(l12)), this._set("title", this._compileTitle(c21)), this._set("lastEditInfo", this._compileLastEditInfo() || null), this._set("content", this._compileContent(l12) || null));
  }
  _createMediaFormattedAttributes({ contentElement: e12, contentElementIndex: t12, formattedAttributes: i13 }) {
    const { _effectivePopupTemplate: r9, graphic: s12, relatedInfos: o9, _sourceLayer: n14, _fieldInfoMap: a14, _graphicExpressionAttributes: l12 } = this;
    i13.content[t12] = se2({ fieldInfos: r9 == null ? void 0 : r9.fieldInfos, graphic: s12, attributes: { ...l12, ...e12.attributes }, layer: n14, fieldInfoMap: a14, relatedInfos: o9 });
  }
  _createFieldsFormattedAttributes({ contentElement: e12, contentElementIndex: t12, formattedAttributes: i13 }) {
    if (e12.fieldInfos) {
      const { graphic: r9, relatedInfos: s12, _sourceLayer: o9, _fieldInfoMap: n14, _graphicExpressionAttributes: a14 } = this;
      i13.content[t12] = se2({ fieldInfos: e12.fieldInfos, graphic: r9, attributes: { ...a14, ...e12.attributes }, layer: o9, fieldInfoMap: n14, relatedInfos: s12 });
    }
  }
  _createFormattedAttributes(e12) {
    const { _effectivePopupTemplate: t12, graphic: i13, relatedInfos: r9, _sourceLayer: s12, _fieldInfoMap: o9, _graphicExpressionAttributes: n14 } = this, a14 = t12 == null ? void 0 : t12.fieldInfos, l12 = { global: se2({ fieldInfos: a14, graphic: i13, attributes: n14, layer: s12, fieldInfoMap: o9, relatedInfos: r9 }), content: [] };
    return Array.isArray(e12) && e12.forEach((e13, t13) => {
      "fields" === e13.type && this._createFieldsFormattedAttributes({ contentElement: e13, contentElementIndex: t13, formattedAttributes: l12 }), "media" === e13.type && this._createMediaFormattedAttributes({ contentElement: e13, contentElementIndex: t13, formattedAttributes: l12 });
    }), l12;
  }
  _checkForRelatedFeatures(e12) {
    const { graphic: t12, _effectivePopupTemplate: i13 } = this;
    return this._queryRelatedInfos(t12, oe(i13), e12);
  }
  async _queryRelatedInfos(e12, t12, i13) {
    const { relatedInfos: r9, _sourceLayer: s12 } = this;
    r9.clear();
    const o9 = null != (s12 == null ? void 0 : s12.associatedLayer) ? await (s12 == null ? void 0 : s12.associatedLayer.load(i13)) : s12;
    if (!o9 || !e12)
      return;
    const n14 = t12.filter((e13) => e13 && pe(e13.fieldName));
    if (!n14 || !n14.length)
      return;
    t12.forEach((e13) => this._configureRelatedInfo(e13, o9));
    const a14 = await R3({ relatedInfos: r9, layer: o9 }, i13);
    Object.keys(a14).forEach((e13) => {
      var _a;
      const t13 = r9.get(e13.toString()), i14 = (_a = a14[e13]) == null ? void 0 : _a.value;
      t13 && i14 && (t13.layerInfo = i14.data);
    });
    const l12 = await $2({ graphic: e12, relatedInfos: r9, layer: o9 }, i13);
    Object.keys(l12).forEach((e13) => {
      var _a;
      F5((_a = l12[e13]) == null ? void 0 : _a.value, r9.get(e13.toString()));
    });
  }
  _configureRelatedInfo(e12, t12) {
    const { relatedInfos: i13 } = this, r9 = m9(e12.fieldName);
    if (!r9)
      return;
    const { layerId: s12, fieldName: o9 } = r9;
    if (!s12)
      return;
    const n14 = i13.get(s12.toString()) || g5(s12, t12);
    n14 && (U3({ relatedInfo: n14, fieldName: o9, fieldInfo: e12 }), this.relatedInfos.set(s12, n14));
  }
};
X.interceptor = new e9(be, Fe), e([y2()], X.prototype, "_error", void 0), e([y2()], X.prototype, "_featureAbortController", void 0), e([y2({ readOnly: true })], X.prototype, "_effectivePopupTemplate", null), e([y2({ readOnly: true })], X.prototype, "_fieldInfoMap", null), e([y2({ readOnly: true })], X.prototype, "_sourceLayer", null), e([y2()], X.prototype, "abilities", void 0), e([s4("abilities")], X.prototype, "castAbilities", null), e([y2({ readOnly: true })], X.prototype, "content", void 0), e([y2({ readOnly: true })], X.prototype, "contentViewModels", void 0), e([y2()], X.prototype, "description", void 0), e([y2({ type: Boolean })], X.prototype, "defaultPopupTemplateEnabled", void 0), e([y2({ readOnly: true })], X.prototype, "isTable", null), e([y2({ readOnly: true })], X.prototype, "state", null), e([y2({ readOnly: true })], X.prototype, "formattedAttributes", void 0), e([y2({ type: h4, value: null })], X.prototype, "graphic", null), e([y2({ readOnly: true })], X.prototype, "lastEditInfo", void 0), e([y2({ readOnly: true })], X.prototype, "relatedInfos", void 0), e([y2()], X.prototype, "spatialReference", null), e([y2({ readOnly: true })], X.prototype, "title", void 0), e([y2()], X.prototype, "map", null), e([y2({ readOnly: true })], X.prototype, "waitingForContent", null), e([y2()], X.prototype, "view", void 0), X = H2 = e([a("esri.widgets.FeatureViewModel")], X);
var Y3 = X;

// node_modules/@arcgis/core/widgets/Feature/resources.js
var e10 = "esri-feature";
var t7 = { iconText: "esri-icon-font-fallback-text", iconLoading: "esri-icon-loading-indicator esri-rotating", esriTable: "esri-widget__table", esriWidget: "esri-widget", base: e10, container: `${e10}__size-container`, title: `${e10}__title`, main: `${e10}__main-container`, btn: `${e10}__button`, icon: `${e10}__icon`, content: `${e10}__content`, contentNode: `${e10}__content-node`, contentElement: `${e10}__content-element`, text: `${e10}__text`, lastEditedInfo: `${e10}__last-edited-info`, fields: `${e10}__fields`, fieldHeader: `${e10}__field-header`, fieldData: `${e10}__field-data`, fieldDataDate: `${e10}__field-data--date`, loadingSpinnerContainer: `${e10}__loading-container`, spinner: `${e10}__loading-spinner` };

// node_modules/@arcgis/core/widgets/Feature/support/FeatureContentMixin.js
var i10 = (i13) => {
  let n14 = class extends i13 {
    constructor() {
      super(...arguments), this.renderNodeContent = (e12) => e4(e12) && !e12.destroyed ? n4("div", { class: t7.contentNode, key: e12 }, e12.render()) : e12 instanceof HTMLElement ? n4("div", { class: t7.contentNode, key: e12, bind: e12, afterCreate: this._attachToNode }) : t4(e12) ? n4("div", { class: t7.contentNode, key: e12, bind: e12.domNode, afterCreate: this._attachToNode }) : null;
    }
    _attachToNode(e12) {
      const o9 = this;
      e12.appendChild(o9);
    }
  };
  return n14 = e([a("esri.widgets.Feature.ContentMixin")], n14), n14;
};

// node_modules/@arcgis/core/widgets/Feature.js
var b10;
var _3 = { title: true, content: true, lastEditedInfo: true };
var W4 = "relationship-handles";
var j9 = b10 = class extends i10(W) {
  constructor(e12, t12) {
    super(e12, t12), this._contentWidgets = [], this.flowItems = null, this.headingLevel = 2, this.messages = null, this.messagesCommon = null, this.messagesURIUtils = null, this.visibleElements = { ..._3 }, this.viewModel = new Y3();
  }
  initialize() {
    this.addHandles(l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentViewModels;
    }, () => this._setupContentWidgets(), h));
  }
  loadDependencies() {
    return n3({ notice: () => import("./calcite-notice-K7YCXAPF.js") });
  }
  destroy() {
    this._destroyContentWidgets();
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e12) {
    this.viewModel.graphic = e12;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e12) {
    this.viewModel.defaultPopupTemplateEnabled = e12;
  }
  get isTable() {
    return this.viewModel.isTable;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e12) {
    this._overrideIfSome("label", e12);
  }
  get spatialReference() {
    return this.viewModel.spatialReference;
  }
  set spatialReference(e12) {
    this.viewModel.spatialReference = e12;
  }
  get title() {
    return this.viewModel.title;
  }
  castVisibleElements(e12) {
    return { ..._3, ...e12 };
  }
  get map() {
    return this.viewModel.map;
  }
  set map(e12) {
    this.viewModel.map = e12;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e12) {
    this.viewModel.view = e12;
  }
  render() {
    const { state: e12 } = this.viewModel, t12 = n4("div", { class: t7.container, key: "container" }, this.renderTitle(), "error" === e12 ? this.renderError() : "loading" === e12 ? this.renderLoading() : this.renderContentContainer());
    return n4("div", { class: this.classes(t7.base, t7.esriWidget) }, t12);
  }
  setActiveMedia(e12, t12) {
    return this.viewModel.setActiveMedia(e12, t12);
  }
  nextMedia(e12) {
    return this.viewModel.nextMedia(e12);
  }
  previousMedia(e12) {
    return this.viewModel.previousMedia(e12);
  }
  renderError() {
    const { messagesCommon: e12, messages: t12, visibleElements: s12 } = this;
    return n4("calcite-notice", { open: true, kind: "danger", icon: "exclamation-mark-circle", scale: "s" }, s12.title ? n4("div", { key: "error-title", slot: "title" }, e12.errorMessage) : null, n4("div", { key: "error-message", slot: "message" }, t12.loadingError));
  }
  renderLoading() {
    return n4("div", { key: "loading-container", class: t7.loadingSpinnerContainer }, n4("span", { class: this.classes(t7.iconLoading, t7.spinner) }));
  }
  renderContentContainer() {
    const { visibleElements: e12 } = this;
    return e12.content ? n4("div", { class: t7.main }, [this.renderContent(), this.renderLastEditInfo()]) : null;
  }
  renderTitle() {
    const { visibleElements: e12, title: t12 } = this;
    return e12.title ? n4(n5, { level: this.headingLevel, class: t7.title, innerHTML: t12 }) : null;
  }
  renderContent() {
    const e12 = this.viewModel.content, t12 = "content";
    if (!e12)
      return null;
    if (Array.isArray(e12))
      return e12.length ? n4("div", { class: t7.contentNode, key: `${t12}-content-elements` }, e12.map(this.renderContentElement, this)) : null;
    if ("string" == typeof e12) {
      const e13 = this._contentWidgets[0];
      return !e13 || e13.destroyed ? null : n4("div", { class: t7.contentNode, key: `${t12}-content` }, e13.render());
    }
    return this.renderNodeContent(e12);
  }
  renderContentElement(e12, t12) {
    var _a;
    const { visibleElements: s12 } = this;
    if ("boolean" != typeof s12.content && !((_a = s12.content) == null ? void 0 : _a[e12.type]))
      return null;
    switch (e12.type) {
      case "attachments":
        return this.renderAttachments(t12);
      case "custom":
        return this.renderCustom(e12, t12);
      case "fields":
        return this.renderFields(t12);
      case "media":
        return this.renderMedia(t12);
      case "text":
        return this.renderText(e12, t12);
      case "expression":
        return this.renderExpression(t12);
      case "relationship":
        return this.renderRelationship(t12);
      default:
        return null;
    }
  }
  renderAttachments(e12) {
    const t12 = this._contentWidgets[e12];
    if (!t12 || t12.destroyed)
      return null;
    const { state: s12, attachmentInfos: i13 } = t12.viewModel;
    return "loading" === s12 || i13.length > 0 ? n4("div", { key: this._buildKey("attachments-element", e12), class: this.classes(t7.contentElement) }, t12.render()) : null;
  }
  renderRelationship(e12) {
    const t12 = this._contentWidgets[e12];
    return t12 && !t12.destroyed && this.flowItems ? n4("div", { key: this._buildKey("relationship-element", e12), class: t7.contentElement }, t12.render()) : null;
  }
  renderExpression(e12) {
    const t12 = this._contentWidgets[e12];
    return !t12 || t12.destroyed ? null : n4("div", { key: this._buildKey("expression-element", e12), class: t7.contentElement }, t12.render());
  }
  renderCustom(e12, t12) {
    const { creator: s12 } = e12, i13 = this._contentWidgets[t12];
    return !i13 || i13.destroyed ? null : s12 ? n4("div", { key: this._buildKey("custom-element", t12), class: t7.contentElement }, i13.render()) : null;
  }
  renderFields(e12) {
    const t12 = this._contentWidgets[e12];
    return !t12 || t12.destroyed ? null : n4("div", { key: this._buildKey("fields-element", e12), class: t7.contentElement }, t12.render());
  }
  renderMedia(e12) {
    const t12 = this._contentWidgets[e12];
    return !t12 || t12.destroyed ? null : n4("div", { key: this._buildKey("media-element", e12), class: t7.contentElement }, t12.render());
  }
  renderLastEditInfo() {
    const { visibleElements: e12, messages: t12 } = this, { lastEditInfo: s12 } = this.viewModel;
    if (!s12 || !e12.lastEditedInfo)
      return null;
    const { date: i13, user: n14 } = s12, r9 = "edit" === s12.type ? n14 ? t12.lastEditedByUser : t12.lastEdited : n14 ? t12.lastCreatedByUser : t12.lastCreated, o9 = s3(r9, { date: i13, user: n14 });
    return n4("div", { key: "edit-info-element", class: this.classes(t7.lastEditedInfo, t7.contentElement) }, o9);
  }
  renderText(e12, t12) {
    const s12 = e12.text, i13 = this._contentWidgets[t12];
    return !i13 || i13.destroyed ? null : s12 ? n4("div", { key: this._buildKey("text-element", t12), class: this.classes(t7.contentElement, t7.text) }, i13.render()) : null;
  }
  _buildKey(e12, ...t12) {
    return `${e12}__${this.get("viewModel.graphic.uid") || "0"}-${t12.join("-")}`;
  }
  _destroyContentWidget(e12) {
    e12 && (e12.viewModel = null, !e12.destroyed && e12.destroy());
  }
  _destroyContentWidgets() {
    this.removeHandles(W4), this._contentWidgets.forEach((e12) => this._destroyContentWidget(e12)), this._contentWidgets = [];
  }
  _addFeatureRelationshipHandles(e12) {
    const { flowItems: t12, visibleElements: i13 } = this;
    this.addHandles([a2(() => e12, "select-record", ({ featureViewModel: e13 }) => {
      t12 && (e13.abilities = { relationshipContent: true }, t12.push(new b10({ flowItems: t12, viewModel: e13, visibleElements: i13 })));
    }), a2(() => e12, "show-all-records", () => {
      if (!t12)
        return;
      const { viewModel: s12 } = e12;
      s12.showAllEnabled = true;
      const i14 = new _2({ visibleElements: { title: false, description: false }, viewModel: s12 });
      this._addFeatureRelationshipHandles(i14), t12.push(i14);
    })], W4);
  }
  _setupContentWidgets() {
    this._destroyContentWidgets();
    const { headingLevel: e12, visibleElements: t12 } = this, s12 = this.get("viewModel.content"), { contentViewModels: i13 } = this.viewModel;
    if (Array.isArray(s12))
      s12.forEach((s13, n14) => {
        if ("attachments" === s13.type && (this._contentWidgets[n14] = new h6({ displayType: s13.displayType, headingLevel: t12.title ? e12 + 1 : e12, viewModel: i13[n14] })), "fields" === s13.type && (this._contentWidgets[n14] = new c12({ viewModel: i13[n14] })), "media" === s13.type && (this._contentWidgets[n14] = new j7({ viewModel: i13[n14] })), "text" === s13.type && (this._contentWidgets[n14] = new p7({ viewModel: i13[n14] })), "custom" === s13.type && (this._contentWidgets[n14] = new p7({ viewModel: i13[n14] })), "expression" === s13.type && (this._contentWidgets[n14] = new m11({ viewModel: i13[n14] })), "relationship" === s13.type) {
          const e13 = new _2({ viewModel: i13[n14] });
          this._addFeatureRelationshipHandles(e13), this._contentWidgets[n14] = e13;
        }
      }, this);
    else {
      const e13 = i13[0];
      e13 && !e13.destroyed && (this._contentWidgets[0] = new p7({ viewModel: e13 }));
    }
    this.scheduleRender();
  }
};
e([y2()], j9.prototype, "graphic", null), e([y2()], j9.prototype, "defaultPopupTemplateEnabled", null), e([y2()], j9.prototype, "flowItems", void 0), e([y2()], j9.prototype, "headingLevel", void 0), e([y2({ readOnly: true })], j9.prototype, "isTable", null), e([y2()], j9.prototype, "label", null), e([y2(), e2("esri/widgets/Feature/t9n/Feature")], j9.prototype, "messages", void 0), e([y2(), e2("esri/t9n/common")], j9.prototype, "messagesCommon", void 0), e([y2(), e2("esri/widgets/support/t9n/uriUtils")], j9.prototype, "messagesURIUtils", void 0), e([y2()], j9.prototype, "spatialReference", null), e([y2({ readOnly: true })], j9.prototype, "title", null), e([y2()], j9.prototype, "visibleElements", void 0), e([s4("visibleElements")], j9.prototype, "castVisibleElements", null), e([y2()], j9.prototype, "map", null), e([y2()], j9.prototype, "view", null), e([y2({ type: Y3 })], j9.prototype, "viewModel", void 0), j9 = b10 = e([a("esri.widgets.Feature")], j9);
var C4 = j9;

// node_modules/@arcgis/core/widgets/support/AnchorElementViewModel.js
var l9;
var p11 = Symbol("anchorHandles");
var d7 = class extends n2.EventedAccessor {
  constructor(o9) {
    super(o9), this[l9] = new t(), this.location = null, this.screenLocationEnabled = false, this.view = null, this[p11].add([f(() => n(this.screenLocationEnabled ? this.view : null, (o10) => [o10.size, "3d" === o10.type ? o10.camera : o10.viewpoint]), () => this.notifyChange("screenLocation")), l2(() => this.screenLocation, (o10, e12) => {
      null != o10 && null != e12 && this.emit("view-change");
    })]);
  }
  destroy() {
    this.view = null, this[p11] = l(this[p11]);
  }
  get screenLocation() {
    var _a;
    const { location: o9, view: e12, screenLocationEnabled: t12 } = this;
    return t12 && null != o9 && null != e12 && e12.ready ? (_a = e12.toScreen) == null ? void 0 : _a.call(e12, o9) : null;
  }
};
l9 = p11, e([y2()], d7.prototype, "location", void 0), e([y2()], d7.prototype, "screenLocation", null), e([y2()], d7.prototype, "screenLocationEnabled", void 0), e([y2()], d7.prototype, "view", void 0), d7 = e([a("esri.widgets.support.AnchorElementViewModel")], d7);
var m13 = d7;

// node_modules/@arcgis/core/widgets/Spinner/SpinnerViewModel.js
var t8 = "esri.widgets.CompassViewModel";
var p12 = class extends m13 {
  constructor(s12) {
    super(s12), this.visible = false;
  }
};
e([y2()], p12.prototype, "visible", void 0), p12 = e([a(t8)], p12);
var c17 = p12;

// node_modules/@arcgis/core/widgets/Spinner.js
var a11 = "esri-spinner";
var c18 = { base: a11, spinnerStart: `${a11}--start`, spinnerFinish: `${a11}--finish` };
var p13 = class extends W {
  constructor(i13, e12) {
    super(i13, e12), this._animationDelay = 500, this._animationPromise = null, this.viewModel = new c17();
  }
  initialize() {
    this.addHandles(l2(() => this.visible, (i13) => this._visibleChange(i13)));
  }
  destroy() {
    this._animationPromise = null;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(i13) {
    this.viewModel.location = i13;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(i13) {
    this.viewModel.view = i13;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(i13) {
    this.viewModel.visible = i13;
  }
  show(i13) {
    const { location: e12, promise: t12 } = i13 ?? {};
    e12 && (this.viewModel.location = e12), this.visible = true;
    const s12 = () => this.hide();
    t12 && t12.catch(() => {
    }).then(s12);
  }
  hide() {
    this.visible = false;
  }
  render() {
    const { visible: i13 } = this, { screenLocation: e12 } = this.viewModel, t12 = !!e12, s12 = i13 && t12, o9 = !i13 && t12, r9 = { [c18.spinnerStart]: s12, [c18.spinnerFinish]: o9 }, n14 = this._getPositionStyles();
    return n4("div", { class: this.classes(c18.base, r9), styles: n14 });
  }
  _visibleChange(i13) {
    if (i13)
      return void (this.viewModel.screenLocationEnabled = true);
    const t12 = g(this._animationDelay);
    this._animationPromise = t12, t12.catch(() => {
    }).then(() => {
      this._animationPromise === t12 && (this.viewModel.screenLocationEnabled = false, this._animationPromise = null);
    });
  }
  _getPositionStyles() {
    const { screenLocation: i13, view: e12 } = this.viewModel;
    if (null == e12 || null == i13)
      return {};
    const { padding: t12 } = e12;
    return { left: i13.x - t12.left + "px", top: i13.y - t12.top + "px" };
  }
};
e([y2()], p13.prototype, "location", null), e([y2()], p13.prototype, "view", null), e([y2({ type: c17 })], p13.prototype, "viewModel", void 0), e([y2()], p13.prototype, "visible", null), p13 = e([a("esri.widgets.Spinner")], p13);
var h9 = p13;

// node_modules/@arcgis/core/widgets/Popup/actions.js
var o6 = { iconZoom: "esri-icon-zoom-in-magnifying-glass", iconTrash: "esri-icon-trash", iconBrowseClusteredFeatures: "esri-icon-table" };
var t9 = new c6({ icon: "magnifying-glass-plus", id: "zoom-to-feature", title: "{messages.zoom}", className: o6.iconZoom });
var i11 = new c6({ icon: "trash", id: "remove-selected-feature", title: "{messages.remove}", className: o6.iconTrash });
var a12 = new c6({ icon: "magnifying-glass-plus", id: "zoom-to-clustered-features", title: "{messages.zoom}", className: o6.iconZoom });
var r8 = new a5({ icon: "table", id: "browse-clustered-features", title: "{messages.browseClusteredFeatures}", className: o6.iconBrowseClusteredFeatures, value: false });

// node_modules/@arcgis/core/widgets/Popup/actionUtils.js
var c19 = "esri.widgets.Popup.PopupViewModel";
var s11 = s.getLogger(c19);
var u7 = (t12) => {
  const { event: c21, view: s12, viewModel: u9 } = t12, { action: l12 } = c21;
  if (!l12)
    return Promise.reject(new s2("trigger-action:missing-arguments", "Event has no action"));
  const { disabled: d10, id: g9 } = l12;
  if (!g9)
    return Promise.reject(new s2("trigger-action:invalid-action", "action.id is missing"));
  if (d10)
    return Promise.reject(new s2("trigger-action:invalid-action", "Action is disabled"));
  if (g9 === t9.id)
    return w8(u9).catch(m);
  if (g9 === a12.id)
    return f9(u9);
  if (g9 === r8.id)
    return u9.browseClusterEnabled = !u9.browseClusterEnabled, u9.featureMenuOpen = u9.browseClusterEnabled, Promise.resolve();
  if (g9 === i11.id) {
    u9.visible = false;
    const { selectedFeature: t13 } = u9;
    if (!t13)
      return Promise.reject(new s2(`trigger-action:${i11.id}`, "selectedFeature is required", { selectedFeature: t13 }));
    const { sourceLayer: r9 } = t13;
    return r9 ? r9.remove(t13) : s12 == null ? void 0 : s12.graphics.remove(t13), Promise.resolve();
  }
  return Promise.resolve();
};
function l10(e12) {
  const { selectedFeature: t12, location: r9, view: n14 } = e12;
  if (!n14)
    return null;
  if ("3d" === n14.type)
    return t12 ?? r9 ?? null;
  return e12.get("selectedFeature.geometry") || r9;
}
function d8(e12) {
  var _a, _b;
  return !!e12 && e12.isAggregate && "cluster" === ((_b = (_a = e12.sourceLayer) == null ? void 0 : _a.featureReduction) == null ? void 0 : _b.type);
}
async function g8(e12, t12) {
  if ("3d" !== (t12 == null ? void 0 : t12.type) || !e12 || "esri.Graphic" !== e12.declaredClass)
    return true;
  const r9 = t12.getViewForGraphic(e12);
  if (r9 && "whenGraphicBounds" in r9) {
    let t13;
    try {
      t13 = await r9.whenGraphicBounds(e12, { useViewElevation: true });
    } catch (n14) {
    }
    return !t13 || !t13.boundingBox || t13.boundingBox[0] === t13.boundingBox[3] && t13.boundingBox[1] === t13.boundingBox[4] && t13.boundingBox[2] === t13.boundingBox[5];
  }
  return true;
}
async function w8(t12) {
  var _a;
  const { location: r9, selectedFeature: o9, view: i13, zoomFactor: a14 } = t12, c21 = l10(t12);
  if (!i13 || !c21) {
    const t13 = new s2("zoom-to:invalid-target-or-view", "Cannot zoom to location without a target and view.", { target: c21, view: i13 });
    throw s11.error(t13), t13;
  }
  const u9 = i13.scale / a14, d10 = (_a = t12.selectedFeature) == null ? void 0 : _a.geometry, w9 = d10 ?? r9, f11 = null != w9 && "point" === w9.type && await g8(o9, i13);
  t9.active = true, t9.disabled = true;
  try {
    await t12.zoomTo({ target: { target: c21, scale: f11 ? u9 : void 0 } });
  } catch (m15) {
    const t13 = new s2("zoom-to:invalid-graphic", "Could not zoom to the location of the graphic.", { graphic: o9 });
    s11.error(t13);
  } finally {
    t9.active = false, t9.disabled = false, t12.zoomToLocation = null, f11 && (t12.location = w9);
  }
}
async function f9(t12) {
  const { selectedFeature: r9, view: n14 } = t12;
  if ("2d" !== (n14 == null ? void 0 : n14.type)) {
    const t13 = new s2("zoomToCluster:invalid-view", "View must be 2d MapView.", { view: n14 });
    throw s11.error(t13), t13;
  }
  if (!r9 || !d8(r9)) {
    const t13 = new s2("zoomToCluster:invalid-selectedFeature", "Selected feature must represent an aggregate/cluster graphic.", { selectedFeature: r9 });
    throw s11.error(t13), t13;
  }
  const [i13, a14] = await v7(n14, r9);
  a12.active = true, a12.disabled = true;
  const { extent: c21 } = await i13.queryExtent(a14);
  await t12.zoomTo({ target: c21 }), a12.active = false, a12.disabled = false;
}
async function m14(e12) {
  const { view: t12, selectedFeature: r9 } = e12;
  if (!t12 || !r9)
    return;
  const [n14, o9] = await v7(t12, r9), { extent: i13 } = await n14.queryExtent(o9);
  e12.selectedClusterBoundaryFeature.geometry = i13, t12.graphics.add(e12.selectedClusterBoundaryFeature);
}
async function p14(e12) {
  const { selectedFeature: t12, view: r9 } = e12;
  if (!r9 || !t12)
    return;
  const [n14, o9] = await v7(r9, t12);
  r8.active = true, r8.disabled = true;
  const { features: a14 } = await n14.queryFeatures(o9);
  r8.active = false, r8.disabled = false, r8.value = true, e12 == null ? void 0 : e12.open({ features: [t12].concat(a14), featureMenuOpen: true });
}
async function v7(e12, t12) {
  const r9 = await e12.whenLayerView(t12.sourceLayer), n14 = r9.createQuery(), o9 = t12.getObjectId();
  return n14.aggregateIds = null != o9 ? [o9] : [], [r9, n14];
}
function y9(e12) {
  r8.value = false;
  const t12 = e12.features.filter((e13) => d8(e13));
  t12.length && (e12.features = t12);
}
function h10(e12) {
  var _a;
  if (null == e12)
    return null;
  switch (e12.type) {
    case "point":
      return e12;
    case "extent":
      return e12.center;
    case "polygon":
      return e12.centroid;
    case "multipoint":
    case "polyline":
      return (_a = e12.extent) == null ? void 0 : _a.center;
    default:
      return null;
  }
}

// node_modules/@arcgis/core/widgets/Popup/css.js
var e11 = "esri-popup";
var t10 = `${e11}__header`;
var o7 = `${e11}--is-docked`;
var n12 = { calciteThemeLight: "calcite-mode-light", calciteThemeDark: "calcite-mode-dark", iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconRightTriangleArrow: "esri-icon-right-triangle-arrow", iconDockToTop: "esri-icon-maximize", iconDockToBottom: "esri-icon-dock-bottom", iconDockToLeft: "esri-icon-dock-left", iconDockToRight: "esri-icon-dock-right", iconClose: "esri-icon-close", iconUndock: "esri-icon-minimize", iconCheckMark: "esri-icon-check-mark", iconLoading: "esri-icon-loading-indicator", iconDefaultAction: "esri-icon-default-action", iconActionsMenu: "esri-icon-handle-horizontal", rotating: "esri-rotating", base: e11, widget: "esri-widget", main: `${e11}__main-container`, loadingContainer: `${e11}__loading-container`, isCollapsible: `${e11}--is-collapsible`, isCollapsed: `${e11}--is-collapsed`, shadow: `${e11}--shadow`, isDocked: o7, isDockedTopLeft: `${o7}-top-left`, isDockedTopCenter: `${o7}-top-center`, isDockedTopRight: `${o7}-top-right`, isDockedBottomLeft: `${o7}-bottom-left`, isDockedBottomCenter: `${o7}-bottom-center`, isDockedBottomRight: `${o7}-bottom-right`, alignTopCenter: `${e11}--aligned-top-center`, alignBottomCenter: `${e11}--aligned-bottom-center`, alignTopLeft: `${e11}--aligned-top-left`, alignBottomLeft: `${e11}--aligned-bottom-left`, alignTopRight: `${e11}--aligned-top-right`, alignBottomRight: `${e11}--aligned-bottom-right`, isFeatureMenuOpen: `${e11}--feature-menu-open`, isActionsMenuOpen: `${e11}--actions-menu-open`, hasFeatureUpdated: `${e11}--feature-updated`, header: t10, headerButtons: `${t10}-buttons`, headerContainer: `${t10}-container`, headerContainerButton: `${t10}-container--button`, headerTitle: `${t10}-title`, content: `${e11}__content`, contentHasFlows: "esri-content--has-flows", contentFlowItem: "esri-content__flow-item", footer: `${e11}__footer`, footerHasPagination: `${e11}__footer--has-pagination`, footerHasActions: `${e11}__footer--has-actions`, footerHasActionsMenu: `${e11}__footer--has-actions-menu`, button: `${e11}__button`, buttonDisabled: `${e11}__button--disabled`, buttonDock: `${e11}__button--dock`, icon: `${e11}__icon`, iconDock: `${e11}__icon--dock-icon`, inlineActionsContainer: `${e11}__inline-actions-container`, actionsMenuButton: `${e11}__actions-menu-button`, actions: `${e11}__actions`, action: `${e11}__action`, actionImage: `${e11}__action-image`, actionText: `${e11}__action-text`, actionToggle: `${e11}__action-toggle`, actionToggleOn: `${e11}__action-toggle--on`, actionExit: `${e11}__action--exit`, actionSelectFeature: `${e11}__action--select-feature`, pointer: `${e11}__pointer`, pointerDirection: `${e11}__pointer-direction`, navigation: `${e11}__navigation`, paginationIcon: `${e11}__pagination-icon`, paginationPrevious: `${e11}__pagination-previous`, paginationNext: `${e11}__pagination-next`, featureMenu: `${e11}__feature-menu`, featureMenuList: `${e11}__feature-menu-list`, featureMenuItem: `${e11}__feature-menu-item`, featureMenuViewport: `${e11}__feature-menu-viewport`, featureMenuHeader: `${e11}__feature-menu-header`, featureMenuNote: `${e11}__feature-menu-note`, featureMenuSelected: `${e11}__feature-menu-item--selected`, featureMenuButton: `${e11}__feature-menu-button`, featureMenuButtonIcon: `${e11}__feature-menu-button-icon`, featureMenuTitle: `${e11}__feature-menu-title`, featureMenuObserver: `${e11}__feature-menu-observer`, featureMenuLoader: `${e11}__feature-menu-loader`, collapseButton: `${e11}__collapse-button`, collapseIcon: `${e11}__collapse-icon` };

// node_modules/@arcgis/core/layers/LayerConstants.js
var o8 = "OBJECTID";

// node_modules/@arcgis/core/widgets/Legend/styles/support/relationshipUtils.js
var b11 = "esri-relationship-ramp";
var u8 = `${b11}--diamond`;
var c20 = `${b11}--square`;
var p15 = { diamondContainer: `${u8}__container`, diamondLeftCol: `${u8}__left-column`, diamondRightCol: `${u8}__right-column`, diamondMidCol: `${u8}__middle-column`, diamondMidColLabel: `${u8}__middle-column--label`, diamondMidColRamp: `${u8}__middle-column--ramp`, squareTable: `${c20}__table`, squareTableRow: `${c20}__table-row`, squareTableCell: `${c20}__table-cell`, squareTableLabel: `${c20}__table-label`, squareTableLabelLeftBottom: `${c20}__table-label--left-bottom`, squareTableLabelRightBottom: `${c20}__table-label--right-bottom`, squareTableLabelLeftTop: `${c20}__table-label--left-top`, squareTableLabelRightTop: `${c20}__table-label--right-top` };

// node_modules/@arcgis/core/symbols/support/symbolUtils.js
function L4(e12) {
  return e12 && "opacity" in e12 ? e12.opacity * L4(e12.parent) : 1;
}
async function x4(t12, l12) {
  if (!t12)
    return;
  const i13 = t12.sourceLayer, r9 = (null != l12 && l12.useSourceLayer ? i13 : t12.layer) ?? i13, a14 = L4(r9);
  if (null != t12.symbol && (null == l12 || true !== l12.ignoreGraphicSymbol)) {
    const e12 = "web-style" === t12.symbol.type ? await q(t12.symbol, { ...l12, cache: null != l12 ? l12.webStyleCache : null }) : t12.symbol.clone();
    return g2(e12, null, a14), e12;
  }
  const u9 = (null != l12 ? l12.renderer : null) ?? (r9 && "renderer" in r9 ? r9.renderer : null);
  let f11 = u9 && "getSymbolAsync" in u9 ? await u9.getSymbolAsync(t12, l12) : null;
  if (!f11)
    return;
  if (f11 = "web-style" === f11.type ? await f11.fetchSymbol({ ...l12, cache: null != l12 ? l12.webStyleCache : null }) : f11.clone(), !(u9 && "visualVariables" in u9 && u9.visualVariables && u9.visualVariables.length))
    return g2(f11, null, a14), f11;
  if ("arcadeRequiredForVisualVariables" in u9 && u9.arcadeRequiredForVisualVariables && (null == l12 || null == l12.arcade)) {
    const t13 = { ...l12 };
    t13.arcade = await i8(), l12 = t13;
  }
  const { getColor: p16, getOpacity: h13, getAllSizes: y11, getRotationAngle: d10 } = await import("./visualVariableUtils-MES5GLX7.js"), m15 = [], b12 = [], g9 = [], w9 = [];
  for (const e12 of u9.visualVariables)
    switch (e12.type) {
      case "color":
        m15.push(e12);
        break;
      case "opacity":
        b12.push(e12);
        break;
      case "rotation":
        w9.push(e12);
        break;
      case "size":
        e12.target || g9.push(e12);
    }
  const S8 = !!m15.length && m15[m15.length - 1], v8 = S8 ? p16(S8, t12, l12) : null, V5 = !!b12.length && b12[b12.length - 1];
  let x5 = V5 ? h13(V5, t12, l12) : null;
  if (null != a14 && (x5 = null != x5 ? x5 * a14 : a14), g2(f11, v8, x5), g9.length) {
    const e12 = y11(g9, t12, l12);
    await D(f11, e12);
  }
  for (const e12 of w9)
    I2(f11, d10(e12, t12, l12), e12.axis);
  return f11;
}

// node_modules/@arcgis/core/views/support/layerViewUtils.js
function n13(n14) {
  return n14 && "function" == typeof n14.highlight;
}

// node_modules/@arcgis/core/widgets/Popup/PopupViewModel.js
var I8 = V.ofType({ key: "type", defaultKeyValue: "button", base: p3, typeMap: { button: c6, toggle: a5 } });
var S6 = () => [t9.clone()];
var B4 = () => [a12.clone(), r8.clone()];
var R6 = class extends t5(m13) {
  get isLoadingFeature() {
    return this.featureViewModels.some((e12) => e12.waitingForContent);
  }
  constructor(e12) {
    super(e12), this._handles = new t(), this._pendingPromises = /* @__PURE__ */ new Set(), this._fetchFeaturesController = null, this._highlightSelectedFeaturePromise = null, this._highlightActiveFeaturePromise = null, this._selectedClusterFeature = null, this.featurePage = null, this.actions = new I8(), this.activeFeature = null, this.defaultPopupTemplateEnabled = false, this.autoCloseEnabled = false, this.autoOpenEnabled = true, this.browseClusterEnabled = false, this.content = null, this.featuresPerPage = 20, this.featureMenuOpen = false, this.featureViewModelAbilities = null, this.featureViewModels = [], this.highlightEnabled = true, this.includeDefaultActions = true, this.selectedClusterBoundaryFeature = new h4({ symbol: new S({ outline: { width: 1.5, color: "cyan" }, style: "none" }) }), this.title = null, this.updateLocationEnabled = false, this.view = null, this.visible = false, this.zoomFactor = 4, this.zoomToLocation = null;
  }
  initialize() {
    this._handles.add([this.on("view-change", () => this._autoClose()), l2(() => [this.highlightEnabled, this.selectedFeature, this.visible, this.view], () => this._highlightSelectedFeature()), l2(() => [this.highlightEnabled, this.activeFeature, this.visible, this.view], () => this._highlightActiveFeature()), l2(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.animation) == null ? void 0 : _b.state;
    }, (e12) => this._animationStateChange(e12)), l2(() => this.location, (e12) => this._locationChange(e12)), l2(() => this.selectedFeature, (e12) => this._selectedFeatureChange(e12)), l2(() => [this.selectedFeatureIndex, this.featureCount, this.featuresPerPage], () => this._selectedFeatureIndexChange()), l2(() => [this.featurePage, this.selectedFeatureIndex, this.featureCount, this.featuresPerPage, this.featureViewModels], () => this._setGraphicOnFeatureViewModels()), l2(() => this.featureViewModels, () => this._featureViewModelsChange()), this.on("trigger-action", (e12) => u7({ event: e12, viewModel: this, view: this.view })), f(() => !this.waitingForResult, () => this._waitingForResultChange(), U), l2(() => {
      var _a, _b;
      return [this.features, (_a = this.view) == null ? void 0 : _a.map, (_b = this.view) == null ? void 0 : _b.spatialReference];
    }, () => this._updateFeatureVMs()), l2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.scale;
    }, () => this._viewScaleChange()), f(() => !this.visible, () => this.browseClusterEnabled = false), l2(() => this.browseClusterEnabled, (e12) => e12 ? this.enableClusterBrowsing() : this.disableClusterBrowsing())]);
  }
  destroy() {
    this._cancelFetchingFeatures(), this._handles.destroy(), this._pendingPromises.clear(), this.browseClusterEnabled = false, this.view = null;
  }
  get active() {
    return !(!this.visible || this.waitingForResult);
  }
  get allActions() {
    const e12 = this._get("allActions") || new I8();
    e12.removeAll();
    const { actions: t12, defaultActions: i13, defaultPopupTemplateEnabled: s12, includeDefaultActions: r9, selectedFeature: o9 } = this, a14 = r9 ? i13.concat(t12) : t12, n14 = o9 && ("function" == typeof o9.getEffectivePopupTemplate && o9.getEffectivePopupTemplate(s12) || o9.popupTemplate), l12 = n14 && n14.actions, h13 = n14 && n14.overwriteActions ? l12 : l12 ? l12.concat(a14) : a14;
    return h13 && h13.filter(Boolean).forEach((t13) => e12.add(t13)), e12;
  }
  get defaultActions() {
    const e12 = this._get("defaultActions") || new I8();
    return e12.removeAll(), e12.addMany(d8(this.selectedFeature) ? B4() : S6()), e12;
  }
  get featureCount() {
    return this.features.length;
  }
  get features() {
    return this._get("features") || [];
  }
  set features(e12) {
    const t12 = e12 || [];
    this._set("features", t12);
    const { pendingPromisesCount: i13, promiseCount: s12, selectedFeatureIndex: r9 } = this, o9 = s12 && t12.length;
    o9 && i13 && -1 === r9 ? this.selectedFeatureIndex = 0 : o9 && -1 !== r9 || (this.selectedFeatureIndex = t12.length ? 0 : -1);
  }
  get location() {
    return this._get("location") || null;
  }
  set location(e12) {
    var _a, _b, _c;
    let t12 = e12;
    const i13 = (_b = (_a = this.view) == null ? void 0 : _a.spatialReference) == null ? void 0 : _b.isWebMercator;
    e12 && ((_c = e12 == null ? void 0 : e12.spatialReference) == null ? void 0 : _c.isWGS84) && i13 && (t12 = d2(e12)), this._set("location", t12);
  }
  get pendingPromisesCount() {
    return this._pendingPromises.size;
  }
  get waitingForResult() {
    return !(!(!!this._fetchFeaturesController || this.pendingPromisesCount > 0) || 0 !== this.featureCount);
  }
  get promiseCount() {
    return this.promises.length;
  }
  get promises() {
    return this._get("promises") || [];
  }
  set promises(e12) {
    if (this._pendingPromises.clear(), this.features = [], !Array.isArray(e12) || !e12.length)
      return this._set("promises", []), void this.notifyChange("pendingPromisesCount");
    this._set("promises", e12), (e12 = e12.slice(0)).forEach((e13) => {
      this._pendingPromises.add(e13);
      const t12 = (t13) => {
        this._pendingPromises.has(e13) && this._updateFeatures(t13), this._updatePendingPromises(e13);
      }, i13 = () => this._updatePendingPromises(e13);
      e13.then(t12, i13);
    }), this.notifyChange("pendingPromisesCount");
  }
  get selectedFeature() {
    const { features: e12, selectedFeatureIndex: t12 } = this;
    if (-1 === t12)
      return null;
    return e12[t12] || null;
  }
  get selectedFeatureIndex() {
    const e12 = this._get("selectedFeatureIndex");
    return "number" == typeof e12 ? e12 : -1;
  }
  set selectedFeatureIndex(e12) {
    const { featureCount: t12 } = this;
    e12 = isNaN(e12) || e12 < -1 || !t12 ? -1 : (e12 + t12) % t12, this.activeFeature = null, this._set("selectedFeatureIndex", e12);
  }
  get selectedFeatureViewModel() {
    return this.featureViewModels[this.selectedFeatureIndex] || null;
  }
  get state() {
    return this.get("view.ready") ? "ready" : "disabled";
  }
  centerAtLocation() {
    const { view: e12 } = this, t12 = l10(this);
    return t12 && e12 ? this.callGoTo({ target: { target: t12, scale: e12.scale } }) : Promise.reject(new s2("center-at-location:invalid-target-or-view", "Cannot center at a location without a target and view.", { target: t12, view: e12 }));
  }
  zoomTo(e12) {
    return this.callGoTo(e12);
  }
  clear() {
    this.set({ promises: [], features: [], content: null, title: null, location: null, activeFeature: null });
  }
  fetchFeatures(e12, t12) {
    const { view: i13 } = this;
    if (!i13 || !e12)
      throw new s2("fetch-features:invalid-screenpoint-or-view", "Cannot fetch features without a screenPoint and view.", { screenPoint: e12, view: i13 });
    return i13.fetchPopupFeatures(e12, { event: t12 && t12.event, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, signal: t12 && t12.signal });
  }
  open(e12) {
    const t12 = { updateLocationEnabled: false, promises: [], fetchFeatures: false, ...e12, visible: true }, { fetchFeatures: i13 } = t12;
    delete t12.fetchFeatures, i13 && this._setFetchFeaturesPromises(t12.location);
    const s12 = ["actionsMenuOpen", "collapsed"];
    for (const r9 of s12)
      delete t12[r9];
    this.set(t12);
  }
  triggerAction(e12) {
    const t12 = this.allActions.at(e12);
    t12 && !t12.disabled && this.emit("trigger-action", { action: t12 });
  }
  next() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex + 1, this;
  }
  previous() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex - 1, this;
  }
  disableClusterBrowsing() {
    y9(this), this._clearBrowsedClusterGraphics();
  }
  async enableClusterBrowsing() {
    const { view: e12, selectedFeature: t12 } = this;
    "2d" === (e12 == null ? void 0 : e12.type) ? d8(t12) ? (await m14(this), await p14(this)) : s.getLogger(this).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.", t12) : s.getLogger(this).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.", t12);
  }
  handleViewClick(e12) {
    this.autoOpenEnabled && this._fetchFeaturesAndOpen(e12);
  }
  _animationStateChange(e12) {
    this.zoomToLocation || (t9.disabled = "waiting-for-target" === e12);
  }
  _clearBrowsedClusterGraphics() {
    var _a;
    const e12 = (_a = this.view) == null ? void 0 : _a.graphics;
    e12 && (e12.remove(this.selectedClusterBoundaryFeature), this._selectedClusterFeature && e12.remove(this._selectedClusterFeature)), this._selectedClusterFeature = null, this.selectedClusterBoundaryFeature.geometry = null;
  }
  _viewScaleChange() {
    if (d8(this.selectedFeature))
      return this.browseClusterEnabled = false, this.visible = false, void this.clear();
    this.browseClusterEnabled && (this.features = this.selectedFeature ? [this.selectedFeature] : []);
  }
  _locationChange(e12) {
    const { selectedFeature: t12, updateLocationEnabled: i13 } = this;
    i13 && e12 && (!t12 || t12.geometry) && this.centerAtLocation();
  }
  _selectedFeatureIndexChange() {
    this.featurePage = this.featureCount > 1 ? Math.floor(this.selectedFeatureIndex / this.featuresPerPage) + 1 : null;
  }
  _featureViewModelsChange() {
    this.featurePage = this.featureCount > 1 ? 1 : null;
  }
  _setGraphicOnFeatureViewModels() {
    const { features: e12, featureCount: t12, featurePage: i13, featuresPerPage: s12, featureViewModels: r9 } = this;
    if (null === i13)
      return;
    const o9 = ((i13 - 1) * s12 + t12) % t12, a14 = o9 + s12;
    r9.slice(o9, a14).forEach((t13, i14) => {
      t13 && !t13.graphic && (t13.graphic = e12[o9 + i14]);
    });
  }
  async _selectedFeatureChange(e12) {
    const { location: t12, updateLocationEnabled: i13, view: s12 } = this;
    if (e12 && s12) {
      if (this.browseClusterEnabled) {
        if (this._selectedClusterFeature && (s12.graphics.remove(this._selectedClusterFeature), this._selectedClusterFeature = null), d8(e12))
          return;
        return e12.symbol = await x4(e12), this._selectedClusterFeature = e12, void s12.graphics.add(this._selectedClusterFeature);
      }
      !i13 && t12 || !e12.geometry ? i13 && !e12.geometry && this.centerAtLocation().then(() => {
        var _a;
        const e13 = (_a = s12.center) == null ? void 0 : _a.clone();
        e13 && (this.location = e13);
      }) : this.location = h10(e12.geometry);
    }
  }
  _waitingForResultChange() {
    !this.featureCount && this.promises && (this.visible = false);
  }
  _setFetchFeaturesPromises(e12) {
    return this._fetchFeaturesWithController(this._getScreenPoint(e12 || this.location)).then((e13) => {
      const { clientOnlyGraphics: t12, promisesPerLayerView: i13 } = e13, s12 = Promise.resolve(t12), r9 = i13.map((e14) => e14.promise);
      this.promises = [s12, ...r9];
    });
  }
  _destroyFeatureVMs() {
    this.featureViewModels.forEach((e12) => e12 && !e12.destroyed && e12.destroy()), this._set("featureViewModels", []);
  }
  _updateFeatureVMs() {
    const { selectedFeature: e12, features: t12, featureViewModels: i13 } = this;
    if (d8(e12) || (this.browseClusterEnabled = false), this._destroyFeatureVMs(), !t12 || !t12.length)
      return;
    const s12 = i13.slice(0), r9 = [];
    t12.forEach((t13, i14) => {
      var _a, _b;
      if (!t13)
        return;
      let o9 = null;
      if (s12.some((e13, i15) => (e13 && e13.graphic === t13 && (o9 = e13, s12.splice(i15, 1)), !!o9)), o9)
        r9[i14] = o9;
      else {
        const s13 = new Y3({ abilities: this.featureViewModelAbilities, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, spatialReference: (_a = this.view) == null ? void 0 : _a.spatialReference, graphic: t13 === e12 ? t13 : null, map: (_b = this.view) == null ? void 0 : _b.map, view: this.view });
        r9[i14] = s13;
      }
    }), s12.forEach((e13) => e13 && !e13.destroyed && e13.destroy()), this._set("featureViewModels", r9);
  }
  _getScreenPoint(e12) {
    const { view: t12 } = this;
    return t12 && e12 && "function" == typeof t12.toScreen ? t12.toScreen(e12) : null;
  }
  _cancelFetchingFeatures() {
    const e12 = this._fetchFeaturesController;
    e12 && e12.abort(), this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
  }
  _fetchFeaturesWithController(e12, t12) {
    this._cancelFetchingFeatures();
    const i13 = new AbortController(), { signal: s12 } = i13;
    this._fetchFeaturesController = i13, this.notifyChange("waitingForResult");
    const r9 = this.fetchFeatures(e12, { signal: s12, event: t12 });
    return r9.catch(() => {
    }).then(() => {
      this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
    }), r9;
  }
  _fetchFeaturesAndOpen(e12) {
    const { screenPoint: t12, mapPoint: i13 } = e12, { view: s12 } = this;
    this._fetchFeaturesWithController(t12, e12).then((e13) => {
      const { clientOnlyGraphics: t13, promisesPerLayerView: r9, location: o9 } = e13, a14 = [Promise.resolve(t13), ...r9.map((e14) => e14.promise)];
      return (s12 == null ? void 0 : s12.popup) && "open" in s12.popup && s12.popup.open({ location: o9 || i13, promises: a14 }), e13;
    });
  }
  _updatePendingPromises(e12) {
    e12 && this._pendingPromises.has(e12) && (this._pendingPromises.delete(e12), this.notifyChange("pendingPromisesCount"));
  }
  _autoClose() {
    this.autoCloseEnabled && (this.visible = false);
  }
  async _getLayerView(e12, t12) {
    return await e12.when(), e12.whenLayerView(t12);
  }
  _getHighlightLayer(e12) {
    const { layer: t12, sourceLayer: i13 } = e12;
    return i13 && "layer" in i13 && i13.layer ? i13.layer : "map-notes" === (i13 == null ? void 0 : i13.type) || "subtype-group" === (i13 == null ? void 0 : i13.type) ? i13 : t12;
  }
  _getHighlightTarget(e12, t12) {
    const i13 = "imagery" === t12.type ? void 0 : "objectIdField" in t12 ? t12.objectIdField || o8 : null, s12 = e12.attributes;
    return s12 && i13 && s12[i13] || e12;
  }
  async _highlightActiveFeature() {
    const e12 = "highlight-active-feature";
    this._handles.remove(e12);
    const { highlightEnabled: t12, view: i13, activeFeature: s12, visible: r9 } = this;
    if (!(s12 && i13 && t12 && r9))
      return;
    const o9 = this._getHighlightLayer(s12);
    if (!(o9 && o9 instanceof b4))
      return;
    const a14 = this._getLayerView(i13, o9);
    this._highlightActiveFeaturePromise = a14;
    const n14 = await a14;
    if (!(n14 && n13(n14) && this._highlightActiveFeaturePromise === a14 && this.activeFeature && this.highlightEnabled))
      return;
    const l12 = n14.highlight(this._getHighlightTarget(s12, o9));
    this._handles.add(l12, e12);
  }
  async _highlightSelectedFeature() {
    const e12 = "highlight-selected-feature";
    this._handles.remove(e12);
    const { selectedFeature: t12, highlightEnabled: i13, view: s12, visible: r9 } = this;
    if (!(t12 && s12 && i13 && r9))
      return;
    const o9 = this._getHighlightLayer(t12);
    if (!(o9 && o9 instanceof b4))
      return;
    const a14 = this._getLayerView(s12, o9);
    this._highlightSelectedFeaturePromise = a14;
    const n14 = await a14;
    if (!(n14 && n13(n14) && this._highlightSelectedFeaturePromise === a14 && this.selectedFeature && this.highlightEnabled && this.visible))
      return;
    const l12 = n14.highlight(this._getHighlightTarget(t12, o9));
    this._handles.add(l12, e12);
  }
  _updateFeatures(e12) {
    const { features: t12 } = this;
    if (!e12 || !e12.length)
      return;
    if (!t12.length)
      return void (this.features = e12);
    const i13 = e12.filter((e13) => !t12.includes(e13));
    this.features = t12.concat(i13);
  }
};
e([y2()], R6.prototype, "featurePage", void 0), e([y2()], R6.prototype, "isLoadingFeature", null), e([y2({ type: I8 })], R6.prototype, "actions", void 0), e([y2({ readOnly: true })], R6.prototype, "active", null), e([y2()], R6.prototype, "activeFeature", void 0), e([y2({ readOnly: true })], R6.prototype, "allActions", null), e([y2({ type: Boolean })], R6.prototype, "defaultPopupTemplateEnabled", void 0), e([y2()], R6.prototype, "autoCloseEnabled", void 0), e([y2()], R6.prototype, "autoOpenEnabled", void 0), e([y2()], R6.prototype, "browseClusterEnabled", void 0), e([y2()], R6.prototype, "content", void 0), e([y2({ type: I8, readOnly: true })], R6.prototype, "defaultActions", null), e([y2({ readOnly: true })], R6.prototype, "featureCount", null), e([y2()], R6.prototype, "features", null), e([y2()], R6.prototype, "featuresPerPage", void 0), e([y2()], R6.prototype, "featureMenuOpen", void 0), e([y2()], R6.prototype, "featureViewModelAbilities", void 0), e([y2({ readOnly: true })], R6.prototype, "featureViewModels", void 0), e([y2()], R6.prototype, "highlightEnabled", void 0), e([y2()], R6.prototype, "includeDefaultActions", void 0), e([y2({ type: x })], R6.prototype, "location", null), e([y2({ readOnly: true })], R6.prototype, "pendingPromisesCount", null), e([y2({ readOnly: true })], R6.prototype, "selectedClusterBoundaryFeature", void 0), e([y2({ readOnly: true })], R6.prototype, "waitingForResult", null), e([y2({ readOnly: true })], R6.prototype, "promiseCount", null), e([y2()], R6.prototype, "promises", null), e([y2({ value: null, readOnly: true })], R6.prototype, "selectedFeature", null), e([y2({ value: -1 })], R6.prototype, "selectedFeatureIndex", null), e([y2({ readOnly: true })], R6.prototype, "selectedFeatureViewModel", null), e([y2({ readOnly: true })], R6.prototype, "state", null), e([y2()], R6.prototype, "title", void 0), e([y2()], R6.prototype, "updateLocationEnabled", void 0), e([y2()], R6.prototype, "view", void 0), e([y2()], R6.prototype, "visible", void 0), e([y2()], R6.prototype, "zoomFactor", void 0), e([y2()], R6.prototype, "zoomToLocation", void 0), e([y2()], R6.prototype, "centerAtLocation", null), R6 = e([a("esri.widgets.Popup.PopupViewModel")], R6);
var G2 = R6;

// node_modules/@arcgis/core/widgets/Popup.js
var T5 = "selected-index";
var D3 = 0;
var S7 = "popup-spinner";
var L5 = { buttonEnabled: true, position: "auto", breakpoint: { width: 544 } };
var R7 = "esri-popup";
function V4(e12, t12) {
  return void 0 === t12 ? `${R7}__${e12}` : `${R7}__${e12}-${t12}`;
}
var j10 = { closeButton: true, featureNavigation: true };
var U4 = class extends i10(W) {
  constructor(e12, i13) {
    super(e12, i13), this._blurClose = false, this._blurContainer = false, this._containerNode = null, this._mainContainerNode = null, this._featureMenuNode = null, this._actionsMenuNode = null, this._focusClose = false, this._focusContainer = false, this._focusDockButton = false, this._focusFeatureMenuButton = false, this._focusActionsMenuButton = false, this._focusFirstFeature = false, this._focusFirstAction = false, this._handles = new t(), this._pointerOffsetInPx = 16, this._spinner = null, this._feature = null, this._featureMenuIntersectionObserverNode = null, this._featureMenuViewportNode = null, this._rootFlowItemNode = null, this._featureMenuIntersectionObserverCallback = ([e13]) => {
      (e13 == null ? void 0 : e13.isIntersecting) && null != this.viewModel.featurePage && this.viewModel.featurePage++;
    }, this._featureMenuIntersectionObserver = new IntersectionObserver(this._featureMenuIntersectionObserverCallback, { root: window.document }), this._displaySpinnerThrottled = e5(() => this._displaySpinner(), D3), this._exitRelatedRecordsActions = /* @__PURE__ */ new WeakMap(), this._featureSelectionActions = /* @__PURE__ */ new WeakMap(), this._flowItems = new V(), this.alignment = "auto", this.collapsed = false, this.collapseEnabled = true, this.dockEnabled = false, this.headingLevel = 2, this.maxInlineActions = 3, this.messages = null, this.messagesCommon = null, this.spinnerEnabled = true, this.viewModel = new G2(), this.visibleElements = { ...j10 }, this._handleOpenRelatedFeature = (e13) => {
      this._openRelatedFeature(e13);
    }, this._addSelectedFeatureIndexHandle(), this.addHandles([this._displaySpinnerThrottled, l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._positionContainer()), l2(() => {
      var _a;
      return [(_a = this.viewModel) == null ? void 0 : _a.active, this.dockEnabled];
    }, () => this._toggleScreenLocationEnabled()), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, (e13, t12) => {
      !!e13 != !!t12 && this.reposition();
    }), l2(() => {
      var _a, _b, _c, _d, _e, _f;
      return [(_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.padding, (_d = (_c = this.viewModel) == null ? void 0 : _c.view) == null ? void 0 : _d.size, (_e = this.viewModel) == null ? void 0 : _e.active, (_f = this.viewModel) == null ? void 0 : _f.location, this.alignment];
    }, () => this.reposition()), l2(() => this.spinnerEnabled, (e13) => this._spinnerEnabledChange(e13)), l2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.size;
    }, (e13, t12) => this._updateDockEnabledForViewSize(e13, t12)), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e13, t12) => this._viewChange(e13, t12)), l2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e13, t12) => this._viewReadyChange(e13 ?? false, t12 ?? false)), l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.waitingForResult, (_b = this.viewModel) == null ? void 0 : _b.location];
    }, () => {
      this._hideSpinner(), this._displaySpinnerThrottled();
    }), l2(() => this.selectedFeatureWidget, () => this._destroyFlowItemWidgets()), l2(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.title, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setTitleFromFeatureWidget()), l2(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.content, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setContentFromFeatureWidget()), f(() => !this.collapsed, () => {
      var _a, _b;
      "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && this.viewModel.active && this.collapseEnabled && this.viewModel.centerAtLocation();
    }), a2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, "change", () => this._watchActions()), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, () => this._watchActions(), h), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.featureViewModels;
    }, () => this._featureMenuViewportScrollTop()), a2(() => this._flowItems, "change", () => {
      this.notifyChange("_activeFlowItemWidget"), this.scheduleRender();
    }), l2(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this._activeFlowItemWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.state, (_d = (_c = this._activeFlowItemWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.title];
    }, () => this.scheduleRender())]);
  }
  loadDependencies() {
    return n3({ action: () => import("./calcite-action-4JL3QV7L.js"), flow: () => import("./calcite-flow-PILVZWGK.js"), "flow-item": () => import("./calcite-flow-item-VDJI372Y.js"), icon: () => import("./calcite-icon-GNDPNTWV.js"), tooltip: () => import("./calcite-tooltip-XRGORUPF.js") });
  }
  initialize() {
    this.addHandles(this._displaySpinnerThrottled);
  }
  destroy() {
    var _a, _b;
    this._destroyFlowItemWidgets(), this._destroySelectedFeatureWidget(), this._destroySpinner(), (_a = this._handles) == null ? void 0 : _a.destroy(), this._unobserveFeatureMenuObserver(), (_b = this._featureMenuIntersectionObserver) == null ? void 0 : _b.disconnect();
  }
  get actionsMenuId() {
    return `${this.id}-actions-menu`;
  }
  get actionsMenuButtonId() {
    return `${this.id}-actions-menu-button`;
  }
  get featureMenuId() {
    return `${this.id}-feature-menu`;
  }
  get titleId() {
    return `${this.id}-popup-title`;
  }
  get contentId() {
    return `${this.id}-popup-content`;
  }
  get hasContent() {
    const { selectedFeatureWidget: e12, viewModel: t12 } = this;
    if (!e12)
      return !!(t12 == null ? void 0 : t12.content);
    const i13 = e12.viewModel;
    if ((i13 == null ? void 0 : i13.waitingForContent) || "error" === (i13 == null ? void 0 : i13.state))
      return true;
    const o9 = i13 == null ? void 0 : i13.content;
    return Array.isArray(o9) ? !!o9.length : !!o9;
  }
  get featureNavigationVisible() {
    return this.viewModel.active && this.viewModel.featureCount > 1 && !!this.visibleElements.featureNavigation;
  }
  get collapsible() {
    return !!(this.collapseEnabled && this.viewModel.title && this.hasContent);
  }
  get featureMenuVisible() {
    return this.featureNavigationVisible && this.featureMenuOpen;
  }
  get contentCollapsed() {
    return this.collapsible && !this.featureMenuVisible && this.collapsed;
  }
  get dividedActions() {
    return this._divideActions();
  }
  get _activeFlowItemWidget() {
    const { _flowItems: e12 } = this;
    return e12.at(-1) ?? null;
  }
  get actions() {
    return this.viewModel.actions;
  }
  set actions(e12) {
    this.viewModel.actions = e12;
  }
  set actionsMenuOpen(e12) {
    this._set("actionsMenuOpen", !!e12);
  }
  get actionsMenuOpen() {
    return !!this.viewModel.active && this._get("actionsMenuOpen");
  }
  get autoCloseEnabled() {
    return this.viewModel.autoCloseEnabled;
  }
  set autoCloseEnabled(e12) {
    this.viewModel.autoCloseEnabled = e12;
  }
  get autoOpenEnabled() {
    return t2(s.getLogger(this), "autoOpenEnabled", { replacement: "MapView/SceneView.popupEnabled", version: "4.27" }), this.viewModel.autoOpenEnabled;
  }
  set autoOpenEnabled(e12) {
    t2(s.getLogger(this), "autoOpenEnabled", { replacement: "MapView/SceneView.popupEnabled", version: "4.27" }), this.viewModel.autoOpenEnabled = e12;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e12) {
    this.viewModel.defaultPopupTemplateEnabled = e12;
  }
  get content() {
    return this.viewModel.content;
  }
  set content(e12) {
    this.viewModel.content = e12;
  }
  get currentAlignment() {
    return this._getCurrentAlignment();
  }
  get currentDockPosition() {
    return this._getCurrentDockPosition();
  }
  get dockOptions() {
    return this._get("dockOptions") || L5;
  }
  set dockOptions(e12) {
    var _a, _b;
    const t12 = { ...L5 }, i13 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.breakpoints, o9 = {};
    i13 && (o9.width = i13.xsmall, o9.height = i13.xsmall);
    const n14 = { ...t12, ...e12 }, s12 = { ...t12.breakpoint, ...o9 }, { breakpoint: r9 } = n14;
    "object" == typeof r9 ? n14.breakpoint = { ...s12, ...r9 } : r9 && (n14.breakpoint = s12), this._set("dockOptions", n14), this._setCurrentDockPosition(), this.reposition();
  }
  get featureCount() {
    return this.viewModel.featureCount;
  }
  get featureMenuOpen() {
    return this.viewModel.featureMenuOpen;
  }
  set featureMenuOpen(e12) {
    this.viewModel.featureMenuOpen = e12;
  }
  get features() {
    return this.viewModel.features;
  }
  set features(e12) {
    this.viewModel.features = e12;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e12) {
    this.viewModel.goToOverride = e12;
  }
  get highlightEnabled() {
    return this.viewModel.highlightEnabled;
  }
  set highlightEnabled(e12) {
    this.viewModel.highlightEnabled = e12;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(e12) {
    this.viewModel.location = e12;
  }
  get label() {
    var _a;
    return ((_a = this.messages) == null ? void 0 : _a.widgetLabel) ?? "";
  }
  set label(e12) {
    this._overrideIfSome("label", e12);
  }
  get promises() {
    return this.viewModel.promises;
  }
  set promises(e12) {
    this.viewModel.promises = e12;
  }
  get selectedFeature() {
    return this.viewModel.selectedFeature;
  }
  get selectedFeatureIndex() {
    return this.viewModel.selectedFeatureIndex;
  }
  set selectedFeatureIndex(e12) {
    this.viewModel.selectedFeatureIndex = e12;
  }
  get selectedFeatureWidget() {
    const { _feature: e12, visibleElements: t12, headingLevel: i13, _flowItems: o9 } = this, { selectedFeatureViewModel: n14 } = this.viewModel, s12 = { ...t12, title: false };
    return n14 ? (e12 ? (e12.viewModel = n14, e12.visibleElements = s12) : this._feature = new C4({ flowItems: o9, headingLevel: i13 + 1, viewModel: n14, visibleElements: s12 }), this._feature) : null;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e12) {
    this.viewModel.title = e12;
  }
  get updateLocationEnabled() {
    return this.viewModel.updateLocationEnabled;
  }
  set updateLocationEnabled(e12) {
    this.viewModel.updateLocationEnabled = e12;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e12) {
    this.viewModel.view = e12;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e12) {
    this.viewModel.visible = e12;
  }
  castVisibleElements(e12) {
    return { ...j10, ...e12 };
  }
  blur() {
    const { active: e12 } = this.viewModel;
    e12 || s.getLogger(this).warn("Popup can only be blurred when currently active."), this.visibleElements.closeButton ? this._blurClose = true : this._blurContainer = true, this.scheduleRender();
  }
  clear() {
    return this.viewModel.clear();
  }
  close() {
    this.visible = false;
  }
  fetchFeatures(e12, t12) {
    return this.viewModel.fetchFeatures(e12, t12);
  }
  focus() {
    const { active: e12 } = this.viewModel;
    e12 || s.getLogger(this).warn("Popup can only be focused when currently active."), this.visibleElements.closeButton ? this._focusClose = true : this._focusContainer = true, this.scheduleRender();
  }
  next() {
    return this.viewModel.next();
  }
  open(e12) {
    var _a, _b;
    this._handles.remove(T5);
    const t12 = !!e12 && !!e12.featureMenuOpen, i13 = !!e12 && !!e12.actionsMenuOpen, o9 = { collapsed: !!e12 && !!e12.collapsed, actionsMenuOpen: i13, featureMenuOpen: t12 };
    "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && (o9.collapsed = true), this.set(o9), this.viewModel.open(e12), this._shouldFocus(e12), this._addSelectedFeatureIndexHandle();
  }
  previous() {
    return this.viewModel.previous();
  }
  reposition() {
    this.renderNow(), this._positionContainer(), this._setCurrentAlignment();
  }
  triggerAction(e12) {
    return this.viewModel.triggerAction(e12);
  }
  render() {
    var _a, _b, _c, _d;
    const { actionsMenuOpen: e12, dockEnabled: t12, featureMenuVisible: i13, dividedActions: o9, currentAlignment: n14, currentDockPosition: s12 } = this, { active: r9 } = this.viewModel, { menuActions: l12 } = o9, a14 = r9 && l12.length > 1 && e12, c21 = r9 && t12, u9 = r9 && !t12, d10 = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.layer) == null ? void 0 : _b.title, h13 = (_d = (_c = this.selectedFeature) == null ? void 0 : _c.layer) == null ? void 0 : _d.id, p16 = { [n12.alignTopCenter]: "top-center" === n14, [n12.alignBottomCenter]: "bottom-center" === n14, [n12.alignTopLeft]: "top-left" === n14, [n12.alignBottomLeft]: "bottom-left" === n14, [n12.alignTopRight]: "top-right" === n14, [n12.alignBottomRight]: "bottom-right" === n14, [n12.isDocked]: c21, [n12.shadow]: u9, [n12.isDockedTopLeft]: "top-left" === s12, [n12.isDockedTopCenter]: "top-center" === s12, [n12.isDockedTopRight]: "top-right" === s12, [n12.isDockedBottomLeft]: "bottom-left" === s12, [n12.isDockedBottomCenter]: "bottom-center" === s12, [n12.isDockedBottomRight]: "bottom-right" === s12, [n12.isFeatureMenuOpen]: i13, [n12.isActionsMenuOpen]: a14 };
    return n4("div", { class: this.classes(n12.base, p16), role: "presentation", "data-layer-title": d10, "data-layer-id": h13, bind: this, afterCreate: this._positionContainer, afterUpdate: this._positionContainer }, r9 ? [this.renderMainContainer(), this.renderPointer()] : null);
  }
  renderLoadingIcon() {
    return n4("span", { "aria-hidden": "true", class: this.classes(n12.icon, n12.iconLoading, n12.rotating) });
  }
  renderNavigationLoading() {
    const { messagesCommon: e12 } = this;
    return this.viewModel.pendingPromisesCount ? n4("div", { key: V4("loading-container"), role: "presentation", class: n12.loadingContainer, "aria-label": e12.loading, title: e12.loading }, this.renderLoadingIcon()) : null;
  }
  renderPreviousButton() {
    const { messages: e12 } = this;
    return n4("div", { role: "button", tabIndex: 0, bind: this, onclick: this._previous, onkeydown: this._previous, class: this.classes(n12.button, n12.paginationPrevious), "aria-label": e12.previous, title: e12.previous }, n4("calcite-icon", { icon: "chevron-left", scale: "s", class: n12.paginationIcon }));
  }
  renderNextButton() {
    const { messages: e12 } = this;
    return n4("div", { role: "button", tabIndex: 0, bind: this, onclick: this._next, onkeydown: this._next, class: this.classes(n12.button, n12.paginationNext), "aria-label": e12.next, title: e12.next }, n4("calcite-icon", { icon: "chevron-right", scale: "s", class: n12.paginationIcon }));
  }
  renderFeatureMenuButton() {
    const { featureMenuOpen: e12, featureMenuId: t12, messagesCommon: i13 } = this, { featureCount: o9, selectedFeatureIndex: n14 } = this.viewModel;
    return n4("div", { role: "button", tabIndex: 0, bind: this, onclick: this._toggleFeatureMenu, onkeydown: this._toggleFeatureMenu, afterCreate: this._focusFeatureMenuButtonNode, afterUpdate: this._focusFeatureMenuButtonNode, class: n12.featureMenuButton, "aria-haspopup": "true", "aria-controls": t12, "aria-expanded": e12.toString(), "aria-label": i13.menu, title: i13.menu }, n4("calcite-icon", { icon: "list-bullet", scale: "s", class: n12.featureMenuButtonIcon }), this._getPageText(o9, n14));
  }
  renderNavigationButtons() {
    return this.featureNavigationVisible ? [this.renderPreviousButton(), this.renderNextButton(), this.renderNavigationLoading() || this.renderFeatureMenuButton()] : [];
  }
  renderDockIcon() {
    const { dockEnabled: e12 } = this, t12 = this._wouldDockTo(), i13 = { [n12.iconUndock]: e12, [n12.iconDock]: !e12, [n12.iconDockToRight]: !e12 && ("top-right" === t12 || "bottom-right" === t12), [n12.iconDockToLeft]: !e12 && ("top-left" === t12 || "bottom-left" === t12), [n12.iconDockToTop]: !e12 && "top-center" === t12, [n12.iconDockToBottom]: !e12 && "bottom-center" === t12 };
    return n4("span", { "aria-hidden": "true", class: this.classes(i13, n12.icon) });
  }
  renderDockButton() {
    var _a, _b, _c;
    const { dockEnabled: e12, messages: t12 } = this, i13 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint, o9 = e12 ? t12.undock : t12.dock;
    return "xsmall" !== i13 && ((_c = this.dockOptions) == null ? void 0 : _c.buttonEnabled) ? n4("div", { role: "button", "aria-label": o9, title: o9, tabIndex: 0, bind: this, onclick: this._toggleDockEnabled, onkeydown: this._toggleDockEnabled, afterCreate: this._focusDockButtonNode, afterUpdate: this._focusDockButtonNode, class: this.classes(n12.button, n12.buttonDock) }, this.renderDockIcon()) : null;
  }
  renderTitle() {
    const { title: e12 } = this.viewModel, { titleId: t12, collapsible: i13, contentCollapsed: o9, messagesCommon: n14 } = this, s12 = { [n12.headerContainerButton]: i13 }, r9 = n4(n5, { level: this.headingLevel, class: n12.headerTitle, innerHTML: e12 ?? "" }), l12 = i13 ? n4("button", { key: `${e12}--collapsible`, id: t12, title: o9 ? n14.expand : n14.collapse, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(n12.headerContainer, s12), "aria-expanded": o9 ? "false" : "true", onclick: this._toggleCollapsed, type: "button" }, r9, n4("calcite-icon", { class: n12.collapseIcon, key: "collapse-icon", icon: o9 ? "chevron-down" : "chevron-up", scale: "m" })) : n4("div", { key: e12 ?? "title", id: t12, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(n12.headerContainer, s12) }, r9);
    return e12 ? l12 : null;
  }
  renderCloseIcon() {
    return n4("span", { "aria-hidden": "true", class: this.classes(n12.icon, n12.iconClose) });
  }
  renderCloseButton() {
    const { visibleElements: e12, messagesCommon: t12 } = this;
    return e12.closeButton ? n4("div", { role: "button", tabIndex: 0, bind: this, onclick: this._close, onkeydown: this._close, class: n12.button, "aria-label": t12.close, title: t12.close, afterCreate: this._closeButtonNodeUpdated, afterUpdate: this._closeButtonNodeUpdated }, this.renderCloseIcon()) : null;
  }
  renderHeader() {
    return n4("header", { class: n12.header }, this.renderTitle(), n4("div", { class: n12.headerButtons }, this.renderDockButton(), this.renderCloseButton()));
  }
  renderContentContainer() {
    const { contentId: e12, hasContent: t12, contentCollapsed: i13, _flowItems: o9 } = this, { content: n14 } = this.viewModel, s12 = o9.toArray(), r9 = { [n12.contentHasFlows]: !!s12.length };
    return t12 && !i13 ? n4("div", { key: n14 ?? "content", enterAnimation: this._createFeatureUpdatedAnimation(), id: e12, class: this.classes(n12.content, r9) }, n4("calcite-flow", { bind: this }, n4("calcite-flow-item", { bind: this, "data-node-ref": "_rootFlowItemNode", afterCreate: L, key: "root-flow-item", onCalciteFlowItemBack: this._handleBackClick }, this.renderContent()), s12.map((e13) => this.renderFlowItem(e13))), s12.map((e13) => this.renderFlowItemTooltips(e13))) : null;
  }
  renderFlowItem(e12) {
    const { messages: t12 } = this, i13 = r3(), o9 = "graphic" in e12 && !e12.isTable;
    return n4("calcite-flow-item", { bind: this, class: this.classes({ [n12.calciteThemeDark]: !i13, [n12.calciteThemeLight]: i13 }), heading: e12.title ?? "", description: this._getFlowItemDescription(e12), onCalciteFlowItemBack: this._handleBackClick, key: `flow-item-${e12.viewModel.uid}` }, n4("calcite-action", { class: n12.actionExit, icon: "move-up", label: t12 == null ? void 0 : t12.exitRelatedRecords, text: t12 == null ? void 0 : t12.exitRelatedRecords, slot: "header-actions-start", bind: this, afterCreate: (t13) => this._storeExitRelatedRecordsAction(e12, t13), onclick: this._destroyFlowItemWidgets }), o9 ? n4("calcite-action", { class: n12.actionSelectFeature, icon: "zoom-to-object", label: t12 == null ? void 0 : t12.selectFeature, text: t12 == null ? void 0 : t12.selectFeature, slot: "header-actions-end", bind: this, afterCreate: (t13) => this._storeFeatureSelectionAction(e12, t13), onclick: () => this._handleOpenRelatedFeature(e12) }) : null, n4("div", { class: this.classes(n12.contentFlowItem, { [n12.calciteThemeDark]: i13, [n12.calciteThemeLight]: !i13 }) }, e12.render()));
  }
  renderFlowItemTooltips(e12) {
    const { messages: t12, _exitRelatedRecordsActions: i13, _featureSelectionActions: o9 } = this, n14 = r3(), s12 = o9.get(e12);
    return [n4("calcite-tooltip", { class: this.classes({ [n12.calciteThemeDark]: !n14, [n12.calciteThemeLight]: n14 }), key: `exit-related-records-tooltip-${e12.viewModel.uid}`, label: t12 == null ? void 0 : t12.exitRelatedRecords, overlayPositioning: "fixed", referenceElement: i13.get(e12), placement: "top" }, t12 == null ? void 0 : t12.exitRelatedRecords), s12 ? n4("calcite-tooltip", { class: this.classes({ [n12.calciteThemeDark]: !n14, [n12.calciteThemeLight]: n14 }), key: `select-related-record-tooltip-${e12.viewModel.uid}`, label: t12 == null ? void 0 : t12.selectFeature, overlayPositioning: "fixed", referenceElement: s12, placement: "top" }, t12 == null ? void 0 : t12.selectFeature) : null];
  }
  renderActionsMenuButton() {
    const { actionsMenuId: e12, actionsMenuButtonId: t12, actionsMenuOpen: i13, dividedActions: o9, messagesCommon: n14 } = this, s12 = i13 ? n14.close : n14.open, { menuActions: r9 } = o9;
    return r9.length ? n4("div", { key: V4("actions-menu-button"), class: this.classes(n12.button, n12.actionsMenuButton), role: "button", id: t12, "aria-haspopup": "true", "aria-controls": i13 ? e12 : null, tabIndex: 0, bind: this, onclick: this._toggleActionsMenu, onkeydown: this._toggleActionsMenu, afterCreate: this._focusActionsMenuButtonNode, afterUpdate: this._focusActionsMenuButtonNode, "aria-label": s12, title: s12 }, n4("span", { "aria-hidden": "true", class: n12.iconActionsMenu })) : null;
  }
  renderMenuActions() {
    const { actionsMenuId: e12, actionsMenuButtonId: t12, actionsMenuOpen: i13, dividedActions: o9 } = this, { menuActions: n14 } = o9;
    return n14.length && i13 ? n4("ul", { id: e12, role: "menu", "aria-labelledby": t12, key: V4("actions"), class: n12.actions, bind: this, onkeyup: this._handleActionMenuKeyup, afterCreate: this._actionsMenuNodeUpdated, afterUpdate: this._actionsMenuNodeUpdated }, n14.toArray().map((e13) => this.renderAction({ action: e13, type: "menu-item" }))) : null;
  }
  renderInlineActions() {
    const { inlineActions: e12 } = this.dividedActions;
    return e12.length ? e12.toArray().map((e13) => this.renderAction({ action: e13, type: "inline" })) : [];
  }
  renderInlineActionsContainer() {
    const { inlineActions: e12, menuActions: t12 } = this.dividedActions, i13 = !!e12.length, o9 = !!t12.length;
    return i13 || o9 ? n4("div", { key: "inline-actions-container", "data-inline-actions": i13.toString(), "data-menu-actions": o9.toString(), class: n12.inlineActionsContainer }, this.renderInlineActions(), this.renderActionsMenuButton(), this.renderMenuActions()) : null;
  }
  renderNavigation() {
    return this.featureNavigationVisible ? n4("section", { key: V4("navigation"), class: this.classes(n12.navigation) }, this.renderNavigationButtons()) : null;
  }
  renderFooter() {
    const { featureNavigationVisible: e12, dividedActions: t12 } = this, { inlineActions: i13, menuActions: o9 } = t12, n14 = !!i13.length, s12 = !!o9.length, r9 = { [n12.footerHasPagination]: e12, [n12.footerHasActions]: n14, [n12.footerHasActionsMenu]: s12 };
    return e12 || n14 ? n4("div", { key: V4("feature-buttons"), class: this.classes(n12.footer, r9) }, this.renderInlineActionsContainer(), this.renderNavigation()) : null;
  }
  renderFeatureMenuContainer() {
    const { messages: e12 } = this, { featureViewModels: t12, isLoadingFeature: i13 } = this.viewModel, o9 = s3(e12.selectedFeatures, { total: t12.length });
    return n4("section", { key: V4("menu"), class: n12.featureMenu }, n4("strong", { class: n12.featureMenuHeader }, o9), n4("nav", { bind: this, class: n12.featureMenuViewport, "data-node-ref": "_featureMenuViewportNode", afterCreate: L }, this.renderFeatureMenu(), n4("div", { class: n12.featureMenuObserver, bind: this, afterCreate: this._featureMenuIntersectionObserverCreated }), i13 ? n4("div", { class: n12.featureMenuLoader }, this.renderLoadingIcon()) : null));
  }
  renderPointer() {
    return this.dockEnabled ? null : n4("div", { key: V4("pointer"), class: n12.pointer, role: "presentation" }, n4("div", { class: this.classes(n12.pointerDirection, n12.shadow) }));
  }
  renderMainContainer() {
    const { dockEnabled: e12, currentAlignment: t12, currentDockPosition: i13, titleId: o9, contentId: n14, collapsible: s12, hasContent: r9, contentCollapsed: l12, visibleElements: a14 } = this, { title: c21 } = this.viewModel, u9 = "bottom-left" === t12 || "bottom-center" === t12 || "bottom-right" === t12 || "top-left" === i13 || "top-center" === i13 || "top-right" === i13, d10 = "top-left" === t12 || "top-center" === t12 || "top-right" === t12 || "bottom-left" === i13 || "bottom-center" === i13 || "bottom-right" === i13, h13 = { [n12.shadow]: e12, [n12.isCollapsible]: s12, [n12.isCollapsed]: l12 };
    return n4("div", { class: this.classes(n12.main, n12.widget, h13), tabIndex: a14.closeButton ? void 0 : -1, role: "dialog", "aria-live": "polite", "aria-labelledby": c21 ? o9 : "", "aria-describedby": r9 && !l12 ? n14 : "", bind: this, onkeyup: this._handleMainKeyup, afterCreate: this._mainContainerNodeUpdated, afterUpdate: this._mainContainerNodeUpdated }, u9 ? this.renderFooter() : null, u9 ? this.renderFeatureMenuContainer() : null, this.renderHeader(), this.renderContentContainer(), d10 ? this.renderFooter() : null, d10 ? this.renderFeatureMenuContainer() : null);
  }
  renderContent() {
    var _a;
    const e12 = (_a = this.viewModel) == null ? void 0 : _a.content;
    return e12 ? "string" == typeof e12 ? n4("div", { class: t7.contentNode, key: e12, innerHTML: e12 }) : this.renderNodeContent(e12) : null;
  }
  renderActionText(e12) {
    return n4("span", { key: "text", class: n12.actionText }, e12);
  }
  renderActionCalciteIcon(e12, t12) {
    return n4("calcite-icon", { scale: "s", key: `calcite-icon-${t12}`, icon: e12, class: n12.icon });
  }
  renderActionIcon(e12) {
    const t12 = this._getActionClass(e12), i13 = this._getActionImage(e12), o9 = { [n12.iconLoading]: e12.active, [n12.rotating]: e12.active, [n12.icon]: !!t12, [n12.actionImage]: !e12.active && !!i13 };
    return t12 && (o9[t12] = !e12.active), n4("span", { key: "icon", "aria-hidden": "true", class: this.classes(n12.icon, o9), styles: this._getIconStyles(i13) });
  }
  renderAction(e12) {
    const { action: t12, type: i13 } = e12, o9 = this._getActionTitle(t12), n14 = { [n12.action]: "toggle" !== t12.type, [n12.actionToggle]: "toggle" === t12.type, [n12.actionToggleOn]: "toggle" === t12.type && t12.value, [n12.buttonDisabled]: t12.disabled }, s12 = [t12.icon && !t12.active ? this.renderActionCalciteIcon(t12.icon, t12.uid) : this.renderActionIcon(t12), this.renderActionText(o9)], r9 = "menu-item" === i13 ? n4("li", { key: t12.uid, role: "menuitem", tabIndex: 0, title: o9, "aria-label": o9, class: this.classes(n12.button, n14), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t12.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s12) : n4("div", { key: t12.uid, role: "button", tabIndex: 0, title: o9, "aria-label": o9, class: this.classes(n12.button, n14), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t12.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s12);
    return t12.visible ? r9 : null;
  }
  renderFeatureMenuItem(e12, t12) {
    const { messages: i13, messagesCommon: o9 } = this, { selectedFeatureIndex: n14, selectedFeatureViewModel: s12 } = this.viewModel, r9 = e12 === s12, l12 = { [n12.featureMenuSelected]: r9 }, a14 = r9 ? n4("span", { key: V4(`feature-menu-selected-feature-${n14}`), title: i13.selectedFeature, "aria-label": i13.selectedFeature, class: n12.iconCheckMark }) : null, c21 = n4("span", { innerHTML: e12.title || o9.untitled });
    return n4("li", { role: "menuitem", tabIndex: -1, key: V4(`feature-menu-feature-${n14}`), class: this.classes(l12, n12.featureMenuItem), bind: this, "data-feature-index": t12, onblur: this._removeActiveFeature, onfocus: this._setActiveFeature, onkeyup: this._handleFeatureMenuItemKeyup, onclick: this._selectFeature, onkeydown: this._selectFeature, onmouseover: this._setActiveFeature, onmouseleave: this._removeActiveFeature }, n4("span", { class: n12.featureMenuTitle }, c21, a14));
  }
  renderFeatureMenu() {
    const { featureMenuId: e12 } = this, { featureViewModels: t12 } = this.viewModel;
    return t12.length > 1 ? n4("ol", { class: n12.featureMenuList, id: e12, bind: this, afterCreate: this._featureMenuNodeUpdated, afterUpdate: this._featureMenuNodeUpdated, onkeyup: this._handleFeatureMenuKeyup, role: "menu" }, t12.filter((e13) => !!e13.graphic).map((e13, t13) => this.renderFeatureMenuItem(e13, t13))) : null;
  }
  _storeFeatureSelectionAction(e12, t12) {
    this._featureSelectionActions.set(e12, t12), this.scheduleRender();
  }
  _storeExitRelatedRecordsAction(e12, t12) {
    this._exitRelatedRecordsActions.set(e12, t12), this.scheduleRender();
  }
  _getFlowItemDescription(e12) {
    return "featureCountDescription" in e12 ? e12.featureCountDescription : e12.viewModel.description ?? "";
  }
  async _openRelatedFeature(e12) {
    await e12.viewModel.updateGeometry();
    const t12 = e12.graphic, i13 = t12 == null ? void 0 : t12.geometry;
    if (null == i13 || null == t12)
      return;
    this._destroyFlowItemWidgets(), await this.viewModel.zoomTo({ target: i13 });
    const o9 = h10(i13);
    this.open({ features: [t12], location: null != o9 ? o9 : void 0 });
  }
  _destroyFlowItemWidgets() {
    this._flowItems.removeAll().forEach((e12) => {
      "showAllEnabled" in e12.viewModel && (e12.viewModel.showAllEnabled = false), e12.viewModel = null, e12.destroy();
    });
  }
  _handleBackClick() {
    const e12 = this._flowItems.pop();
    e12 && (this._exitRelatedRecordsActions.delete(e12), this._featureSelectionActions.delete(e12), "showAllEnabled" in e12.viewModel && (e12.viewModel.showAllEnabled = false), e12 && (e12.viewModel = null, e12.destroy()));
  }
  _getActionTitle(e12) {
    const { messages: t12, selectedFeature: i13, messagesCommon: o9 } = this, { id: n14 } = e12, s12 = i13 == null ? void 0 : i13.attributes, r9 = e12.title ?? "", l12 = "zoom-to-feature" === n14 ? s3(r9, { messages: t12 }) : "remove-selected-feature" === n14 ? s3(r9, { messages: o9 }) : "zoom-to-clustered-features" === n14 || "browse-clustered-features" === n14 ? s3(r9, { messages: t12 }) : e12.title;
    return l12 && s12 ? s3(l12, s12) : l12 ?? "";
  }
  _getActionClass(e12) {
    const { selectedFeature: t12 } = this, i13 = t12 == null ? void 0 : t12.attributes, { className: o9, image: n14 } = e12, s12 = n14 || o9 ? o9 : n12.iconDefaultAction;
    return s12 && i13 ? s3(s12, i13) : s12 ?? "";
  }
  _getActionImage(e12) {
    if (e12.active)
      return "";
    const { selectedFeature: t12 } = this, i13 = t12 == null ? void 0 : t12.attributes, { image: o9 } = e12;
    return o9 && i13 ? s3(o9, i13) : o9 ?? "";
  }
  _createFeatureUpdatedAnimation() {
    return b("enter", n12.hasFeatureUpdated);
  }
  _getInlineActionCount() {
    const { maxInlineActions: e12, featureNavigationVisible: t12 } = this;
    if ("number" != typeof e12)
      return null;
    const i13 = Math.round(e12);
    return Math.max(t12 ? i13 - 1 : i13, 0);
  }
  _watchActions() {
    const { allActions: e12 } = this.viewModel;
    this.notifyChange("dividedActions");
    const t12 = "actions";
    this._handles.remove(t12), e12 && e12.forEach((e13) => {
      this._handles.add(l2(() => [e13.uid, e13.active, e13.className, e13.disabled, e13.id, e13.title, e13.image, e13.visible], () => this.scheduleRender()), t12);
    });
  }
  _divideActions() {
    const { allActions: e12 } = this.viewModel, i13 = e12.filter((e13) => e13.visible), o9 = this._getInlineActionCount(), n14 = null === o9, s12 = 0 === o9;
    return { inlineActions: n14 ? i13.slice(0) : s12 ? new V() : i13.slice(0, o9), menuActions: n14 ? new V() : s12 ? i13.slice(0) : i13.slice(o9) };
  }
  _featureMenuOpenChanged(e12) {
    e12 ? this._focusFirstFeature = true : this._focusFeatureMenuButton = true;
  }
  _actionsMenuOpenChanged(e12) {
    e12 ? this._focusFirstAction = true : this._focusActionsMenuButton = true;
  }
  _setTitleFromFeatureWidget() {
    var _a, _b;
    const { selectedFeatureWidget: e12, messagesCommon: t12 } = this;
    e12 && (this.viewModel.title = "error" === ((_a = e12.viewModel) == null ? void 0 : _a.state) ? t12.errorMessage : ((_b = e12.viewModel) == null ? void 0 : _b.title) || "");
  }
  _setContentFromFeatureWidget() {
    const { selectedFeatureWidget: e12 } = this;
    e12 && (this.viewModel.content = e12);
  }
  _unobserveFeatureMenuObserver() {
    this._featureMenuIntersectionObserverNode && this._featureMenuIntersectionObserver.unobserve(this._featureMenuIntersectionObserverNode);
  }
  _featureMenuIntersectionObserverCreated(e12) {
    this._unobserveFeatureMenuObserver(), this._featureMenuIntersectionObserver.observe(e12), this._featureMenuIntersectionObserverNode = e12;
  }
  _handleFeatureMenuKeyup(e12) {
    "Escape" === i2(e12) && (e12.stopPropagation(), this._focusFeatureMenuButton = true, this.featureMenuOpen = false, this.scheduleRender());
  }
  _handleActionMenuKeyup(e12) {
    "Escape" === i2(e12) && (e12.stopPropagation(), this._focusActionsMenuButton = true, this.actionsMenuOpen = false, this.scheduleRender());
  }
  _setActiveFeature(e12) {
    const { viewModel: t12 } = this, i13 = W5(e12.currentTarget);
    t12.activeFeature = t12.features[i13] || null;
  }
  _removeActiveFeature() {
    this.viewModel.activeFeature = null;
  }
  _handleFeatureMenuItemKeyup(e12) {
    const t12 = i2(e12), { _featureMenuNode: i13 } = this, n14 = W5(e12.currentTarget);
    if (!i13)
      return;
    const s12 = i13.querySelectorAll("li"), r9 = s12.length;
    if ("ArrowUp" !== t12)
      if ("ArrowDown" !== t12)
        if ("Home" !== t12)
          if ("End" !== t12)
            ;
          else {
            e12.stopPropagation();
            s12[s12.length - 1].focus();
          }
        else {
          e12.stopPropagation();
          s12[0].focus();
        }
      else {
        e12.stopPropagation();
        s12[(n14 + 1 + r9) % r9].focus();
      }
    else {
      e12.stopPropagation();
      s12[(n14 - 1 + r9) % r9].focus();
    }
  }
  _handleActionMenuItemKeyup(e12) {
    const t12 = i2(e12), { _actionsMenuNode: i13 } = this, n14 = e12.currentTarget.dataset.actionUid, { menuActions: s12 } = this.dividedActions, r9 = s12.findIndex((e13) => e13.uid === n14);
    if (!i13)
      return;
    const l12 = i13.querySelectorAll("li"), a14 = l12.length;
    if ("ArrowUp" !== t12)
      if ("ArrowDown" !== t12)
        if ("Home" !== t12)
          if ("End" !== t12)
            ;
          else {
            e12.stopPropagation();
            l12[l12.length - 1].focus();
          }
        else {
          e12.stopPropagation();
          l12[0].focus();
        }
      else {
        e12.stopPropagation();
        l12[(r9 + 1 + a14) % a14].focus();
      }
    else {
      e12.stopPropagation();
      l12[(r9 - 1 + a14) % a14].focus();
    }
  }
  _handleMainKeyup(e12) {
    const t12 = i2(e12);
    "ArrowLeft" === t12 && (e12.stopPropagation(), this.previous()), "ArrowRight" === t12 && (e12.stopPropagation(), this.next());
  }
  _spinnerEnabledChange(e12) {
    if (this._destroySpinner(), !e12)
      return;
    const t12 = this.get("viewModel.view");
    this._createSpinner(t12);
  }
  _hideSpinner() {
    const { _spinner: e12 } = this;
    e12 && (e12.location = null, e12.hide());
  }
  _displaySpinner() {
    const { _spinner: e12 } = this;
    if (!e12)
      return;
    const { location: t12, waitingForResult: i13 } = this.viewModel;
    i13 && t12 ? e12.show({ location: t12 }) : e12.hide();
  }
  _getIconStyles(e12) {
    return { "background-image": e12 ? `url(${e12})` : "" };
  }
  async _shouldFocus(e12) {
    (e12 == null ? void 0 : e12.shouldFocus) && (await j2(() => {
      var _a;
      return true === ((_a = this.viewModel) == null ? void 0 : _a.active);
    }), this.focus());
  }
  _addSelectedFeatureIndexHandle() {
    const e12 = l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.selectedFeatureIndex;
    }, (e13, t12) => this._selectedFeatureIndexUpdated(e13, t12));
    this._handles.add(e12, T5);
  }
  _selectedFeatureIndexUpdated(e12, t12) {
    const { featureCount: i13 } = this;
    i13 && e12 !== t12 && -1 !== e12 && (this._destroyFlowItemWidgets(), this.actionsMenuOpen = false, this.featureMenuOpen = false, this._mainContainerNode && (this._mainContainerNode.scrollTop = 0), this._rootFlowItemNode && this._rootFlowItemNode.scrollContentTo({ top: 0 }));
  }
  _destroySelectedFeatureWidget() {
    const { _feature: e12 } = this;
    e12 && (e12.viewModel = null, e12 && !e12.destroyed && e12.destroy()), this._feature = null;
  }
  _isScreenLocationWithinView(e12, t12) {
    return e12.x > -1 && e12.y > -1 && e12.x <= t12.width && e12.y <= t12.height;
  }
  _isOutsideView(e12) {
    const { popupHeight: t12, popupWidth: i13, screenLocation: o9, side: n14, view: s12 } = e12;
    if (isNaN(i13) || isNaN(t12) || !s12 || !o9)
      return false;
    const r9 = s12.padding;
    return "right" === n14 && o9.x + i13 / 2 > s12.width - r9.right || ("left" === n14 && o9.x - i13 / 2 < r9.left || ("top" === n14 && o9.y - t12 < r9.top || "bottom" === n14 && o9.y + t12 > s12.height - r9.bottom));
  }
  _calculateAutoAlignment(e12) {
    if ("auto" !== e12)
      return e12;
    const { _pointerOffsetInPx: t12, _containerNode: i13, _mainContainerNode: o9, viewModel: n14 } = this, { screenLocation: s12, view: r9 } = n14;
    if (null == s12 || !r9 || !i13)
      return "top-center";
    if (!this._isScreenLocationWithinView(s12, r9))
      return this._get("currentAlignment") || "top-center";
    function l12(e13) {
      return parseInt(e13.replaceAll(/[^-\d\.]/g, ""), 10);
    }
    const a14 = o9 ? window.getComputedStyle(o9, null) : null, c21 = a14 ? l12(a14.getPropertyValue("max-height")) : 0, u9 = a14 ? l12(a14.getPropertyValue("height")) : 0, { height: d10, width: h13 } = i13.getBoundingClientRect(), p16 = h13 + t12, g9 = Math.max(d10, c21, u9) + t12, m15 = this._isOutsideView({ popupHeight: g9, popupWidth: p16, screenLocation: s12, side: "right", view: r9 }), v8 = this._isOutsideView({ popupHeight: g9, popupWidth: p16, screenLocation: s12, side: "left", view: r9 }), f11 = this._isOutsideView({ popupHeight: g9, popupWidth: p16, screenLocation: s12, side: "top", view: r9 }), _4 = this._isOutsideView({ popupHeight: g9, popupWidth: p16, screenLocation: s12, side: "bottom", view: r9 });
    return v8 ? f11 ? "bottom-right" : "top-right" : m15 ? f11 ? "bottom-left" : "top-left" : f11 ? _4 ? "top-center" : "bottom-center" : "top-center";
  }
  _callCurrentAlignment(e12) {
    return "function" == typeof e12 ? e12.call(this) : e12;
  }
  _getCurrentAlignment() {
    const { alignment: e12, dockEnabled: t12 } = this;
    return t12 || !this.viewModel.active ? null : this._calculatePositionResult(this._calculateAutoAlignment(this._callCurrentAlignment(e12)));
  }
  _setCurrentAlignment() {
    this._set("currentAlignment", this._getCurrentAlignment());
  }
  _setCurrentDockPosition() {
    this._set("currentDockPosition", this._getCurrentDockPosition());
  }
  _calculatePositionResult(e12) {
    const t12 = ["left", "right"];
    return h2(this.container) && t12.reverse(), e12 == null ? void 0 : e12.replace(/leading/gi, t12[0]).replaceAll(/trailing/gi, t12[1]);
  }
  _callDockPosition(e12) {
    return "function" == typeof e12 ? e12.call(this) : e12;
  }
  _getDockPosition() {
    var _a;
    return this._calculatePositionResult(this._calculateAutoDockPosition(this._callDockPosition((_a = this.dockOptions) == null ? void 0 : _a.position)));
  }
  _getCurrentDockPosition() {
    return this.dockEnabled && this.viewModel.active ? this._getDockPosition() : null;
  }
  _wouldDockTo() {
    return this.dockEnabled ? null : this._getDockPosition();
  }
  _calculateAutoDockPosition(e12) {
    var _a;
    if ("auto" !== e12)
      return e12;
    const t12 = (_a = this.viewModel) == null ? void 0 : _a.view, i13 = h2(this.container) ? "top-left" : "top-right";
    if (!t12)
      return i13;
    const o9 = t12.padding || { left: 0, right: 0, top: 0, bottom: 0 }, n14 = t12.width - o9.left - o9.right, { breakpoints: s12 } = t12;
    return s12 && n14 <= s12.xsmall ? "bottom-center" : i13;
  }
  _positionContainer(e12 = this._containerNode) {
    if (e12 && (this._containerNode = e12), !this._containerNode)
      return;
    const { screenLocation: t12 } = this.viewModel, { width: i13 } = this._containerNode.getBoundingClientRect(), o9 = this._calculatePositionStyle(t12, i13);
    o9 && Object.assign(this._containerNode.style, o9);
  }
  _calculateFullWidth(e12) {
    const { currentAlignment: t12, _pointerOffsetInPx: i13 } = this;
    return "top-left" === t12 || "bottom-left" === t12 || "top-right" === t12 || "bottom-right" === t12 ? e12 + i13 : e12;
  }
  _calculateAlignmentPosition(e12, t12, i13, o9) {
    const { currentAlignment: n14, _pointerOffsetInPx: s12 } = this;
    if (!i13)
      return;
    const { padding: r9 } = i13, l12 = o9 / 2, a14 = i13.height - t12, c21 = i13.width - e12;
    return "bottom-center" === n14 ? { top: t12 + s12 - r9.top, left: e12 - l12 - r9.left } : "top-left" === n14 ? { bottom: a14 + s12 - r9.bottom, right: c21 + s12 - r9.right } : "bottom-left" === n14 ? { top: t12 + s12 - r9.top, right: c21 + s12 - r9.right } : "top-right" === n14 ? { bottom: a14 + s12 - r9.bottom, left: e12 + s12 - r9.left } : "bottom-right" === n14 ? { top: t12 + s12 - r9.top, left: e12 + s12 - r9.left } : "top-center" === n14 ? { bottom: a14 + s12 - r9.bottom, left: e12 - l12 - r9.left } : void 0;
  }
  _calculatePositionStyle(e12, t12) {
    const { dockEnabled: i13, view: o9 } = this;
    if (!o9)
      return;
    if (i13)
      return { left: "", top: "", right: "", bottom: "" };
    if (null == e12 || !t12)
      return;
    const n14 = this._calculateFullWidth(t12), s12 = this._calculateAlignmentPosition(e12.x, e12.y, o9, n14);
    return s12 ? { top: void 0 !== s12.top ? `${s12.top}px` : "auto", left: void 0 !== s12.left ? `${s12.left}px` : "auto", bottom: void 0 !== s12.bottom ? `${s12.bottom}px` : "auto", right: void 0 !== s12.right ? `${s12.right}px` : "auto" } : void 0;
  }
  _viewChange(e12, t12) {
    e12 && t12 && (this.close(), this.clear());
  }
  _viewReadyChange(e12, t12) {
    if (e12) {
      const e13 = this.get("viewModel.view");
      this._wireUpView(e13);
    } else
      t12 && (this.close(), this.clear());
  }
  _wireUpView(e12) {
    if (this._destroySpinner(), !e12)
      return;
    const { spinnerEnabled: t12 } = this;
    t12 && this._createSpinner(e12), this._setDockEnabledForViewSize(this.dockOptions);
  }
  _dockingThresholdCrossed(e12, t12, i13) {
    const [o9, n14] = e12, [s12, r9] = t12, { width: l12 = 0, height: a14 = 0 } = i13 ?? {};
    return o9 <= l12 && s12 > l12 || o9 > l12 && s12 <= l12 || n14 <= a14 && r9 > a14 || n14 > a14 && r9 <= a14;
  }
  _updateDockEnabledForViewSize(e12, t12) {
    if (!e12 || !t12)
      return;
    const i13 = this.get("viewModel.view.padding") || { left: 0, right: 0, top: 0, bottom: 0 }, o9 = i13.left + i13.right, n14 = i13.top + i13.bottom, s12 = [], r9 = [];
    s12[0] = e12[0] - o9, s12[1] = e12[1] - n14, r9[0] = t12[0] - o9, r9[1] = t12[1] - n14;
    const { dockOptions: l12 } = this, a14 = l12.breakpoint;
    this._dockingThresholdCrossed(s12, r9, a14) && this._setDockEnabledForViewSize(l12), this._setCurrentDockPosition();
  }
  _focusDockButtonNode(e12) {
    this._focusDockButton && (this._focusDockButton = false, e12.focus());
  }
  _closeButtonNodeUpdated(e12) {
    return this._focusClose ? (this._focusClose = false, void e12.focus()) : this._blurClose ? (this._blurClose = false, void e12.blur()) : void 0;
  }
  _mainContainerNodeUpdated(e12) {
    return this._mainContainerNode = e12, this._focusContainer ? (this._focusContainer = false, void e12.focus()) : this._blurContainer ? (this._blurContainer = false, void e12.blur()) : void 0;
  }
  _featureMenuNodeUpdated(e12) {
    if (this._featureMenuNode = e12, !e12 || !this._focusFirstFeature)
      return;
    this._focusFirstFeature = false;
    const t12 = e12.querySelectorAll("li");
    if (t12.length) {
      t12[0].focus();
    }
  }
  _actionsMenuNodeUpdated(e12) {
    if (this._actionsMenuNode = e12, !e12 || !this._focusFirstAction)
      return;
    this._focusFirstAction = false;
    const t12 = e12.querySelectorAll("li");
    if (t12.length) {
      t12[0].focus();
    }
  }
  _focusFeatureMenuButtonNode(e12) {
    this._focusFeatureMenuButton && (this._focusFeatureMenuButton = false, e12.focus());
  }
  _focusActionsMenuButtonNode(e12) {
    this._focusActionsMenuButton && (this._focusActionsMenuButton = false, e12.focus());
  }
  _featureMenuViewportScrollTop() {
    this._featureMenuViewportNode && (this._featureMenuViewportNode.scrollTop = 0);
  }
  _toggleScreenLocationEnabled() {
    const { dockEnabled: e12, viewModel: t12 } = this;
    if (!t12)
      return;
    const i13 = t12.active && !e12;
    t12.screenLocationEnabled = i13;
  }
  _shouldDockAtCurrentViewSize(e12) {
    var _a, _b;
    const t12 = e12.breakpoint, i13 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ui;
    if (!i13)
      return false;
    const { width: o9, height: n14 } = i13;
    if (isNaN(o9) || isNaN(n14))
      return false;
    if (!t12)
      return false;
    const s12 = t12.hasOwnProperty("width") && o9 <= (t12.width ?? 0), r9 = t12.hasOwnProperty("height") && n14 <= (t12.height ?? 0);
    return s12 || r9;
  }
  _setDockEnabledForViewSize(e12) {
    e12.breakpoint && (this.dockEnabled = this._shouldDockAtCurrentViewSize(e12));
  }
  _getPageText(e12, t12) {
    return this.featureNavigationVisible ? s3(this.messages.pageText, { index: t12 + 1, total: e12 }) : null;
  }
  _destroySpinner() {
    var _a, _b;
    this._spinner && ((_b = (_a = this.view) == null ? void 0 : _a.ui) == null ? void 0 : _b.remove(this._spinner, S7), this._spinner.destroy(), this._spinner = null);
  }
  _createSpinner(e12) {
    e12 && (this._spinner = new h9({ view: e12 }), e12.ui.add(this._spinner, { key: S7, position: "manual", internal: true }));
  }
  _toggleCollapsed() {
    this.collapsed = !this.collapsed;
  }
  _close() {
    this.close(), this.view && this.view.focus();
  }
  _toggleDockEnabled() {
    this.dockEnabled = !this.dockEnabled, this._focusDockButton = true, this.scheduleRender();
  }
  _toggleFeatureMenu() {
    const e12 = !this.featureMenuOpen;
    this._featureMenuOpenChanged(e12), this.actionsMenuOpen = false, this.featureMenuOpen = e12;
  }
  _toggleActionsMenu() {
    const e12 = !this.actionsMenuOpen;
    this._actionsMenuOpenChanged(e12), this.featureMenuOpen = false, this.actionsMenuOpen = e12;
  }
  _triggerAction(e12) {
    const t12 = e12.currentTarget.dataset.actionUid, { allActions: i13 } = this.viewModel, o9 = i13.findIndex((e13) => e13.uid === t12), n14 = i13.at(o9);
    n14 && "toggle" === n14.type && (n14.value = !n14.value), this.actionsMenuOpen = false, this.viewModel.triggerAction(o9);
  }
  _selectFeature(e12) {
    const t12 = W5(e12.currentTarget);
    null == t12 || isNaN(t12) || (this.viewModel.selectedFeatureIndex = t12), this.featureMenuOpen = false, this._focusFeatureMenuButton = true, this.scheduleRender();
  }
  _next() {
    this.next();
  }
  _previous() {
    this.previous();
  }
};
function W5(e12) {
  return e12 == null ? void 0 : e12["data-feature-index"];
}
e([y2({ readOnly: true })], U4.prototype, "actionsMenuId", null), e([y2({ readOnly: true })], U4.prototype, "actionsMenuButtonId", null), e([y2({ readOnly: true })], U4.prototype, "featureMenuId", null), e([y2({ readOnly: true })], U4.prototype, "titleId", null), e([y2({ readOnly: true })], U4.prototype, "contentId", null), e([y2({ readOnly: true })], U4.prototype, "hasContent", null), e([y2({ readOnly: true })], U4.prototype, "featureNavigationVisible", null), e([y2({ readOnly: true })], U4.prototype, "collapsible", null), e([y2({ readOnly: true })], U4.prototype, "featureMenuVisible", null), e([y2({ readOnly: true })], U4.prototype, "contentCollapsed", null), e([y2({ readOnly: true })], U4.prototype, "dividedActions", null), e([y2({ readOnly: true, dependsOn: ["_flowItems.length"] })], U4.prototype, "_activeFlowItemWidget", null), e([y2()], U4.prototype, "actions", null), e([y2()], U4.prototype, "actionsMenuOpen", null), e([y2()], U4.prototype, "alignment", void 0), e([y2()], U4.prototype, "autoCloseEnabled", null), e([y2()], U4.prototype, "autoOpenEnabled", null), e([y2()], U4.prototype, "defaultPopupTemplateEnabled", null), e([y2()], U4.prototype, "content", null), e([y2()], U4.prototype, "collapsed", void 0), e([y2()], U4.prototype, "collapseEnabled", void 0), e([y2({ readOnly: true })], U4.prototype, "currentAlignment", null), e([y2({ readOnly: true })], U4.prototype, "currentDockPosition", null), e([y2()], U4.prototype, "dockOptions", null), e([y2()], U4.prototype, "dockEnabled", void 0), e([y2({ readOnly: true })], U4.prototype, "featureCount", null), e([y2()], U4.prototype, "featureMenuOpen", null), e([y2()], U4.prototype, "features", null), e([y2()], U4.prototype, "goToOverride", null), e([y2()], U4.prototype, "headingLevel", void 0), e([y2()], U4.prototype, "highlightEnabled", null), e([y2()], U4.prototype, "location", null), e([y2()], U4.prototype, "label", null), e([y2()], U4.prototype, "maxInlineActions", void 0), e([y2(), e2("esri/widgets/Popup/t9n/Popup")], U4.prototype, "messages", void 0), e([y2(), e2("esri/t9n/common")], U4.prototype, "messagesCommon", void 0), e([y2()], U4.prototype, "promises", null), e([y2({ readOnly: true })], U4.prototype, "selectedFeature", null), e([y2()], U4.prototype, "selectedFeatureIndex", null), e([y2({ readOnly: true })], U4.prototype, "selectedFeatureWidget", null), e([y2()], U4.prototype, "spinnerEnabled", void 0), e([y2()], U4.prototype, "title", null), e([y2()], U4.prototype, "updateLocationEnabled", null), e([y2()], U4.prototype, "view", null), e([y2({ type: G2 }), e3(["triggerAction", "trigger-action"])], U4.prototype, "viewModel", void 0), e([y2()], U4.prototype, "visible", null), e([y2()], U4.prototype, "visibleElements", void 0), e([s4("visibleElements")], U4.prototype, "castVisibleElements", null), e([t3()], U4.prototype, "_close", null), e([t3()], U4.prototype, "_toggleDockEnabled", null), e([t3()], U4.prototype, "_toggleFeatureMenu", null), e([t3()], U4.prototype, "_toggleActionsMenu", null), e([t3()], U4.prototype, "_triggerAction", null), e([t3()], U4.prototype, "_selectFeature", null), e([t3()], U4.prototype, "_next", null), e([t3()], U4.prototype, "_previous", null), U4 = e([a("esri.widgets.Popup")], U4);
var H3 = U4;
export {
  H3 as default
};
//# sourceMappingURL=Popup-Z6Z5NYHA.js.map
