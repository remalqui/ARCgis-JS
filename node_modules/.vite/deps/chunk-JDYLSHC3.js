import {
  Rn,
  nn
} from "./chunk-SO6DBMQG.js";
import {
  R3 as R,
  f
} from "./chunk-SFV6XLDZ.js";

// node_modules/@arcgis/core/portal/support/portalItemUtils.js
async function o(o2) {
  const i2 = o2.spatialReference;
  if (i2.isWGS84)
    return o2.clone();
  if (i2.isWebMercator)
    return R(o2);
  const s2 = f.WGS84;
  return await Rn(i2, s2), nn(o2, s2);
}
function i(e, t) {
  if (!s(e, t)) {
    const r = e.typeKeywords;
    r ? r.push(t) : e.typeKeywords = [t];
  }
}
function s(e, t) {
  var _a;
  return !!((_a = e.typeKeywords) == null ? void 0 : _a.includes(t));
}
function c(e) {
  return s(e, l.HOSTED_SERVICE);
}
function u(e, t) {
  const r = e.typeKeywords;
  if (r) {
    const e2 = r.indexOf(t);
    e2 > -1 && r.splice(e2, 1);
  }
}
async function a(e) {
  const t = e.clone().normalize();
  let r;
  if (t.length > 1)
    for (const n of t)
      r ? n.width > r.width && (r = n) : r = n;
  else
    r = t[0];
  return o(r);
}
var l = { DEVELOPER_BASEMAP: "DeveloperBasemap", JSAPI: "ArcGIS API for JavaScript", METADATA: "Metadata", MULTI_LAYER: "Multilayer", SINGLE_LAYER: "Singlelayer", TABLE: "Table", HOSTED_SERVICE: "Hosted Service" };
function f2(e) {
  var _a;
  const { portal: t, isOrgItem: r, itemControl: n } = e, o2 = (_a = t.user) == null ? void 0 : _a.privileges;
  let i2 = !o2 || o2.includes("features:user:edit"), s2 = !!r && !!(o2 == null ? void 0 : o2.includes("features:user:fullEdit"));
  const c2 = "update" === n || "admin" === n;
  return c2 ? s2 = i2 = true : s2 && (i2 = true), { features: { edit: i2, fullEdit: s2 }, content: { updateItem: c2 } };
}

export {
  i,
  s,
  c,
  u,
  a,
  l,
  f2 as f
};
//# sourceMappingURL=chunk-JDYLSHC3.js.map
