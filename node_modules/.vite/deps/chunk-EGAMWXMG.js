import {
  a,
  a3 as a2,
  e,
  i,
  i2,
  o as o2,
  o2 as o3,
  s
} from "./chunk-Q6HUS3IU.js";
import {
  o
} from "./chunk-V66LHQVK.js";
import {
  x
} from "./chunk-KW3ZNPTA.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Texture2DDrawUniform.js
var s2 = class extends i {
  constructor(r, s3) {
    super(r, "sampler2D", a.Draw, (e2, o5, t) => e2.bindTexture(r, s3(o5, t)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Float2DrawUniform.js
var o4 = class extends i {
  constructor(r, o5) {
    super(r, "vec2", a.Draw, (e2, s3, t, i3) => e2.setUniform2fv(r, o5(s3, t, i3)));
  }
};

// node_modules/@arcgis/core/chunks/SSAOBlur.glsl.js
var f = 4;
function c() {
  const c2 = new i2(), u2 = c2.fragment;
  c2.include(o3);
  const m = (f + 1) / 2, p = 1 / (2 * m * m);
  return u2.include(a2), u2.uniforms.add(new s("depthMap", (e2) => e2.depthTexture), new s2("tex", (e2) => e2.colorTexture), new o4("blurSize", (e2) => e2.blurSize), new o2("projScale", (r, o5) => {
    const t = x(o5.camera.eye, o5.camera.center);
    return t > 5e4 ? Math.max(0, r.projScale - (t - 5e4)) : r.projScale;
  }), new e("nearFar", (e2, r) => r.camera.nearFar)), u2.code.add(o`
    void blurFunction(vec2 uv, float r, float center_d, float sharpness, inout float wTotal, inout float bTotal) {
      float c = texture(tex, uv).r;
      float d = linearDepthFromTexture(depthMap, uv, nearFar);

      float ddiff = d - center_d;

      float w = exp(-r * r * ${o.float(p)} - ddiff * ddiff * sharpness);
      wTotal += w;
      bTotal += w * c;
    }
  `), u2.code.add(o`
    void main(void) {
      float b = 0.0;
      float w_total = 0.0;

      float center_d = linearDepthFromTexture(depthMap, uv, nearFar);

      float sharpness = -0.05 * projScale / center_d;
      for (int r = -${o.int(f)}; r <= ${o.int(f)}; ++r) {
        float rf = float(r);
        vec2 uvOffset = uv + rf * blurSize;
        blurFunction(uvOffset, rf, center_d, sharpness, w_total, b);
      }

      fragColor = vec4(b / w_total);
    }
  `), c2;
}
var u = Object.freeze(Object.defineProperty({ __proto__: null, build: c }, Symbol.toStringTag, { value: "Module" }));

export {
  s2 as s,
  c,
  u
};
//# sourceMappingURL=chunk-EGAMWXMG.js.map
