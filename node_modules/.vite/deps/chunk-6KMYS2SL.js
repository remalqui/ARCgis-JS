// node_modules/@arcgis/core/renderers/support/rasterRendererChecks.js
function n(n2) {
  var _a, _b, _c;
  return ["u8", "s8"].includes(n2.pixelType) && null != ((_b = (_a = n2.statistics) == null ? void 0 : _a[0]) == null ? void 0 : _b.min) && null != ((_c = n2.statistics[0]) == null ? void 0 : _c.max) && 1 === n2.bandCount;
}
function t(t2, e2) {
  const { attributeTable: u2, bandCount: r2 } = t2;
  if (null == u2 && n(t2))
    return true;
  if (null == u2 || r2 > 1)
    return false;
  if (e2) {
    if (null == u2.fields.find((n2) => n2.name.toLowerCase() === e2.toLowerCase()))
      return false;
  }
  return true;
}
function e(n2) {
  const { bandCount: t2, dataType: e2, pixelType: u2 } = n2;
  return "elevation" === e2 || "generic" === e2 && 1 === t2 && ("s16" === u2 || "s32" === u2 || "f32" === u2 || "f64" === u2);
}
function u(n2, t2 = false) {
  const { bandCount: e2, colormap: u2, pixelType: r2 } = n2;
  return 1 === e2 && (!!(u2 == null ? void 0 : u2.length) || !t2 && "u8" === r2);
}
function r(n2, t2 = false) {
  const { attributeTable: e2, bandCount: u2 } = n2;
  return 1 === u2 && (!t2 || null != e2 || null != n2.histograms);
}
function o(n2) {
  const { dataType: t2 } = n2;
  return "vector-uv" === t2 || "vector-magdir" === t2;
}
function i(n2) {
  const { dataType: t2 } = n2;
  return "vector-uv" === t2 || "vector-magdir" === t2;
}

export {
  t,
  e,
  u,
  r,
  o,
  i
};
//# sourceMappingURL=chunk-6KMYS2SL.js.map
