import {
  T,
  a as a4,
  c,
  e as e3,
  e2 as e4,
  i2 as i,
  m as m3,
  n as n3,
  o,
  t as t3,
  t2 as t4
} from "./chunk-KUQPXYNJ.js";
import {
  autoMode,
  darkMode
} from "./chunk-XUY2GLHG.js";
import {
  getAssetPath,
  setAssetPath
} from "./chunk-JYZSPYYW.js";
import {
  n as n2
} from "./chunk-5EXFDBQJ.js";
import {
  f as f2,
  h,
  l as l2
} from "./chunk-XN5VV437.js";
import {
  h as h2
} from "./chunk-74O2T7JC.js";
import {
  n
} from "./chunk-WBSPL6CJ.js";
import {
  m as m2
} from "./chunk-N5ULYWRU.js";
import {
  a as a3
} from "./chunk-LQVUN6IS.js";
import {
  s as s2
} from "./chunk-JZM5YUHA.js";
import {
  s as s3
} from "./chunk-3PLRSFLA.js";
import {
  t2 as t,
  t5 as t2,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2,
  f
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  _
} from "./chunk-O3CHVGVF.js";
import {
  e as e2,
  j,
  k,
  m,
  r
} from "./chunk-HNHXEGH2.js";
import {
  l
} from "./chunk-DWOEYHKS.js";
import {
  s2 as s
} from "./chunk-W2N7YT6I.js";
import {
  a
} from "./chunk-I5JT24BO.js";

// node_modules/@esri/calcite-components/dist/components/index.js
function initModeChangeEvent() {
  const { classList } = document.body;
  const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
  const getMode = () => classList.contains(darkMode) || classList.contains(autoMode) && prefersDark ? "dark" : "light";
  const emitModeChange = (mode) => document.body.dispatchEvent(new CustomEvent("calciteModeChange", { bubbles: true, detail: { mode } }));
  const modeChangeHandler = (newMode) => {
    currentMode !== newMode && emitModeChange(newMode);
    currentMode = newMode;
  };
  let currentMode = getMode();
  emitModeChange(currentMode);
  window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (event) => modeChangeHandler(event.matches ? "dark" : "light"));
  new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {
    attributes: true,
    attributeFilter: ["class"]
  });
}
function appGlobalScript() {
  const isBrowser = typeof window !== "undefined" && typeof location !== "undefined" && typeof document !== "undefined" && window.location === location && window.document === document;
  if (isBrowser) {
    if (document.readyState === "interactive") {
      initModeChangeEvent();
    } else {
      document.addEventListener("DOMContentLoaded", () => initModeChangeEvent(), { once: true });
    }
  }
}
var globalScripts = appGlobalScript;
globalScripts();

// node_modules/@arcgis/core/widgets/support/componentsUtils.js
var c2;
function r2() {
  try {
    getAssetPath(".");
  } catch {
    setAssetPath(_(a3(c2)));
  }
}
function n4(t7) {
  var _a;
  const o5 = [];
  for (const s5 of Object.keys(t7))
    customElements.get(`calcite-${s5}`) || o5.push((_a = t7[s5]) == null ? void 0 : _a.call(t7));
  return Promise.all(o5);
}
c2 = "components/assets";

// node_modules/@arcgis/core/core/domUtils.js
function e5(e12) {
  return "string" == typeof e12 ? document.getElementById(e12) : e12 ?? null;
}
function n5(e12) {
  for (; e12.hasChildNodes(); )
    e12.removeChild(e12.firstChild);
}
function o2(e12, n9) {
  const t7 = n9.parentNode;
  t7 && t7.insertBefore(e12, n9);
}
function i2(e12, n9) {
  for (; ; ) {
    const t7 = e12.firstChild;
    if (!t7)
      break;
    n9.appendChild(t7);
  }
}
var l3 = "function" == typeof Element.prototype.closest ? (e12, n9) => e12.closest(n9) : (e12, n9) => {
  let t7 = e12;
  do {
    if (t7.matches(n9))
      return t7;
    t7 = t7.parentElement;
  } while (null !== t7 && 1 === t7.nodeType);
  return null;
};

// node_modules/@arcgis/core/libs/maquette-advanced-projector/advanced-projector-options.js
var e6 = { handleInterceptedEvent: (e12, p, t7, n9) => (e12.scheduleRender(), p.properties[`on${n9.type}`].apply(p.properties.bind || t7, [n9])) };

// node_modules/@arcgis/core/libs/maquette-advanced-projector/utils.js
var e7 = { namespace: void 0, performanceLogger: () => {
}, eventHandlerInterceptor: void 0, styleApplyer: (e12, r6, o5) => {
  e12.style[r6] = o5;
} };
var r3 = (r6) => ({ ...e7, ...r6 });

// node_modules/@arcgis/core/libs/maquette-advanced-projector/projector.js
var o3 = (e12, t7) => {
  const r6 = [];
  for (; e12 && e12 !== t7; )
    r6.push(e12), e12 = e12.parentNode;
  return r6;
};
var n6 = (e12, t7) => e12.find(t7);
var d = (e12, t7, r6 = false) => {
  let o5 = e12;
  return t7.forEach((e13, d2) => {
    const s5 = (o5 == null ? void 0 : o5.children) ? n6(o5.children, (t8) => t8.domNode === e13) : void 0;
    r6 && !s5 && d2 !== t7.length - 1 || (o5 = s5);
  }), o5;
};
var s4 = (n9) => {
  let s5;
  const i3 = { ...e6, ...n9 }, c4 = r3(i3), a5 = c4.performanceLogger;
  let m4, p = true, l4 = false;
  const f3 = [], u = [], h3 = (e12, t7, r6) => {
    var _a;
    let n10;
    c4.eventHandlerInterceptor = (e13, t8, r7, c5) => function(e14) {
      let t9;
      a5("domEvent", e14);
      const r8 = o3(e14.currentTarget, n10.domNode), c6 = r8.some((e15) => {
        var _a2;
        return customElements.get((_a2 = e15 == null ? void 0 : e15.tagName) == null ? void 0 : _a2.toLowerCase());
      });
      if (e14.eventPhase === Event.CAPTURING_PHASE || !c6)
        r8.reverse(), t9 = d(n10.getLastRender(), r8);
      else {
        const r9 = e14.composedPath(), o5 = r9.slice(r9.indexOf(e14.currentTarget), r9.indexOf(n10.domNode)).filter((e15) => e15.getRootNode() === e15.ownerDocument).reverse();
        t9 = d(n10.getLastRender(), o5, true);
      }
      let m6;
      return t9 && (m6 = i3.handleInterceptedEvent(s5, t9, this, e14)), a5("domEventProcessed", e14), m6;
    }, (_a = i3.postProcessProjectionOptions) == null ? void 0 : _a.call(i3, c4);
    const m5 = r6();
    n10 = e12(t7, m5, c4), f3.push(n10), u.push(r6), i3.afterFirstVNodeRendered && i3.afterFirstVNodeRendered(n10, m5);
  };
  let v = () => {
    if (m4 = void 0, p) {
      p = false, a5("renderStart", void 0);
      for (let e12 = 0; e12 < f3.length; e12++) {
        const t7 = u[e12]();
        a5("rendered", void 0), f3[e12].update(t7), a5("patched", void 0);
      }
      a5("renderDone", void 0), p = true;
    }
  };
  return i3.modifyDoRenderImplementation && (v = i3.modifyDoRenderImplementation(v, f3, u)), s5 = { renderNow: v, scheduleRender: () => {
    m4 || l4 || (m4 = requestAnimationFrame(v));
  }, stop: () => {
    m4 && (cancelAnimationFrame(m4), m4 = void 0), l4 = true;
  }, resume: () => {
    l4 = false, p = true, s5.scheduleRender();
  }, append: (t7, r6) => {
    h3(n3.append, t7, r6);
  }, insertBefore: (t7, r6) => {
    h3(n3.insertBefore, t7, r6);
  }, merge: (t7, r6) => {
    h3(n3.merge, t7, r6);
  }, replace: (t7, r6) => {
    h3(n3.replace, t7, r6);
  }, detach: (e12) => {
    for (let t7 = 0; t7 < u.length; t7++)
      if (u[t7] === e12)
        return u.splice(t7, 1), f3.splice(t7, 1)[0];
    throw new Error("renderFunction was not found");
  } }, s5;
};

// node_modules/@arcgis/core/widgets/support/tests.js
var e8 = /* @__PURE__ */ new Set();
function n7(n9) {
  e8.add(n9), n9.finally(() => e8.delete(n9));
}

// node_modules/@arcgis/core/widgets/Widget.js
var $;
var z = "esri.widgets.Widget";
var x = 0;
var A = { widgetIcon: "esri-icon-checkbox-unchecked" };
function B(e12, t7) {
  for (const r6 in t7)
    null != e12[r6] && ("object" == typeof e12[r6] && "object" == typeof t7[r6] ? B(e12[r6], t7 == null ? void 0 : t7[r6]) : e12[r6] = t7[r6]);
  return e12;
}
var D = s4({ postProcessProjectionOptions(e12) {
  const t7 = e12.eventHandlerInterceptor, r6 = /capture$/i;
  e12.eventHandlerInterceptor = (e13, s5, o5, i3) => {
    const n9 = t7 == null ? void 0 : t7(e13, s5, o5, i3), a5 = r6.test(e13);
    if (!((e13 = e13.replace(r6, "")).toLowerCase() in o5) || a5) {
      const t8 = e13[2].toLowerCase() + e13.slice(3), r7 = (e14) => n9 == null ? void 0 : n9.call(o5, e14);
      o5.addEventListener(t8, r7, a5);
      const s6 = () => o5.removeEventListener(t8, r7, a5), c4 = i3.afterRemoved;
      i3.afterRemoved = (e14) => {
        c4 == null ? void 0 : c4(e14), s6();
      };
    }
    return n9;
  };
}, handleInterceptedEvent(e12, t7, r6, s5) {
  const { eventPhase: o5, type: i3 } = s5, n9 = o5 === Event.CAPTURING_PHASE;
  let a5 = `on${i3}${n9 ? "capture" : ""}`;
  const c4 = t7.properties;
  (c4 && a5 in c4 || (a5 = `on${i3[0].toUpperCase()}${i3.slice(1)}${n9 ? "Capture" : ""}`, c4 && a5 in c4)) && (t3(), e12.scheduleRender(), c4[a5].call(c4.bind || r6, s5));
} });
var M = false;
var O = class extends m2(n.EventedAccessor) {
  constructor(e12, t7) {
    super(e12, t7), this._attached = false, this._internalHandles = new t(), this._projector = D, this._readyForTrueRender = false, this.iconClass = A.widgetIcon, this.icon = null, this.key = this, this._loadLocale = k(async () => {
      if (this._messageBundleProps && this._messageBundleProps.length) {
        const e13 = await j(this._messageBundleProps.map(async ({ bundlePath: e14, propertyName: t8 }) => {
          if (this.destroyed)
            return;
          let r7 = await h2(e14);
          this.uiStrings && Object.keys(this.uiStrings) && (r7 = B(a(r7), this.uiStrings)), this[t8] = r7;
        }));
        if (this.destroyed)
          return;
        for (const t8 of e13)
          t8.error && s.getLogger(this).error("widget-intl:locale-error", this.declaredClass, t8.error);
      }
      await this.loadLocale();
    }), r2();
    const r6 = "esri-widget-uid-" + n2(), s5 = this.render.bind(this);
    this._trackingTarget = new t2(() => this.scheduleRender());
    const o5 = () => {
      var _a;
      if (!this._readyForTrueRender || this.destroyed)
        return null;
      const e13 = s5();
      let { properties: t8 } = e13;
      t8 || (e13.properties = t8 = {});
      const { key: o6 } = t8;
      o6 || (t8.key = r6), this.visible ? t8.styles || (t8.styles = {}) : (t8.class = "", t8.styles = { display: "none" }), t8.styles.display || (t8.styles.display = "");
      let i3 = 0;
      return (_a = e13.children) == null ? void 0 : _a.forEach((e14) => {
        if (a4(e14.vnodeSelector))
          return;
        let { properties: t9 } = e14;
        t9 || (e14.properties = t9 = {}), t9.key || (t9.key = `${this.id}--${i3++}`);
      }), i(this, e13);
    };
    this.render = () => {
      if (M)
        return o5();
      let e13 = e3(this) ?? null;
      if (e13)
        return e13;
      this._trackingTarget.clear(), M = true;
      try {
        e13 = f(this._trackingTarget, o5);
      } catch (t8) {
        throw console.error(t8), t8;
      } finally {
        M = false;
      }
      return e13 && c(this, e13), e13;
    }, this.addResolvingPromise(this._resourcesFetch = this.beforeFirstRender().then(() => {
      this._readyForTrueRender = true, this._postInitialize();
    })), n7(this._resourcesFetch);
  }
  normalizeCtorArgs(e12, t7) {
    const r6 = { ...e12 };
    return t7 && (r6.container = t7), r6;
  }
  postInitialize() {
  }
  beforeFirstRender() {
    return Promise.all([this.loadDependencies(), this._loadLocale()]).then(() => {
    }).catch(m);
  }
  async loadDependencies() {
  }
  async loadLocale() {
  }
  destroy() {
    this.destroyed || (l(this._trackingTarget), l(this.viewModel), this._detach(this.container), this._set("container", null), this._internalHandles.destroy(), this._emitter.clear(), this.render = () => null, this._projector = null, o(this));
  }
  set container(e12) {
    this._get("container") || this._set("container", e12);
  }
  castContainer(e12) {
    return e5(e12);
  }
  get domNode() {
    return this.container;
  }
  set domNode(e12) {
    this.container = e12;
  }
  get id() {
    return this._get("id") || this.get("container.id") || Date.now().toString(16) + "-widget-" + x++;
  }
  set id(e12) {
    e12 && this._set("id", e12);
  }
  get label() {
    return this.declaredClass.split(".").pop();
  }
  set label(e12) {
    this._overrideIfSome("label", e12);
  }
  get renderable() {
    return this._resourcesFetch;
  }
  get visible() {
    return this._get("visible");
  }
  set visible(e12) {
    this._set("visible", e12);
  }
  get [($ = t4, e4)]() {
    return { projector: this._projector };
  }
  render() {
    throw new Error("not implemented");
  }
  scheduleRender() {
    this.destroyed || (o(this), this._projector.scheduleRender());
  }
  classes(...e12) {
    return m3.apply(this, e12);
  }
  renderNow() {
    o(this), this._projector.renderNow();
  }
  _postInitialize() {
    var _a;
    if (this.destroyed)
      return;
    this.scheduleRender(), ((_a = this._delegatedEventNames) == null ? void 0 : _a.length) && this._internalHandles.add(l2(() => this.viewModel, (e13, t7) => {
      t7 && this._internalHandles.remove("delegated-events"), e13 && e2(e13) && this._internalHandles.add(this._delegatedEventNames.map((t8) => r(e13, t8, (e14) => {
        this.emit(t8, e14);
      })), "delegated-events");
    }, h)), this.postInitialize();
    const e12 = async () => {
      await this._loadLocale().catch(m), this.scheduleRender();
    };
    this._internalHandles.add([s2(e12), l2(() => this.uiStrings, e12), f2(() => this.container, (e13) => {
      this.destroyed || this._attach(e13);
    }, { initial: true, once: true })]);
  }
  _attach(e12) {
    e12 && (this._projector.merge(e12, this.render), this._attached = true);
  }
  _detach(e12) {
    var _a;
    this._attached && (this._projector.detach(this.render), this._attached = false), (_a = e12 == null ? void 0 : e12.parentNode) == null ? void 0 : _a.removeChild(e12);
  }
};
O[$] = true, e([y()], O.prototype, "_readyForTrueRender", void 0), e([y({ value: null })], O.prototype, "container", null), e([s3("container")], O.prototype, "castContainer", null), e([y()], O.prototype, "iconClass", void 0), e([y()], O.prototype, "icon", void 0), e([y()], O.prototype, "id", null), e([y()], O.prototype, "label", null), e([y()], O.prototype, "renderable", null), e([y()], O.prototype, "uiStrings", void 0), e([y()], O.prototype, "viewModel", void 0), e([y({ value: true })], O.prototype, "visible", null), e([y()], O.prototype, "key", void 0), e([y()], O.prototype, "children", void 0), e([y()], O.prototype, "afterCreate", void 0), e([y()], O.prototype, "afterUpdate", void 0), e([y()], O.prototype, "afterRemoved", void 0), O = e([a2(z)], O);
var W = O;

// node_modules/@arcgis/core/widgets/support/decorators/messageBundle.js
function e9(e12) {
  return (s5, r6) => {
    s5.hasOwnProperty("_messageBundleProps") || (s5._messageBundleProps = s5._messageBundleProps ? s5._messageBundleProps.slice() : []);
    s5._messageBundleProps.push({ bundlePath: e12, propertyName: r6 });
  };
}

// node_modules/@arcgis/core/widgets/support/decorators/accessibleHandler.js
function t5() {
  return function(n9, t7) {
    if (!n9[t7])
      throw new TypeError(`Cannot auto bind undefined function '${String(t7)}'`);
    return { value: r4(n9[t7]) };
  };
}
function e10(n9) {
  const t7 = n9 == null ? void 0 : n9.type;
  return n9 instanceof KeyboardEvent || "keyup" === t7 || "keydown" === t7 || "keypress" === t7;
}
function r4(t7) {
  return function(r6, ...o5) {
    e10(r6) ? T(r6.key) && (r6.preventDefault(), r6.stopPropagation(), r6.target.click()) : t7.call(this, r6, ...o5);
  };
}

// node_modules/@arcgis/core/support/themeUtils.js
var t6 = "calcite-mode-";
function e11() {
  return getComputedStyle(document.body).getPropertyValue("--esri-calcite-mode-name").replaceAll(/\s|'|"/g, "");
}
function r5() {
  return e11().startsWith("dark");
}
function c3() {
  return `${t6}${r5() ? "dark" : "light"}`;
}
function n8(t7) {
  o4(t7), t7.classList.add(c3());
}
function o4(e12) {
  Array.from(e12.classList).forEach((r6) => {
    r6.startsWith(t6) && e12.classList.remove(r6);
  });
}

export {
  e5 as e,
  n5 as n,
  o2 as o,
  i2 as i,
  n4 as n2,
  W,
  e9 as e2,
  t5 as t,
  r5 as r,
  n8 as n3
};
/*! Bundled license information:

@esri/calcite-components/dist/components/index.js:
  (*!
   * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
   * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
   * v1.4.3
   *)
*/
//# sourceMappingURL=chunk-65NFKTSD.js.map
