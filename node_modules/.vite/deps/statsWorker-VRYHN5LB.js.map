{
  "version": 3,
  "sources": ["../../@arcgis/core/smartMapping/statistics/support/utils.js", "../../@arcgis/core/smartMapping/statistics/support/statsWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport\"../../../geometry.js\";import e from\"../../../core/Error.js\";import{pt2px as t}from\"../../../core/screenUtils.js\";import n from\"../../../geometry/SpatialReference.js\";import{quantizePoint as r}from\"../../../geometry/support/quantizationUtils.js\";import{isWrappable as i,getInfo as o}from\"../../../geometry/support/spatialReferenceUtils.js\";import{isNumericField as s,numericTypes as l}from\"../../../layers/support/fieldUtils.js\";import{evaluateDensityKernel as a,createValueFunction as u}from\"../../../renderers/support/heatmapUtils.js\";import{processNullValue as f,getNormalizedValue as c}from\"../../../statistics/utils.js\";import{loadArcade as m}from\"../../../support/arcadeOnDemand.js\";import d from\"../../../geometry/Point.js\";let p=null;function h(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function y(e,t,n,s){const l=i(n)?o(n):null,a=l?Math.round((l.valid[1]-l.valid[0])/t.scale[0]):null;return e.map((e=>{const n=new d(e.geometry);return r(t,n,n,n.hasZ,n.hasM),e.geometry=l?h(n,a??0,s[0]):n,e}))}function $(e,n=18,r,i,o,s){const l=new Float64Array(o*s);n=Math.round(t(n));let f=Number.POSITIVE_INFINITY,c=Number.NEGATIVE_INFINITY,m=0,d=0,p=0,h=0;const y=u(i,r);for(const{geometry:t,attributes:u}of e){const{x:e,y:r}=t,i=Math.max(0,e-n),$=Math.max(0,r-n),I=Math.min(s,r+n),g=Math.min(o,e+n),j=+y(u);for(let t=$;t<I;t++)for(let s=i;s<g;s++){const i=t*o+s,u=a(s-e,t-r,n),y=l[i];m=l[i]+=u*j;const $=m-y;d+=$,p+=$*$,m<f&&(f=m),m>c&&(c=m),h++}}if(!h)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const $=(c-f)/2;return{mean:d/h,stdDev:Math.sqrt((p-d*d/h)/h),min:f,max:c,mid:$,count:h}}async function I(e,t){if(!t)return[];const{field:r,field2:i,field3:o,fieldDelimiter:s}=e,l=e.valueExpression,a=e.normalizationType,u=e.normalizationField,d=e.normalizationTotal,h=[],y=e.viewInfoParams;let $=null,I=null;if(l){if(!p){const{arcadeUtils:e}=await m();p=e}p.hasGeometryOperations(l)&&await p.enableGeometryOperations(),$=p.createFunction(l),I=y&&p.getViewInfo({viewingMode:y.viewingMode,scale:y.scale,spatialReference:new n(y.spatialReference)})}const g=e.fieldInfos,j=!(t[0]&&\"declaredClass\"in t[0]&&\"esri.Graphic\"===t[0].declaredClass)&&g?{fields:g}:null;return t.forEach((e=>{const t=e.attributes;let n;if(l){const t=j?{...e,layer:j}:e,r=p.createExecContext(t,I);n=p.executeFunction($,r)}else t&&(n=t[r],i&&(n=`${f(n)}${s}${f(t[i])}`,o&&(n=`${n}${s}${f(t[o])}`)));if(a&&\"number\"==typeof n&&isFinite(n)){const e=t&&parseFloat(t[u]);n=c(n,a,e,d)}h.push(n)})),h}function g(e){const t=e.field,n=e.normalizationType,r=e.normalizationField;let i;return\"field\"===n?i=\"(NOT \"+r+\" = 0)\":\"log\"!==n&&\"natural-log\"!==n&&\"square-root\"!==n||(i=`(${t} > 0)`),i}function j(e,t,n){const r=null!=t?e+\" >= \"+t:\"\",i=null!=n?e+\" <= \"+n:\"\";let o=\"\";return o=r&&i?F(r,i):r||i,o?\"(\"+o+\")\":\"\"}function x(t,n,r,i){let o;return n?n.name!==t.objectIdField&&i.includes(n.type)||(o=new e(r,\"'field' should be one of these types: \"+i.join(\",\"))):o=new e(r,\"'field' is not defined in the layer schema\"),o}function w(t,n,r){let i;return n?n.name!==t.objectIdField&&s(n)||(i=new e(r,\"'field' should be one of these numeric types: \"+l.join(\",\"))):i=new e(r,\"'field' is not defined in the layer schema\"),i}function F(e,t){let n=null!=e?e:\"\";return null!=t&&t&&(n=n?\"(\"+n+\") AND (\"+t+\")\":t),n}function b(t,n){if(t&&\"intersects\"!==t.spatialRelationship)return new e(n,\"Only 'intersects' spatialRelationship is supported for featureFilter\")}function v(t,n,r){const i=E({layer:t,fields:n});if(i.length)return new e(r,\"Unknown fields: \"+i.join(\", \")+\". You can only use fields defined in the layer schema\");const o=N({layer:t,fields:n});return o.length?new e(r,\"Unsupported fields: \"+o.join(\", \")+\". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true\"):void 0}function E(e){const t=e.layer;return e.fields.filter((e=>!t.getField(e)))}function N(e){const t=e.layer;return e.fields.filter((e=>{const n=t.getFieldUsageInfo(e);return!n||!n.supportsStatistics}))}function M(e,t,n){const r=[],i=[],o=[],s=[],l=[];e.forEach(((e,t)=>{const a=e.field?\"field\":\"expression\",u=e.field||e.valueExpression;e.field?(l.push(u),i.push(`var ${a}${t} = Number($feature[\"${u}\"]);`)):(r.push(`function getValueForExpr${t}() {\\n  ${u} \\n}`),i.push(`var ${a}${t} = Number(getValueForExpr${t}());`)),n||o.push(`${a}${t} = IIf(${a}${t} < 0, 0, ${a}${t});`),s.push(`${a}${t}`)}));let a=\"return sum;\";const u=r.length?null:l.reduce(((e,t)=>`${e} + ${t}`));let f=null;t||n?t?n||(a=\"return IIf(sum >= 0, sum, null);\",u&&(f=`(( ${u} ) >= 0)`)):(a=\"return IIf(sum != 0, sum, null);\",u&&(f=`(( ${u} ) <> 0)`)):(a=\"return IIf(sum > 0, sum, null);\",u&&(f=`(( ${u} ) > 0)`));return{valueExpression:[r.length?r.join(\"\\n\"):\"\",i.join(\"\\n\"),o.join(\"\\n\"),`var sum = ${s.join(\" + \")};`,a].filter(Boolean).join(\"\\n\\n\"),sqlExpression:u,sqlWhere:f}}export{$ as calculateHeatmapStats,I as getDataValues,j as getRangeExpr,g as getSQLFilterForNormalization,M as getSumOfAttributesExpr,F as mergeWhereClauses,y as quantizeFeatures,v as verifyBasicFieldValidity,x as verifyFieldType,b as verifyFilterValidty,w as verifyNumericField};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{getDataValues as i,quantizeFeatures as a,calculateHeatmapStats as e}from\"./utils.js\";import{isNullCountSupported as n,calculateStringStatistics as l,calculateStatistics as o,processSummaryStatisticsResult as t,calculateUniqueValuesCount as s,createUVResult as r,calculateClassBreaks as m,resolveCBResult as f,calculateHistogram as u}from\"../../../statistics/utils.js\";async function d(a){const{attribute:e,features:s}=a,{normalizationType:r,normalizationField:m,minValue:f,maxValue:u,fieldType:d}=e,p=await i({field:e.field,valueExpression:e.valueExpression,normalizationType:r,normalizationField:m,normalizationTotal:e.normalizationTotal,viewInfoParams:e.viewInfoParams,fieldInfos:e.fieldInfos},s),v=n({normalizationType:r,normalizationField:m,minValue:f,maxValue:u}),c={value:.5,fieldType:d},z=\"esriFieldTypeString\"===d?l({values:p,supportsNullCount:v,percentileParams:c}):o({values:p,minValue:f,maxValue:u,useSampleStdDev:!r,supportsNullCount:v,percentileParams:c});return t(z,\"esriFieldTypeDate\"===d)}async function p(a){const{attribute:e,features:n}=a,l=await i({field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,valueExpression:e.valueExpression,viewInfoParams:e.viewInfoParams,fieldInfos:e.fieldInfos},n),o=s(l);return r(o,e.domains,e.returnAllCodedValues,e.fieldDelimiter)}async function v(a){const{attribute:e,features:n}=a,{field:l,normalizationType:o,normalizationField:t,normalizationTotal:s,classificationMethod:r}=e,u=await i({field:l,valueExpression:e.valueExpression,normalizationType:o,normalizationField:t,normalizationTotal:s,viewInfoParams:e.viewInfoParams,fieldInfos:e.fieldInfos},n),d=m(u,{field:l,normalizationType:o,normalizationField:t,normalizationTotal:s,classificationMethod:r,standardDeviationInterval:e.standardDeviationInterval,numClasses:e.numClasses,minValue:e.minValue,maxValue:e.maxValue});return f(d,r)}async function c(a){const{attribute:e,features:n}=a,{field:l,normalizationType:o,normalizationField:t,normalizationTotal:s,classificationMethod:r}=e,m=await i({field:l,valueExpression:e.valueExpression,normalizationType:o,normalizationField:t,normalizationTotal:s,viewInfoParams:e.viewInfoParams,fieldInfos:e.fieldInfos},n);return u(m,{field:l,normalizationType:o,normalizationField:t,normalizationTotal:s,classificationMethod:r,standardDeviationInterval:e.standardDeviationInterval,numBins:e.numBins,minValue:e.minValue,maxValue:e.maxValue})}async function z(i){const{attribute:n,features:l}=i,{field:o,radius:t,fieldOffset:s,transform:r,spatialReference:m}=n,f=n.size??[0,0],u=a(l??[],r,m,f),{count:d,min:p,max:v,mean:c,stdDev:z}=e(u,t??void 0,s,o,f[0],f[1]);return{count:d,min:p,max:v,avg:c,stddev:z}}export{v as classBreaks,z as heatmapStatistics,c as histogram,d as summaryStatistics,p as uniqueValues};\n"],
  "mappings": "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",
  "names": ["y", "s", "e", "n", "i", "f", "c", "m", "d", "p", "h", "u", "r", "$", "I", "g", "t", "d", "s", "m", "f", "u", "p", "v", "c", "z", "x", "i", "y"]
}
