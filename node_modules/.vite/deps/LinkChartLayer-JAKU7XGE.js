import {
  n as n2
} from "./chunk-UMKNA5PR.js";
import "./chunk-YM46NRFF.js";
import "./chunk-62M25QKF.js";
import {
  s as s4
} from "./chunk-W52WZL2F.js";
import {
  e as e2
} from "./chunk-TNXVIMSN.js";
import "./chunk-XFLBB3FK.js";
import {
  p as p5
} from "./chunk-UCGDNB2P.js";
import {
  p2 as p4,
  t as t4
} from "./chunk-E4GDJ764.js";
import "./chunk-Z2T56FN3.js";
import "./chunk-ZMKH5ZRU.js";
import {
  p as p3
} from "./chunk-X34I34RW.js";
import {
  a as a3
} from "./chunk-5NBE4HDI.js";
import "./chunk-4NLQ63FV.js";
import "./chunk-Y7HVH6RU.js";
import {
  t
} from "./chunk-2HDAD5Q3.js";
import "./chunk-HZHMZHPT.js";
import "./chunk-NU5WEWCI.js";
import "./chunk-UIVGJZCT.js";
import "./chunk-MVR2W3C6.js";
import {
  p as p6
} from "./chunk-H4E57LVR.js";
import {
  d
} from "./chunk-RNXN3MSP.js";
import "./chunk-4NWXO2LT.js";
import "./chunk-6ETVGJDF.js";
import "./chunk-34QQ6GDH.js";
import "./chunk-KTII3LWY.js";
import "./chunk-RL6GG46M.js";
import "./chunk-QAWS7Y22.js";
import "./chunk-UX5D32RO.js";
import {
  c,
  o as o2
} from "./chunk-P34MS5MD.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-NYLF7BL2.js";
import {
  b
} from "./chunk-YC4PIRSZ.js";
import "./chunk-32JSK7KN.js";
import "./chunk-YIJWIXDP.js";
import {
  m as m3
} from "./chunk-M72PBKGH.js";
import "./chunk-APDPMAO5.js";
import {
  ee
} from "./chunk-R6YQG4NY.js";
import "./chunk-LLQHB2ZB.js";
import "./chunk-BKDPNGLX.js";
import "./chunk-D5EV57FM.js";
import "./chunk-EISDT6B4.js";
import "./chunk-LREUW66K.js";
import "./chunk-PM3CFO6N.js";
import "./chunk-6VJWKAPY.js";
import "./chunk-UQOM5GR4.js";
import "./chunk-YBMFRTPB.js";
import {
  rt
} from "./chunk-KKGVORR5.js";
import "./chunk-WTKN55TU.js";
import {
  t as t2
} from "./chunk-TDPKDZC3.js";
import {
  t as t3
} from "./chunk-M5UHI5WR.js";
import "./chunk-Z36PKTLY.js";
import "./chunk-S2P7FTAG.js";
import {
  y as y2
} from "./chunk-RR2V4HRU.js";
import "./chunk-WZAASLQW.js";
import "./chunk-FJYIB7HF.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import "./chunk-PRUCXFZ4.js";
import "./chunk-KLV5OJVG.js";
import "./chunk-TQGXXOXA.js";
import "./chunk-SO7CVIZK.js";
import "./chunk-AF36K5Y6.js";
import {
  J
} from "./chunk-5K6FTFN4.js";
import "./chunk-QXPTMFGZ.js";
import "./chunk-4SARN32Z.js";
import {
  k
} from "./chunk-QA4FMJA6.js";
import "./chunk-VFQINJTY.js";
import "./chunk-4J6R7QH6.js";
import "./chunk-HB3KZNZ3.js";
import "./chunk-MUO4EIZP.js";
import "./chunk-42RWGG3D.js";
import "./chunk-OO4A3EBQ.js";
import "./chunk-ITRH3PGV.js";
import "./chunk-BRDC7DKL.js";
import "./chunk-ZBWBCN2I.js";
import "./chunk-GZTLZ6RD.js";
import "./chunk-KTEJJM3A.js";
import {
  Rn,
  nn
} from "./chunk-SO6DBMQG.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-QXGO5RRL.js";
import "./chunk-EIE3W25Z.js";
import {
  c2
} from "./chunk-7KM4XBUC.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-CGK6BJQA.js";
import {
  b as b2
} from "./chunk-XU2Q4SCK.js";
import "./chunk-KIEN3CY2.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7E3Q7HTF.js";
import "./chunk-FXDEKQIL.js";
import "./chunk-GJ5WE5D3.js";
import "./chunk-KKGH4SRQ.js";
import "./chunk-Y2CLYMXQ.js";
import {
  V
} from "./chunk-4RFFPIT2.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-7KX64CAH.js";
import "./chunk-J4R3XNTP.js";
import "./chunk-Y6FRAP2R.js";
import "./chunk-BVNZ3ETW.js";
import {
  o
} from "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-4H5JODOT.js";
import {
  j as j2,
  m2,
  u
} from "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-4NOOGA4U.js";
import "./chunk-CWQ6Q3PH.js";
import "./chunk-XN5VV437.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-74O2T7JC.js";
import "./chunk-WBSPL6CJ.js";
import "./chunk-N5ULYWRU.js";
import {
  a as a2
} from "./chunk-LQVUN6IS.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-MOIETNWJ.js";
import {
  M
} from "./chunk-3GSONYPC.js";
import {
  f,
  p,
  p2,
  x2 as x
} from "./chunk-SFV6XLDZ.js";
import "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  m,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import "./chunk-2YSHZRCT.js";
import {
  j
} from "./chunk-HKVL2MJK.js";
import {
  n
} from "./chunk-MH2LNFJK.js";
import "./chunk-O3CHVGVF.js";
import {
  s as s3
} from "./chunk-HNHXEGH2.js";
import "./chunk-DWOEYHKS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-W2N7YT6I.js";
import "./chunk-I5JT24BO.js";
import {
  has
} from "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/knowledgeGraph/SessionMemoryStorage.js
var r = "ESRI__DESTINATION_ID";
var i = "ESRI__ORIGIN_ID";
var s5 = class _s {
  constructor() {
    this._featureLookup = /* @__PURE__ */ new Map();
  }
  static getInstance() {
    return _s.instance || (_s.instance = new _s()), _s.instance;
  }
  static resetInstance() {
    _s.instance && (_s.instance = null);
  }
  deleteFromStore(e9) {
    e9.forEach((e10) => {
      this._featureLookup.delete(e10);
    });
  }
  readFromStoreByList(e9) {
    const t16 = [];
    return e9.forEach((e10) => {
      const r6 = this.readFromStoreById(e10);
      r6 && t16.push(r6);
    }), t16;
  }
  readFromStoreById(e9) {
    return this._featureLookup.get(e9) ?? null;
  }
  writeToStore(s16, o6, n6) {
    const p19 = [];
    return s16.forEach((s17) => {
      if (!s17 || !s17.id)
        return;
      s17.properties || (s17.properties = []);
      let a8, u4 = null;
      if (n6 && (u4 = s17.properties[n6] ? rt(s17.properties[n6]) : null), "originId" in s17 && "destinationId" in s17 && (s17.properties[i] = s17.originId, s17.properties[r] = s17.destinationId), s17.properties[o6] = s17.id, s17.id && this._featureLookup.has(s17.id) && this._featureLookup.get(s17.id).attributes) {
        const e9 = this._featureLookup.get(s17.id);
        a8 = new t2(u4 ? JSON.parse(JSON.stringify(u4)) : (e9 == null ? void 0 : e9.geometry) ? JSON.parse(JSON.stringify(e9.geometry)) : null, JSON.parse(JSON.stringify(Object.assign(e9.attributes, s17.properties))), null, s17.properties[o6]);
      } else
        a8 = new t2(u4 ? JSON.parse(JSON.stringify(u4)) : null, s17.properties, null, s17.properties[o6]);
      this._featureLookup.set(s17.id, a8), p19.push(a8);
    }), p19;
  }
};

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryResult.js
var t5 = class extends m {
  constructor(r6) {
    super(r6), this.resultRows = [];
  }
};
e([y()], t5.prototype, "resultRows", void 0), t5 = e([a("esri.rest.knowledgeGraph.GraphQueryResult")], t5);
var c3 = t5;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryStreamingResult.js
var t6 = class extends m {
  constructor(r6) {
    super(r6), this.resultRowsStream = new ReadableStream();
  }
};
e([y()], t6.prototype, "resultRowsStream", void 0), t6 = e([a("esri.rest.knowledgeGraph.GraphQueryResult")], t6);
var c4 = t6;

// node_modules/@arcgis/core/rest/knowledgeGraph/FieldIndex.js
var s6 = class extends l {
  constructor(o6) {
    super(o6), this.name = null, this.unique = null, this.ascending = null, this.description = null, this.fieldNames = null;
  }
};
e([y({ type: String, json: { write: true } })], s6.prototype, "name", void 0), e([y({ type: Boolean, json: { write: true } })], s6.prototype, "unique", void 0), e([y({ type: Boolean, json: { write: true } })], s6.prototype, "ascending", void 0), e([y({ type: String, json: { write: true } })], s6.prototype, "description", void 0), e([y({ type: [String], json: { write: true } })], s6.prototype, "fieldNames", void 0), s6 = e([a("esri.rest.knowledgeGraph.FieldIndex")], s6);
var i2 = s6;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphProperty.js
var i3 = class extends l {
  constructor(t16) {
    super(t16), this.name = null, this.alias = null, this.fieldType = null, this.geometryType = null, this.hasM = null, this.hasZ = null, this.nullable = null, this.editable = null, this.required = null, this.defaultVisibility = null, this.systemMaintained = null, this.role = null, this.defaultValue = null;
  }
};
e([y({ type: String, json: { write: true } })], i3.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], i3.prototype, "alias", void 0), e([y({ type: String, json: { write: true } })], i3.prototype, "fieldType", void 0), e([y({ type: String, json: { write: true } })], i3.prototype, "geometryType", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "hasM", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "hasZ", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "nullable", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "editable", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "required", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "defaultVisibility", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "systemMaintained", void 0), e([y()], i3.prototype, "role", void 0), e([y({ type: Object, json: { type: String, write: { writer: (t16, e9) => {
  e9.defaultValue = null != t16 ? t16.toString() : null;
} } } })], i3.prototype, "defaultValue", void 0), i3 = e([a("esri.rest.knowledgeGraph.GraphProperty")], i3);
var s7 = i3;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphObjectType.js
var i4 = class extends l {
  constructor(r6) {
    super(r6), this.name = null, this.alias = null, this.role = null, this.strict = null, this.properties = null, this.fieldIndexes = null;
  }
};
e([y({ type: String, json: { write: true } })], i4.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "alias", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "role", void 0), e([y({ type: Boolean, json: { write: true } })], i4.prototype, "strict", void 0), e([y({ type: [s7], json: { write: true } })], i4.prototype, "properties", void 0), e([y({ type: [i2], json: { write: true } })], i4.prototype, "fieldIndexes", void 0), i4 = e([a("esri.rest.knowledgeGraph.GraphObjectType")], i4);
var l2 = i4;

// node_modules/@arcgis/core/rest/knowledgeGraph/EntityType.js
var e3 = class extends l2 {
  constructor(r6) {
    super(r6);
  }
};
e3 = e([a("esri.rest.knowledgeGraph.EntityType")], e3);
var t7 = e3;

// node_modules/@arcgis/core/rest/knowledgeGraph/RelationshipType.js
var t8 = class extends l2 {
  constructor(r6) {
    super(r6), this.endPoints = [];
  }
};
e([y()], t8.prototype, "endPoints", void 0), t8 = e([a("esri.rest.knowledgeGraph.RelationshipType")], t8);
var p7 = t8;

// node_modules/@arcgis/core/rest/knowledgeGraph/DataModel.js
var l3 = class extends l {
  constructor(t16) {
    super(t16), this.timestamp = null, this.spatialReference = null, this.strict = null, this.objectIdField = null, this.globalIdField = null, this.arcgisManaged = null, this.identifierInfo = null, this.searchIndexes = null, this.entityTypes = null, this.relationshipTypes = null;
  }
};
e([y({ type: Date, json: { type: Number, write: { writer: (t16, e9) => {
  e9.timestamp = t16 == null ? void 0 : t16.getTime();
} } } })], l3.prototype, "timestamp", void 0), e([y({ type: f, json: { write: true } })], l3.prototype, "spatialReference", void 0), e([y({ type: Boolean, json: { write: true } })], l3.prototype, "strict", void 0), e([y({ type: String, json: { write: true } })], l3.prototype, "objectIdField", void 0), e([y({ type: String, json: { write: true } })], l3.prototype, "globalIdField", void 0), e([y()], l3.prototype, "arcgisManaged", void 0), e([y()], l3.prototype, "identifierInfo", void 0), e([y()], l3.prototype, "searchIndexes", void 0), e([y({ type: [t7], json: { write: true } })], l3.prototype, "entityTypes", void 0), e([y({ type: [p7], json: { write: true } })], l3.prototype, "relationshipTypes", void 0), l3 = e([a("esri.rest.knowledgeGraph.DataModel")], l3);
var n3 = l3;

// node_modules/@arcgis/core/rest/knowledgeGraph/ServiceDefinition.js
var i5 = class extends l {
  constructor(t16) {
    super(t16), this.capabilities = [], this.supportsSearch = false, this.supportedQueryFormats = [], this.allowGeometryUpdates = false, this.searchMaxRecordCount = null, this.serviceCapabilities = null, this.maxRecordCount = null, this.description = "", this.copyrightText = "", this.units = "", this.spatialReference = null, this.currentVersion = null, this.dateFieldsTimeReference = null, this.serviceItemId = "", this.supportsDocuments = false, this.dataEditingNotSupported = false, this.schemaEditingNotSupported = false;
  }
};
e([y({ type: [String], json: { write: true } })], i5.prototype, "capabilities", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "supportsSearch", void 0), e([y({ type: [String], json: { write: true } })], i5.prototype, "supportedQueryFormats", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "allowGeometryUpdates", void 0), e([y({ type: Number, json: { write: true } })], i5.prototype, "searchMaxRecordCount", void 0), e([y({ type: Object, json: { write: true } })], i5.prototype, "serviceCapabilities", void 0), e([y({ type: Number, json: { write: true } })], i5.prototype, "maxRecordCount", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "copyrightText", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "units", void 0), e([y({ type: Object, json: { write: true } })], i5.prototype, "spatialReference", void 0), e([y({ type: Number, json: { write: true } })], i5.prototype, "currentVersion", void 0), e([y({ type: Object, json: { write: true } })], i5.prototype, "dateFieldsTimeReference", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "serviceItemId", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "supportsDocuments", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "dataEditingNotSupported", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "schemaEditingNotSupported", void 0), i5 = e([a("esri.rest.knowledgeGraph.ServiceDefinition")], i5);
var s8 = i5;

// node_modules/@arcgis/core/rest/knowledgeGraph/KnowledgeGraph.js
var p8 = class extends l {
  constructor(o6) {
    super(o6), this.dataModel = null, this.serviceDefinition = null;
  }
};
e([y({ type: String, json: { write: true } })], p8.prototype, "url", void 0), e([y({ type: n3, json: { write: true } })], p8.prototype, "dataModel", void 0), e([y({ type: s8, json: { write: true } })], p8.prototype, "serviceDefinition", void 0), p8 = e([a("esri.rest.knowledgeGraph.KnowledgeGraph")], p8);
var c5 = p8;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/knowledgeWasmAccess.js
var t9 = "esri/rest/knowledgeGraph/wasmInterface/";
var s9;
var n4 = null;
async function r2() {
  const e9 = n4 ?? s9;
  if (e9)
    return e9;
  const t16 = has("wasm-simd");
  return s9 = o3(t16), s9;
}
async function o3(s16) {
  if (s16) {
    const { default: s17 } = await import("./arcgis-knowledge-client-core-simd-B27XG5PB.js").then((e9) => e9.a);
    return s17({ locateFile: (s18) => a2(t9 + s18) });
  }
  const { default: n6 } = await import("./arcgis-knowledge-client-core-HVQYS7XH.js").then((e9) => e9.a);
  return n6({ locateFile: (s17) => a2(t9 + s17) });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/queryToWasmEncodedFactories.js
function a4(e9, t16) {
  const n6 = new t16.ArrayValue();
  return n6.deleteLater(), e9.forEach((e10) => {
    n6.add_value(m4(e10, t16));
  }), n6;
}
function l4(e9, t16) {
  const n6 = new t16.ObjectValue();
  n6.deleteLater();
  for (const [o6, r6] of Object.entries(e9))
    n6.set_key_value(o6, m4(r6, t16));
  return n6;
}
function s10(i10, a8) {
  if (i10 instanceof u)
    return f2(i10, a8);
  if (i10 instanceof x)
    return g(i10, a8);
  if (i10 instanceof m2 || i10 instanceof j2)
    return c6(i10, a8);
  throw new s2("knowledge-graph:unsupported-geometry", "Only Point, Multipoint, Polyline, and Polygon geometry are supported by ArcGIS Knowledge", { geometry: i10 });
}
function u2(e9, t16) {
  t16.input_quantization_parameters = { xy_resolution: e9.xyResolution, x_false_origin: e9.xFalseOrigin, y_false_origin: e9.yFalseOrigin, z_resolution: e9.zResolution, z_false_origin: e9.zFalseOrigin, m_resolution: e9.mResolution, m_false_origin: e9.mFalseOrigin };
}
function y3(t16, n6, o6) {
  if (!t16.extent)
    throw new s2("knowledge-graph:illegal-output-quantization", "The Output quantization provided to the encoder had an illegal value as part of its extent", t16.extent);
  if (!t16.quantizeMode)
    throw new s2("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal mode setting", t16.quantizeMode);
  if (!t16.tolerance)
    throw new s2("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal tolerance setting", t16.quantizeMode);
  n6.output_quantization_parameters = { extent: { xmax: t16.extent.xmax, ymax: t16.extent.ymax, xmin: t16.extent.xmin, ymin: t16.extent.ymin }, quantize_mode: o6.esriQuantizeMode[t16.quantizeMode], tolerance: t16.tolerance };
}
function m4(e9, t16) {
  if (null == e9)
    return "";
  if ("object" != typeof e9)
    return e9;
  if (e9 instanceof Date)
    return e9;
  if (e9 instanceof p2)
    return s10(e9, t16);
  if (Array.isArray(e9)) {
    const n6 = new t16.ArrayValue();
    return n6.deleteLater(), e9.forEach((e10) => {
      n6.add_value(m4(e10, t16));
    }), n6;
  }
  return l4(e9, t16);
}
function c6(e9, t16) {
  const n6 = new t16.GeometryValue();
  n6.deleteLater(), n6.has_z = e9.hasZ, n6.has_m = e9.hasM;
  const i10 = [], a8 = [];
  let l7 = [];
  e9 instanceof m2 ? (n6.geometry_type = t16.esriGeometryType.esriGeometryPolyline, l7 = e9.paths) : e9 instanceof j2 && (n6.geometry_type = t16.esriGeometryType.esriGeometryPolygon, l7 = e9.rings);
  let s16 = 0, u4 = 0;
  return l7.forEach((e10) => {
    let t17 = 0;
    e10.forEach((e11) => {
      t17++, e11.forEach((e12) => {
        i10[u4] = e12, u4++;
      });
    }), a8[s16] = t17, s16++;
  }), n6.coords = new Float64Array(i10), n6.lengths = new Uint32Array(a8), n6;
}
function f2(e9, t16) {
  const n6 = new t16.GeometryValue();
  n6.deleteLater(), n6.geometry_type = n6.geometry_type = t16.esriGeometryType.esriGeometryMultipoint, n6.has_z = e9.hasZ, n6.has_m = e9.hasM;
  const o6 = [], r6 = [];
  r6[0] = e9.points.length;
  let i10 = 0;
  return e9.points.forEach((e10) => {
    e10.forEach((e11) => {
      o6[i10] = e11, i10++;
    });
  }), n6.coords = new Float64Array(o6), n6.lengths = new Uint32Array(r6), n6;
}
function g(e9, t16) {
  const n6 = new t16.GeometryValue();
  n6.deleteLater(), n6.geometry_type = t16.esriGeometryType.esriGeometryPoint, n6.has_z = e9.hasZ, n6.has_m = e9.hasM;
  const o6 = [], r6 = [];
  r6[0] = 1, o6[0] = e9.x, o6[1] = e9.y;
  let i10 = 2;
  return e9.hasZ && (o6[i10] = e9.z, i10++), e9.hasM && (o6[i10] = e9.m, i10++), n6.coords = new Float64Array(o6), n6.lengths = new Uint32Array(r6), n6;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphObject.js
var t10 = class extends l {
  constructor(r6) {
    super(r6), this.properties = null;
  }
};
e([y({ json: { write: true } })], t10.prototype, "properties", void 0), t10 = e([a("esri.rest.knowledgeGraph.GraphObject")], t10);
var p9 = t10;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphNamedObject.js
var s11 = class extends p9 {
  constructor(r6) {
    super(r6), this.typeName = null, this.id = null;
  }
};
e([y({ type: String, json: { write: true } })], s11.prototype, "typeName", void 0), e([y({ type: String, json: { write: true } })], s11.prototype, "id", void 0), s11 = e([a("esri.rest.knowledgeGraph.GraphNamedObject")], s11);
var p10 = s11;

// node_modules/@arcgis/core/rest/knowledgeGraph/Entity.js
var p11 = class extends p10 {
  constructor(r6) {
    super(r6), this.layoutGeometry = null;
  }
};
e([y({ type: x, json: { write: true } })], p11.prototype, "layoutGeometry", void 0), p11 = e([a("esri.rest.knowledgeGraph.Entity")], p11);
var c7 = p11;

// node_modules/@arcgis/core/rest/knowledgeGraph/Relationship.js
var i6 = class extends p10 {
  constructor(o6) {
    super(o6), this.originId = null, this.destinationId = null, this.layoutGeometry = null;
  }
};
e([y({ type: String, json: { write: true } })], i6.prototype, "originId", void 0), e([y({ type: String, json: { write: true } })], i6.prototype, "destinationId", void 0), e([y({ type: m2, json: { write: true } })], i6.prototype, "layoutGeometry", void 0), i6 = e([a("esri.rest.Relationship.Relationship")], i6);
var p12 = i6;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/updateToWasmEncodedFactories.js
function r3(i10, n6) {
  if (!i10.typeName)
    throw new s2("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits");
  if (i10 instanceof c7) {
    const e9 = new n6.EntityValue();
    e9.deleteLater(), e9.type_name = i10.typeName;
    for (const [t16, o6] of Object.entries(i10.properties))
      e9.set_key_value(t16, a5(o6, n6));
    return i10.id && e9.set_id(i10.id), e9;
  }
  if (i10 instanceof p12) {
    const e9 = new n6.RelationshipValue();
    e9.deleteLater(), e9.type_name = i10.typeName;
    for (const [t16, o6] of Object.entries(i10.properties))
      e9.set_key_value(t16, a5(o6, n6));
    return i10.id && e9.set_id(i10.id), i10.originId && i10.destinationId && e9.set_related_entity_ids(i10.originId, i10.destinationId), e9;
  }
  throw new s2("knowledge-graph:applyEdits-encoding-failure", "Could not determine the type of a named graph object passed to the encoder");
}
function s12(e9) {
  return { xy_resolution: e9.xyResolution, x_false_origin: e9.xFalseOrigin, y_false_origin: e9.yFalseOrigin, z_resolution: e9.zResolution, z_false_origin: e9.zFalseOrigin, m_resolution: e9.mResolution, m_false_origin: e9.mFalseOrigin };
}
function a5(e9, t16) {
  return null == e9 ? "" : "object" != typeof e9 || e9 instanceof Date ? e9 : e9 instanceof p2 ? s10(e9, t16) : "";
}

// node_modules/@arcgis/core/rest/knowledgeGraph/SearchIndex.js
var t11 = class extends m {
  constructor(r6) {
    super(r6), this.name = null, this.supportedCategory = null, this.analyzers = [], this.searchProperties = /* @__PURE__ */ new Map();
  }
};
e([y()], t11.prototype, "name", void 0), e([y()], t11.prototype, "supportedCategory", void 0), e([y()], t11.prototype, "analyzers", void 0), e([y()], t11.prototype, "searchProperties", void 0), t11 = e([a("esri.rest.knowledgeGraph.SearchIndex")], t11);
var p13 = t11;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmDataModelWrapperInterfaces.js
var e4;
var r4;
var i7;
var t12;
var o4;
var s13;
var y4;
!function(e9) {
  e9[e9.Regular = 0] = "Regular", e9[e9.Provenance = 1] = "Provenance", e9[e9.Document = 2] = "Document";
}(e4 || (e4 = {})), function(e9) {
  e9[e9.esriFieldTypeSmallInteger = 0] = "esriFieldTypeSmallInteger", e9[e9.esriFieldTypeInteger = 1] = "esriFieldTypeInteger", e9[e9.esriFieldTypeSingle = 2] = "esriFieldTypeSingle", e9[e9.esriFieldTypeDouble = 3] = "esriFieldTypeDouble", e9[e9.esriFieldTypeString = 4] = "esriFieldTypeString", e9[e9.esriFieldTypeDate = 5] = "esriFieldTypeDate", e9[e9.esriFieldTypeOID = 6] = "esriFieldTypeOID", e9[e9.esriFieldTypeGeometry = 7] = "esriFieldTypeGeometry", e9[e9.esriFieldTypeBlob = 8] = "esriFieldTypeBlob", e9[e9.esriFieldTypeRaster = 9] = "esriFieldTypeRaster", e9[e9.esriFieldTypeGUID = 10] = "esriFieldTypeGUID", e9[e9.esriFieldTypeGlobalID = 11] = "esriFieldTypeGlobalID", e9[e9.esriFieldTypeXML = 12] = "esriFieldTypeXML", e9[e9.esriFieldTypeBigInteger = 13] = "esriFieldTypeBigInteger";
}(r4 || (r4 = {})), function(e9) {
  e9[e9.esriGeometryNull = 0] = "esriGeometryNull", e9[e9.esriGeometryPoint = 1] = "esriGeometryPoint", e9[e9.esriGeometryMultipoint = 2] = "esriGeometryMultipoint", e9[e9.esriGeometryPolyline = 3] = "esriGeometryPolyline", e9[e9.esriGeometryPolygon = 4] = "esriGeometryPolygon", e9[e9.esriGeometryEnvelope = 5] = "esriGeometryEnvelope", e9[e9.esriGeometryAny = 6] = "esriGeometryAny", e9[e9.esriGeometryMultiPatch = 7] = "esriGeometryMultiPatch";
}(i7 || (i7 = {})), function(e9) {
  e9[e9.esriMethodHintUNSPECIFIED = 0] = "esriMethodHintUNSPECIFIED", e9[e9.esriUUIDESRI = 1] = "esriUUIDESRI", e9[e9.esriUUIDRFC4122 = 2] = "esriUUIDRFC4122";
}(t12 || (t12 = {})), function(e9) {
  e9[e9.esriTypeUNSPECIFIED = 0] = "esriTypeUNSPECIFIED", e9[e9.esriTypeEntity = 1] = "esriTypeEntity", e9[e9.esriTypeRelationship = 2] = "esriTypeRelationship", e9[e9.esriTypeBoth = 4] = "esriTypeBoth";
}(o4 || (o4 = {})), function(e9) {
  e9[e9.esriGraphPropertyUNSPECIFIED = 0] = "esriGraphPropertyUNSPECIFIED", e9[e9.esriGraphPropertyRegular = 1] = "esriGraphPropertyRegular", e9[e9.esriGraphPropertyDocumentName = 2] = "esriGraphPropertyDocumentName", e9[e9.esriGraphPropertyDocumentTitle = 3] = "esriGraphPropertyDocumentTitle", e9[e9.esriGraphPropertyDocumentUrl = 4] = "esriGraphPropertyDocumentUrl", e9[e9.esriGraphPropertyDocumentText = 5] = "esriGraphPropertyDocumentText", e9[e9.esriGraphPropertyDocumentKeywords = 6] = "esriGraphPropertyDocumentKeywords", e9[e9.esriGraphPropertyDocumentContentType = 7] = "esriGraphPropertyDocumentContentType", e9[e9.esriGraphPropertyDocumentMetadata = 8] = "esriGraphPropertyDocumentMetadata", e9[e9.esriGraphPropertyDocumentFileExtension = 9] = "esriGraphPropertyDocumentFileExtension";
}(s13 || (s13 = {})), function(e9) {
  e9[e9.esriIdentifierInfoTypeUNSPECIFIED = 0] = "esriIdentifierInfoTypeUNSPECIFIED", e9[e9.esriIdentifierInfoTypeDatabaseNative = 1] = "esriIdentifierInfoTypeDatabaseNative", e9[e9.esriIdentifierInfoTypeUniformProperty = 2] = "esriIdentifierInfoTypeUniformProperty";
}(y4 || (y4 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToDataModelFactories.js
function _(i10) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;
  return i10.deleteLater(), new n3({ timestamp: i10.timestamp, spatialReference: new f(i10.spatial_reference), strict: i10.strict, objectIdField: i10.objectid_property, globalIdField: i10.globalid_property, arcgisManaged: i10.arcgis_managed, identifierInfo: { identifierMappingInfo: { identifierInfoType: y4[(_c = (_b = (_a = i10.identifier_info) == null ? void 0 : _a.identifier_mapping_info) == null ? void 0 : _b.identifier_info_type) == null ? void 0 : _c.value], databaseNativeIdentifier: (_e = (_d = i10.identifier_info) == null ? void 0 : _d.identifier_mapping_info) == null ? void 0 : _e.database_native_identifier, uniformPropertyIdentifier: { identifierPropertyName: (_h = (_g = (_f = i10.identifier_info) == null ? void 0 : _f.identifier_mapping_info) == null ? void 0 : _g.uniform_property_identifier) == null ? void 0 : _h.identifier_property_name } }, identifierGenerationInfo: { uuidMethodHint: t12[(_k = (_j = (_i = i10.identifier_info) == null ? void 0 : _i.identifier_generation_info) == null ? void 0 : _j.uuid_method_hint) == null ? void 0 : _k.value] } }, searchIndexes: M2(i10.search_indexes), entityTypes: j3(i10.entity_types), relationshipTypes: x2(i10.relationship_types) });
}
function c8(e9) {
  return e9.deleteLater(), new t7(b3(e9));
}
function g2(e9) {
  return e9.deleteLater(), new i2({ name: e9.name, unique: e9.unique, ascending: e9.ascending, description: e9.description, fieldNames: I(e9.fields) });
}
function b3(e9) {
  return { name: e9.name, alias: e9.alias, role: e4[e9.role.value] ? e4[e9.role.value] : null, strict: e9.strict, properties: T(e9.properties), fieldIndexes: w(e9.field_indexes) };
}
function v(e9) {
  return e9.deleteLater(), new s7({ alias: e9.alias, name: e9.name, fieldType: r4[e9.field_type.value] ? r4[e9.field_type.value] : null, geometryType: i7[e9.geometry_type.value] ? i7[e9.geometry_type.value] : null, hasM: e9.has_m, hasZ: e9.has_z, nullable: e9.nullable, editable: e9.editable, required: e9.required, defaultVisibility: e9.default_visibility, systemMaintained: e9.system_maintained, role: s13[e9.role.value], defaultValue: e9.default_value });
}
function z(e9) {
  e9.deleteLater();
  const t16 = b3(e9), i10 = [];
  for (let n6 = 0; n6 < e9.end_points.size(); n6++) {
    const t17 = e9.end_points.get(n6);
    i10.push({ originEntityType: t17.origin_entity_type, destinationEntityType: t17.dest_entity_type });
  }
  return new p7(Object.assign({ endPoints: i10 }, t16));
}
function j3(e9) {
  const t16 = [];
  for (let i10 = 0; i10 < e9.size(); i10++)
    t16.push(c8(e9.get(i10)));
  return t16;
}
function I(e9) {
  const t16 = [];
  for (let i10 = 0; i10 < e9.size(); i10++)
    t16.push(e9.get(i10));
  return t16;
}
function T(e9) {
  const t16 = [];
  for (let i10 = 0; i10 < e9.size(); i10++)
    t16.push(v(e9.get(i10)));
  return t16;
}
function w(e9) {
  const t16 = [];
  for (let i10 = 0; i10 < e9.size(); i10++)
    t16.push(g2(e9.get(i10)));
  return t16;
}
function x2(e9) {
  const t16 = [];
  for (let i10 = 0; i10 < e9.size(); i10++)
    t16.push(z(e9.get(i10)));
  return t16;
}
function M2(e9) {
  const t16 = [];
  for (let i10 = 0; i10 < e9.size(); i10++) {
    const i11 = new p13(), n6 = e9.get(0);
    i11.name = n6.name, i11.supportedCategory = o4[n6.supported_category.value];
    const r6 = n6.analyzers.size();
    for (let e10 = 0; e10 < r6; e10++)
      i11.analyzers.push({ name: n6.analyzers.get(e10).name });
    for (let e10 = 0; e10 < n6.search_properties.keys().size(); e10++) {
      const t17 = n6.search_properties.keys().get(e10), r7 = n6.search_properties.get(t17), a8 = [];
      for (let e11 = 0; e11 < r7.property_names.size(); e11++)
        a8.push(r7.property_names.get(e11));
      i11.searchProperties.set(t17, { propertyNames: a8 });
    }
    t16.push(i11);
  }
  return t16;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/ObjectValue.js
var e5 = class extends p9 {
  constructor(r6) {
    super(r6);
  }
};
e5 = e([a("esri.rest.knowledgeGraph.ObjectValue")], e5);
var t13 = e5;

// node_modules/@arcgis/core/rest/knowledgeGraph/Path.js
var p14 = class extends l {
  constructor(r6) {
    super(r6), this.path = null;
  }
};
e([y({ type: [p9], json: { write: true } })], p14.prototype, "path", void 0), p14 = e([a("esri.rest.knowledgeGraph.Path")], p14);
var c9 = p14;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/KnowledgeWasmInterface.js
var E;
!function(E4) {
  E4[E4.ESRI_GEOMETRY_NULL = 0] = "ESRI_GEOMETRY_NULL", E4[E4.ESRI_GEOMETRY_POINT = 1] = "ESRI_GEOMETRY_POINT", E4[E4.ESRI_GEOMETRY_MULTIPOINT = 2] = "ESRI_GEOMETRY_MULTIPOINT", E4[E4.ESRI_GEOMETRY_POLYLINE = 3] = "ESRI_GEOMETRY_POLYLINE", E4[E4.ESRI_GEOMETRY_POLYGON = 4] = "ESRI_GEOMETRY_POLYGON", E4[E4.ESRI_GEOMETRY_ENVELOPE = 5] = "ESRI_GEOMETRY_ENVELOPE", E4[E4.ESRI_GEOMETRY_ANY = 6] = "ESRI_GEOMETRY_ANY", E4[E4.ESRI_GEOMETRY_MULTI_PATCH = 7] = "ESRI_GEOMETRY_MULTI_PATCH";
}(E || (E = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmQueryWrapperInterfaces.js
var T2;
var A;
!function(T5) {
  T5[T5.OBJECT = 0] = "OBJECT", T5[T5.ENTITY = 1] = "ENTITY", T5[T5.RELATIONSHIP = 2] = "RELATIONSHIP", T5[T5.PATH = 3] = "PATH", T5[T5.ARRAY = 4] = "ARRAY";
}(T2 || (T2 = {})), function(T5) {
  T5[T5.view = 0] = "view", T5[T5.edit = 1] = "edit";
}(A || (A = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToGeometryFactories.js
function l5(o6) {
  const e9 = {}, r6 = c10(o6, e9), n6 = o6.lengths, s16 = o6.coords, l7 = n6[0];
  e9.points = [];
  let m7 = 0;
  for (let t16 = 0; t16 < l7; t16++) {
    const o7 = [];
    for (let t17 = 0; t17 < r6; t17++)
      o7[t17] = s16[m7], m7++;
    e9.points.push(o7);
  }
  return new u(e9);
}
function m5(o6) {
  const t16 = {};
  let r6 = 2;
  c10(o6, t16);
  const n6 = o6.coords;
  return t16.x = n6[0], t16.y = n6[1], o6.has_z && (t16.z = n6[r6], r6++), o6.has_m && (t16.m = n6[r6]), new x(t16);
}
function i8(o6) {
  return new m2(a6(o6));
}
function f3(o6) {
  return new j2(a6(o6));
}
function a6(t16) {
  const e9 = {}, r6 = c10(t16, e9), n6 = t16.lengths, l7 = t16.coords;
  let m7 = "";
  if (t16.geometry_type.value === E.ESRI_GEOMETRY_POLYGON)
    m7 = "rings";
  else {
    if (t16.geometry_type.value !== E.ESRI_GEOMETRY_POLYLINE)
      throw new s2("KnowledgeGraph:illegal-geometry-type", "Illegal Geometry type for multipath conversion");
    m7 = "paths";
  }
  e9[m7] = [];
  let i10 = 0;
  return n6.forEach((o6) => {
    const t17 = [];
    for (let e10 = 0; e10 < o6; e10++) {
      const o7 = [];
      for (let t18 = 0; t18 < r6; t18++)
        o7[t18] = l7[i10], i10++;
      t17.push(o7);
    }
    e9[m7].push(t17);
  }), e9;
}
function c10(o6, t16) {
  let e9 = 2;
  return o6.has_z ? (t16.hasZ = o6.has_z, e9++) : t16.hasZ = false, o6.has_m ? (t16.hasM = o6.has_m, e9++) : t16.hasM = false, e9;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToQueryResponseObjFactories.js
var _2 = s.getLogger("esri.rest.knowledgeGraph.WasmToQueryResponseObjConstructors");
var d2 = { decodedWasmObjToQueryResponseObj: (e9, t16) => {
  if (null == e9)
    return null;
  if ("object" != typeof e9)
    return e9;
  if ("getDate" in e9)
    return e9;
  if ("geometry_type" in e9)
    switch (e9.geometry_type.value) {
      case null:
        return null;
      case E.ESRI_GEOMETRY_POINT:
        return m5(e9);
      case E.ESRI_GEOMETRY_MULTIPOINT:
        return l5(e9);
      case E.ESRI_GEOMETRY_POLYLINE:
        return i8(e9);
      case E.ESRI_GEOMETRY_POLYGON:
        return f3(e9);
      case E.ESRI_GEOMETRY_ENVELOPE:
      case E.ESRI_GEOMETRY_MULTI_PATCH:
        return _2.warnOnce("Envelope and Multipatch are not supported on knowledge entities, but one of those geometry types was detected. Result interpreted as null"), null;
      case E.ESRI_GEOMETRY_NULL:
      case E.ESRI_GEOMETRY_ANY:
      default:
        return _2.warnOnce("Unknown or blank geometry type returned - Result interpreted as null"), null;
    }
  else {
    if (!("object_value_type" in e9))
      return _2.warnOnce("A decoded value came back of a type that is not supported. Result interpreted as null"), null;
    switch (e9.object_value_type.value) {
      case T2.OBJECT:
        return g3(e9, t16);
      case T2.ENTITY:
        return f4(e9, t16);
      case T2.RELATIONSHIP:
        return j4(e9, t16);
      case T2.PATH:
        return R(e9, t16);
      case T2.ARRAY:
        return m6(e9, t16);
      default:
        return _2.warnOnce("Unknown graph object type detected!  Result interpreted as null"), null;
    }
  }
} };
function m6(e9, t16) {
  const n6 = [], r6 = e9.count();
  for (let o6 = 0; o6 < r6; o6++) {
    const r7 = e9.get_value_at(o6);
    n6.push(E2(r7, t16));
  }
  return n6;
}
function E2(e9, t16) {
  return d2.decodedWasmObjToQueryResponseObj(e9, t16);
}
function f4(e9, n6) {
  const r6 = e9.type_name, o6 = O(e9, n6), s16 = e9.get_id();
  return new c7(Object.assign({ typeName: r6, id: s16 }, o6));
}
function O(e9, t16) {
  const n6 = {}, r6 = e9.key_count();
  for (let o6 = 0; o6 < r6; o6++)
    n6[e9.get_key_at(o6)] = E2(e9.get_value_at(o6), t16);
  return { properties: n6 };
}
function g3(e9, t16) {
  return new t13(O(e9, t16));
}
function R(e9, t16) {
  const n6 = e9.entity_count(), r6 = e9.relationship_count(), s16 = [];
  for (let o6 = 0; o6 < n6; o6++)
    s16.push(f4(e9.get_entity_at(o6), t16)), o6 < r6 && s16.push(j4(e9.get_relationship_at(o6), t16));
  return new c9({ path: s16 });
}
function j4(e9, t16) {
  const n6 = e9.type_name, r6 = O(e9, t16);
  return new p12(Object.assign({ typeName: n6, id: e9.get_id(), originId: e9.get_origin_entity_id(), destinationId: e9.get_destination_entity_id() }, r6));
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphApplyEditsResult.js
var e6 = class extends m {
  constructor(r6) {
    super(r6), this.hasError = null, this.error = null, this.editResults = [];
  }
};
e([y()], e6.prototype, "hasError", void 0), e([y()], e6.prototype, "error", void 0), e([y()], e6.prototype, "editResults", void 0), e6 = e([a("esri.rest.knowledgeGraph.GraphApplyEdits")], e6);
var p15 = e6;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToUpdateResponseFactories.js
function e7(e9) {
  const o6 = new p15();
  o6.hasError = e9.has_error(), o6.hasError && (o6.error = { errorCode: e9.error.error_code, errorMessage: e9.error.error_message });
  const t16 = e9.get_edit_results_count();
  for (let r6 = 0; r6 < t16; r6++) {
    const t17 = e9.get_edit_results_at(r6), s16 = e9.get_edit_results_type_name_at(r6), _4 = [], d3 = [], a8 = [], u4 = t17.get_add_results_count(), l7 = t17.get_update_results_count(), g5 = t17.get_delete_results_count();
    for (let r7 = 0; r7 < u4; r7++) {
      const e10 = t17.get_add_result_at(r7);
      _4.push({ id: e10.id, error: { errorCode: e10.error.error_code, errorMessage: e10.error.error_message } });
    }
    for (let r7 = 0; r7 < l7; r7++) {
      const e10 = t17.get_update_result_at(r7);
      d3.push({ id: e10.id, error: { errorCode: e10.error.error_code, errorMessage: e10.error.error_message } });
    }
    for (let r7 = 0; r7 < g5; r7++) {
      const e10 = t17.get_delete_result_at(r7);
      a8.push({ id: e10.id, error: { errorCode: e10.error.error_code, errorMessage: e10.error.error_message } });
    }
    o6.editResults.push({ typeName: s16, adds: _4, updates: d3, deletes: a8 });
  }
  return o6;
}

// node_modules/@arcgis/core/rest/knowledgeGraphService.js
var k2 = { fetchKnowledgeGraph: async (e9) => {
  const t16 = new c5({ url: e9 }), r6 = [];
  return r6.push(S(t16)), r6.push(Q(t16)), await Promise.all(r6), t16;
}, refreshDataModel: async (e9) => {
  e9.dataModel = await W(e9);
}, refreshServiceDefinition: async (e9) => {
  var _a, _b;
  const r6 = (await j(e9.url, { query: { f: "json" } })).data;
  return r6.capabilities = (_a = r6 == null ? void 0 : r6.capabilities) == null ? void 0 : _a.split(","), r6.supportedQueryFormats = (_b = r6 == null ? void 0 : r6.supportedQueryFormats) == null ? void 0 : _b.split(","), e9.serviceDefinition = new s8(r6), e9.serviceDefinition;
}, executeQueryStreaming: async (e9, t16, a8) => {
  const n6 = `${e9.url}/graph/query`;
  await A2(e9);
  const i10 = await R2(n6, a8);
  i10.data.body = await C(t16, e9);
  const d3 = await q(i10.data.url, i10.data);
  if (e9.dataModel)
    return new c4({ resultRowsStream: await I2(d3, e9.dataModel) });
  throw new s2("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, executeApplyEdits: async (e9, t16, a8) => {
  var _a;
  if ((_a = e9.serviceDefinition) == null ? void 0 : _a.dataEditingNotSupported)
    throw new s2("knowledge-graph:data-editing-not-supported", "The Knowledge Graph Service definition indicated that data editing is not supported");
  const n6 = `${e9.url}/graph/applyEdits`;
  await A2(e9);
  const o6 = await R2(n6, a8);
  o6.data.body = await D(t16, e9);
  return P(await q(o6.data.url, o6.data));
}, executeQuery: async (e9, a8, o6) => {
  var _a;
  const i10 = `${e9.url}/graph/query`, d3 = await j(i10, { responseType: "array-buffer", query: { f: "pbf", openCypherQuery: a8.openCypherQuery, ...o6 == null ? void 0 : o6.query }, signal: o6 == null ? void 0 : o6.signal, timeout: o6 == null ? void 0 : o6.timeout }), p19 = (_a = d3.getHeader) == null ? void 0 : _a.call(d3, "content-type"), c12 = d3.data;
  if (p19 == null ? void 0 : p19.includes("application/x-protobuf")) {
    const t16 = new (await r2()).GraphQueryDecoder();
    if (t16.deleteLater(), e9.dataModel)
      return new c3({ resultRows: L(t16, c12, e9.dataModel) });
    throw new s2("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: p19, data: d3.data });
}, executeSearch: async (e9, a8, o6) => {
  var _a;
  const i10 = a8.typeCategoryFilter, d3 = `${e9.url}/graph/search`, p19 = await j(d3, { responseType: "array-buffer", query: { f: "pbf", searchQuery: `"${a8.searchQuery}"`, typeCategoryFilter: i10, ...o6 == null ? void 0 : o6.query }, signal: o6 == null ? void 0 : o6.signal, timeout: o6 == null ? void 0 : o6.timeout }), c12 = (_a = p19.getHeader) == null ? void 0 : _a.call(p19, "content-type"), l7 = p19.data;
  if (c12 == null ? void 0 : c12.includes("application/x-protobuf")) {
    const t16 = new (await r2()).GraphQueryDecoder();
    if (t16.deleteLater(), e9.dataModel)
      return new c3({ resultRows: L(t16, l7, e9.dataModel) });
    throw new s2("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: c12, data: p19.data });
}, executeSearchStreaming: async (e9, t16, a8) => {
  const n6 = `${e9.url}/graph/search`;
  await A2(e9);
  const i10 = await R2(n6, a8);
  i10.data.body = await F(t16);
  const d3 = await q(i10.data.url, i10.data);
  if (e9.dataModel)
    return new c4({ resultRowsStream: await I2(d3, e9.dataModel) });
  throw new s2("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, _fetchWrapper: async (e9, t16) => fetch(e9, t16) };
async function x3(e9, t16, r6) {
  return k2.executeQueryStreaming(e9, t16, r6);
}
async function T3(e9) {
  return k2.fetchKnowledgeGraph(e9);
}
async function S(e9) {
  return k2.refreshDataModel(e9);
}
async function Q(e9) {
  return k2.refreshServiceDefinition(e9);
}
async function q(e9, t16) {
  return k2._fetchWrapper(e9, t16);
}
async function A2(t16) {
  var _a;
  const r6 = (_a = n) == null ? void 0 : _a.findCredential(t16.url);
  r6 || (t16.dataModel ? await W(t16) : await S(t16));
}
function M3(e9, t16, a8) {
  if (0 !== e9.error_code)
    throw new s2(t16, a8, { errorCode: e9.error_code, errorMessage: e9.error_message });
}
function j5(e9, t16, r6, a8) {
  null == t16 ? r6.set_param_key_value(e9, "") : "object" != typeof t16 || t16 instanceof Date ? r6.set_param_key_value(e9, t16) : t16 instanceof p2 ? r6.set_param_key_value(e9, s10(t16, a8)) : t16 instanceof Array ? r6.set_param_key_value(e9, a4(t16, a8)) : r6.set_param_key_value(e9, l4(t16, a8));
}
async function D(e9, t16) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i;
  if (t16.dataModel || await S(t16), !t16.dataModel)
    throw new s2("knowledge-graph:data-model-undefined", "Encoding could not proceed because a data model was not provided and it could not be determined from the service");
  const a8 = await r2(), n6 = !!((_a = e9.options) == null ? void 0 : _a.cascadeDelete), o6 = new a8.GraphApplyEditsEncoder(a8.SpatialReferenceUtil.WGS84(), ((_b = e9.options) == null ? void 0 : _b.inputQuantizationParameters) ? s12((_c = e9.options) == null ? void 0 : _c.inputQuantizationParameters) : a8.InputQuantizationUtil.WGS84_lossless());
  o6.deleteLater(), o6.cascade_delete = n6;
  try {
    let t17;
    (_d = e9.entityAdds) == null ? void 0 : _d.forEach((e10) => {
      t17 = o6.add_entity(r3(e10, a8)), M3(t17, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), (_e = e9.relationshipAdds) == null ? void 0 : _e.forEach((e10) => {
      if (!e10.originId || !e10.destinationId)
        throw new s2("knowledge-graph:relationship-origin-destination-missing", "When adding a new relationship, you must provide both an origin and destination id on the appropriate class property");
      t17 = o6.add_relationship(r3(e10, a8)), M3(t17, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), (_f = e9.entityUpdates) == null ? void 0 : _f.forEach((e10) => {
      if (!e10.id)
        throw new s2("knowledge-graph:entity-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t17 = o6.update_entity(r3(e10, a8)), M3(t17, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), (_g = e9.relationshipUpdates) == null ? void 0 : _g.forEach((e10) => {
      if (!e10.id)
        throw new s2("knowledge-graph:relationship-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t17 = o6.update_relationship(r3(e10, a8)), M3(t17, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), (_h = e9.entityDeletes) == null ? void 0 : _h.forEach((e10) => {
      var _a2;
      if (!e10.typeName)
        throw new s2("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t18 = o6.make_delete_helper(e10.typeName, true);
      t18.deleteLater(), (_a2 = e10.ids) == null ? void 0 : _a2.forEach((e11) => {
        t18.delete_by_id(e11);
      });
    }), (_i = e9.relationshipDeletes) == null ? void 0 : _i.forEach((e10) => {
      var _a2;
      if (!e10.typeName)
        throw new s2("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t18 = o6.make_delete_helper(e10.typeName, false);
      (_a2 = e10.ids) == null ? void 0 : _a2.forEach((e11) => {
        t18.delete_by_id(e11);
      });
    }), o6.encode();
  } catch (d3) {
    throw new s2("knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed", { error: d3 });
  }
  const i10 = o6.get_encoding_result();
  return M3(i10.error, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed"), i10.get_byte_buffer();
}
async function C(e9, t16) {
  var _a, _b;
  const a8 = await r2(), n6 = new a8.GraphQueryRequestEncoder();
  if (n6.deleteLater(), n6.output_spatial_reference = a8.SpatialReferenceUtil.WGS84(), n6.open_cypher_query = e9.openCypherQuery, e9.bindParameters)
    for (const [r6, d3] of Object.entries(e9.bindParameters))
      j5(r6, d3, n6, a8);
  if (e9.bindGeometryQuantizationParameters)
    u2(e9.bindGeometryQuantizationParameters, n6);
  else {
    if (t16.dataModel || await S(t16), 4326 !== ((_b = (_a = t16.dataModel) == null ? void 0 : _a.spatialReference) == null ? void 0 : _b.wkid))
      throw new s2("knowledge-graph:SR-quantization-mismatch", "If the DataModel indicates a coordinate system other than WGS84, inputQuantizationParameters must be provided to the query encoder");
    n6.input_quantization_parameters = a8.InputQuantizationUtil.WGS84_lossless();
  }
  e9.outputQuantizationParameters && y3(e9.outputQuantizationParameters, n6, a8);
  try {
    n6.encode();
  } catch (i10) {
    throw new s2("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { error: i10 });
  }
  const o6 = n6.get_encoding_result();
  if (0 !== o6.error.error_code)
    throw new s2("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { errorCode: o6.error.error_code, errorMessage: o6.error.error_message });
  return o6.get_byte_buffer();
}
async function F(e9) {
  var _a;
  const t16 = await r2(), a8 = new t16.GraphSearchRequestEncoder();
  if (a8.deleteLater(), a8.search_query = e9.searchQuery, a8.type_category_filter = t16.esriNamedTypeCategory[e9.typeCategoryFilter], true === e9.returnSearchContext && (a8.return_search_context = e9.returnSearchContext), null != e9.start && e9.start > 0 && (a8.start_index = e9.start), null != e9.num && (a8.max_num_results = e9.num), null != e9.idsFilter && Array.isArray(e9.idsFilter) && e9.idsFilter.length > 0)
    try {
      a8.set_ids_filter(a4(e9.idsFilter, t16));
    } catch (o6) {
      throw new s2("knowledge-graph:ids-format-error", "Attempting to set ids filter failed.  This is usually caused by an incorrectly formatted UUID string", { error: o6 });
    }
  (_a = e9.namedTypesFilter) == null ? void 0 : _a.forEach((e10) => {
    a8.add_named_type_filter(e10);
  });
  try {
    a8.encode();
  } catch (o6) {
    throw new s2("knowledge-graph:search-encoding-failed", "Attempting to encode the search failed", { error: o6 });
  }
  const n6 = a8.get_encoding_result();
  if (0 !== n6.error.error_code)
    throw new s2("knowledge-graph:search-encoding-failed", "Attempting to encode the search failed", { errorCode: n6.error.error_code, errorMessage: n6.error.error_message });
  return n6.get_byte_buffer();
}
async function R2(e9, r6) {
  return j(e9, { responseType: "native-request-init", method: "post", query: { f: "pbf", ...r6 == null ? void 0 : r6.query }, body: "x", headers: { "Content-Type": "application/octet-stream" }, signal: r6 == null ? void 0 : r6.signal, timeout: r6 == null ? void 0 : r6.timeout });
}
async function P(e9) {
  const t16 = e9.headers.get("content-type");
  if (t16 == null ? void 0 : t16.includes("application/x-protobuf")) {
    const t17 = await e9.arrayBuffer(), r6 = new (await r2()).GraphApplyEditsDecoder();
    return r6.deleteLater(), r6.decode(new Uint8Array(t17)), e7(r6);
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: t16, data: e9.text() });
}
function L(e9, t16, a8) {
  e9.push_buffer(new Uint8Array(t16));
  const n6 = [];
  let o6 = 0;
  for (; e9.next_row(); ) {
    o6 || (o6 = e9.get_header_keys().size());
    const t17 = new Array(o6);
    for (let r6 = 0; r6 < o6; r6++) {
      const n7 = e9.get_value(r6);
      t17[r6] = E2(n7, a8);
    }
    n6.push(t17);
  }
  if (e9.has_error())
    throw new s2("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded", { errorCode: e9.error.error_code, errorMessage: e9.error.error_message });
  return n6;
}
async function I2(e9, t16) {
  var _a;
  const n6 = e9.headers.get("content-type");
  if (e9.headers.get("content-length") && s.getLogger("esri.rest.knowledgeGraph.knowledgeGraphService").warnOnce("Found `Content-Length` header when expecting a streaming HTTP response! Please investigate whether all intermediate HTTP proxies and/or load balancers are configured such that they don't forcefully buffer the entire response before returning it to the client. A valid HTTP streaming response should use Chunked Transfer Encoding and not have a Content Length defined."), n6 == null ? void 0 : n6.includes("application/x-protobuf")) {
    const a8 = (_a = e9.body) == null ? void 0 : _a.getReader(), n7 = new (await r2()).GraphQueryDecoder();
    return n7.deleteLater(), new ReadableStream({ async start(e10) {
      try {
        return o6();
      } catch (i10) {
        a8 == null ? void 0 : a8.releaseLock(), e10.error(new s2("knowledge-graph:stream-decoding-error", "The server returned a valid response, but there was an error decoding the response stream", { error: i10 })), e10.close();
      }
      function o6() {
        return a8 == null ? void 0 : a8.read().then(({ done: i10, value: d3 }) => {
          if (i10) {
            let t17;
            if (n7.has_error() && (t17 = new s2("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded", { errorCode: n7.error.error_code, errorMessage: n7.error.error_message })), a8.releaseLock(), t17)
              throw e10.error(t17), t17;
            return void e10.close();
          }
          const s16 = L(n7, d3, t16);
          return s16.length > 0 && e10.enqueue(s16), o6();
        });
      }
    } });
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: n6, data: e9.text() });
}
async function W(e9) {
  var _a;
  const a8 = `${e9.url}/dataModel/queryDataModel`, n6 = await j(a8, { responseType: "array-buffer", query: { f: "pbf" } }), o6 = (_a = n6.getHeader) == null ? void 0 : _a.call(n6, "content-type"), i10 = n6.data;
  if (o6 == null ? void 0 : o6.includes("application/x-protobuf")) {
    const e10 = (await r2()).decode_data_model_from_protocol_buffer(new Uint8Array(i10));
    if (!e10)
      throw new s2("knowledge-graph:data-model-decode-failure", "The server responded to the data model query, but the response failed to be decoded.  This typically occurs when the Knowledge JS API (4.26 or later) is used with an unsupported backend (11.0 or earlier)");
    return _(e10);
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: o6, data: n6.data });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQuery.js
var p16 = class extends m {
  constructor(r6) {
    super(r6), this.openCypherQuery = "";
  }
};
e([y()], p16.prototype, "openCypherQuery", void 0), p16 = e([a("esri.rest.knowledgeGraph.GraphQuery")], p16);
var t14 = p16;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryStreaming.js
var s14 = class extends t14 {
  constructor(r6) {
    super(r6), this.bindParameters = null, this.bindGeometryQuantizationParameters = null, this.outputQuantizationParameters = null;
  }
};
e([y()], s14.prototype, "bindParameters", void 0), e([y()], s14.prototype, "bindGeometryQuantizationParameters", void 0), e([y()], s14.prototype, "outputQuantizationParameters", void 0), s14 = e([a("esri.rest.knowledgeGraph.GraphQueryStreaming")], s14);
var a7 = s14;

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphLayerDataManager.js
var f5 = "ESRI__ID";
var g4 = "ESRI__ORIGIN_ID";
var b4 = "ESRI__DESTINATION_ID";
var T4 = "ESRI__LAYOUT_GEOMETRY";
var w2 = 12;
var D2 = s.getLogger("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager");
var M4 = class extends m {
  constructor(e9) {
    var _a, _b, _c;
    super(e9), this.inclusionModeDefinition = { generateAllSublayers: true, namedTypeDefinitions: /* @__PURE__ */ new Map() }, this.entityTypeNames = /* @__PURE__ */ new Set(), this.relationshipTypeNames = /* @__PURE__ */ new Set(), this.geographicLookup = /* @__PURE__ */ new Map(), this.sublayerCaches = /* @__PURE__ */ new Map(), this._processingCacheUpdatesLookup = /* @__PURE__ */ new Map(), this._memberIdTypeLookup = /* @__PURE__ */ new Map();
    const t16 = /* @__PURE__ */ new Map();
    (_a = e9.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _a.forEach((i10) => {
      var _a2, _b2;
      i10.name && (t16.set(i10.name, "entity"), this._processingCacheUpdatesLookup.set(i10.name, []), e9.inclusionModeDefinition && !((_a2 = e9.inclusionModeDefinition) == null ? void 0 : _a2.generateAllSublayers) || this.entityTypeNames.add(i10.name), (_b2 = i10.properties) == null ? void 0 : _b2.forEach((e10) => {
        e10.geometryType && "esriGeometryNull" !== e10.geometryType && this.geographicLookup.set(i10.name, { name: e10.name ?? "", geometryType: e10.geometryType });
      }));
    }), (_b = e9.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _b.forEach((i10) => {
      var _a2, _b2;
      i10.name && (t16.set(i10.name, "relationship"), this._processingCacheUpdatesLookup.set(i10.name, []), e9.inclusionModeDefinition && !((_a2 = e9.inclusionModeDefinition) == null ? void 0 : _a2.generateAllSublayers) || this.relationshipTypeNames.add(i10.name), (_b2 = i10.properties) == null ? void 0 : _b2.forEach((e10) => {
        e10.geometryType && "esriGeometryNull" !== e10.geometryType && this.geographicLookup.set(i10.name, { name: e10.name ?? "", geometryType: e10.geometryType });
      }));
    }), (_c = e9.inclusionModeDefinition) == null ? void 0 : _c.namedTypeDefinitions.forEach((i10, n6) => {
      var _a2, _b2;
      if ("entity" === t16.get(n6))
        this.entityTypeNames.add(n6);
      else {
        if ("relationship" !== t16.get(n6))
          return D2.warn(`A named type, ${n6}, was in the inclusion list that wasn't in the data model and will be removed`), void ((_a2 = e9.inclusionModeDefinition) == null ? void 0 : _a2.namedTypeDefinitions.delete(n6));
        this.relationshipTypeNames.add(n6);
      }
      const o6 = /* @__PURE__ */ new Map();
      (_b2 = i10.members) == null ? void 0 : _b2.forEach((e10) => {
        this._memberIdTypeLookup.set(e10.id, n6);
        const t17 = this.getById(e10.id);
        t17 && o6.set(e10.id, t17);
      }), this.sublayerCaches.set(n6, o6);
    });
  }
  addToLayerInclusionSet(e9) {
    e9.forEach(({ typeName: e10, id: t16 }) => {
      if (!this.inclusionModeDefinition)
        throw new s2("knowledge-graph:layer-data-manager", "You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");
      if (this.inclusionModeDefinition.namedTypeDefinitions.has(e10)) {
        if (this.inclusionModeDefinition.namedTypeDefinitions.has(e10)) {
          const n6 = this.inclusionModeDefinition.namedTypeDefinitions.get(e10);
          if (n6.useAllData)
            throw new s2("knowledge-graph:layer-data-manager", "You cannot add members to an exclusion list for a sublayer where the sublayer is set to always retrieve its entire data set");
          n6.members || (n6.members = /* @__PURE__ */ new Map()), n6.members.set(t16, { id: t16 }), this._memberIdTypeLookup.set(t16, e10);
        }
      } else {
        const i10 = /* @__PURE__ */ new Map();
        i10.set(t16, { id: t16 }), this.inclusionModeDefinition.namedTypeDefinitions.set(e10, { useAllData: false, members: i10 }), this._memberIdTypeLookup.set(t16, e10);
      }
    });
  }
  getById(e9) {
    return s5.getInstance().readFromStoreById(e9);
  }
  async getData(e9, t16, i10) {
    var _a, _b;
    if (t16.objectType.name && ((_a = this.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) && this.inclusionModeDefinition.namedTypeDefinitions.size > 0 && !this.inclusionModeDefinition.namedTypeDefinitions.has(t16.objectType.name))
      return [];
    let n6;
    if (n6 = e9 || new b({ where: "1=1", outFields: ["*"] }), "link-chart" === t16.parentCompositeLayer.type) {
      const e10 = t16.parentCompositeLayer, i11 = this._processingCacheUpdatesLookup.get(t16.objectType.name ?? ""), o6 = n6.outFields, s16 = n6.geometry;
      let r6 = "", p19 = "";
      s16 && s16.extent && (r6 = p6(s16.extent.ymin, s16.extent.xmin, w2), p19 = p6(s16.extent.ymax, s16.extent.xmax, w2)), o6 && 1 === o6.length && o6[0] === f5 && "1=1" === n6.where || await Promise.all(i11 ?? []);
      const m7 = this.sublayerCaches.has(t16.objectType.name ?? "") ? Array.from((_b = this.sublayerCaches.get(t16.objectType.name)) == null ? void 0 : _b.values()) : [], d3 = [];
      return m7.forEach((i12) => {
        if (i12.geometry = e10.linkChartDiagramLookup.get(i12.attributes[t16.objectIdField]), i12.attributes[T4] = i12.geometry, r6 && p19) {
          const n7 = e10.linkChartGeohashLookup.get(i12.attributes[t16.objectIdField]);
          n7 ? n7 >= r6 && n7 <= p19 && d3.push(i12) : d3.push(i12);
        } else
          d3.push(i12);
      }), d3;
    }
    return this.retrieveDataFromService(n6, t16, i10);
  }
  async getConnectedRecordIds(e9) {
    const t16 = [], i10 = [], n6 = /* @__PURE__ */ new Map();
    return e9.forEach((e10) => {
      var _a;
      if (this._memberIdTypeLookup.has(e10)) {
        const t17 = this._memberIdTypeLookup.get(e10);
        if (!this.entityTypeNames.has(t17))
          return;
        n6.has(t17) ? (_a = n6.get(t17)) == null ? void 0 : _a.push(e10) : n6.set(t17, [e10]);
      }
    }), n6.forEach((e10, n7) => {
      const o6 = `MATCH (n:${n7})-[r]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`, s16 = new Promise((i11) => {
        (async () => {
          const i12 = (await x3(this.knowledgeGraph, new a7({ openCypherQuery: o6, bindParameters: { ids: e10 } }))).resultRowsStream.getReader();
          try {
            for (; ; ) {
              const { done: e11, value: n8 } = await i12.read();
              if (e11)
                break;
              for (let i13 = 0; i13 < n8.length; i13++) {
                const e12 = n8[i13];
                t16.push({ id: e12[0], typeName: e12[1] }), t16.push({ id: e12[2], typeName: e12[3] });
              }
            }
          } catch (n8) {
            if ("AbortError" !== n8.name)
              throw n8;
            D2.info("Request aborted as expected");
          }
        })().then(() => {
          i11();
        });
      });
      i10.push(s16);
    }), await Promise.all(i10), t16;
  }
  async refreshCacheContent(e9, t16, n6, o6 = true) {
    var _a, _b, _c, _d, _e, _f, _g;
    const s16 = s5.getInstance(), r6 = [], a8 = /* @__PURE__ */ new Map(), p19 = /* @__PURE__ */ new Map();
    (_a = this.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _a.forEach((e10) => {
      e10.name && p19.set(e10.name, e10);
    }), (_b = this.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _b.forEach((e10) => {
      e10.name && p19.set(e10.name, e10);
    }), e9 || this.inclusionModeDefinition ? e9 ? e9.forEach((e10) => {
      var _a2;
      if (this._memberIdTypeLookup.has(e10)) {
        const t17 = this._memberIdTypeLookup.get(e10);
        a8.has(t17) ? (_a2 = a8.get(t17)) == null ? void 0 : _a2.push(e10) : a8.set(t17, [e10]);
      }
    }) : (_d = (_c = this.inclusionModeDefinition) == null ? void 0 : _c.namedTypeDefinitions) == null ? void 0 : _d.forEach((e10, t17) => {
      e10.useAllData ? a8.set(t17, null) : e10.members && e10.members.forEach((e11) => {
        var _a2;
        a8.has(t17) && null !== a8.get(t17) ? (_a2 = a8.get(t17)) == null ? void 0 : _a2.push(e11.id) : a8.set(t17, [e11.id]);
      });
    }) : ((_e = this.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _e.forEach((e10) => {
      e10.name && a8.set(e10.name, null);
    }), (_f = this.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _f.forEach((e10) => {
      e10.name && a8.set(e10.name, null);
    }));
    for (const [m7, d3] of a8) {
      const e10 = new Promise((e11) => {
        const r7 = async () => {
          var _a2, _b2, _c2, _d2, _e2, _f2, _g2;
          const e12 = /* @__PURE__ */ new Set(), r8 = [];
          let a9, l7 = "", h = false;
          if (t16 || ((_b2 = (_a2 = p19.get(m7)) == null ? void 0 : _a2.properties) == null ? void 0 : _b2.forEach((t17) => {
            t17.name && e12.add(t17.name);
          })), n6 && this.geographicLookup.has(m7)) {
            const t17 = (_c2 = this.geographicLookup.get(m7)) == null ? void 0 : _c2.name;
            t17 && e12.add(t17);
          }
          if (this.entityTypeNames.has(m7))
            l7 = `MATCH (n:${m7}) ${d3 ? "WHERE id(n) IN $ids " : ""}return ID(n)`, e12.forEach((e13) => {
              l7 += `, n.${e13}`, r8.push(e13);
            });
          else {
            if (!this.relationshipTypeNames.has(m7))
              throw new s2("knowledge-graph:layer-data-manager", `The graph type of ${m7} could not be determined. Was this type set in the KG data model and inclusion definition?`);
            h = true, l7 = `MATCH ()-[n:${m7}]->() ${d3 ? "WHERE id(n) IN $ids " : ""}return ID(n), id(startNode(n)), id(endNode(n))`, e12.forEach((e13) => {
              l7 += `, n.${e13}`, r8.push(e13);
            });
          }
          a9 = new a7(d3 ? { openCypherQuery: l7, bindParameters: { ids: d3 } } : { openCypherQuery: l7 });
          const u4 = (await x3(this.knowledgeGraph, a9)).resultRowsStream.getReader();
          for (; ; ) {
            const { done: e13, value: t17 } = await u4.read();
            if (e13)
              break;
            const i10 = [];
            for (let o7 = 0; o7 < t17.length; o7++) {
              const e14 = t17[o7];
              let n8 = 0, s17 = 0;
              const a11 = { properties: {} };
              for (a11.id = e14[n8], n8++, s17++, h && (a11.originId = e14[n8], n8++, s17++, a11.destinationId = e14[n8], n8++, s17++); n8 < e14.length; n8++)
                a11.properties[r8[n8 - s17]] = e14[n8];
              i10.push(a11);
            }
            const n7 = s16.writeToStore(i10, f5, (_d2 = this.geographicLookup.get(m7)) == null ? void 0 : _d2.name);
            this.sublayerCaches.has(m7) || this.sublayerCaches.set(m7, /* @__PURE__ */ new Map()), o6 && !((_e2 = this.inclusionModeDefinition) == null ? void 0 : _e2.namedTypeDefinitions.has(m7)) && ((_f2 = this.inclusionModeDefinition) == null ? void 0 : _f2.namedTypeDefinitions.set(m7, { useAllData: false, members: /* @__PURE__ */ new Map() })), o6 && !((_g2 = this.inclusionModeDefinition) == null ? void 0 : _g2.namedTypeDefinitions.get(m7).members) && (this.inclusionModeDefinition.namedTypeDefinitions.get(m7).members = /* @__PURE__ */ new Map());
            const a10 = this.sublayerCaches.get(m7);
            n7.forEach((e14) => {
              var _a3, _b3;
              a10 == null ? void 0 : a10.set(e14.attributes[f5], e14), o6 && !((_a3 = this.inclusionModeDefinition) == null ? void 0 : _a3.namedTypeDefinitions.get(m7).members.has(e14.attributes[f5])) && ((_b3 = this.inclusionModeDefinition) == null ? void 0 : _b3.namedTypeDefinitions.get(m7).members.set(e14.attributes[f5], { id: e14.attributes[f5] }), this._memberIdTypeLookup.set(e14.attributes[f5], m7));
            });
          }
        };
        r7().then(() => {
          e11(null);
        });
      });
      r6.push(e10), (_g = this._processingCacheUpdatesLookup.get(m7)) == null ? void 0 : _g.push(e10);
    }
    await Promise.all(r6);
  }
  removeFromLayer(e9) {
    const t16 = /* @__PURE__ */ new Set();
    e9.forEach((e10) => {
      var _a;
      this._memberIdTypeLookup.get(e10) && t16.add(this._memberIdTypeLookup.get(e10)), this._memberIdTypeLookup.delete(e10), (_a = this.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions.forEach((t17) => {
        var _a2;
        ((_a2 = t17.members) == null ? void 0 : _a2.has(e10)) && t17.members.delete(e10);
      });
    }), t16.forEach((t17) => {
      var _a;
      (_a = this.sublayerCaches.get(t17)) == null ? void 0 : _a.forEach((i10, n6) => {
        var _a2;
        e9.includes(n6) && ((_a2 = this.sublayerCaches.get(t17)) == null ? void 0 : _a2.delete(n6));
      });
    });
  }
  async retrieveDataFromService(e9, t16, i10) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p;
    const n6 = s5.getInstance(), s16 = /* @__PURE__ */ new Set(), r6 = [];
    let a8, u4 = "", g5 = [];
    const b6 = "relationship" === t16.graphType, T5 = (_c = (_b = (_a = this.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.get(t16.objectType.name)) == null ? void 0 : _c.useAllData, w3 = t16.parentCompositeLayer.sublayerIdsCache.get(t16.objectType.name);
    let D3 = !T5 && w3 ? Array.from(w3).sort() : null;
    if ((_f = (_e = (_d = this.inclusionModeDefinition) == null ? void 0 : _d.namedTypeDefinitions) == null ? void 0 : _e.get(t16.objectType.name)) == null ? void 0 : _f.useAllData)
      ((_i = (_h = (_g = this.inclusionModeDefinition) == null ? void 0 : _g.namedTypeDefinitions) == null ? void 0 : _h.get(t16.objectType.name)) == null ? void 0 : _i.useAllData) && null != e9.objectIds && (D3 = e9.objectIds);
    else if (null != e9.objectIds && D3 && D3.length > 0) {
      const t17 = e9.objectIds;
      e9.objectIds = D3.filter((e10) => t17.includes(e10));
    } else if (null != e9.objectIds)
      D3 = e9.objectIds;
    else {
      if (((_j = this.inclusionModeDefinition) == null ? void 0 : _j.namedTypeDefinitions.has(t16.objectType.name)) && (!((_k = this.inclusionModeDefinition.namedTypeDefinitions.get(t16.objectType.name)) == null ? void 0 : _k.members) || ((_m = (_l = this.inclusionModeDefinition.namedTypeDefinitions.get(t16.objectType.name)) == null ? void 0 : _l.members) == null ? void 0 : _m.size) < 1))
        return e9.objectIds = [], [];
      e9.objectIds = D3;
    }
    if (null != e9.outFields) {
      const i11 = e9.outFields;
      i11.includes("*") ? t16.fields.forEach((e10) => {
        s16.add(e10.name);
      }) : i11.forEach((e10) => {
        e10 !== f5 && e10 !== t16.geometryFieldName && s16.add(e10);
      });
    }
    if (null != e9.geometry) {
      const i11 = e9.geometry;
      let n7;
      if (((_n = i11 == null ? void 0 : i11.extent) == null ? void 0 : _n.spatialReference) && !((_o = i11.spatialReference) == null ? void 0 : _o.isWGS84) ? (await Rn(i11.extent.spatialReference, p), n7 = nn(i11.extent, p)) : n7 = i11.extent, null != e9.where && "1=1" !== e9.where) {
        const i12 = await e2(e9.where.toUpperCase(), t16.fieldsIndex);
        t16.fields.forEach((e10) => {
          i12.fieldNames.includes(e10.name) && s16.add(e10.name);
        });
      }
      u4 = b6 ? `Match ()-[n:${t16.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t16.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))` : `Match (n:${t16.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t16.geometryFieldName}) return ID(n)`, t16.geometryFieldName && s16.add(t16.geometryFieldName), s16.forEach((e10) => {
        u4 += `, n.${e10}`, r6.push(e10);
      }), a8 = new a7({ openCypherQuery: u4, bindParameters: { param_filter_geom: new j2({ rings: [[[n7.xmin, n7.ymin], [n7.xmin, n7.ymax], [n7.xmax, n7.ymax], [n7.xmax, n7.ymin], [n7.xmin, n7.ymin]]] }) } });
    } else {
      let i11 = "";
      if (null != e9.where && "1=1" !== e9.where) {
        const n8 = await e2(e9.where, t16.fieldsIndex);
        t16.fields.forEach((e10) => {
          n8.fieldNames.includes(e10.name) && s16.add(e10.name);
        });
        const r7 = ["column-reference", "string", "number", "binary-expression"], a9 = ["=", "<", "<=", "<>", ">", ">=", "AND", "OR", "LIKE"];
        let p20 = false;
        const m7 = (e10) => {
          if ("column-reference" === e10.type)
            return `n.${e10.column}`;
          if ("string" === e10.type)
            return `'${e10.value}'`;
          if ("number" === e10.type)
            return `${e10.value}`;
          if ("binary-expression" === e10.type && r7.includes(e10.left.type) && r7.includes(e10.right.type) && a9.includes(e10.operator))
            return `${m7(e10.left)} ${e10.operator} ${m7(e10.right)}`;
          if ("binary-expression" === e10.type && "LIKE" === e10.operator) {
            let t17 = "";
            if ("function" === e10.left.type && "column-reference" === e10.left.args.value[0].type)
              t17 += `lower(n.${e10.left.args.value[0].column})`;
            else {
              if ("column-reference" !== e10.left.type)
                return p20 = true, "";
              t17 += `lower(n.${e10.left.column})`;
            }
            if (t17 += " CONTAINS (", "string" !== e10.right.type)
              return p20 = true, "";
            {
              let i12 = e10.right.value;
              "%" === i12.charAt(0) && (i12 = i12.slice(1)), "%" === i12.charAt(i12.length - 1) && (i12 = i12.slice(0, -1)), t17 += `'${i12.toLowerCase()}')`;
            }
            return t17;
          }
          return p20 = true, "";
        };
        i11 = m7(n8.parseTree), p20 && (i11 = "");
      }
      let n7 = "";
      n7 = b6 ? `Match ()-[n:${t16.objectType.name}]->()` : `Match (n:${t16.objectType.name})`;
      let p19 = false;
      D3 && (p19 = true, n7 += " WHERE ID(n) IN $ids"), i11 && (n7 += p19 ? " AND" : " WHERE", n7 += ` ${i11}`), n7 += " return ID(n)", b6 && (n7 += ", id(startNode(n)), id(endNode(n))"), e9.returnGeometry && t16.geometryFieldName && s16.add(t16.geometryFieldName), s16.forEach((e10) => {
        n7 += `, n.${e10}`, r6.push(e10);
      }), a8 = new a7(D3 ? { openCypherQuery: n7, bindParameters: { ids: D3 } } : { openCypherQuery: n7 });
    }
    const M6 = (await x3(t16.parentCompositeLayer.dataManager.knowledgeGraph, a8, i10)).resultRowsStream.getReader();
    for (; ; ) {
      const { done: e10, value: i11 } = await M6.read();
      if (e10)
        break;
      const o6 = [];
      for (let t17 = 0; t17 < i11.length; t17++) {
        const e11 = i11[t17];
        let n7 = 0, s17 = 0;
        const a9 = { properties: {} };
        for (a9.id = e11[n7], n7++, s17++, b6 && (a9.originId = e11[n7], n7++, s17++, a9.destinationId = e11[n7], n7++, s17++); n7 < e11.length; n7++)
          a9.properties[r6[n7 - s17]] = e11[n7];
        o6.push(a9);
      }
      g5 = g5.concat(n6.writeToStore(o6, f5, (_p = t16.parentCompositeLayer.dataManager.geographicLookup.get(t16.objectType.name)) == null ? void 0 : _p.name));
    }
    return g5;
  }
};
e([y()], M4.prototype, "knowledgeGraph", void 0), e([y()], M4.prototype, "inclusionModeDefinition", void 0), e([y()], M4.prototype, "entityTypeNames", void 0), e([y()], M4.prototype, "relationshipTypeNames", void 0), e([y()], M4.prototype, "geographicLookup", void 0), e([y()], M4.prototype, "sublayerCaches", void 0), M4 = e([a("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager")], M4);

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayerBase.js
var t15 = s4();
var p17 = (o6) => {
  let p19 = class extends o6 {
    constructor() {
      super(...arguments), this.fields = [], this.fieldsIndex = null;
    }
  };
  return e([y(t15.fields)], p19.prototype, "fields", void 0), e([y(t15.fieldsIndex)], p19.prototype, "fieldsIndex", void 0), p19 = e([a("esri.layers.knowledgeGraphLayer.KnowledgeGraphSublayerBase")], p19), p19;
};

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayer.js
var M5 = class extends n2(p17(a3(t(p3(b2))))) {
  constructor(e9) {
    var _a, _b, _c, _d, _e;
    if (super(e9), this.capabilities = c(false, false), this.definitionExpression = "", this.displayField = "", this.elevationInfo = null, this.geometryType = null, this.geometryFieldName = null, this.graphType = null, this.hasM = false, this.hasZ = false, this.labelsVisible = null, this.labelingInfo = null, this.objectIdField = f5, this.objectType = null, this.parentCompositeLayer = null, this.popupTemplate = null, this.source = { openPorts: () => this.load().then(() => {
      const e10 = new MessageChannel();
      return new J(e10.port1, { channel: e10, client: { queryFeatures: (e11, t16 = {}) => {
        const r6 = b.fromJSON(e11);
        return this.queryFeaturesJSON(r6, t16);
      } } }, () => null), [e10.port2];
    }) }, this.type = "knowledge-graph-sublayer", "link-chart" === e9.parentCompositeLayer.type)
      "relationship" === e9.graphType ? this.geometryType = "polyline" : this.geometryType = "point", this.geometryFieldName = T4;
    else if (((_a = e9.parentCompositeLayer.dataManager.geographicLookup.get(e9.objectType.name)) == null ? void 0 : _a.geometryType) && "esriGeometryNull" !== ((_b = e9.parentCompositeLayer.dataManager.geographicLookup.get(e9.objectType.name)) == null ? void 0 : _b.geometryType)) {
      const t16 = e9.parentCompositeLayer.dataManager.geographicLookup.get(e9.objectType.name);
      this.geometryFieldName = (t16 == null ? void 0 : t16.name) ?? null, this.geometryType = (t16 == null ? void 0 : t16.geometryType) ? o.fromJSON(t16.geometryType) : null;
      const r6 = t16 == null ? void 0 : t16.name, o6 = r6 ? (_c = e9.objectType.properties) == null ? void 0 : _c[r6] : null;
      o6 ? (this.hasM = o6.hasM ?? false, this.hasZ = o6.hasZ ?? false) : (this.hasM = false, this.hasZ = false);
    } else
      this.geometryType = null;
    (_d = e9.objectType.properties) == null ? void 0 : _d.forEach((e10) => {
      let t16 = null, r6 = e10.fieldType;
      "esriFieldTypeOID" === r6 && (r6 = "esriFieldTypeInteger"), this.fields.push(y2.fromJSON({ name: e10.name, type: r6, alias: e10.alias, defaultValue: t16, editable: e10.editable, nullable: e10.nullable }));
    }), this.fields.push(y2.fromJSON({ name: this.objectIdField, type: "esriFieldTypeString", alias: this.objectIdField, editable: false })), this._set("fields", [...this.fields]), ((_e = e9.parentCompositeLayer.dataManager.knowledgeGraph.dataModel) == null ? void 0 : _e.spatialReference) && (this.spatialReference = e9.parentCompositeLayer.dataManager.knowledgeGraph.dataModel.spatialReference), "link-chart" === e9.parentCompositeLayer.type ? "relationship" === e9.graphType ? this.renderer = t4(o2(o.toJSON("polyline")).renderer) : this.renderer = t4(o2(o.toJSON("point")).renderer) : this.renderer = t4(o2(o.toJSON(this.geometryType)).renderer);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set renderer(e9) {
    c2(e9, this.fieldsIndex), this._set("renderer", e9);
  }
  createPopupTemplate(e9) {
    return p5(this, e9);
  }
  createQuery() {
    return new b({ where: "1=1", outFields: ["*"] });
  }
  getField(e9) {
    for (let t16 = 0; t16 < this.fields.length; t16++)
      if (this.fields[t16].name === e9)
        return this.fields[t16];
    throw new Error("Field not found");
  }
  getFieldDomain(e9, t16) {
    return null;
  }
  async queryFeatures(e9, t16) {
    const { resolvedQuery: r6, queryEngine: o6 } = await this._setupQueryObjects(e9), s16 = d.fromJSON(await o6.executeQuery(r6.toJSON(), t16 == null ? void 0 : t16.signal));
    return s16.features.forEach((e10) => {
      e10.sourceLayer = this;
    }), s16;
  }
  async queryFeaturesJSON(e9, t16) {
    const { resolvedQuery: r6, queryEngine: o6 } = await this._setupQueryObjects(e9);
    return await o6.executeQuery(r6.toJSON(), t16 == null ? void 0 : t16.signal);
  }
  async queryFeatureCount(e9, t16) {
    const { resolvedQuery: r6, queryEngine: o6 } = await this._setupQueryObjects(e9);
    return o6.executeQueryForCount(r6.toJSON(), t16 == null ? void 0 : t16.signal);
  }
  async queryExtent(e9 = {}, t16) {
    var _a, _b, _c, _d;
    const r6 = { ...e9, returnGeometry: true }, { resolvedQuery: o6, queryEngine: s16 } = await this._setupQueryObjects(r6), i10 = await s16.executeQueryForExtent(o6.toJSON(), t16 == null ? void 0 : t16.signal);
    let a8;
    return a8 = null != ((_a = i10.extent) == null ? void 0 : _a.xmin) && null != ((_b = i10.extent) == null ? void 0 : _b.xmax) && null != ((_c = i10.extent) == null ? void 0 : _c.ymin) && null != ((_d = i10.extent) == null ? void 0 : _d.ymax) ? new M(i10.extent) : new M(), { count: i10.count, extent: a8 };
  }
  async queryObjectIds(e9, t16) {
    const r6 = b.from(e9);
    let o6;
    if ("link-chart" === this.parentCompositeLayer.type && this._cachedQueryEngine)
      o6 = this._cachedQueryEngine;
    else {
      const e10 = await this.parentCompositeLayer.dataManager.getData(r6, this, t16);
      o6 = this.loadQueryEngine(e10);
    }
    return o6.executeQueryForIds(r6.toJSON(), t16 == null ? void 0 : t16.signal);
  }
  loadQueryEngine(e9) {
    const t16 = new m3({ geometryType: o.toJSON(this.geometryType), hasM: this.hasM, hasZ: this.hasZ }), r6 = new ee({ fields: this.fields.map((e10) => e10.toJSON()), geometryType: o.toJSON(this.geometryType), hasM: this.hasM, hasZ: this.hasZ, objectIdField: this.objectIdField, spatialReference: this.spatialReference.toJSON(), timeInfo: null, featureStore: t16 });
    return r6.featureStore.addMany(e9), r6;
  }
  async refreshCachedQueryEngine() {
    const e9 = await this.parentCompositeLayer.dataManager.getData(new b({ where: "1=1", outFields: [f5] }), this);
    this._cachedQueryEngine = this.loadQueryEngine(e9);
  }
  async _setupQueryObjects(e9, t16) {
    var _a;
    const r6 = b.from(e9), o6 = r6.geometry;
    let s16;
    if (o6 && !((_a = o6.spatialReference) == null ? void 0 : _a.isWGS84) && (await Rn(o6.spatialReference, p), r6.geometry = nn(o6 instanceof j2 || o6 instanceof m2 ? o6 : o6.extent, p)), "link-chart" === this.parentCompositeLayer.type && this._cachedQueryEngine)
      s16 = this._cachedQueryEngine;
    else {
      const e10 = await this.parentCompositeLayer.dataManager.getData(r6, this, t16);
      s16 = this.loadQueryEngine(e10);
    }
    return { resolvedQuery: r6, queryEngine: s16 };
  }
};
e([y()], M5.prototype, "capabilities", void 0), e([y({ readOnly: true })], M5.prototype, "defaultPopupTemplate", null), e([y()], M5.prototype, "definitionExpression", void 0), e([y()], M5.prototype, "displayField", void 0), e([y()], M5.prototype, "elevationInfo", void 0), e([y()], M5.prototype, "geometryType", void 0), e([y()], M5.prototype, "geometryFieldName", void 0), e([y()], M5.prototype, "graphType", void 0), e([y()], M5.prototype, "hasM", void 0), e([y()], M5.prototype, "hasZ", void 0), e([y()], M5.prototype, "labelsVisible", void 0), e([y()], M5.prototype, "labelingInfo", void 0), e([y()], M5.prototype, "objectIdField", void 0), e([y()], M5.prototype, "objectType", void 0), e([y()], M5.prototype, "parentCompositeLayer", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], M5.prototype, "popupTemplate", void 0), e([y({ types: p4, json: { write: { target: "layerDefinition.drawingInfo.renderer" } } })], M5.prototype, "renderer", null), e([y()], M5.prototype, "source", void 0), e([y({ json: { read: false } })], M5.prototype, "type", void 0), M5 = e([a("esri.layers.knowledgeGraph.KnowledgeGraphSublayer")], M5);
var C2 = M5;

// node_modules/@arcgis/core/libs/linkchartlayout/LinkChartLayout.js
var e8;
var r5 = null;
function n5() {
  return e8 || (e8 = import("./lclayout-DLH3GXON.js").then((t16) => t16.l).then(({ default: e9 }) => e9({ locateFile: (e10) => a2(`esri/libs/linkchartlayout/${e10}`) })).then((t16) => {
    s15(t16);
  }), e8);
}
function s15(t16) {
  r5 = t16;
}
var o5;
function u3(t16, e9, a8, n6, s16, o6) {
  const u4 = a8.length, y6 = s16.length, l7 = Float64Array.BYTES_PER_ELEMENT, i10 = Uint32Array.BYTES_PER_ELEMENT, c12 = Uint8Array.BYTES_PER_ELEMENT, E4 = 16, p19 = E4 - 1 + u4 * (c12 + 2 * l7) + y6 * (2 * i10), f7 = r5._malloc(p19);
  try {
    const c13 = f7 + E4 - f7 % E4, p20 = c13 + u4 * l7, b6 = p20 + u4 * l7, A4 = b6 + y6 * i10, P3 = A4 + y6 * i10, _4 = () => [r5.HEAPF64.subarray(c13 >> 3, (c13 >> 3) + u4), r5.HEAPF64.subarray(p20 >> 3, (p20 >> 3) + u4), r5.HEAPU32.subarray(b6 >> 2, (b6 >> 2) + y6), r5.HEAPU32.subarray(A4 >> 2, (A4 >> 2) + y6), r5.HEAPU8.subarray(P3, P3 + u4)], [C3, H, d3, m7, F2] = _4();
    C3.set(a8), H.set(n6), d3.set(s16), m7.set(o6), F2.set(e9);
    const h = t16(u4, P3, c13, p20, y6, b6, A4), [B, L2, R3, T5, g5] = _4();
    return a8.set(B), n6.set(L2), s16.set(R3), o6.set(T5), e9.set(g5), h;
  } finally {
    r5._free(f7);
  }
}
!function(t16) {
  t16[t16.None = 0] = "None", t16[t16.IsMovable = 1] = "IsMovable", t16[t16.IsGeographic = 2] = "IsGeographic", t16[t16.IsRoot = 4] = "IsRoot";
}(o5 || (o5 = {}));
var y5 = 2;
var l6 = 1;
var i9 = -1;
var c11;
var E3;
var p18;
var f6;
var b5;
var A3;
var P2;
var _3;
!function(t16) {
  function e9() {
    return r5.getMinIdealEdgeLength();
  }
  function a8(t17, e10, a9, n6, s16, o6 = y5, c12 = l6, E4 = i9) {
    return u3((t18, e11, a10, n7, s17, u4, y6) => r5.applyForceDirectedLayout(t18, e11, a10, n7, s17, u4, y6, o6, c12, E4), t17, e10, a9, n6, s16);
  }
  t16.getMinIdealEdgeLength = e9, t16.apply = a8;
}(c11 || (c11 = {})), function(t16) {
  function e9(t17, e10, a8, n6, s16, o6 = y5, c12 = l6, E4 = i9) {
    return u3((t18, e11, a9, n7, s17, u4, y6) => r5.applyCommunityLayout(t18, e11, a9, n7, s17, u4, y6, o6, c12, E4), t17, e10, a8, n6, s16);
  }
  t16.apply = e9;
}(E3 || (E3 = {})), function(t16) {
  function e9(t17, e10, a8, n6, s16) {
    return u3(r5.applySimpleLayout, t17, e10, a8, n6, s16);
  }
  t16.apply = e9;
}(p18 || (p18 = {})), function(t16) {
  function e9(t17, e10, a8, n6, s16) {
    return u3(r5.applyHierarchicalLayout, t17, e10, a8, n6, s16);
  }
  t16.apply = e9;
}(f6 || (f6 = {})), function(t16) {
  function e9(t17, e10, a8, n6, s16) {
    return u3(r5.applyRadialTreeLayout, t17, e10, a8, n6, s16);
  }
  t16.apply = e9;
}(b5 || (b5 = {})), function(t16) {
  function e9(t17, e10, a8, n6, s16) {
    return u3(r5.applySmartTreeLayout, t17, e10, a8, n6, s16);
  }
  t16.apply = e9;
}(A3 || (A3 = {})), function(t16) {
  t16[t16.Undirected = 0] = "Undirected", t16[t16.Directed = 1] = "Directed", t16[t16.Reversed = 2] = "Reversed";
}(P2 || (P2 = {})), function(t16) {
  t16[t16.ByCC_Raw = 0] = "ByCC_Raw", t16[t16.ByCC_NormalizeGlobally = 1] = "ByCC_NormalizeGlobally", t16[t16.ByCC_NormalizeByCC = 2] = "ByCC_NormalizeByCC";
}(_3 || (_3 = {}));

// node_modules/@arcgis/core/layers/LinkChartLayer.js
var v2 = (e9, t16, a8) => (e9.has(t16) || e9.set(t16, a8()), e9.get(t16));
var j6 = class extends a3(t(b2)) {
  constructor(e9) {
    if (super(e9), this.dataPreloadedInLocalCache = false, this._currentLinkChartConfig = { layoutMode: "RADIAL_TREE", xScaleFactor: 1, yScaleFactor: 1 }, this._graphTypeLookup = /* @__PURE__ */ new Map(), this.layers = new V(), this.linkChartDiagramLookup = /* @__PURE__ */ new Map(), this.linkChartExtent = new M({ xmin: -1e-7, ymin: -1e-7, xmax: 1e-7, ymax: 1e-7 }), this.linkChartGeohashLookup = /* @__PURE__ */ new Map(), this.sublayerIdsCache = /* @__PURE__ */ new Map(), this.tables = new V(), this.type = "link-chart", this._originalInclusionList = e9.inclusionModeDefinition, e9.dataPreloadedInLocalCache && !e9.inclusionModeDefinition)
      throw new s2("knowledge-graph:linkchart-layer-constructor", "If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");
  }
  normalizeCtorArgs(e9) {
    return { url: e9.url, title: e9.title, dataPreloadedInLocalCache: e9.dataPreloadedInLocalCache, defaultLinkChartConfig: e9.defaultLinkChartConfig };
  }
  _initializeLayerProperties(e9) {
    var _a, _b, _c, _d, _e, _f;
    if (!this.title && this.url) {
      const e10 = this.url.split("/");
      this.title = e10[e10.length - 2];
    }
    const t16 = /* @__PURE__ */ new Set();
    let o6 = [], n6 = [];
    if (e9.inclusionModeDefinition && (!e9.inclusionModeDefinition.namedTypeDefinitions || e9.inclusionModeDefinition.namedTypeDefinitions.size < 1))
      throw new s2("knowledge-graph:composite-layer-constructor", "If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");
    (_a = e9.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _a.forEach((e10) => {
      e10.name && this._graphTypeLookup.set(e10.name, e10);
    }), (_b = e9.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _b.forEach((e10) => {
      e10.name && this._graphTypeLookup.set(e10.name, e10);
    }), ((_c = e9.inclusionModeDefinition) == null ? void 0 : _c.generateAllSublayers) ? (o6 = e9.knowledgeGraph.dataModel.entityTypes ?? [], n6 = e9.knowledgeGraph.dataModel.relationshipTypes ?? []) : ((_d = e9.inclusionModeDefinition) == null ? void 0 : _d.namedTypeDefinitions) && ((_e = e9.inclusionModeDefinition) == null ? void 0 : _e.namedTypeDefinitions.size) > 0 ? (_f = e9.inclusionModeDefinition) == null ? void 0 : _f.namedTypeDefinitions.forEach((a8, r7) => {
      var _a2, _b2;
      if (!this._graphTypeLookup.get(r7))
        return s.getLogger(this).warn(`A named type, ${r7}, was in the inclusion list that wasn't in the data model and will be removed`), void ((_a2 = e9.inclusionModeDefinition) == null ? void 0 : _a2.namedTypeDefinitions.delete(r7));
      this._graphTypeLookup.get(r7) instanceof p7 || "strictOrigin" in this._graphTypeLookup.get(r7) ? t16.has(r7) || (t16.add(r7), n6.push(this._graphTypeLookup.get(r7))) : this._graphTypeLookup.get(r7) instanceof t7 || "properties" in this._graphTypeLookup.get(r7) ? t16.has(r7) || (t16.add(r7), o6.push(this._graphTypeLookup.get(r7))) : (s.getLogger(this).warn(`A named type, ${r7}, was in the inclusion list that wasn't properly modeled and will be removed`), (_b2 = e9.inclusionModeDefinition) == null ? void 0 : _b2.namedTypeDefinitions.delete(r7));
    }) : (o6 = e9.knowledgeGraph.dataModel.entityTypes ?? [], n6 = e9.knowledgeGraph.dataModel.relationshipTypes ?? []);
    const r6 = new M4({ knowledgeGraph: e9.knowledgeGraph, inclusionModeDefinition: e9.inclusionModeDefinition });
    this.knowledgeGraph = e9.knowledgeGraph, this.memberEntityTypes = o6, this.memberRelationshipTypes = n6, this.dataManager = r6;
  }
  load(e9) {
    return this.addResolvingPromise(new Promise((t16) => {
      T3(this.url).then((a8) => {
        var _a, _b, _c, _d, _e, _f;
        if (this._initializeLayerProperties({ knowledgeGraph: a8, inclusionModeDefinition: this._originalInclusionList }), ((_b = (_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.size) || (this.dataManager.inclusionModeDefinition = { generateAllSublayers: false, namedTypeDefinitions: /* @__PURE__ */ new Map() }, (_c = this.dataManager.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _c.forEach((e10) => {
          var _a2;
          e10.name && ((_a2 = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a2.namedTypeDefinitions.set(e10.name, { useAllData: true }));
        }), (_d = this.dataManager.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _d.forEach((e10) => {
          var _a2;
          e10.name && ((_a2 = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a2.namedTypeDefinitions.set(e10.name, { useAllData: true }));
        })), this.dataPreloadedInLocalCache)
          this.loadLayerAssumingLocalCache(), this.dataManager.inclusionModeDefinition && (this.dataManager.inclusionModeDefinition.generateAllSublayers = false), (_e = this.dataManager.inclusionModeDefinition) == null ? void 0 : _e.namedTypeDefinitions.forEach((e10) => {
            var _a2;
            e10.useAllData = false, (_a2 = e10.members) == null ? void 0 : _a2.forEach((e11) => {
              let t17;
              t17 = e11.linkChartLocation instanceof t3 ? e11.linkChartLocation : e11.linkChartLocation ? rt(e11.linkChartLocation) : null, this.linkChartDiagramLookup.set(e11.id, t17), t17 && 2 === t17.coords.length && 0 === t17.lengths.length ? this.linkChartGeohashLookup.set(e11.id, p6(t17.coords[1], t17.coords[0], w2)) : this.linkChartGeohashLookup.set(e11.id, "");
            }), this.addResolvingPromise(this._initializeDiagram().then(async () => {
              this.layers.forEach(async (e11) => {
                await e11.refreshCachedQueryEngine();
              }), this.tables.forEach(async (e11) => {
                await e11.refreshCachedQueryEngine();
              });
            }));
          });
        else {
          const t17 = "GEOGRAPHIC" === ((_f = this.defaultLinkChartConfig) == null ? void 0 : _f.layoutMode);
          this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0, false, t17, true).then(async () => {
            s3(e9);
            const t18 = [], a9 = [];
            this.loadLayerAssumingLocalCache(), this.dataManager.inclusionModeDefinition && (this.dataManager.inclusionModeDefinition.generateAllSublayers = false, this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e10) => {
              e10.useAllData = false;
            })), await this._initializeDiagram(), this.layers.forEach((e10) => {
              a9.push(e10.refreshCachedQueryEngine()), t18.push(new Promise((t19) => {
                e10.on("layerview-create", () => {
                  t19(null);
                });
              }));
            }), this.tables.forEach((e10) => {
              a9.push(e10.refreshCachedQueryEngine());
            }), await Promise.all(a9);
          }));
        }
        t16(null);
      });
    })), Promise.resolve(this);
  }
  async addRecords(e9) {
    await this._handleNewRecords(e9);
  }
  async expand(e9) {
    const t16 = await this.dataManager.getConnectedRecordIds(e9), a8 = t16.filter((e10) => {
      var _a;
      return !((_a = this.sublayerIdsCache.get(e10.typeName)) == null ? void 0 : _a.has(e10.id));
    });
    return await this._handleNewRecords(t16), { records: a8 };
  }
  loadLayerAssumingLocalCache() {
    var _a, _b;
    this.memberRelationshipTypes.forEach((e9) => {
      const t16 = new C2({ objectType: e9, parentCompositeLayer: this, graphType: "relationship", title: e9.name });
      t16.geometryType ? this.layers.push(t16) : this.tables.push(t16), this.dataManager.sublayerCaches.has(e9.name) || this.dataManager.sublayerCaches.set(e9.name, /* @__PURE__ */ new Map());
    }), this.memberEntityTypes.forEach((e9) => {
      const t16 = new C2({ objectType: e9, parentCompositeLayer: this, graphType: "entity", title: e9.name });
      t16.geometryType ? this.layers.push(t16) : this.tables.push(t16), this.dataManager.sublayerCaches.has(e9.name) || this.dataManager.sublayerCaches.set(e9.name, /* @__PURE__ */ new Map());
    }), ((_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) && ((_b = this.dataManager.inclusionModeDefinition) == null ? void 0 : _b.namedTypeDefinitions.forEach((e9, t16) => {
      var _a2;
      const a8 = v2(this.sublayerIdsCache, t16, () => /* @__PURE__ */ new Set());
      (_a2 = e9.members) == null ? void 0 : _a2.forEach((e10) => {
        if (a8.add(e10.id), e10.linkChartLocation)
          if (e10.linkChartLocation instanceof t3)
            this.linkChartDiagramLookup.set(e10.id, e10.linkChartLocation), 2 === e10.linkChartLocation.coords.length && 0 === e10.linkChartLocation.lengths.length ? this.linkChartGeohashLookup.set(e10.id, p6(e10.linkChartLocation.coords[1], e10.linkChartLocation.coords[0], w2)) : this.linkChartGeohashLookup.set(e10.id, "");
          else {
            const t17 = rt(e10.linkChartLocation);
            this.linkChartDiagramLookup.set(e10.id, e10.linkChartLocation ? t17 : null), "x" in e10.linkChartLocation && "y" in e10.linkChartLocation ? this.linkChartGeohashLookup.set(e10.id, p6(e10.linkChartLocation.x, e10.linkChartLocation.y, w2)) : this.linkChartGeohashLookup.set(e10.id, "");
          }
      });
    }));
  }
  async calculateLinkChartLayout(e9 = "RADIAL_TREE", t16) {
    const o6 = [], n6 = [];
    this.dataManager.sublayerCaches.forEach((e10, t17) => {
      this.dataManager.entityTypeNames.has(t17) ? e10.forEach((e11) => {
        o6.push({ typeName: t17, feature: e11 });
      }) : this.dataManager.relationshipTypeNames.has(t17) && e10.forEach((e11) => {
        n6.push({ typeName: t17, feature: e11 });
      });
    }), this.linkChartDiagramLookup = /* @__PURE__ */ new Map();
    const r6 = /* @__PURE__ */ new Map(), h = /* @__PURE__ */ new Map(), c12 = /* @__PURE__ */ new Map(), p19 = /* @__PURE__ */ new Map(), g5 = new Uint8Array(o6.length), k3 = new Float64Array(o6.length), C3 = new Float64Array(o6.length), G = new Uint32Array(n6.length), I3 = new Uint32Array(n6.length), A4 = [], v3 = "FORCE_DIRECTED", j7 = (t16 == null ? void 0 : t16.xScaleFactor) ?? 1, S3 = (t16 == null ? void 0 : t16.yScaleFactor) ?? 1, P3 = new M({ xmin: -1e-7, ymin: -1e-7, xmax: 1e-7, ymax: 1e-7 });
    let F2, z2 = "FORCE_DIRECTED", O2 = 0, U = 0;
    switch (z2 = "GEOGRAPHIC" === e9 ? v3 : e9, z2) {
      case "FORCE_DIRECTED":
        F2 = c11.apply;
        break;
      case "COMMUNITY":
        F2 = E3.apply;
        break;
      case "HIERARCHICAL":
        F2 = f6.apply;
        break;
      case "RADIAL_TREE":
        F2 = b5.apply;
        break;
      case "SMART_TREE":
        F2 = A3.apply;
        break;
      default:
        F2 = p18.apply;
    }
    o6.forEach(({ typeName: a8, feature: i10 }) => {
      var _a, _b, _c;
      if ((_a = t16 == null ? void 0 : t16.lockedNodeLocations) == null ? void 0 : _a.has(i10.attributes[f5])) {
        "GEOGRAPHIC" === e9 && this.dataManager.geographicLookup.has(a8) ? g5[O2] = o5.IsGeographic : g5[O2] = o5.None;
        const o7 = t16.lockedNodeLocations.get(i10.attributes[f5]);
        k3[O2] = o7.x, C3[O2] = o7.y;
      } else if ("GEOGRAPHIC" === e9 && this.dataManager.geographicLookup.has(a8)) {
        g5[O2] = o5.IsGeographic;
        let e10 = null;
        const t17 = i10.attributes[this.dataManager.geographicLookup.get(a8).name], o7 = (_b = this.dataManager.geographicLookup.get(a8)) == null ? void 0 : _b.geometryType;
        switch (o7) {
          case "esriGeometryPoint":
            k3[O2] = t17 == null ? void 0 : t17.x, C3[O2] = t17 == null ? void 0 : t17.y;
            break;
          case "esriGeometryPolygon":
            e10 = t17 == null ? void 0 : t17.centroid, null != (e10 == null ? void 0 : e10.x) && null != (e10 == null ? void 0 : e10.y) ? (k3[O2] = e10.x, C3[O2] = e10.y) : g5[O2] = o5.IsMovable;
            break;
          case "esriGeometryPolyline":
          case "esriGeometryMultipoint":
            e10 = (_c = t17 == null ? void 0 : t17.extent) == null ? void 0 : _c.center, null != (e10 == null ? void 0 : e10.x) && null != (e10 == null ? void 0 : e10.y) ? (k3[O2] = e10.x, C3[O2] = e10.y) : g5[O2] = o5.IsMovable;
            break;
          default:
            g5[O2] = o5.IsMovable;
        }
        (null == k3[O2] || null == C3[O2] || Number.isNaN(k3[O2]) || Number.isNaN(C3[O2])) && (g5[O2] = o5.IsMovable, k3[O2] = 0, C3[O2] = 0);
      } else
        g5[O2] = o5.IsMovable, k3[O2] = 0, C3[O2] = 0;
      p19.set(i10.attributes[f5], O2), A4[O2] = { feature: i10, typeName: a8 }, O2++;
    });
    let H = false;
    n6.forEach((e10) => {
      const t17 = p19.get(e10.feature.attributes[g4]), a8 = p19.get(e10.feature.attributes[b4]);
      void 0 !== t17 && void 0 !== a8 ? (G[U] = t17, I3[U] = a8, U++) : (H = true, this.linkChartDiagramLookup.set(e10.feature.attributes[g4], null), this.linkChartGeohashLookup.set(e10.feature.attributes[g4], null));
    }), H && s.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null"), await n5();
    if (!F2(g5, k3, C3, G, I3))
      throw new s2("knowledge-graph:layout-failed", "Attempting to arrange the records in the specified layout failed");
    for (let a8 = 0; a8 < A4.length; a8++) {
      if (g5[a8] === o5.IsMovable && (k3[a8] = k3[a8] * j7, C3[a8] = C3[a8] * S3), C3[a8] > 84.9999 && (C3[a8] = 84.9999), C3[a8] < -84.9999 && (C3[a8] = -84.9999), k3[a8] > 179.9999 && (k3[a8] = 179.9999), k3[a8] < -179.9999 && (k3[a8] = -179.9999), A4[a8].feature.attributes[T4] = new x(k3[a8], C3[a8]), r6.has(A4[a8].typeName)) {
        const e11 = r6.get(A4[a8].typeName);
        e11 == null ? void 0 : e11.set(A4[a8].feature.attributes[f5], A4[a8].feature);
      } else {
        const e11 = /* @__PURE__ */ new Map();
        e11.set(A4[a8].feature.attributes[f5], A4[a8].feature), r6.set(A4[a8].typeName, e11);
      }
      c12.set(A4[a8].feature.attributes[f5], A4[a8].feature);
      const e10 = rt(A4[a8].feature.attributes[T4]);
      this.linkChartDiagramLookup.set(A4[a8].feature.attributes[f5], A4[a8].feature.attributes[T4] ? e10 : null), this.linkChartGeohashLookup.set(A4[a8].feature.attributes[f5], p6(A4[a8].feature.attributes[T4].y, A4[a8].feature.attributes[T4].x, w2)), A4[a8].feature.attributes[T4].x < P3.xmin && (P3.xmin = A4[a8].feature.attributes[T4].x), A4[a8].feature.attributes[T4].x > P3.xmax && (P3.xmax = A4[a8].feature.attributes[T4].x), A4[a8].feature.attributes[T4].y < P3.ymin && (P3.ymin = A4[a8].feature.attributes[T4].y), A4[a8].feature.attributes[T4].y > P3.ymax && (P3.ymax = A4[a8].feature.attributes[T4].y);
    }
    return this.linkChartExtent.xmin = P3.xmin, this.linkChartExtent.xmax = P3.xmax, this.linkChartExtent.ymin = P3.ymin, this.linkChartExtent.ymax = P3.ymax, n6.forEach((e10) => {
      var _a, _b;
      const t17 = (_a = A4[p19.get(e10.feature.attributes[g4])]) == null ? void 0 : _a.feature.attributes[T4], a8 = (_b = A4[p19.get(e10.feature.attributes[b4])]) == null ? void 0 : _b.feature.attributes[T4];
      if (!t17 || !a8)
        return;
      const i10 = new m2({ paths: [[t17.x, t17.y], [a8.x, a8.y]] });
      if (e10.feature.attributes[T4] = i10, h.has(e10.typeName)) {
        const t18 = h.get(e10.typeName);
        t18 == null ? void 0 : t18.set(e10.feature.attributes[f5], e10.feature);
      } else {
        const t18 = /* @__PURE__ */ new Map();
        t18.set(e10.feature.attributes[f5], e10.feature), h.set(e10.typeName, t18);
      }
      c12.set(e10.feature.attributes[f5], e10.feature);
      const o7 = rt(e10.feature.attributes[T4]);
      this.linkChartDiagramLookup.set(e10.feature.attributes[f5], e10.feature.attributes[T4] ? o7 : null), this.linkChartGeohashLookup.set(e10.feature.attributes[f5], "");
    }), this._currentLinkChartConfig = { layoutMode: e9, xScaleFactor: j7, yScaleFactor: S3 }, { nodes: r6, links: h, idMap: c12 };
  }
  async applyNewLinkChartLayout(e9 = "RADIAL_TREE", t16) {
    const a8 = [];
    await this.calculateLinkChartLayout(e9, t16), this.layers.forEach((e10) => {
      a8.push(e10.refreshCachedQueryEngine());
    }), await Promise.all(a8), this.layers.forEach((e10) => {
      e10.emit("refresh", { dataChanged: true });
    });
  }
  getCurrentNodeLocations() {
    var _a, _b;
    const e9 = /* @__PURE__ */ new Map();
    return (_b = (_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.forEach((t16) => {
      var _a2;
      (_a2 = t16 == null ? void 0 : t16.members) == null ? void 0 : _a2.forEach((t17) => {
        const a8 = t17.linkChartLocation;
        let i10;
        const o6 = t17.id;
        a8 && (i10 = "x" in a8 ? { x: a8.x, y: a8.y } : { x: a8.coords[0], y: a8.coords[1] }, e9.set(o6, new x({ x: i10.x, y: i10.y })));
      });
    }), e9;
  }
  async synchronizeInclusionListWithCache() {
    return new Promise((e9) => {
      var _a;
      (_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions.forEach((e10, t16) => {
        if (e10.useAllData = false, e10.members && e10.members.size > 0) {
          if (!this.dataManager.sublayerCaches.get(t16))
            return;
          const a8 = Array.from(this.dataManager.sublayerCaches.get(t16).keys());
          Array.from(e10.members.keys()).filter((e11) => !a8.includes(e11)).forEach((t17) => {
            var _a2;
            (_a2 = e10.members) == null ? void 0 : _a2.delete(t17);
          });
        }
      }), e9();
    });
  }
  async refreshLinkChartCache(e9) {
    await this.dataManager.refreshCacheContent(e9);
    const t16 = [];
    this.layers.forEach((e10) => {
      t16.push(e10.refreshCachedQueryEngine());
    }), await Promise.all(t16), this.layers.forEach((e10) => {
      e10.emit("refresh", { dataChanged: true });
    });
  }
  async _handleNewRecords(e9) {
    const t16 = [];
    this.dataManager.addToLayerInclusionSet(e9);
    for (const a8 of e9)
      this.sublayerIdsCache.has(a8.typeName) || (this.sublayerIdsCache.set(a8.typeName, /* @__PURE__ */ new Set()), t16.push(a8.typeName)), this.sublayerIdsCache.get(a8.typeName).add(a8.id);
    for (const a8 of t16)
      if (this._graphTypeLookup.has(a8)) {
        const e10 = this._graphTypeLookup.get(a8), t17 = "endPoints" in e10 ? "relationship" : "entity", i10 = new C2({ objectType: e10, parentCompositeLayer: this, graphType: t17, title: a8 });
        "entity" === t17 ? this.dataManager.entityTypeNames.add(a8) : this.dataManager.relationshipTypeNames.add(a8), i10.geometryType ? this.layers.push(i10) : this.tables.push(i10), this.dataManager.sublayerCaches.set(a8, /* @__PURE__ */ new Map());
      }
    await this.dataManager.refreshCacheContent(e9.map((e10) => e10.id)), await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode, { xScaleFactor: this._currentLinkChartConfig.xScaleFactor, yScaleFactor: this._currentLinkChartConfig.xScaleFactor });
  }
  async _initializeDiagram() {
    var _a, _b;
    this.defaultLinkChartConfig ? this.defaultLinkChartConfig.doNotRecalculateLayout ? ((_b = (_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.forEach((e9) => {
      var _a2;
      (_a2 = e9 == null ? void 0 : e9.members) == null ? void 0 : _a2.forEach((e10) => {
        const t16 = e10.linkChartLocation;
        let a8;
        const i10 = e10.id;
        if (!t16)
          return;
        a8 = "x" in t16 ? { x: t16.x, y: t16.y } : { x: t16.coords[0], y: t16.coords[1] };
        const o6 = rt(a8);
        this.linkChartDiagramLookup.set(i10, o6), this.linkChartGeohashLookup.set(i10, p6(a8.x, a8.y, w2)), this.linkChartExtent.xmin > a8.x && (this.linkChartExtent.xmin = a8.x), this.linkChartExtent.xmax < a8.x && (this.linkChartExtent.xmax = a8.x), this.linkChartExtent.ymin > a8.y && (this.linkChartExtent.ymin = a8.y), this.linkChartExtent.ymax < a8.y && (this.linkChartExtent.ymax = a8.y);
      });
    }), this.memberRelationshipTypes.forEach((e9) => {
      var _a2;
      e9.name && ((_a2 = this.dataManager.sublayerCaches.get(e9.name)) == null ? void 0 : _a2.forEach((e10) => {
        const t16 = this.linkChartDiagramLookup.get(e10.attributes[g4]), a8 = this.linkChartDiagramLookup.get(e10.attributes[b4]);
        if (t16 && a8) {
          const i10 = rt(new m2({ paths: [[t16.coords[0], t16.coords[1]], [a8.coords[0], a8.coords[1]]] }));
          this.linkChartDiagramLookup.set(e10.attributes[f5], i10);
        } else
          this.linkChartDiagramLookup.set(e10.attributes[f5], null);
        this.linkChartGeohashLookup.set(e10.attributes[f5], "");
      }));
    })) : await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode, { xScaleFactor: this.defaultLinkChartConfig.xScaleFactor, yScaleFactor: this.defaultLinkChartConfig.yScaleFactor, lockedNodeLocations: this.getCurrentNodeLocations() }) : await this.calculateLinkChartLayout("RADIAL_TREE", { lockedNodeLocations: this.getCurrentNodeLocations() });
  }
};
e([y()], j6.prototype, "dataPreloadedInLocalCache", void 0), e([y()], j6.prototype, "defaultLinkChartConfig", void 0), e([y()], j6.prototype, "dataManager", void 0), e([y()], j6.prototype, "knowledgeGraph", void 0), e([y()], j6.prototype, "layers", void 0), e([y()], j6.prototype, "linkChartDiagramLookup", void 0), e([y()], j6.prototype, "linkChartExtent", void 0), e([y()], j6.prototype, "linkChartGeohashLookup", void 0), e([y()], j6.prototype, "memberEntityTypes", void 0), e([y()], j6.prototype, "memberRelationshipTypes", void 0), e([y()], j6.prototype, "sublayerIdsCache", void 0), e([y()], j6.prototype, "tables", void 0), e([y({ json: { read: false } })], j6.prototype, "type", void 0), j6 = e([a("esri.layers.LinkChartLayer")], j6);
var S2 = j6;
export {
  S2 as default
};
//# sourceMappingURL=LinkChartLayer-JAKU7XGE.js.map
