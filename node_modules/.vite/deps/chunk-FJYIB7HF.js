// node_modules/@arcgis/core/arcade/executionError.js
var e;
!function(e2) {
  e2.AsyncNotEnabled = "AsyncNotEnabled", e2.ModulesNotSupported = "ModulesNotSupported", e2.CircularModules = "CircularModules", e2.NeverReach = "NeverReach", e2.UnsupportedHashType = "UnsupportedHashType", e2.InvalidParameter = "InvalidParameter", e2.UnexpectedToken = "UnexpectedToken", e2.Unrecognised = "Unrecognised", e2.UnrecognisedType = "UnrecognisedType", e2.MaximumCallDepth = "MaximumCallDepth", e2.BooleanConditionRequired = "BooleanConditionRequired", e2.TypeNotAllowedInFeature = "TypeNotAllowedInFeature", e2.KeyMustBeString = "KeyMustBeString", e2.WrongNumberOfParameters = "WrongNumberOfParameters", e2.CallNonFunction = "CallNonFunction", e2.NoFunctionInTemplateLiteral = "NoFunctionInTemplateLiteral", e2.NoFunctionInDictionary = "NoFunctionInDictionary", e2.NoFunctionInArray = "NoFunctionInArray", e2.AssignModuleFunction = "AssignModuleFunction", e2.LogicExpressionOrAnd = "LogicExpressionOrAnd", e2.LogicalExpressionOnlyBoolean = "LogicalExpressionOnlyBoolean", e2.FunctionNotFound = "FunctionNotFound", e2.InvalidMemberAccessKey = "InvalidMemberAccessKey", e2.UnsupportedUnaryOperator = "UnsupportUnaryOperator", e2.InvalidIdentifier = "InvalidIdentifier", e2.MemberOfNull = "MemberOfNull", e2.UnsupportedOperator = "UnsupportedOperator", e2.Cancelled = "Cancelled", e2.ModuleAccessorMustBeString = "ModuleAccessorMustBeString", e2.ModuleExportNotFound = "ModuleExportNotFound", e2.Immutable = "Immutable", e2.OutOfBounds = "OutOfBounds", e2.IllegalResult = "IllegalResult", e2.FieldNotFound = "FieldNotFound", e2.PortalRequired = "PortalRequired", e2.LogicError = "LogicError", e2.ArrayAccessorMustBeNumber = "ArrayAccessMustBeNumber", e2.KeyAccessorMustBeString = "KeyAccessorMustBeString", e2.WrongSpatialReference = "WrongSpatialReference";
}(e || (e = {}));
var r = { [e.TypeNotAllowedInFeature]: "Feature attributes only support dates, numbers, strings, guids.", [e.LogicError]: "Logic error - {reason}", [e.NeverReach]: "Encountered unreachable logic", [e.AsyncNotEnabled]: "Async Arcade must be enabled for this script", [e.ModuleAccessorMustBeString]: "Module accessor must be a string", [e.ModuleExportNotFound]: "Module has no export with provided identifier", [e.ModulesNotSupported]: "Current profile does not support modules", [e.ArrayAccessorMustBeNumber]: "Array accessor must be a number", [e.FunctionNotFound]: "Function not found", [e.FieldNotFound]: "Key not found - {key}", [e.CircularModules]: "Circular module dependencies are not allowed", [e.Cancelled]: "Execution cancelled", [e.UnsupportedHashType]: "Type not supported in hash function", [e.IllegalResult]: "Value is not a supported return type", [e.PortalRequired]: "Portal is required", [e.InvalidParameter]: "Invalid parameter", [e.WrongNumberOfParameters]: "Call with wrong number of parameters", [e.Unrecognised]: "Unrecognised code structure", [e.UnrecognisedType]: "Unrecognised type", [e.WrongSpatialReference]: "Cannot work with geometry in this spatial reference. It is different to the execution spatial reference", [e.BooleanConditionRequired]: "Conditions must use booleans", [e.NoFunctionInDictionary]: "Dictionaries cannot contain functions.", [e.NoFunctionInArray]: "Arrays cannot contain functions.", [e.NoFunctionInTemplateLiteral]: "Template Literals do not expect functions by value.", [e.KeyAccessorMustBeString]: "Accessor must be a string", [e.KeyMustBeString]: "Object keys must be a string", [e.Immutable]: "Object is immutable", [e.UnexpectedToken]: "Unexpected token", [e.MemberOfNull]: "Cannot access property of null object", [e.MaximumCallDepth]: "Exceeded maximum function depth", [e.OutOfBounds]: "Out of bounds", [e.InvalidIdentifier]: "Identifier not recognised", [e.CallNonFunction]: "Expression is not a function", [e.InvalidMemberAccessKey]: "Cannot access value using a key of this type", [e.AssignModuleFunction]: "Cannot assign function to module variable", [e.UnsupportedUnaryOperator]: "Unsupported unary operator", [e.UnsupportedOperator]: "Unsupported operator", [e.LogicalExpressionOnlyBoolean]: "Logical expressions must be boolean", [e.LogicExpressionOrAnd]: "Logical expression can only be combined with || or &&" };
var o = class extends Error {
  constructor(...e2) {
    super(...e2);
  }
};
var n = class _n extends o {
  constructor(e2, r2) {
    super(s(r2) + e2.message, { cause: e2 }), this.loc = null, Error.captureStackTrace && Error.captureStackTrace(this, _n), r2 && r2.loc && (this.loc = r2.loc);
  }
};
var t = class _t extends Error {
  constructor(e2, o2, n2, a2) {
    super("Execution error - " + s(n2) + i(r[o2], a2)), this.loc = null, this.declaredRootClass = "esri.arcade.arcadeexecutionerror", Error.captureStackTrace && Error.captureStackTrace(this, _t), n2 && n2.loc && (this.loc = n2.loc);
  }
};
function s(e2) {
  var _a, _b;
  return e2 && e2.loc ? `Line : ${(_a = e2.loc.start) == null ? void 0 : _a.line}, ${(_b = e2.loc.start) == null ? void 0 : _b.column}: ` : "";
}
var a = class _a extends Error {
  constructor(e2, o2, n2, t2) {
    super("Compilation error - " + s(n2) + i(r[o2], t2)), this.loc = null, this.declaredRootClass = "esri.arcade.arcadecompilationerror", Error.captureStackTrace && Error.captureStackTrace(this, _a), n2 && n2.loc && (this.loc = n2.loc);
  }
};
var c = class _c extends Error {
  constructor() {
    super("Uncompilable code structures"), this.declaredRootClass = "esri.arcade.arcadeuncompilableerror", Error.captureStackTrace && Error.captureStackTrace(this, _c);
  }
};
function i(e2, r2) {
  try {
    if (!r2)
      return e2;
    for (const o2 in r2) {
      let n2 = r2[o2];
      n2 || (n2 = ""), e2 = e2.replace("{" + o2 + "}", r2[o2]);
    }
  } catch (o2) {
  }
  return e2;
}
function u(e2, r2, o2) {
  return "esri.arcade.arcadeexecutionerror" === o2.declaredRootClass || "esri.arcade.arcadecompilationerror" === o2.declaredRootClass ? null === o2.loc && r2 && r2.loc ? new n(o2, { cause: o2 }) : o2 : ("esri.arcade.featureset.support.featureseterror" === o2.declaredRootClass || "esri.arcade.featureset.support.sqlerror" === o2.declaredRootClass || o2.declaredRootClass, r2 && r2.loc ? new n(o2, { cause: o2 }) : o2);
}
var l;
!function(e2) {
  e2.UnrecognisedUri = "UnrecognisedUri", e2.UnsupportedUriProtocol = "UnsupportedUriProtocol";
}(l || (l = {}));
var d = { [l.UnrecognisedUri]: "Unrecognised uri - {uri}", [l.UnsupportedUriProtocol]: "Unrecognised uri protocol" };
var p = class _p extends Error {
  constructor(e2, r2) {
    super(i(d[e2], r2)), this.declaredRootClass = "esri.arcade.arcademoduleerror", Error.captureStackTrace && Error.captureStackTrace(this, _p);
  }
};

export {
  e,
  t,
  a,
  c,
  i,
  u,
  l,
  p
};
//# sourceMappingURL=chunk-FJYIB7HF.js.map
