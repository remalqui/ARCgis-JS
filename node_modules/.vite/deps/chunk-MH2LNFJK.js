import {
  D,
  St
} from "./chunk-O3CHVGVF.js";
import {
  has
} from "./chunk-I4U7MQNO.js";

// node_modules/@arcgis/core/support/revision.js
var b = "20230626";
var a = "b81703b48e0b92e492f4cc6b739af02a9af50038";

// node_modules/@arcgis/core/kernel.js
var a2 = "4.27";
var s = a2;
s = "4.27.6";
var r = { async request(e, a3) {
  var _a, _b;
  const { default: s2 } = await import("./request-JOIDVEEA.js"), r2 = e.options, n2 = r2.responseType;
  r2.signal = a3 == null ? void 0 : a3.signal, r2.responseType = "native" === n2 || "native-request-init" === n2 ? "native-request-init" : n2 && ["blob", "json", "text"].includes(n2) && ((_a = D(e.url)) == null ? void 0 : _a.after) ? n2 : "array-buffer";
  const o2 = await s2(e.url, r2), i2 = { data: o2.data, httpStatus: o2.httpStatus, ssl: o2.ssl };
  switch ((_b = o2.requestOptions) == null ? void 0 : _b.responseType) {
    case "native-request-init":
      return delete i2.data.signal, i2;
    case "blob":
      i2.data = await i2.data.arrayBuffer();
      break;
    case "json":
      i2.data = new TextEncoder().encode(JSON.stringify(i2.data)).buffer;
      break;
    case "text":
      i2.data = new TextEncoder().encode(i2.data).buffer;
  }
  return { result: i2, transferList: [i2.data] };
} };
var n;
function o(t) {
  n = t;
}
function i(t) {
  const a3 = n == null ? void 0 : n.findCredential(t);
  return (a3 == null ? void 0 : a3.token) ? St(t, "token", a3.token) : t;
}
has("host-webworker");

export {
  b,
  a,
  a2,
  s,
  r,
  n,
  o,
  i
};
//# sourceMappingURL=chunk-MH2LNFJK.js.map
