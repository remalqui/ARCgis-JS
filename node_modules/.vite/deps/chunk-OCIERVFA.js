import {
  a as a2,
  c
} from "./chunk-QOWAKGE4.js";
import {
  b,
  b2,
  c as c2,
  d,
  p as p2,
  w
} from "./chunk-UX5D32RO.js";
import {
  a,
  p3 as p,
  x
} from "./chunk-VFQINJTY.js";
import {
  i
} from "./chunk-OO4A3EBQ.js";
import {
  j
} from "./chunk-7KX64CAH.js";
import {
  L,
  Ut
} from "./chunk-O3CHVGVF.js";
import {
  u
} from "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-W2N7YT6I.js";

// node_modules/@arcgis/core/symbols/support/webStyleSymbolUtils.js
function j2(t, e, r, n) {
  const s2 = t.name;
  return null == s2 ? Promise.reject(new s("symbolstyleutils:style-symbol-reference-name-missing", "Missing name in style symbol reference")) : t.styleName && "Esri2DPointSymbolsStyle" === t.styleName ? U(s2, e, n) : c2(t, e, n).then((t2) => d2(u(t2), s2, e, r, d, n));
}
function h(t, e) {
  return e.items.find((e2) => e2.name === t);
}
function d2(o, p3, c3, b3, j3, d3) {
  var _a;
  const U2 = c3 && null != c3.portal ? c3.portal : j.getDefault(), N = { portal: U2, url: L(o.baseUrl), origin: "portal-item" }, w2 = h(p3, o.data);
  if (!w2) {
    const t = `The symbol name '${p3}' could not be found`;
    return Promise.reject(new s("symbolstyleutils:symbol-name-not-found", t, { symbolName: p3 }));
  }
  let S = i(j3(w2, b3), N), D = ((_a = w2.thumbnail) == null ? void 0 : _a.href) ?? null;
  const O = w2.thumbnail && w2.thumbnail.imageData;
  c() && (S = a2(S) ?? "", D = a2(D));
  const P = { portal: U2, url: L(Ut(S)), origin: "portal-item" };
  return b2(S, d3).then((e) => {
    const r = "cimRef" === b3 ? p2(e.data) : e.data, l = b(r, P);
    if (l && x(l)) {
      if (D) {
        const t = i(D, N);
        l.thumbnail = new p({ url: t });
      } else
        O && (l.thumbnail = new p({ url: `data:image/png;base64,${O}` }));
      o.styleUrl ? l.styleOrigin = new a({ portal: c3.portal, styleUrl: o.styleUrl, name: p3 }) : o.styleName && (l.styleOrigin = new a({ portal: c3.portal, styleName: o.styleName, name: p3 }));
    }
    return l;
  });
}
function U(t, e, r) {
  const l = w.replaceAll(/\{SymbolName\}/gi, t), o = null != e.portal ? e.portal : j.getDefault();
  return b2(l, r).then((t2) => {
    const e2 = p2(t2.data);
    return b(e2, { portal: o, url: L(Ut(l)), origin: "portal-item" });
  });
}

export {
  j2 as j,
  h,
  d2 as d
};
//# sourceMappingURL=chunk-OCIERVFA.js.map
