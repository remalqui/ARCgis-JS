import {
  V
} from "./chunk-4RFFPIT2.js";
import {
  l,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";

// node_modules/@arcgis/core/core/CollectionFlattener.js
var i = class extends V {
  constructor(t) {
    super(t), this.getCollections = null;
  }
  initialize() {
    this.own(l(() => this._refresh()));
  }
  destroy() {
    this.getCollections = null;
  }
  _refresh() {
    const t = null != this.getCollections ? this.getCollections() : null;
    if (null == t)
      return void this.removeAll();
    let o = 0;
    for (const s of t)
      null != s && (o = this._processCollection(o, s));
    this.splice(o, this.length);
  }
  _createNewInstance(t) {
    return new V(t);
  }
  _processCollection(t, o) {
    if (!o)
      return t;
    const s = this.itemFilterFunction ?? ((t2) => !!t2);
    for (const e2 of o)
      if (e2) {
        if (s(e2)) {
          const o2 = this.indexOf(e2, t);
          o2 >= 0 ? o2 !== t && this.reorder(e2, t) : this.add(e2, t), ++t;
        }
        if (this.getChildrenFunction) {
          const o2 = this.getChildrenFunction(e2);
          if (Array.isArray(o2))
            for (const s2 of o2)
              t = this._processCollection(t, s2);
          else
            t = this._processCollection(t, o2);
        }
      }
    return t;
  }
};
e([y()], i.prototype, "getCollections", void 0), e([y()], i.prototype, "getChildrenFunction", void 0), e([y()], i.prototype, "itemFilterFunction", void 0), i = e([a("esri.core.CollectionFlattener")], i);
var n = i;

export {
  n
};
//# sourceMappingURL=chunk-PXHKLVGZ.js.map
