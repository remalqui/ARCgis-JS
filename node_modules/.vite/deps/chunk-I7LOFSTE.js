import {
  w as w2,
  y as y2
} from "./chunk-DIRCMTXV.js";
import {
  e as e2
} from "./chunk-2YTFL6AC.js";
import {
  i as i2
} from "./chunk-CGPOGDO6.js";
import {
  l as l3
} from "./chunk-ZCZT2HZV.js";
import {
  A as A2,
  E,
  F,
  I,
  M,
  O as O2,
  P,
  Q,
  b as b2,
  g,
  h as h2,
  j,
  m,
  q,
  y as y3
} from "./chunk-62M25QKF.js";
import {
  s as s4
} from "./chunk-W52WZL2F.js";
import {
  p as p5
} from "./chunk-7MOGRCW6.js";
import {
  i as i3
} from "./chunk-3Y3ICAIL.js";
import {
  C,
  S,
  c as c2,
  n as n2,
  u as u2
} from "./chunk-TNXVIMSN.js";
import {
  a as a5,
  d
} from "./chunk-77BBQQ7Y.js";
import {
  o as o3
} from "./chunk-FGWFWDIM.js";
import {
  p as p6
} from "./chunk-UCGDNB2P.js";
import {
  p as p4
} from "./chunk-E4GDJ764.js";
import {
  A,
  p as p3,
  w
} from "./chunk-Z2T56FN3.js";
import {
  j as j2
} from "./chunk-P46VVEIN.js";
import {
  p as p2
} from "./chunk-X34I34RW.js";
import {
  a as a3
} from "./chunk-5NBE4HDI.js";
import {
  t as t2
} from "./chunk-2HDAD5Q3.js";
import {
  c as c5
} from "./chunk-PPU6QR6F.js";
import {
  O
} from "./chunk-PCVJI7J2.js";
import {
  D,
  I as I2,
  c as c4,
  m as m2,
  p as p8,
  v
} from "./chunk-HZHMZHPT.js";
import {
  c
} from "./chunk-MLNTHYHD.js";
import {
  b
} from "./chunk-YC4PIRSZ.js";
import {
  i
} from "./chunk-RR2V4HRU.js";
import {
  k
} from "./chunk-QA4FMJA6.js";
import {
  h
} from "./chunk-G5WJIWPP.js";
import {
  a as a4
} from "./chunk-LNMNRMVX.js";
import {
  c2 as c3,
  p as p7
} from "./chunk-7KM4XBUC.js";
import {
  t
} from "./chunk-AFZS4SWK.js";
import {
  b as b3
} from "./chunk-XU2Q4SCK.js";
import {
  s as s3
} from "./chunk-KIEN3CY2.js";
import {
  V
} from "./chunk-4RFFPIT2.js";
import {
  _
} from "./chunk-J4R3XNTP.js";
import {
  U,
  l as l2
} from "./chunk-XN5VV437.js";
import {
  o2,
  r as r2
} from "./chunk-SFV6XLDZ.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  n2 as n,
  r2 as r,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2,
  u
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  L,
  V as V2
} from "./chunk-O3CHVGVF.js";
import {
  f,
  p
} from "./chunk-HNHXEGH2.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-W2N7YT6I.js";
import {
  a,
  o
} from "./chunk-I5JT24BO.js";

// node_modules/@arcgis/core/layers/support/Subtype.js
var a6 = class extends l {
  constructor() {
    super(...arguments), this.code = null, this.defaultValues = {}, this.domains = null, this.name = null;
  }
  readDomains(o4) {
    if (!o4)
      return null;
    const r3 = {};
    for (const t3 of Object.keys(o4))
      r3[t3] = i(o4[t3]);
    return r3;
  }
  writeDomains(o4, r3) {
    var _a;
    if (!o4)
      return;
    const t3 = {};
    for (const s5 of Object.keys(o4))
      o4[s5] && (t3[s5] = (_a = o4[s5]) == null ? void 0 : _a.toJSON());
    r3.domains = t3;
  }
};
e([y({ type: Number, json: { write: true } })], a6.prototype, "code", void 0), e([y({ type: Object, json: { write: true } })], a6.prototype, "defaultValues", void 0), e([y({ json: { write: true } })], a6.prototype, "domains", void 0), e([o2("domains")], a6.prototype, "readDomains", null), e([r2("domains")], a6.prototype, "writeDomains", null), e([y({ type: String, json: { write: true } })], a6.prototype, "name", void 0), a6 = e([a2("esri.layers.support.Subtype")], a6);
var c6 = a6;

// node_modules/@arcgis/core/layers/support/SubtypeSublayer.js
var G = ["charts", "editingEnabled", "formTemplate", "labelsVisible", "labelingInfo", "legendEnabled", "minScale", "maxScale", "opacity", "popupEnabled", "popupTemplate", "renderer", "subtypeCode", "templates", "title", "visible"];
var N = { key: "type", base: p3, errorContext: "renderer", typeMap: { simple: p4, "unique-value": A, "class-breaks": w } };
var $ = s4();
var k2 = u({ types: N });
var M2 = 0;
function _2(e3) {
  const t3 = e3.json.write;
  return "object" == typeof t3 ? t3.ignoreOrigin = true : e3.json.write = { ignoreOrigin: true }, e3;
}
function H(e3) {
  return new p4({ symbol: B(e3) });
}
function B(e3) {
  switch (e3) {
    case "point":
    case "multipoint":
      return S.clone();
    case "polyline":
      return u2.clone();
    case "polygon":
    case "multipatch":
      return c2.clone();
    default:
      return null;
  }
}
function Q2(e3, t3) {
  return !!t3 && ("unique-value" === (e3 == null ? void 0 : e3.type) && "string" == typeof e3.field && e3.field.toLowerCase() === t3.toLowerCase() && !e3.field2 && !e3.field3 && !e3.valueExpression);
}
function z(e3, t3) {
  var _a;
  return null == e3 ? null : (_a = t3.subtypes) == null ? void 0 : _a.find((t4) => t4.code === e3);
}
function J(e3, t3) {
  let r3 = null;
  switch (t3.geometryType) {
    case "esriGeometryPoint":
    case "esriGeometryMultipoint":
      r3 = "point";
      break;
    case "esriGeometryPolyline":
      r3 = "line";
      break;
    case "esriGeometryPolygon":
    case "esriGeometryMultiPatch":
      r3 = "polygon";
      break;
    default:
      t3.type, r3 = null;
  }
  const i4 = {}, o4 = z(e3, t3);
  if (null != o4) {
    const { defaultValues: e4 } = o4;
    for (const t4 in e4)
      i4[t4] = e4[t4];
  }
  return i4[t3.subtypeField] = e3, new p5({ name: "New Feature", drawingTool: r3, prototype: { attributes: i4 } });
}
var K = "esri.layers.support.SubtypeSublayer";
var W = class extends a4(O(s3(_))) {
  constructor(e3) {
    super(e3), this.charts = null, this.editingEnabled = true, this.fieldOverrides = null, this.fieldsIndex = null, this.formTemplate = null, this.id = `${Date.now().toString(16)}-subtype-sublayer-${M2++}`, this.type = "subtype-sublayer", this.labelsVisible = true, this.labelingInfo = null, this.layerType = "ArcGISFeatureLayer", this.legendEnabled = true, this.listMode = "show", this.minScale = 0, this.maxScale = 0, this.opacity = 1, this.parent = null, this.popupEnabled = true, this.popupTemplate = null, this.subtypeCode = null, this.templates = null, this.title = null, this.visible = true;
  }
  get capabilities() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.capabilities;
  }
  get effectiveCapabilities() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.effectiveCapabilities;
  }
  get effectiveEditingEnabled() {
    const { parent: e3 } = this;
    return e3 ? e3.effectiveEditingEnabled && this.editingEnabled : this.editingEnabled;
  }
  get elevationInfo() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.elevationInfo;
  }
  writeFieldOverrides(e3, t3, r3) {
    const { fields: i4, parent: o4 } = this;
    let n3;
    if (i4) {
      n3 = [];
      let e4 = 0;
      i4.forEach(({ name: t4, alias: r4, editable: i5, visible: s5 }) => {
        var _a;
        if (!s5)
          return;
        const l4 = (_a = o4 == null ? void 0 : o4.fields) == null ? void 0 : _a.find((e5) => e5.name === t4);
        if (!l4)
          return;
        const a7 = { name: t4 };
        let p9 = false;
        r4 !== l4.alias && (a7.alias = r4, p9 = true), i5 !== l4.editable && (a7.editable = i5, p9 = true), n3.push(a7), p9 && e4++;
      }), 0 === e4 && n3.length === i4.length && (n3 = null);
    } else
      n3 = a(e3);
    (n3 == null ? void 0 : n3.length) && o(r3, n3, t3);
  }
  get fields() {
    const { parent: e3, fieldOverrides: t3, subtypeCode: r3 } = this, i4 = e3 == null ? void 0 : e3.fields;
    if (!e3 || !(i4 == null ? void 0 : i4.length))
      return null;
    const { subtypes: o4, subtypeField: n3 } = e3, s5 = o4 == null ? void 0 : o4.find((e4) => e4.code === r3), l4 = s5 == null ? void 0 : s5.defaultValues, a7 = s5 == null ? void 0 : s5.domains, p9 = [];
    for (const d2 of i4) {
      const e4 = d2.clone(), { name: i5 } = e4, o5 = t3 == null ? void 0 : t3.find((e5) => e5.name === i5);
      if (e4.visible = !t3 || !!o5, o5) {
        const { alias: t4, editable: r4 } = o5;
        t4 && (e4.alias = t4), false === r4 && (e4.editable = false);
      }
      const s6 = (l4 == null ? void 0 : l4[i5]) ?? null;
      e4.defaultValue = i5 === n3 ? r3 : s6;
      const u3 = (a7 == null ? void 0 : a7[i5]) ?? null;
      e4.domain = i5 === n3 ? null : u3 ? "inherited" === u3.type ? e4.domain : u3.clone() : null, p9.push(e4);
    }
    return p9;
  }
  get floorInfo() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.floorInfo;
  }
  get geometryType() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.geometryType;
  }
  get effectiveScaleRange() {
    const { minScale: e3, maxScale: t3 } = this;
    return { minScale: e3, maxScale: t3 };
  }
  get objectIdField() {
    var _a;
    return this.parent || s.getLogger(K).error(Y("objectIdField")), (_a = this.parent) == null ? void 0 : _a.objectIdField;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set renderer(e3) {
    c3(e3, this.fieldsIndex), this._override("renderer", e3);
  }
  get renderer() {
    if (this._isOverridden("renderer"))
      return this._get("renderer");
    const { parent: e3 } = this;
    return e3 && !e3.isTable && "mesh" !== e3.geometryType ? H(e3.geometryType) : null;
  }
  readRendererFromService(e3, t3, r3) {
    var _a, _b, _c;
    if ("Table" === t3.type)
      return null;
    const i4 = (_a = t3.drawingInfo) == null ? void 0 : _a.renderer, n3 = k2(i4, t3, r3);
    let s5;
    const { subtypeCode: l4 } = this;
    if (null != l4 && Q2(n3, t3.subtypeField)) {
      const e4 = (_b = n3.uniqueValueInfos) == null ? void 0 : _b.find(({ value: e5 }) => (e5 = "number" == typeof e5 ? String(e5) : e5) === String(l4));
      e4 && (s5 = new p4({ symbol: e4.symbol }));
    } else
      "simple" !== (n3 == null ? void 0 : n3.type) || ((_c = n3.visualVariables) == null ? void 0 : _c.length) || (s5 = n3);
    return s5;
  }
  readRenderer(e3, t3, r3) {
    var _a, _b, _c;
    const i4 = (_b = (_a = t3 == null ? void 0 : t3.layerDefinition) == null ? void 0 : _a.drawingInfo) == null ? void 0 : _b.renderer;
    if (!i4)
      return;
    const o4 = (_c = i4.visualVariables) == null ? void 0 : _c.some((e4) => "rotationInfo" !== e4.type);
    return o4 ? void 0 : k2(i4, t3, r3) || void 0;
  }
  get spatialReference() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.spatialReference;
  }
  readTemplatesFromService(e3, t3) {
    return [J(this.subtypeCode, t3)];
  }
  readTitleFromService(e3, t3) {
    const r3 = z(this.subtypeCode, t3);
    return null != r3 ? r3.name : null;
  }
  get url() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.url;
  }
  get userHasUpdateItemPrivileges() {
    var _a;
    return !!((_a = this.parent) == null ? void 0 : _a.userHasUpdateItemPrivileges);
  }
  async addAttachment(e3, t3) {
    const { parent: r3 } = this;
    if (!r3)
      throw Y("addAttachment");
    if (e3.getAttribute(r3.subtypeField) !== this.subtypeCode)
      throw new s2("subtype-sublayer:addAttachment", "The feature provided does not belong to this SubtypeSublayer");
    return r3.addAttachment(e3, t3);
  }
  async updateAttachment(e3, t3, r3) {
    const { parent: i4 } = this;
    if (!i4)
      throw Y("updateAttachment");
    if (e3.getAttribute(i4.subtypeField) !== this.subtypeCode)
      throw new s2("subtype-sublayer:updateAttachment", "The feature provided does not belong to this SubtypeSublayer");
    return i4.updateAttachment(e3, t3, r3);
  }
  async deleteAttachments(e3, t3) {
    const { parent: r3 } = this;
    if (!r3)
      throw Y("deleteAttachments");
    if (e3.getAttribute(r3.subtypeField) !== this.subtypeCode)
      throw new s2("subtype-sublayer:deleteAttachments", "The feature provided does not belong to this SubtypeSublayer");
    return r3.deleteAttachments(e3, t3);
  }
  async applyEdits(e3, t3) {
    if (!this.parent)
      throw Y("applyEdits");
    return this.parent.applyEdits(e3, t3);
  }
  createPopupTemplate(e3) {
    let t3 = this;
    const { parent: r3, fields: i4, title: o4 } = this;
    if (r3) {
      const { displayField: e4, editFieldsInfo: n3, objectIdField: s5 } = r3;
      t3 = { displayField: e4, editFieldsInfo: n3, fields: i4, objectIdField: s5, title: o4 };
    }
    return p6(t3, e3);
  }
  createQuery() {
    if (!this.parent)
      throw Y("createQuery");
    const e3 = E(this.parent), t3 = `${this.parent.subtypeField}=${this.subtypeCode}`;
    return e3.where = n2(t3, this.parent.definitionExpression), e3;
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  getFieldDomain(e3) {
    return this._getLayerDomain(e3);
  }
  hasUserOverrides() {
    return G.some((e3) => this.originIdOf(e3) === r.USER);
  }
  async queryAttachments(e3, t3) {
    const r3 = await this.load();
    if (!r3.parent)
      throw Y("queryAttachments");
    const i4 = e3.clone();
    return i4.where = X(i4.where, r3.parent.subtypeField, r3.subtypeCode), r3.parent.queryAttachments(e3, t3);
  }
  async queryFeatures(e3, t3) {
    const r3 = await this.load();
    if (!r3.parent)
      throw Y("queryFeatures");
    const i4 = b.from(e3) ?? r3.createQuery();
    return null != e3 && (i4.where = X(i4.where, r3.parent.subtypeField, r3.subtypeCode)), r3.parent.queryFeatures(i4, t3);
  }
  _getLayerDomain(e3) {
    const t3 = this.fieldsIndex.get(e3);
    return t3 ? t3.domain : null;
  }
};
e([y({ readOnly: true, json: { read: false } })], W.prototype, "capabilities", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "effectiveCapabilities", null), e([y({ json: { write: { ignoreOrigin: true } } })], W.prototype, "charts", void 0), e([y({ type: Boolean, nonNullable: true, json: { name: "enableEditing", write: { ignoreOrigin: true } } })], W.prototype, "editingEnabled", void 0), e([y({ type: Boolean, readOnly: true })], W.prototype, "effectiveEditingEnabled", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "elevationInfo", null), e([y({ readOnly: true, json: { name: "layerDefinition.fieldOverrides", origins: { service: { read: false } }, write: { ignoreOrigin: true, allowNull: true } } })], W.prototype, "fieldOverrides", void 0), e([r2("fieldOverrides")], W.prototype, "writeFieldOverrides", null), e([y({ ...$.fields, readOnly: true, json: { read: false } })], W.prototype, "fields", null), e([y($.fieldsIndex)], W.prototype, "fieldsIndex", void 0), e([y({ readOnly: true, json: { read: false } })], W.prototype, "floorInfo", null), e([y({ type: y2, json: { name: "formInfo", write: { ignoreOrigin: true } } })], W.prototype, "formTemplate", void 0), e([y({ type: String, readOnly: true, json: { origins: { service: { read: false } }, write: { ignoreOrigin: true } } })], W.prototype, "id", void 0), e([y({ readOnly: true, json: { read: false } })], W.prototype, "geometryType", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "type", void 0), e([y(_2(a(m2)))], W.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", origins: { service: { read: false } }, read: { reader: i3 }, write: { ignoreOrigin: true } } })], W.prototype, "labelingInfo", void 0), e([y({ type: ["ArcGISFeatureLayer"], readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], W.prototype, "layerType", void 0), e([y(_2(a(c4)))], W.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], W.prototype, "listMode", void 0), e([y((() => {
  const e3 = a(I2);
  return e3.json.origins.service.read = false, _2(e3);
})())], W.prototype, "minScale", void 0), e([y((() => {
  const e3 = a(D);
  return e3.json.origins.service.read = false, _2(e3);
})())], W.prototype, "maxScale", void 0), e([y({ readOnly: true })], W.prototype, "effectiveScaleRange", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "objectIdField", null), e([y({ type: Number, range: { min: 0, max: 1 }, nonNullable: true, json: { write: { ignoreOrigin: true } } })], W.prototype, "opacity", void 0), e([y()], W.prototype, "parent", void 0), e([y(_2(a(p8)))], W.prototype, "popupEnabled", void 0), e([y({ type: k, json: { name: "popupInfo", write: { ignoreOrigin: true } } })], W.prototype, "popupTemplate", void 0), e([y({ readOnly: true })], W.prototype, "defaultPopupTemplate", null), e([y({ types: N, json: { write: { target: "layerDefinition.drawingInfo.renderer", ignoreOrigin: true } } })], W.prototype, "renderer", null), e([o2("service", "renderer", ["drawingInfo.renderer", "subtypeField", "type"])], W.prototype, "readRendererFromService", null), e([o2("renderer", ["layerDefinition.drawingInfo.renderer"])], W.prototype, "readRenderer", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "spatialReference", null), e([y({ type: Number, json: { origins: { service: { read: false } }, write: { ignoreOrigin: true } } })], W.prototype, "subtypeCode", void 0), e([y({ type: [p5], json: { name: "layerDefinition.templates", write: { ignoreOrigin: true } } })], W.prototype, "templates", void 0), e([o2("service", "templates", ["geometryType", "subtypeField", "subtypes", "type"])], W.prototype, "readTemplatesFromService", null), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], W.prototype, "title", void 0), e([o2("service", "title", ["subtypes"])], W.prototype, "readTitleFromService", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "url", null), e([y({ readOnly: true })], W.prototype, "userHasUpdateItemPrivileges", null), e([y({ type: Boolean, nonNullable: true, json: { name: "visibility", write: { ignoreOrigin: true } } })], W.prototype, "visible", void 0), W = e([a2(K)], W);
var X = (e3, t3, r3) => {
  const i4 = new RegExp(`${t3}\\s*=\\s*\\d+`), o4 = `${t3}=${r3}`, n3 = e3 ?? "";
  return i4.test(n3) ? n3.replace(i4, o4) : n2(o4, n3);
};
var Y = (e3) => new s2(`This sublayer must have a parent SubtypeGroupLayer in order to use ${e3}`);
var Z = W;

// node_modules/@arcgis/core/layers/SubtypeGroupLayer.js
var ee = "SubtypeGroupLayer";
var re = "esri.layers.SubtypeGroupLayer";
function te(e3, r3) {
  return new s2("layer:unsupported", `Layer (${e3.title}, ${e3.id}) of type '${e3.declaredClass}' ${r3}`, { layer: e3 });
}
var se = s4();
var ie = class extends w2(c(a3(a5(t2(p2(l3(c5(j2(O(o3(i2(a4(b3))))))))))))) {
  constructor(...e3) {
    super(...e3), this._sublayersCollectionChanged = false, this._sublayerLookup = /* @__PURE__ */ new Map(), this.fields = null, this.fieldsIndex = null, this.outFields = null, this.subtypes = null, this.sublayers = new (V.ofType(Z))(), this.timeInfo = null, this.title = "Layer", this.type = "subtype-group", this.addHandles(l2(() => this.sublayers, (e4, r3) => this._handleSublayersChange(e4, r3), U));
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  normalizeCtorArgs(e3, r3) {
    return "string" == typeof e3 ? { url: e3, ...r3 } : e3;
  }
  load(e3) {
    const r3 = null != e3 ? e3.signal : null, s5 = this.loadFromPortal({ supportedTypes: ["Feature Service"] }, e3).catch(f).then(async () => {
      if (!this.url)
        throw new s2("subtype-grouplayer:missing-url-or-source", "SubtypeGroupLayer must be created with either a url or a portal item");
      if (null == this.layerId)
        throw new s2("subtype-grouplayer:missing-layerid", "layerId is required for a SubtypeGroupLayer created with url");
      return this._initLayerProperties(await this.createGraphicsSource(r3));
    }).then(() => this._setUserPrivileges(this.serviceItemId, e3)).then(() => M(this, e3));
    return this.addResolvingPromise(s5), Promise.resolve(this);
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("gdbVersion"), this.commitProperty("historicMoment"), this.commitProperty("returnZ"), this.commitProperty("capabilities"), this.commitProperty("returnM"), (this._get("createQueryVersion") ?? 0) + 1;
  }
  get editingEnabled() {
    return this.loaded && null != this.capabilities && this.capabilities.operations.supportsEditing && this.userHasEditingPrivileges;
  }
  get effectiveEditingEnabled() {
    return Q(this);
  }
  get parsedUrl() {
    const e3 = L(this.url);
    return null != e3 && null != this.layerId && (e3.path = V2(e3.path, this.layerId.toString())), e3;
  }
  set source(e3) {
    this._get("source") !== e3 && this._set("source", e3);
  }
  readTitleFromService(e3, { name: r3 }) {
    return this.url ? h(this.url, r3) : r3;
  }
  async addAttachment(e3, r3) {
    return y3(this, e3, r3, ee);
  }
  async updateAttachment(e3, r3, t3) {
    return m(this, e3, r3, t3, ee);
  }
  async applyEdits(e3, r3) {
    return h2(this, e3, r3);
  }
  on(e3, r3) {
    return super.on(e3, r3);
  }
  async createGraphicsSource(e3) {
    const { default: r3 } = await p(import("./FeatureLayerSource-CARLIMSS.js"), e3);
    return new r3({ layer: this }).load({ signal: e3 });
  }
  createQuery() {
    const e3 = E(this), r3 = this.sublayers.map((e4) => e4.subtypeCode);
    return e3.where = n2(`${this.subtypeField} IN (${r3.join(",")})`, this.definitionExpression), e3;
  }
  async deleteAttachments(e3, r3) {
    return b2(this, e3, r3, ee);
  }
  async fetchRecomputedExtents(e3) {
    return g(this, e3, ee);
  }
  findSublayerForFeature(e3) {
    const r3 = this.fieldsIndex.get(this.subtypeField), t3 = e3.attributes[r3.name];
    return this.findSublayerForSubtypeCode(t3);
  }
  findSublayerForSubtypeCode(e3) {
    return this._sublayerLookup.get(e3);
  }
  getFieldDomain(e3, r3) {
    return this._getLayerDomain(e3);
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  loadAll() {
    return t(this, (e3) => {
      e3(this.sublayers);
    });
  }
  async queryAttachments(e3, r3) {
    return j(this, e3, r3, ee);
  }
  async queryFeatures(e3, r3) {
    const t3 = await this.load(), s5 = b.from(e3) ?? t3.createQuery(), i4 = s5.outFields ?? [];
    i4.includes(this.subtypeField) || (i4.push(this.subtypeField), s5.outFields = i4);
    const o4 = await t3.source.queryFeatures(s5, r3);
    if (o4 == null ? void 0 : o4.features)
      for (const a7 of o4.features)
        a7.layer = a7.sourceLayer = this.findSublayerForFeature(a7);
    return o4;
  }
  async queryObjectIds(e3, r3) {
    return q(this, e3, r3, ee);
  }
  async queryFeatureCount(e3, r3) {
    return F(this, e3, r3, ee);
  }
  async queryExtent(e3, r3) {
    return I(this, e3, r3, ee);
  }
  async queryRelatedFeatures(e3, r3) {
    return P(this, e3, r3, ee);
  }
  async queryRelatedFeaturesCount(e3, r3) {
    return A2(this, e3, r3, ee);
  }
  write(e3, r3) {
    var _a;
    const { origin: s5, layerContainerType: i4, messages: o4 } = r3;
    if (this.isTable) {
      if ("web-scene" === s5 || "web-map" === s5 && "tables" !== i4)
        return o4 == null ? void 0 : o4.push(te(this, "using a table source cannot be written to web scenes and web maps")), null;
    } else if (this.loaded && "web-map" === s5 && "tables" === i4)
      return o4 == null ? void 0 : o4.push(te(this, "using a non-table source cannot be written to tables in web maps")), null;
    return ((_a = this.sublayers) == null ? void 0 : _a.length) ? super.write(e3, r3) : (o4 == null ? void 0 : o4.push(new s2("web-document-write:invalid-property", `Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' has invalid value for 'sublayers' property. 'sublayers' collection should contain at least one sublayer`, { layer: this })), null);
  }
  serviceSupportsSpatialReference(e3) {
    return !!this.loaded && e2(this, e3);
  }
  _getLayerDomain(e3) {
    const r3 = this.fieldsIndex.get(e3);
    return r3 ? r3.domain : null;
  }
  async _initLayerProperties(e3) {
    var _a;
    this._set("source", e3);
    const { sourceJSON: r3 } = e3;
    if (r3 && (this.sourceJSON = r3, this.read(r3, { origin: "service", url: this.parsedUrl })), this.isTable)
      throw new s2("subtype-grouplayer:unsupported-source", "SubtypeGroupLayer cannot be created using a layer with table source");
    if (!((_a = this.subtypes) == null ? void 0 : _a.length))
      throw new s2("subtype-grouplayer:missing-subtypes", "SubtypeGroupLayer must be created using a layer with subtypes");
    this._verifyFields(), p7(this.timeInfo, this.fieldsIndex);
  }
  async hasDataChanged() {
    return O2(this);
  }
  _verifyFields() {
    var _a, _b;
    const e3 = ((_a = this.parsedUrl) == null ? void 0 : _a.path) ?? "undefined";
    this.objectIdField || console.log("SubtypeGroupLayer: 'objectIdField' property is not defined (url: " + e3 + ")"), this.isTable || -1 !== e3.search(/\/FeatureServer\//i) || ((_b = this.fields) == null ? void 0 : _b.some((e4) => "geometry" === e4.type)) || console.log("SubtypeGroupLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: " + e3 + ")");
  }
  _handleSublayersChange(e3, r3) {
    r3 && (r3.forEach((e4) => {
      e4.parent = null;
    }), this.handles.remove("sublayers-owner"), this._sublayerLookup.clear()), e3 && (e3.forEach((e4) => {
      e4.parent = this, this._sublayerLookup.set(e4.subtypeCode, e4);
    }), this._sublayersCollectionChanged = false, this.handles.add([e3.on("after-add", ({ item: e4 }) => {
      e4.parent = this, this._sublayerLookup.set(e4.subtypeCode, e4);
    }), e3.on("after-remove", ({ item: e4 }) => {
      e4.parent = null, this._sublayerLookup.delete(e4.subtypeCode);
    }), e3.on("after-changes", () => {
      this._sublayersCollectionChanged = true;
    })], "sublayers-owner"));
  }
};
e([y({ readOnly: true })], ie.prototype, "createQueryVersion", null), e([y({ readOnly: true })], ie.prototype, "editingEnabled", null), e([y({ readOnly: true })], ie.prototype, "effectiveEditingEnabled", null), e([y({ ...se.fields, readOnly: true, json: { origins: { service: { read: true } }, read: false } })], ie.prototype, "fields", void 0), e([y(se.fieldsIndex)], ie.prototype, "fieldsIndex", void 0), e([y(v)], ie.prototype, "id", void 0), e([y({ type: ["show", "hide", "hide-children"] })], ie.prototype, "listMode", void 0), e([y({ value: "SubtypeGroupLayer", type: ["SubtypeGroupLayer"] })], ie.prototype, "operationalLayerType", void 0), e([y(se.outFields)], ie.prototype, "outFields", void 0), e([y({ readOnly: true })], ie.prototype, "parsedUrl", null), e([y()], ie.prototype, "source", null), e([y({ type: [c6], readOnly: true, json: { read: false, origins: { service: { read: true } } } })], ie.prototype, "subtypes", void 0), e([y({ type: V.ofType(Z), json: { origins: { service: { read: { source: "subtypes", reader: (e3, t3, s5) => {
  const i4 = e3.map(({ code: e4 }) => {
    const r3 = new Z({ subtypeCode: e4 });
    return r3.read(t3, s5), r3;
  });
  return new (V.ofType(Z))(i4);
} } } }, name: "layers", write: { overridePolicy(e3, r3, t3) {
  const s5 = this.originOf("sublayers"), i4 = r.PORTAL_ITEM;
  let o4 = true;
  if (n(s5) === i4 && n(t3.origin) > i4) {
    const r4 = e3.some((e4) => e4.hasUserOverrides());
    o4 = this._sublayersCollectionChanged || r4;
  }
  return { enabled: o4, ignoreOrigin: true };
} } } })], ie.prototype, "sublayers", void 0), e([y({ type: d })], ie.prototype, "timeInfo", void 0), e([y({ json: { origins: { "portal-item": { write: { ignoreOrigin: true, writerEnsuresNonNull: true } } } } })], ie.prototype, "title", void 0), e([o2("service", "title", ["name"])], ie.prototype, "readTitleFromService", null), e([y({ json: { read: false } })], ie.prototype, "type", void 0), ie = e([a2(re)], ie);
var oe = ie;

export {
  oe
};
//# sourceMappingURL=chunk-I7LOFSTE.js.map
