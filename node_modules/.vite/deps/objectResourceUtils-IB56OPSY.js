import {
  t as t11
} from "./chunk-GCOLLOWS.js";
import {
  A as A3,
  S as S3,
  a as a7,
  c as c6,
  l as l4
} from "./chunk-IFHU7PKI.js";
import {
  t as t10
} from "./chunk-XKYCNHCM.js";
import {
  Z as Z2,
  i as i7
} from "./chunk-OVTI6LJX.js";
import {
  R
} from "./chunk-LHVBN6TZ.js";
import {
  E as E4,
  V,
  a as a4,
  c as c5,
  d,
  d2,
  e as e11,
  e5 as e13,
  f as f5,
  h as h3,
  h2 as h4,
  i as i8,
  o2 as o6,
  o4 as o8,
  r as r7,
  r2 as r8,
  r3 as r9,
  t3 as t12,
  t4 as t13
} from "./chunk-K6WYK3GP.js";
import "./chunk-Z2RTGLQI.js";
import {
  W,
  _ as _4,
  a as a6,
  h as h5,
  o as o7
} from "./chunk-FE2XXDCR.js";
import "./chunk-PEYWLFGJ.js";
import {
  E as E3,
  T,
  e2 as e12
} from "./chunk-NE5U5H4D.js";
import "./chunk-EGAMWXMG.js";
import "./chunk-4CHHKHL6.js";
import {
  a as a5
} from "./chunk-Q6HUS3IU.js";
import "./chunk-V66LHQVK.js";
import {
  s as s8
} from "./chunk-6S2FCH6S.js";
import "./chunk-HLVYJZGQ.js";
import {
  n as n8
} from "./chunk-U3JB4DA4.js";
import {
  v
} from "./chunk-TKF7C3ZA.js";
import {
  _ as _3,
  s as s7
} from "./chunk-TTCCMCQH.js";
import {
  f as f4,
  l2,
  n2 as n5,
  n3 as n6,
  o3 as o4,
  o4 as o5,
  t as t5,
  t2 as t6,
  u as u4
} from "./chunk-DVELLWIV.js";
import {
  t as t8
} from "./chunk-OP5PHDH5.js";
import {
  a as a3,
  e as e9,
  i as i6,
  n as n7,
  t as t7,
  u as u5
} from "./chunk-MT6BDG6P.js";
import {
  r as r6
} from "./chunk-6ETVGJDF.js";
import {
  a as a2
} from "./chunk-QOWAKGE4.js";
import {
  H as H2
} from "./chunk-QOPVYP7U.js";
import {
  s as s6
} from "./chunk-VD2BLFWE.js";
import {
  O as O4
} from "./chunk-BN6X2OXK.js";
import "./chunk-3TMT4LDG.js";
import {
  t as t4,
  y as y2
} from "./chunk-L7P4URYM.js";
import "./chunk-FF5LS3YE.js";
import {
  D,
  G as G2,
  I,
  L as L2,
  O as O3,
  f as f3
} from "./chunk-BCDDCNQ2.js";
import {
  S as S2
} from "./chunk-2CQBXY7G.js";
import {
  e as e7
} from "./chunk-AEPMR2T7.js";
import {
  e as e5
} from "./chunk-EF6YPOUN.js";
import {
  n as n4,
  r as r5,
  u as u3
} from "./chunk-GXWNOUDM.js";
import {
  e as e6,
  o as o3,
  r as r4
} from "./chunk-AYMF6OMA.js";
import {
  E as E2,
  L,
  O as O2,
  c as c3,
  i as i3,
  q,
  u as u2,
  x,
  y
} from "./chunk-FJXAEGHD.js";
import "./chunk-WWUAHPIM.js";
import "./chunk-32JSK7KN.js";
import {
  e as e8
} from "./chunk-7X3AVCRM.js";
import {
  r as r3
} from "./chunk-AHAGGZUI.js";
import {
  e as e10,
  t as t9
} from "./chunk-D5NSNTGJ.js";
import "./chunk-OMDLZQUU.js";
import {
  l as l3
} from "./chunk-X5SMFNYP.js";
import {
  c as c4,
  i as i5
} from "./chunk-5KLICR5E.js";
import "./chunk-VZAEQ6CY.js";
import {
  g as g2,
  i as i4
} from "./chunk-SS33L3LC.js";
import "./chunk-X4Y5OF5X.js";
import {
  P as P2,
  h as h2
} from "./chunk-ZBWBCN2I.js";
import {
  G,
  H,
  h
} from "./chunk-KTSEQWMB.js";
import "./chunk-4CZO65BK.js";
import {
  _
} from "./chunk-UKJF25H6.js";
import "./chunk-5HAVROZG.js";
import "./chunk-MOPR7RFH.js";
import {
  A as A2,
  E,
  F,
  O2 as O,
  P,
  S,
  U,
  _2,
  e as e3,
  e2 as e4,
  f as f2,
  g,
  i as i2,
  n as n3,
  o as o2,
  p,
  r,
  r2,
  s as s5,
  t as t3,
  u2 as u,
  z
} from "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import {
  n as n2
} from "./chunk-WBSPL6CJ.js";
import {
  a
} from "./chunk-LQVUN6IS.js";
import "./chunk-3GSONYPC.js";
import "./chunk-SFV6XLDZ.js";
import "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import "./chunk-7A5C2EQ3.js";
import {
  e as e2
} from "./chunk-OYBXMT5R.js";
import {
  l
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import "./chunk-2YSHZRCT.js";
import {
  i,
  j
} from "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import {
  Z,
  tt
} from "./chunk-O3CHVGVF.js";
import {
  c as c2,
  f,
  s as s4,
  w
} from "./chunk-HNHXEGH2.js";
import {
  o,
  t
} from "./chunk-DWOEYHKS.js";
import {
  s2,
  s3
} from "./chunk-W2N7YT6I.js";
import "./chunk-I5JT24BO.js";
import {
  A,
  c2 as c,
  has,
  n2 as n,
  s2 as s,
  t2
} from "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/geometry/support/FloatArray.js
function t14(n12, t19 = false) {
  return n12 <= A ? t19 ? new Array(n12).fill(0) : new Array(n12) : new Float32Array(n12);
}

// node_modules/@arcgis/core/views/3d/glTF/internal/TextureTransformUtils.js
function r10(r15) {
  if (null == r15)
    return null;
  const f9 = null != r15.offset ? r15.offset : c4, l9 = null != r15.rotation ? r15.rotation : 0, c13 = null != r15.scale ? r15.scale : i5, u11 = t9(1, 0, 0, 0, 1, 0, f9[0], f9[1], 1), i12 = t9(Math.cos(l9), -Math.sin(l9), 0, Math.sin(l9), Math.cos(l9), 0, 0, 0, 1), m5 = t9(c13[0], 0, 0, 0, c13[1], 0, 0, 0, 1), e15 = e10();
  return i4(e15, i12, m5), i4(e15, u11, e15), e15;
}

// node_modules/@arcgis/core/views/3d/layers/graphics/ProcessedObjectResource.js
var s9 = class {
  constructor() {
    this.geometries = new Array(), this.materials = new Array(), this.textures = new Array();
  }
};
var t15 = class {
  constructor(t19, e15, r15) {
    this.name = t19, this.lodThreshold = e15, this.pivotOffset = r15, this.stageResources = new s9(), this.numberOfVertices = 0;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/AttributeArray.js
function o9(o16) {
  if (o16.length < A)
    return Array.from(o16);
  if (s(o16))
    return Float64Array.from(o16);
  if (!("BYTES_PER_ELEMENT" in o16))
    return Array.from(o16);
  switch (o16.BYTES_PER_ELEMENT) {
    case 1:
      return Uint8Array.from(o16);
    case 2:
      return c(o16) ? Uint16Array.from(o16) : Int16Array.from(o16);
    case 4:
      return Float32Array.from(o16);
    default:
      return Float64Array.from(o16);
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BoundingInfo.js
var o10 = class _o {
  constructor(i12, s15, o16, c13) {
    this.primitiveIndices = i12, this._numIndexPerPrimitive = s15, this.indices = o16, this.position = c13, this._children = void 0, s6(i12.length >= 1), s6(o16.length % this._numIndexPerPrimitive == 0), s6(o16.length >= i12.length * this._numIndexPerPrimitive), s6(3 === c13.size || 4 === c13.size);
    const { data: d4, size: l9 } = c13, m5 = i12.length;
    let u11 = l9 * o16[this._numIndexPerPrimitive * i12[0]];
    a8.clear(), a8.push(u11);
    const f9 = r(d4[u11], d4[u11 + 1], d4[u11 + 2]), x4 = t3(f9);
    for (let t19 = 0; t19 < m5; ++t19) {
      const s16 = this._numIndexPerPrimitive * i12[t19];
      for (let i13 = 0; i13 < this._numIndexPerPrimitive; ++i13) {
        u11 = l9 * o16[s16 + i13], a8.push(u11);
        let t20 = d4[u11];
        f9[0] = Math.min(t20, f9[0]), x4[0] = Math.max(t20, x4[0]), t20 = d4[u11 + 1], f9[1] = Math.min(t20, f9[1]), x4[1] = Math.max(t20, x4[1]), t20 = d4[u11 + 2], f9[2] = Math.min(t20, f9[2]), x4[2] = Math.max(t20, x4[2]);
      }
    }
    this.bbMin = f9, this.bbMax = x4;
    const P6 = A2(n3(), this.bbMin, this.bbMax, 0.5);
    this.radius = 0.5 * Math.max(Math.max(x4[0] - f9[0], x4[1] - f9[1]), x4[2] - f9[2]);
    let v6 = this.radius * this.radius;
    for (let t19 = 0; t19 < a8.length; ++t19) {
      u11 = a8.at(t19);
      const i13 = d4[u11] - P6[0], s16 = d4[u11 + 1] - P6[1], e15 = d4[u11 + 2] - P6[2], n12 = i13 * i13 + s16 * s16 + e15 * e15;
      if (n12 <= v6)
        continue;
      const r15 = Math.sqrt(n12), h10 = 0.5 * (r15 - this.radius);
      this.radius = this.radius + h10, v6 = this.radius * this.radius;
      const o17 = h10 / r15;
      P6[0] += i13 * o17, P6[1] += s16 * o17, P6[2] += e15 * o17;
    }
    this.center = P6, a8.clear();
  }
  getChildren() {
    if (this._children || p(this.bbMin, this.bbMax) <= 1)
      return this._children;
    const i12 = A2(n3(), this.bbMin, this.bbMax, 0.5), e15 = this.primitiveIndices.length, n12 = new Uint8Array(e15), h10 = new Array(8);
    for (let t19 = 0; t19 < 8; ++t19)
      h10[t19] = 0;
    const { data: a12, size: c13 } = this.position;
    for (let t19 = 0; t19 < e15; ++t19) {
      let s15 = 0;
      const e16 = this._numIndexPerPrimitive * this.primitiveIndices[t19];
      let r15 = c13 * this.indices[e16], o16 = a12[r15], d5 = a12[r15 + 1], l10 = a12[r15 + 2];
      for (let i13 = 1; i13 < this._numIndexPerPrimitive; ++i13) {
        r15 = c13 * this.indices[e16 + i13];
        const t20 = a12[r15], s16 = a12[r15 + 1], n13 = a12[r15 + 2];
        t20 < o16 && (o16 = t20), s16 < d5 && (d5 = s16), n13 < l10 && (l10 = n13);
      }
      o16 < i12[0] && (s15 |= 1), d5 < i12[1] && (s15 |= 2), l10 < i12[2] && (s15 |= 4), n12[t19] = s15, ++h10[s15];
    }
    let d4 = 0;
    for (let t19 = 0; t19 < 8; ++t19)
      h10[t19] > 0 && ++d4;
    if (d4 < 2)
      return;
    const l9 = new Array(8);
    for (let t19 = 0; t19 < 8; ++t19)
      l9[t19] = h10[t19] > 0 ? new Uint32Array(h10[t19]) : void 0;
    for (let t19 = 0; t19 < 8; ++t19)
      h10[t19] = 0;
    for (let t19 = 0; t19 < e15; ++t19) {
      const i13 = n12[t19];
      l9[i13][h10[i13]++] = this.primitiveIndices[t19];
    }
    this._children = new Array();
    for (let t19 = 0; t19 < 8; ++t19)
      void 0 !== l9[t19] && this._children.push(new _o(l9[t19], this._numIndexPerPrimitive, this.indices, this.position));
    return this._children;
  }
  static prune() {
    a8.prune();
  }
};
var a8 = new l({ deallocator: null });

// node_modules/@arcgis/core/geometry/support/triangle.js
function j2(t19) {
  return t19 ? { p0: t3(t19.p0), p1: t3(t19.p1), p2: t3(t19.p2) } : { p0: n3(), p1: n3(), p2: n3() };
}
function w2(t19, n12, o16) {
  return e4(O5, n12, t19), e4(V2, o16, t19), s5(_2(O5, O5, V2)) / 2;
}
var M2 = new s7(v);
var x2 = new s7(() => j2());
var O5 = n3();
var V2 = n3();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/geometryDataUtils.js
function c8(r15, o16, c13) {
  if (!r15 || !o16)
    return false;
  const { size: a12, data: f9 } = r15;
  o2(c13, 0, 0, 0), o2(g3, 0, 0, 0);
  let m5 = 0, h10 = 0;
  for (let p6 = 0; p6 < o16.length - 2; p6 += 3) {
    const r16 = o16[p6] * a12, j6 = o16[p6 + 1] * a12, d4 = o16[p6 + 2] * a12;
    o2(i9, f9[r16], f9[r16 + 1], f9[r16 + 2]), o2(u6, f9[j6], f9[j6 + 1], f9[j6 + 2]), o2(l5, f9[d4], f9[d4 + 1], f9[d4 + 2]);
    const z5 = w2(i9, u6, l5);
    z5 ? (u(i9, i9, u6), u(i9, i9, l5), g(i9, i9, 1 / 3 * z5), u(c13, c13, i9), m5 += z5) : (u(g3, g3, i9), u(g3, g3, u6), u(g3, g3, l5), h10 += 3);
  }
  return (0 !== h10 || 0 !== m5) && (0 !== m5 ? (g(c13, c13, 1 / m5), true) : 0 !== h10 && (g(c13, g3, 1 / h10), true));
}
function a9(n12, r15, o16) {
  if (!n12 || !r15)
    return false;
  const { size: s15, data: c13 } = n12;
  o2(o16, 0, 0, 0);
  let a12 = -1, f9 = 0;
  for (let t19 = 0; t19 < r15.length; t19++) {
    const n13 = r15[t19] * s15;
    a12 !== n13 && (o16[0] += c13[n13], o16[1] += c13[n13 + 1], o16[2] += c13[n13 + 2], f9++), a12 = n13;
  }
  return f9 > 1 && g(o16, o16, 1 / f9), f9 > 0;
}
function f6(o16, s15, c13, a12) {
  if (!o16)
    return false;
  o2(a12, 0, 0, 0), o2(g3, 0, 0, 0);
  let f9 = 0, l9 = 0;
  const { size: m5, data: h10 } = o16, p6 = s15 ? s15.length - 1 : h10.length / m5 - 1, j6 = p6 + (c13 ? 2 : 0);
  for (let t19 = 0; t19 < j6; t19 += 2) {
    const o17 = t19 < p6 ? t19 : p6, c14 = t19 < p6 ? t19 + 1 : 0, j7 = (s15 ? s15[o17] : o17) * m5, d4 = (s15 ? s15[c14] : c14) * m5;
    i9[0] = h10[j7], i9[1] = h10[j7 + 1], i9[2] = h10[j7 + 2], u6[0] = h10[d4], u6[1] = h10[d4 + 1], u6[2] = h10[d4 + 2], g(i9, u(i9, i9, u6), 0.5);
    const z5 = U(i9, u6);
    z5 > 0 ? (u(a12, a12, g(i9, i9, z5)), f9 += z5) : 0 === f9 && (u(g3, g3, i9), l9++);
  }
  return 0 !== f9 ? (g(a12, a12, 1 / f9), true) : 0 !== l9 && (g(a12, g3, 1 / l9), true);
}
var i9 = n3();
var u6 = n3();
var l5 = n3();
var g3 = n3();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Object3DStateID.js
var r11 = class {
  constructor(r15) {
    this.channel = r15, this.id = e2();
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/renderers/utils.js
function n9(t19, e15) {
  return null == t19 && (t19 = []), t19.push(e15), t19;
}
function r12(t19, e15) {
  if (null == t19)
    return null;
  const n12 = t19.filter((t20) => t20 !== e15);
  return 0 === n12.length ? null : n12;
}
var l6 = n3();
var o11 = new Float32Array(6);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Geometry.js
var b = class _b extends r7 {
  constructor(t19, e15, i12 = [], r15 = null, o16 = e11.Mesh, h10 = null, a12 = -1) {
    super(), this.material = t19, this.mapPositions = r15, this.type = o16, this.objectAndLayerIdColor = h10, this.edgeIndicesLength = a12, this.visible = true, this._vertexAttributes = /* @__PURE__ */ new Map(), this._indices = /* @__PURE__ */ new Map(), this._boundingInfo = null;
    for (const [s15, n12] of e15)
      n12 && this._vertexAttributes.set(s15, { ...n12 });
    if (null == i12 || 0 === i12.length) {
      const t20 = p2(this._vertexAttributes), e16 = y2(t20);
      this.edgeIndicesLength = this.edgeIndicesLength < 0 ? t20 : this.edgeIndicesLength;
      for (const i13 of this._vertexAttributes.keys())
        this._indices.set(i13, e16);
    } else
      for (const [s15, u11] of i12)
        u11 && (this._indices.set(s15, t4(u11)), s15 === O4.POSITION && (this.edgeIndicesLength = this.edgeIndicesLength < 0 ? this._indices.get(s15).length : this.edgeIndicesLength));
  }
  instantiate(t19 = {}) {
    const e15 = new _b(t19.material || this.material, [], void 0, this.mapPositions, this.type, this.objectAndLayerIdColor, this.edgeIndicesLength);
    return this._vertexAttributes.forEach((t20, i12) => {
      t20.exclusive = false, e15._vertexAttributes.set(i12, t20);
    }), this._indices.forEach((t20, i12) => e15._indices.set(i12, t20)), e15._boundingInfo = this._boundingInfo, e15.transformation = t19.transformation || this.transformation, e15;
  }
  get vertexAttributes() {
    return this._vertexAttributes;
  }
  getMutableAttribute(t19) {
    let e15 = this._vertexAttributes.get(t19);
    return e15 && !e15.exclusive && (e15 = { ...e15, exclusive: true, data: o9(e15.data) }, this._vertexAttributes.set(t19, e15)), e15;
  }
  setAttributeData(t19, e15) {
    const i12 = this._vertexAttributes.get(t19);
    i12 && this._vertexAttributes.set(t19, { ...i12, exclusive: true, data: e15 });
  }
  get indices() {
    return this._indices;
  }
  get indexCount() {
    const t19 = this._indices.values().next().value;
    return t19 ? t19.length : 0;
  }
  get faceCount() {
    return this.indexCount / 3;
  }
  get boundingInfo() {
    return null == this._boundingInfo && (this._boundingInfo = this._calculateBoundingInfo()), this._boundingInfo;
  }
  computeAttachmentOrigin(t19) {
    return !!(this.type === e11.Mesh ? this._computeAttachmentOriginTriangles(t19) : this.type === e11.Line ? this._computeAttachmentOriginLines(t19) : this._computeAttachmentOriginPoints(t19)) && (null != this._transformation && O(t19, t19, this._transformation), true);
  }
  _computeAttachmentOriginTriangles(t19) {
    const e15 = this.indices.get(O4.POSITION), i12 = this.vertexAttributes.get(O4.POSITION);
    return c8(i12, e15, t19);
  }
  _computeAttachmentOriginLines(t19) {
    const e15 = this.vertexAttributes.get(O4.POSITION), i12 = this.indices.get(O4.POSITION);
    return f6(e15, i12, i12 && v2(this.material.parameters, e15, i12), t19);
  }
  _computeAttachmentOriginPoints(t19) {
    const e15 = this.indices.get(O4.POSITION), i12 = this.vertexAttributes.get(O4.POSITION);
    return a9(i12, e15, t19);
  }
  invalidateBoundingInfo() {
    this._boundingInfo = null;
  }
  _calculateBoundingInfo() {
    const t19 = this.indices.get(O4.POSITION), e15 = this.vertexAttributes.get(O4.POSITION);
    if (!t19 || 0 === t19.length || !e15)
      return null;
    const i12 = this.type === e11.Mesh ? 3 : 1;
    s6(t19.length % i12 == 0, "Indexing error: " + t19.length + " not divisible by " + i12);
    const n12 = y2(t19.length / i12);
    return new o10(n12, i12, t19, e15);
  }
  get transformation() {
    return this._transformation ?? o3;
  }
  set transformation(i12) {
    this._transformation = i12 && i12 !== o3 ? r4(i12) : null;
  }
  get shaderTransformation() {
    return null != this._shaderTransformer ? this._shaderTransformer(this.transformation) : this.transformation;
  }
  get shaderTransformer() {
    return this._shaderTransformer;
  }
  set shaderTransformer(t19) {
    this._shaderTransformer = t19;
  }
  get hasVolatileTransformation() {
    return null != this._shaderTransformer;
  }
  addHighlight() {
    const t19 = new r11(t7.Highlight);
    return this.highlights = n9(this.highlights, t19), t19;
  }
  removeHighlight(t19) {
    this.highlights = r12(this.highlights, t19);
  }
};
function p2(t19) {
  const e15 = t19.values().next().value;
  return null == e15 ? 0 : e15.data.length / e15.size;
}
function v2(t19, e15, i12) {
  return !(!("isClosed" in t19) || !t19.isClosed) && (i12 ? i12.length > 2 : e15.data.length > 6);
}

// node_modules/@arcgis/core/libs/basisu/BasisU.js
function t17() {
  if (null == s10) {
    const t19 = (t20) => a(`esri/libs/basisu/${t20}`);
    s10 = import("./basis_transcoder-LFZYQN2W.js").then((e15) => e15.b).then(({ default: e15 }) => e15({ locateFile: t19 }).then((e16) => (e16.initializeBasis(), delete e16.then, e16)));
  }
  return s10;
}
var s10;

// node_modules/@arcgis/core/libs/basisu/TextureFormat.js
var _5;
!function(_8) {
  _8[_8.ETC1_RGB = 0] = "ETC1_RGB", _8[_8.ETC2_RGBA = 1] = "ETC2_RGBA", _8[_8.BC1_RGB = 2] = "BC1_RGB", _8[_8.BC3_RGBA = 3] = "BC3_RGBA", _8[_8.BC4_R = 4] = "BC4_R", _8[_8.BC5_RG = 5] = "BC5_RG", _8[_8.BC7_M6_RGB = 6] = "BC7_M6_RGB", _8[_8.BC7_M5_RGBA = 7] = "BC7_M5_RGBA", _8[_8.PVRTC1_4_RGB = 8] = "PVRTC1_4_RGB", _8[_8.PVRTC1_4_RGBA = 9] = "PVRTC1_4_RGBA", _8[_8.ASTC_4x4_RGBA = 10] = "ASTC_4x4_RGBA", _8[_8.ATC_RGB = 11] = "ATC_RGB", _8[_8.ATC_RGBA = 12] = "ATC_RGBA", _8[_8.FXT1_RGB = 17] = "FXT1_RGB", _8[_8.PVRTC2_4_RGB = 18] = "PVRTC2_4_RGB", _8[_8.PVRTC2_4_RGBA = 19] = "PVRTC2_4_RGBA", _8[_8.ETC2_EAC_R11 = 20] = "ETC2_EAC_R11", _8[_8.ETC2_EAC_RG11 = 21] = "ETC2_EAC_RG11", _8[_8.RGBA32 = 13] = "RGBA32", _8[_8.RGB565 = 14] = "RGB565", _8[_8.BGR565 = 15] = "BGR565", _8[_8.RGBA4444 = 16] = "RGBA4444";
}(_5 || (_5 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BasisUtil.js
var l7 = null;
var o12 = null;
async function g4() {
  return null == o12 && (o12 = t17(), l7 = await o12), o12;
}
function u7(e15, t19) {
  if (null == l7)
    return e15.byteLength;
  const n12 = new l7.BasisFile(new Uint8Array(e15)), s15 = E5(n12) ? m2(n12.getNumLevels(0), n12.getHasAlpha(), n12.getImageWidth(0, 0), n12.getImageHeight(0, 0), t19) : 0;
  return n12.close(), n12.delete(), s15;
}
function c9(e15, t19) {
  if (null == l7)
    return e15.byteLength;
  const n12 = new l7.KTX2File(new Uint8Array(e15)), s15 = T2(n12) ? m2(n12.getLevels(), n12.getHasAlpha(), n12.getWidth(), n12.getHeight(), t19) : 0;
  return n12.close(), n12.delete(), s15;
}
function m2(e15, t19, s15, r15, i12) {
  const l9 = E3(t19 ? f3.COMPRESSED_RGBA8_ETC2_EAC : f3.COMPRESSED_RGB8_ETC2), o16 = i12 && e15 > 1 ? (4 ** e15 - 1) / (3 * 4 ** (e15 - 1)) : 1;
  return Math.ceil(s15 * r15 * l9 * o16);
}
function E5(e15) {
  return e15.getNumImages() >= 1 && !e15.isUASTC();
}
function T2(e15) {
  return e15.getFaces() >= 1 && e15.isETC1S();
}
async function h6(e15, t19, n12) {
  null == l7 && (l7 = await g4());
  const s15 = new l7.BasisFile(new Uint8Array(n12));
  if (!E5(s15))
    return null;
  s15.startTranscoding();
  const r15 = p3(e15, t19, s15.getNumLevels(0), s15.getHasAlpha(), s15.getImageWidth(0, 0), s15.getImageHeight(0, 0), (e16, t20) => s15.getImageTranscodedSizeInBytes(0, e16, t20), (e16, t20, n13) => s15.transcodeImage(n13, 0, e16, t20, 0, 0));
  return s15.close(), s15.delete(), r15;
}
async function _6(e15, t19, n12) {
  null == l7 && (l7 = await g4());
  const s15 = new l7.KTX2File(new Uint8Array(n12));
  if (!T2(s15))
    return null;
  s15.startTranscoding();
  const r15 = p3(e15, t19, s15.getLevels(), s15.getHasAlpha(), s15.getWidth(), s15.getHeight(), (e16, t20) => s15.getImageTranscodedSizeInBytes(e16, 0, 0, t20), (e16, t20, n13) => s15.transcodeImage(n13, e16, 0, 0, t20, 0, -1, -1));
  return s15.close(), s15.delete(), r15;
}
function p3(e15, a12, l9, o16, g7, u11, c13, m5) {
  const { compressedTextureETC: E11, compressedTextureS3TC: T6 } = e15.capabilities, [h10, _8] = E11 ? o16 ? [_5.ETC2_RGBA, f3.COMPRESSED_RGBA8_ETC2_EAC] : [_5.ETC1_RGB, f3.COMPRESSED_RGB8_ETC2] : T6 ? o16 ? [_5.BC3_RGBA, f3.COMPRESSED_RGBA_S3TC_DXT5_EXT] : [_5.BC1_RGB, f3.COMPRESSED_RGB_S3TC_DXT1_EXT] : [_5.RGBA32, G2.RGBA], p6 = a12.hasMipmap ? l9 : Math.min(1, l9), A6 = [];
  for (let t19 = 0; t19 < p6; t19++)
    A6.push(new Uint8Array(c13(t19, h10))), m5(t19, h10, A6[t19]);
  return a12.internalFormat = _8, a12.hasMipmap = A6.length > 1, a12.samplingMode = a12.hasMipmap ? L2.LINEAR_MIPMAP_LINEAR : L2.LINEAR, a12.width = g7, a12.height = u11, new T(e15, a12, { type: "compressed", levels: A6 });
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/DDSUtil.js
var o13 = s2.getLogger("esri.views.3d.webgl-engine.lib.DDSUtil");
var a10 = 542327876;
var i10 = 131072;
var l8 = 4;
function s11(e15) {
  return e15.charCodeAt(0) + (e15.charCodeAt(1) << 8) + (e15.charCodeAt(2) << 16) + (e15.charCodeAt(3) << 24);
}
function u8(e15) {
  return String.fromCharCode(255 & e15, e15 >> 8 & 255, e15 >> 16 & 255, e15 >> 24 & 255);
}
var c10 = s11("DXT1");
var h7 = s11("DXT3");
var m3 = s11("DXT5");
var d3 = 31;
var p4 = 0;
var g5 = 1;
var D2 = 2;
var C = 3;
var f7 = 4;
var w3 = 7;
var T3 = 20;
var _7 = 21;
function E6(e15, r15, o16) {
  const a12 = S4(o16, r15.hasMipmap ?? false);
  if (null == a12)
    throw new Error("DDS texture data is null");
  const { textureData: i12, internalFormat: l9, width: s15, height: u11 } = a12;
  return r15.samplingMode = i12.levels.length > 1 ? L2.LINEAR_MIPMAP_LINEAR : L2.LINEAR, r15.hasMipmap = i12.levels.length > 1, r15.internalFormat = l9, r15.width = s15, r15.height = u11, new T(e15, r15, i12);
}
function S4(e15, t19) {
  const n12 = new Int32Array(e15, 0, d3);
  if (n12[p4] !== a10)
    return o13.error("Invalid magic number in DDS header"), null;
  if (!(n12[T3] & l8))
    return o13.error("Unsupported format, must contain a FourCC code"), null;
  const s15 = n12[_7];
  let E11, S7;
  switch (s15) {
    case c10:
      E11 = 8, S7 = f3.COMPRESSED_RGB_S3TC_DXT1_EXT;
      break;
    case h7:
      E11 = 16, S7 = f3.COMPRESSED_RGBA_S3TC_DXT3_EXT;
      break;
    case m3:
      E11 = 16, S7 = f3.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      break;
    default:
      return o13.error("Unsupported FourCC code:", u8(s15)), null;
  }
  let A6 = 1, M5 = n12[f7], x4 = n12[C];
  0 == (3 & M5) && 0 == (3 & x4) || (o13.warn("Rounding up compressed texture size to nearest multiple of 4."), M5 = M5 + 3 & -4, x4 = x4 + 3 & -4);
  const R3 = M5, X2 = x4;
  let b3, I4;
  n12[D2] & i10 && false !== t19 && (A6 = Math.max(1, n12[w3]));
  let v6 = n12[g5] + 4;
  const F2 = [];
  for (let r15 = 0; r15 < A6; ++r15)
    I4 = (M5 + 3 >> 2) * (x4 + 3 >> 2) * E11, b3 = new Uint8Array(e15, v6, I4), F2.push(b3), v6 += I4, M5 = Math.max(1, M5 >> 1), x4 = Math.max(1, x4 >> 1);
  return { textureData: { type: "compressed", levels: F2 }, internalFormat: S7, width: R3, height: X2 };
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Texture.js
var w4 = class extends r7 {
  constructor(t19, r15) {
    super(), this._data = t19, this.type = e11.Texture, this._glTexture = null, this._loadingPromise = null, this._loadingController = null, this.events = new n2(), this.parameters = r15 || {}, this.parameters.mipmap = false !== this.parameters.mipmap, this.parameters.noUnpackFlip = this.parameters.noUnpackFlip || false, this.parameters.preMultiplyAlpha = this.parameters.preMultiplyAlpha || false, this.parameters.wrap = this.parameters.wrap || { s: D.REPEAT, t: D.REPEAT }, this._startPreload(t19);
  }
  _startPreload(t19) {
    null != t19 && (t19 instanceof HTMLVideoElement ? this._startPreloadVideoElement(t19) : t19 instanceof HTMLImageElement && this._startPreloadImageElement(t19));
  }
  _startPreloadVideoElement(t19) {
    if (!(Z(t19.src) || "auto" === t19.preload && t19.crossOrigin)) {
      t19.preload = "auto", t19.crossOrigin = "anonymous";
      const e15 = !t19.paused;
      if (t19.src = t19.src, e15 && t19.autoplay) {
        const e16 = () => {
          t19.removeEventListener("canplay", e16), t19.play();
        };
        t19.addEventListener("canplay", e16);
      }
    }
  }
  _startPreloadImageElement(t19) {
    tt(t19.src) || Z(t19.src) || t19.crossOrigin || (t19.crossOrigin = "anonymous", t19.src = t19.src);
  }
  dispose() {
    this._data = void 0;
  }
  _createDescriptor(t19) {
    const e15 = new e12();
    return e15.wrapMode = this.parameters.wrap ?? D.REPEAT, e15.flipped = !this.parameters.noUnpackFlip, e15.samplingMode = this.parameters.mipmap ? L2.LINEAR_MIPMAP_LINEAR : L2.LINEAR, e15.hasMipmap = !!this.parameters.mipmap, e15.preMultiplyAlpha = !!this.parameters.preMultiplyAlpha, e15.maxAnisotropy = this.parameters.maxAnisotropy ?? (this.parameters.mipmap ? t19.parameters.maxMaxAnisotropy : 1), e15;
  }
  get glTexture() {
    return this._glTexture;
  }
  get memoryEstimate() {
    var _a;
    return ((_a = this._glTexture) == null ? void 0 : _a.gpuMemoryUsage) || H3(this._data, this.parameters);
  }
  load(t19) {
    if (null != this._glTexture)
      return this._glTexture;
    if (this._loadingPromise)
      return this._loadingPromise;
    const e15 = this._data;
    return null == e15 ? (this._glTexture = new T(t19, this._createDescriptor(t19), null), this._glTexture) : "string" == typeof e15 ? this._loadFromURL(t19, e15) : e15 instanceof Image ? this._loadFromImageElement(t19, e15) : e15 instanceof HTMLVideoElement ? this._loadFromVideoElement(t19, e15) : e15 instanceof ImageData || e15 instanceof HTMLCanvasElement ? this._loadFromImage(t19, e15) : (n(e15) || t2(e15)) && this.parameters.encoding === u5.DDS_ENCODING ? (this._data = void 0, this._loadFromDDSData(t19, e15)) : (n(e15) || t2(e15)) && this.parameters.encoding === u5.KTX2_ENCODING ? (this._data = void 0, this._loadFromKTX2(t19, e15)) : (n(e15) || t2(e15)) && this.parameters.encoding === u5.BASIS_ENCODING ? (this._data = void 0, this._loadFromBasis(t19, e15)) : t2(e15) ? this._loadFromPixelData(t19, e15) : n(e15) ? this._loadFromPixelData(t19, new Uint8Array(e15)) : null;
  }
  get requiresFrameUpdates() {
    return this._data instanceof HTMLVideoElement;
  }
  frameUpdate(t19) {
    return this._data instanceof HTMLVideoElement && null != this._glTexture ? this._data.readyState < C2.HAVE_CURRENT_DATA || t19 === this._data.currentTime ? t19 : (this._glTexture.setData(this._data), this._glTexture.descriptor.hasMipmap && this._glTexture.generateMipmap(), this.parameters.updateCallback && this.parameters.updateCallback(), this._data.currentTime) : t19;
  }
  _loadFromDDSData(t19, e15) {
    return this._glTexture = E6(t19, this._createDescriptor(t19), e15), this._glTexture;
  }
  _loadFromKTX2(t19, e15) {
    return this._loadAsync(() => _6(t19, this._createDescriptor(t19), e15).then((t20) => (this._glTexture = t20, t20)));
  }
  _loadFromBasis(t19, e15) {
    return this._loadAsync(() => h6(t19, this._createDescriptor(t19), e15).then((t20) => (this._glTexture = t20, t20)));
  }
  _loadFromPixelData(t19, e15) {
    s6(this.parameters.width > 0 && this.parameters.height > 0);
    const r15 = this._createDescriptor(t19);
    return r15.pixelFormat = 1 === this.parameters.components ? G2.LUMINANCE : 3 === this.parameters.components ? G2.RGB : G2.RGBA, r15.width = this.parameters.width ?? 0, r15.height = this.parameters.height ?? 0, this._glTexture = new T(t19, r15, e15), this._glTexture;
  }
  _loadFromURL(t19, e15) {
    return this._loadAsync(async (r15) => {
      const a12 = await t11(e15, { signal: r15 });
      return s4(r15), this._loadFromImage(t19, a12);
    });
  }
  _loadFromImageElement(t19, e15) {
    return e15.complete ? this._loadFromImage(t19, e15) : this._loadAsync(async (r15) => {
      const a12 = await i(e15, e15.src, false, r15);
      return s4(r15), this._loadFromImage(t19, a12);
    });
  }
  _loadFromVideoElement(t19, e15) {
    return e15.readyState >= C2.HAVE_CURRENT_DATA ? this._loadFromImage(t19, e15) : this._loadFromVideoElementAsync(t19, e15);
  }
  _loadFromVideoElementAsync(e15, r15) {
    return this._loadAsync((s15) => new Promise((n12, l9) => {
      const m5 = () => {
        r15.removeEventListener("loadeddata", h10), r15.removeEventListener("error", p6), o(d4);
      }, h10 = () => {
        r15.readyState >= C2.HAVE_CURRENT_DATA && (m5(), n12(this._loadFromImage(e15, r15)));
      }, p6 = (e16) => {
        m5(), l9(e16 || new s3("Failed to load video"));
      };
      r15.addEventListener("loadeddata", h10), r15.addEventListener("error", p6);
      const d4 = w(s15, () => p6(c2()));
    }));
  }
  _loadFromImage(t19, e15) {
    const r15 = N(e15);
    this.parameters.width = r15.width, this.parameters.height = r15.height;
    const a12 = this._createDescriptor(t19);
    return a12.pixelFormat = 3 === this.parameters.components ? G2.RGB : G2.RGBA, a12.width = r15.width, a12.height = r15.height, this._glTexture = new T(t19, a12, e15), this._glTexture;
  }
  _loadAsync(t19) {
    const e15 = new AbortController();
    this._loadingController = e15;
    const r15 = t19(e15.signal);
    this._loadingPromise = r15;
    const a12 = () => {
      this._loadingController === e15 && (this._loadingController = null), this._loadingPromise === r15 && (this._loadingPromise = null);
    };
    return r15.then(a12, a12), r15;
  }
  unload() {
    if (this._glTexture = t(this._glTexture), null != this._loadingController) {
      const t19 = this._loadingController;
      this._loadingController = null, this._loadingPromise = null, t19.abort();
    }
    this.events.emit("unloaded");
  }
};
function H3(t19, e15) {
  if (null == t19)
    return 0;
  if (n(t19) || t2(t19))
    return e15.encoding === u5.KTX2_ENCODING ? c9(t19, !!e15.mipmap) : e15.encoding === u5.BASIS_ENCODING ? u7(t19, !!e15.mipmap) : t19.byteLength;
  const { width: r15, height: a12 } = t19 instanceof Image || t19 instanceof ImageData || t19 instanceof HTMLCanvasElement || t19 instanceof HTMLVideoElement ? N(t19) : e15;
  return (e15.mipmap ? 4 / 3 : 1) * r15 * a12 * (e15.components || 4) || 0;
}
function N(t19) {
  return t19 instanceof HTMLVideoElement ? { width: t19.videoWidth, height: t19.videoHeight } : t19;
}
var C2;
!function(t19) {
  t19[t19.HAVE_NOTHING = 0] = "HAVE_NOTHING", t19[t19.HAVE_METADATA = 1] = "HAVE_METADATA", t19[t19.HAVE_CURRENT_DATA = 2] = "HAVE_CURRENT_DATA", t19[t19.HAVE_FUTURE_DATA = 3] = "HAVE_FUTURE_DATA", t19[t19.HAVE_ENOUGH_DATA = 4] = "HAVE_ENOUGH_DATA";
}(C2 || (C2 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderSlot.js
var E7;
!function(E11) {
  E11[E11.INTEGRATED_MESH = 0] = "INTEGRATED_MESH", E11[E11.OPAQUE_TERRAIN = 1] = "OPAQUE_TERRAIN", E11[E11.OPAQUE_MATERIAL = 2] = "OPAQUE_MATERIAL", E11[E11.TRANSPARENT_MATERIAL = 3] = "TRANSPARENT_MATERIAL", E11[E11.TRANSPARENT_TERRAIN = 4] = "TRANSPARENT_TERRAIN", E11[E11.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL = 5] = "TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL", E11[E11.OCCLUDED_TERRAIN = 6] = "OCCLUDED_TERRAIN", E11[E11.OCCLUDER_MATERIAL = 7] = "OCCLUDER_MATERIAL", E11[E11.TRANSPARENT_OCCLUDER_MATERIAL = 8] = "TRANSPARENT_OCCLUDER_MATERIAL", E11[E11.OCCLUSION_PIXELS = 9] = "OCCLUSION_PIXELS", E11[E11.POSTPROCESSING_ENVIRONMENT_OPAQUE = 10] = "POSTPROCESSING_ENVIRONMENT_OPAQUE", E11[E11.POSTPROCESSING_ENVIRONMENT_TRANSPARENT = 11] = "POSTPROCESSING_ENVIRONMENT_TRANSPARENT", E11[E11.LASERLINES = 12] = "LASERLINES", E11[E11.LASERLINES_CONTRAST_CONTROL = 13] = "LASERLINES_CONTRAST_CONTROL", E11[E11.HUD_MATERIAL = 14] = "HUD_MATERIAL", E11[E11.LABEL_MATERIAL = 15] = "LABEL_MATERIAL", E11[E11.LINE_CALLOUTS = 16] = "LINE_CALLOUTS", E11[E11.LINE_CALLOUTS_HUD_DEPTH = 17] = "LINE_CALLOUTS_HUD_DEPTH", E11[E11.DRAPED_MATERIAL = 18] = "DRAPED_MATERIAL", E11[E11.DRAPED_WATER = 19] = "DRAPED_WATER", E11[E11.VOXEL = 20] = "VOXEL", E11[E11.MAX_SLOTS = 21] = "MAX_SLOTS";
}(E7 || (E7 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/verticalOffsetUtils.js
var M3 = class {
  constructor(t19 = 0) {
    this.offset = t19, this.tmpVertex = n3();
  }
  applyToVertex(t19, s15, e15) {
    const i12 = t19 + this.localOrigin[0], r15 = s15 + this.localOrigin[1], a12 = e15 + this.localOrigin[2], o16 = this.offset / Math.sqrt(i12 * i12 + r15 * r15 + a12 * a12);
    return this.tmpVertex[0] = t19 + i12 * o16, this.tmpVertex[1] = s15 + r15 * o16, this.tmpVertex[2] = e15 + a12 * o16, this.tmpVertex;
  }
  applyToAabb(t19) {
    for (let r15 = 0; r15 < 3; ++r15)
      v3[r15] = t19[0 + r15] + this.localOrigin[r15], O6[r15] = t19[3 + r15] + this.localOrigin[r15], z2[r15] = v3[r15];
    const s15 = this.applyToVertex(v3[0], v3[1], v3[2]);
    for (let r15 = 0; r15 < 3; ++r15)
      t19[r15] = s15[r15], t19[r15 + 3] = s15[r15];
    const e15 = (s16) => {
      const e16 = this.applyToVertex(s16[0], s16[1], s16[2]);
      for (let i13 = 0; i13 < 3; ++i13)
        t19[i13] = Math.min(t19[i13], e16[i13]), t19[i13 + 3] = Math.max(t19[i13 + 3], e16[i13]);
    };
    for (let r15 = 1; r15 < 8; ++r15) {
      for (let t20 = 0; t20 < 3; ++t20)
        z2[t20] = 0 == (r15 & 1 << t20) ? v3[t20] : O6[t20];
      e15(z2);
    }
    let i12 = 0;
    for (let r15 = 0; r15 < 3; ++r15) {
      v3[r15] * O6[r15] < 0 && (i12 |= 1 << r15);
    }
    if (0 !== i12 && 7 !== i12) {
      for (let r15 = 0; r15 < 8; ++r15)
        if (0 == (i12 & r15)) {
          for (let t20 = 0; t20 < 3; ++t20)
            z2[t20] = 0 != (i12 & 1 << t20) ? 0 : 0 != (r15 & 1 << t20) ? v3[t20] : O6[t20];
          e15(z2);
        }
    }
    for (let r15 = 0; r15 < 3; ++r15)
      t19[r15] -= this.localOrigin[r15], t19[r15 + 3] -= this.localOrigin[r15];
    return t19;
  }
};
var v3 = n3();
var O6 = n3();
var z2 = n3();
var T4 = class {
  constructor(t19 = 0) {
    this.componentLocalOriginLength = 0, this._tmpVertex = n3(), this._mbs = _3(), this._obb = { center: n3(), halfSize: n8(), quaternion: null }, this._totalOffset = 0, this._offset = 0, this._resetOffset(t19);
  }
  _resetOffset(t19) {
    this._offset = t19, this._totalOffset = t19;
  }
  set offset(t19) {
    this._resetOffset(t19);
  }
  get offset() {
    return this._offset;
  }
  set componentOffset(t19) {
    this._totalOffset = this._offset + t19;
  }
  set localOrigin(t19) {
    this.componentLocalOriginLength = Math.sqrt(t19[0] * t19[0] + t19[1] * t19[1] + t19[2] * t19[2]);
  }
  applyToVertex(t19, s15, e15) {
    const i12 = t19, r15 = s15, a12 = e15 + this.componentLocalOriginLength, o16 = this._totalOffset / Math.sqrt(i12 * i12 + r15 * r15 + a12 * a12);
    return this._tmpVertex[0] = t19 + i12 * o16, this._tmpVertex[1] = s15 + r15 * o16, this._tmpVertex[2] = e15 + a12 * o16, this._tmpVertex;
  }
  applyToAabb(t19) {
    const s15 = t19[0], e15 = t19[1], i12 = t19[2] + this.componentLocalOriginLength, r15 = t19[3], a12 = t19[4], o16 = t19[5] + this.componentLocalOriginLength, h10 = s15 * r15 < 0 ? 0 : Math.min(Math.abs(s15), Math.abs(r15)), n12 = e15 * a12 < 0 ? 0 : Math.min(Math.abs(e15), Math.abs(a12)), f9 = i12 * o16 < 0 ? 0 : Math.min(Math.abs(i12), Math.abs(o16)), l9 = Math.sqrt(h10 * h10 + n12 * n12 + f9 * f9);
    if (l9 < this._totalOffset)
      return t19[0] -= s15 < 0 ? this._totalOffset : 0, t19[1] -= e15 < 0 ? this._totalOffset : 0, t19[2] -= i12 < 0 ? this._totalOffset : 0, t19[3] += r15 > 0 ? this._totalOffset : 0, t19[4] += a12 > 0 ? this._totalOffset : 0, t19[5] += o16 > 0 ? this._totalOffset : 0, t19;
    const _8 = Math.max(Math.abs(s15), Math.abs(r15)), m5 = Math.max(Math.abs(e15), Math.abs(a12)), b3 = Math.max(Math.abs(i12), Math.abs(o16)), c13 = Math.sqrt(_8 * _8 + m5 * m5 + b3 * b3), p6 = this._totalOffset / c13, u11 = this._totalOffset / l9;
    return t19[0] += s15 * (s15 > 0 ? p6 : u11), t19[1] += e15 * (e15 > 0 ? p6 : u11), t19[2] += i12 * (i12 > 0 ? p6 : u11), t19[3] += r15 * (r15 < 0 ? p6 : u11), t19[4] += a12 * (a12 < 0 ? p6 : u11), t19[5] += o16 * (o16 < 0 ? p6 : u11), t19;
  }
  applyToMbs(t19) {
    const s15 = Math.sqrt(t19[0] * t19[0] + t19[1] * t19[1] + t19[2] * t19[2]), e15 = this._totalOffset / s15;
    return this._mbs[0] = t19[0] + t19[0] * e15, this._mbs[1] = t19[1] + t19[1] * e15, this._mbs[2] = t19[2] + t19[2] * e15, this._mbs[3] = t19[3] + t19[3] * this._totalOffset / s15, this._mbs;
  }
  applyToObb(t19) {
    const s15 = t19.center, e15 = this._totalOffset / Math.sqrt(s15[0] * s15[0] + s15[1] * s15[1] + s15[2] * s15[2]);
    this._obb.center[0] = s15[0] + s15[0] * e15, this._obb.center[1] = s15[1] + s15[1] * e15, this._obb.center[2] = s15[2] + s15[2] * e15, E(this._obb.halfSize, t19.halfSize, t19.quaternion), u(this._obb.halfSize, this._obb.halfSize, t19.center);
    const i12 = this._totalOffset / Math.sqrt(this._obb.halfSize[0] * this._obb.halfSize[0] + this._obb.halfSize[1] * this._obb.halfSize[1] + this._obb.halfSize[2] * this._obb.halfSize[2]);
    return this._obb.halfSize[0] += this._obb.halfSize[0] * i12, this._obb.halfSize[1] += this._obb.halfSize[1] * i12, this._obb.halfSize[2] += this._obb.halfSize[2] * i12, e4(this._obb.halfSize, this._obb.halfSize, t19.center), S2(j3, t19.quaternion), E(this._obb.halfSize, this._obb.halfSize, j3), this._obb.halfSize[0] *= this._obb.halfSize[0] < 0 ? -1 : 1, this._obb.halfSize[1] *= this._obb.halfSize[1] < 0 ? -1 : 1, this._obb.halfSize[2] *= this._obb.halfSize[2] < 0 ? -1 : 1, this._obb.quaternion = t19.quaternion, this._obb;
  }
};
var g6 = class {
  constructor(t19 = 0) {
    this.offset = t19, this.sphere = _3(), this.tmpVertex = n3();
  }
  applyToVertex(t19, s15, e15) {
    const i12 = this.objectTransform.transform;
    let r15 = i12[0] * t19 + i12[4] * s15 + i12[8] * e15 + i12[12], a12 = i12[1] * t19 + i12[5] * s15 + i12[9] * e15 + i12[13], o16 = i12[2] * t19 + i12[6] * s15 + i12[10] * e15 + i12[14];
    const h10 = this.offset / Math.sqrt(r15 * r15 + a12 * a12 + o16 * o16);
    r15 += r15 * h10, a12 += a12 * h10, o16 += o16 * h10;
    const n12 = this.objectTransform.inverse;
    return this.tmpVertex[0] = n12[0] * r15 + n12[4] * a12 + n12[8] * o16 + n12[12], this.tmpVertex[1] = n12[1] * r15 + n12[5] * a12 + n12[9] * o16 + n12[13], this.tmpVertex[2] = n12[2] * r15 + n12[6] * a12 + n12[10] * o16 + n12[14], this.tmpVertex;
  }
  applyToMinMax(t19, s15) {
    const e15 = this.offset / Math.sqrt(t19[0] * t19[0] + t19[1] * t19[1] + t19[2] * t19[2]);
    t19[0] += t19[0] * e15, t19[1] += t19[1] * e15, t19[2] += t19[2] * e15;
    const i12 = this.offset / Math.sqrt(s15[0] * s15[0] + s15[1] * s15[1] + s15[2] * s15[2]);
    s15[0] += s15[0] * i12, s15[1] += s15[1] * i12, s15[2] += s15[2] * i12;
  }
  applyToAabb(t19) {
    const s15 = this.offset / Math.sqrt(t19[0] * t19[0] + t19[1] * t19[1] + t19[2] * t19[2]);
    t19[0] += t19[0] * s15, t19[1] += t19[1] * s15, t19[2] += t19[2] * s15;
    const e15 = this.offset / Math.sqrt(t19[3] * t19[3] + t19[4] * t19[4] + t19[5] * t19[5]);
    return t19[3] += t19[3] * e15, t19[4] += t19[4] * e15, t19[5] += t19[5] * e15, t19;
  }
  applyToBoundingSphere(t19) {
    const s15 = Math.sqrt(t19[0] * t19[0] + t19[1] * t19[1] + t19[2] * t19[2]), e15 = this.offset / s15;
    return this.sphere[0] = t19[0] + t19[0] * e15, this.sphere[1] = t19[1] + t19[1] * e15, this.sphere[2] = t19[2] + t19[2] * e15, this.sphere[3] = t19[3] + t19[3] * this.offset / s15, this.sphere;
  }
};
var x3 = new g6();
function S5(t19) {
  return null != t19 ? (x3.offset = t19, x3) : null;
}
var q2 = new T4();
var V3 = new M3();
var j3 = e7();

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/bufferWriterUtils.js
function u9(e15, t19, f9, o16) {
  const r15 = f9.typedBuffer, s15 = f9.typedBufferStride, n12 = e15.length;
  o16 *= s15;
  for (let i12 = 0; i12 < n12; ++i12) {
    const f10 = 2 * e15[i12];
    r15[o16] = t19[f10], r15[o16 + 1] = t19[f10 + 1], o16 += s15;
  }
}
function a11(e15, t19, f9, o16, r15) {
  const s15 = f9.typedBuffer, n12 = f9.typedBufferStride, i12 = e15.length;
  if (o16 *= n12, null == r15 || 1 === r15)
    for (let c13 = 0; c13 < i12; ++c13) {
      const f10 = 3 * e15[c13];
      s15[o16] = t19[f10], s15[o16 + 1] = t19[f10 + 1], s15[o16 + 2] = t19[f10 + 2], o16 += n12;
    }
  else
    for (let c13 = 0; c13 < i12; ++c13) {
      const f10 = 3 * e15[c13];
      for (let e16 = 0; e16 < r15; ++e16)
        s15[o16] = t19[f10], s15[o16 + 1] = t19[f10 + 1], s15[o16 + 2] = t19[f10 + 2], o16 += n12;
    }
}
function p5(e15, t19, f9, o16, r15 = 1) {
  const s15 = f9.typedBuffer, n12 = f9.typedBufferStride, i12 = e15.length;
  if (o16 *= n12, 1 === r15)
    for (let c13 = 0; c13 < i12; ++c13) {
      const f10 = 4 * e15[c13];
      s15[o16] = t19[f10], s15[o16 + 1] = t19[f10 + 1], s15[o16 + 2] = t19[f10 + 2], s15[o16 + 3] = t19[f10 + 3], o16 += n12;
    }
  else
    for (let c13 = 0; c13 < i12; ++c13) {
      const f10 = 4 * e15[c13];
      for (let e16 = 0; e16 < r15; ++e16)
        s15[o16] = t19[f10], s15[o16 + 1] = t19[f10 + 1], s15[o16 + 2] = t19[f10 + 2], s15[o16 + 3] = t19[f10 + 3], o16 += n12;
    }
}
function b2(t19, f9, o16, r15, s15, n12 = 1) {
  if (!o16)
    return void a11(t19, f9, r15, s15, n12);
  const i12 = r15.typedBuffer, c13 = r15.typedBufferStride, l9 = t19.length, d4 = o16[0], u11 = o16[1], p6 = o16[2], y4 = o16[4], B2 = o16[5], g7 = o16[6], b3 = o16[8], O9 = o16[9], h10 = o16[10], N4 = o16[12], S7 = o16[13], R3 = o16[14];
  s15 *= c13;
  let A6 = 0, E11 = 0, L4 = 0;
  const z5 = H(o16) ? (e15) => {
    A6 = f9[e15] + N4, E11 = f9[e15 + 1] + S7, L4 = f9[e15 + 2] + R3;
  } : (e15) => {
    const t20 = f9[e15], o17 = f9[e15 + 1], r16 = f9[e15 + 2];
    A6 = d4 * t20 + y4 * o17 + b3 * r16 + N4, E11 = u11 * t20 + B2 * o17 + O9 * r16 + S7, L4 = p6 * t20 + g7 * o17 + h10 * r16 + R3;
  };
  if (1 === n12)
    for (let e15 = 0; e15 < l9; ++e15)
      z5(3 * t19[e15]), i12[s15] = A6, i12[s15 + 1] = E11, i12[s15 + 2] = L4, s15 += c13;
  else
    for (let e15 = 0; e15 < l9; ++e15) {
      z5(3 * t19[e15]);
      for (let e16 = 0; e16 < n12; ++e16)
        i12[s15] = A6, i12[s15 + 1] = E11, i12[s15 + 2] = L4, s15 += c13;
    }
}
function O7(f9, o16, r15, s15, n12, i12 = 1) {
  if (!r15)
    return void a11(f9, o16, s15, n12, i12);
  const c13 = r15, l9 = s15.typedBuffer, d4 = s15.typedBufferStride, u11 = f9.length, p6 = c13[0], y4 = c13[1], B2 = c13[2], g7 = c13[4], b3 = c13[5], O9 = c13[6], h10 = c13[8], N4 = c13[9], S7 = c13[10], R3 = !G(c13), A6 = 1e-6, E11 = 1 - A6;
  n12 *= d4;
  let L4 = 0, z5 = 0, F2 = 0;
  const v6 = H(c13) ? (e15) => {
    L4 = o16[e15], z5 = o16[e15 + 1], F2 = o16[e15 + 2];
  } : (e15) => {
    const t19 = o16[e15], f10 = o16[e15 + 1], r16 = o16[e15 + 2];
    L4 = p6 * t19 + g7 * f10 + h10 * r16, z5 = y4 * t19 + b3 * f10 + N4 * r16, F2 = B2 * t19 + O9 * f10 + S7 * r16;
  };
  if (1 === i12)
    if (R3)
      for (let e15 = 0; e15 < u11; ++e15) {
        v6(3 * f9[e15]);
        const t19 = L4 * L4 + z5 * z5 + F2 * F2;
        if (t19 < E11 && t19 > A6) {
          const e16 = 1 / Math.sqrt(t19);
          l9[n12] = L4 * e16, l9[n12 + 1] = z5 * e16, l9[n12 + 2] = F2 * e16;
        } else
          l9[n12] = L4, l9[n12 + 1] = z5, l9[n12 + 2] = F2;
        n12 += d4;
      }
    else
      for (let e15 = 0; e15 < u11; ++e15)
        v6(3 * f9[e15]), l9[n12] = L4, l9[n12 + 1] = z5, l9[n12 + 2] = F2, n12 += d4;
  else
    for (let e15 = 0; e15 < u11; ++e15) {
      if (v6(3 * f9[e15]), R3) {
        const e16 = L4 * L4 + z5 * z5 + F2 * F2;
        if (e16 < E11 && e16 > A6) {
          const t19 = 1 / Math.sqrt(e16);
          L4 *= t19, z5 *= t19, F2 *= t19;
        }
      }
      for (let e16 = 0; e16 < i12; ++e16)
        l9[n12] = L4, l9[n12 + 1] = z5, l9[n12 + 2] = F2, n12 += d4;
    }
}
function h8(e15, f9, o16, r15, s15, n12 = 1) {
  if (!o16)
    return void p5(e15, f9, r15, s15, n12);
  const i12 = o16, c13 = r15.typedBuffer, l9 = r15.typedBufferStride, d4 = e15.length, u11 = i12[0], a12 = i12[1], y4 = i12[2], B2 = i12[4], g7 = i12[5], b3 = i12[6], O9 = i12[8], h10 = i12[9], N4 = i12[10], S7 = !G(i12), R3 = 1e-6, A6 = 1 - R3;
  if (s15 *= l9, 1 === n12)
    for (let t19 = 0; t19 < d4; ++t19) {
      const o17 = 4 * e15[t19], r16 = f9[o17], n13 = f9[o17 + 1], i13 = f9[o17 + 2], d5 = f9[o17 + 3];
      let p6 = u11 * r16 + B2 * n13 + O9 * i13, E11 = a12 * r16 + g7 * n13 + h10 * i13, L4 = y4 * r16 + b3 * n13 + N4 * i13;
      if (S7) {
        const e16 = p6 * p6 + E11 * E11 + L4 * L4;
        if (e16 < A6 && e16 > R3) {
          const t20 = 1 / Math.sqrt(e16);
          p6 *= t20, E11 *= t20, L4 *= t20;
        }
      }
      c13[s15] = p6, c13[s15 + 1] = E11, c13[s15 + 2] = L4, c13[s15 + 3] = d5, s15 += l9;
    }
  else
    for (let t19 = 0; t19 < d4; ++t19) {
      const o17 = 4 * e15[t19], r16 = f9[o17], i13 = f9[o17 + 1], d5 = f9[o17 + 2], p6 = f9[o17 + 3];
      let E11 = u11 * r16 + B2 * i13 + O9 * d5, L4 = a12 * r16 + g7 * i13 + h10 * d5, z5 = y4 * r16 + b3 * i13 + N4 * d5;
      if (S7) {
        const e16 = E11 * E11 + L4 * L4 + z5 * z5;
        if (e16 < A6 && e16 > R3) {
          const t20 = 1 / Math.sqrt(e16);
          E11 *= t20, L4 *= t20, z5 *= t20;
        }
      }
      for (let e16 = 0; e16 < n12; ++e16)
        c13[s15] = E11, c13[s15 + 1] = L4, c13[s15 + 2] = z5, c13[s15 + 3] = p6, s15 += l9;
    }
}
function N2(e15, t19, f9, o16, r15, s15 = 1) {
  const n12 = o16.typedBuffer, i12 = o16.typedBufferStride, c13 = e15.length;
  if (r15 *= i12, f9 !== t19.length || 4 !== f9)
    if (1 !== s15)
      if (4 !== f9)
        for (let l9 = 0; l9 < c13; ++l9) {
          const f10 = 3 * e15[l9];
          for (let e16 = 0; e16 < s15; ++e16)
            n12[r15] = t19[f10], n12[r15 + 1] = t19[f10 + 1], n12[r15 + 2] = t19[f10 + 2], n12[r15 + 3] = 255, r15 += i12;
        }
      else
        for (let l9 = 0; l9 < c13; ++l9) {
          const f10 = 4 * e15[l9];
          for (let e16 = 0; e16 < s15; ++e16)
            n12[r15] = t19[f10], n12[r15 + 1] = t19[f10 + 1], n12[r15 + 2] = t19[f10 + 2], n12[r15 + 3] = t19[f10 + 3], r15 += i12;
        }
    else {
      if (4 === f9) {
        for (let f10 = 0; f10 < c13; ++f10) {
          const o17 = 4 * e15[f10];
          n12[r15] = t19[o17], n12[r15 + 1] = t19[o17 + 1], n12[r15 + 2] = t19[o17 + 2], n12[r15 + 3] = t19[o17 + 3], r15 += i12;
        }
        return;
      }
      for (let f10 = 0; f10 < c13; ++f10) {
        const o17 = 3 * e15[f10];
        n12[r15] = t19[o17], n12[r15 + 1] = t19[o17 + 1], n12[r15 + 2] = t19[o17 + 2], n12[r15 + 3] = 255, r15 += i12;
      }
    }
  else {
    n12[r15] = t19[0], n12[r15 + 1] = t19[1], n12[r15 + 2] = t19[2], n12[r15 + 3] = t19[3];
    const e16 = new Uint32Array(o16.typedBuffer.buffer, o16.start), f10 = i12 / 4, l9 = e16[r15 /= 4];
    r15 += f10;
    const d4 = c13 * s15;
    for (let t20 = 1; t20 < d4; ++t20)
      e16[r15] = l9, r15 += f10;
  }
}
function S6(e15, t19, f9, o16) {
  const r15 = f9.typedBuffer, s15 = f9.typedBufferStride, n12 = e15.length, i12 = t19[0];
  o16 *= s15;
  for (let c13 = 0; c13 < n12; ++c13)
    r15[o16] = i12, o16 += s15;
}
function R2(e15, t19, f9, o16, r15 = 1) {
  const s15 = t19.typedBuffer, n12 = t19.typedBufferStride;
  if (o16 *= n12, 1 === r15)
    for (let i12 = 0; i12 < f9; ++i12)
      s15[o16] = e15[0], s15[o16 + 1] = e15[1], s15[o16 + 2] = e15[2], s15[o16 + 3] = e15[3], o16 += n12;
  else
    for (let i12 = 0; i12 < f9; ++i12)
      for (let t20 = 0; t20 < r15; ++t20)
        s15[o16] = e15[0], s15[o16 + 1] = e15[1], s15[o16 + 2] = e15[2], s15[o16 + 3] = e15[3], o16 += n12;
}
function A4(e15, t19, o16, r15, s15, n12) {
  for (const i12 of t19.fields.keys()) {
    const t20 = e15.vertexAttributes.get(i12), d4 = e15.indices.get(i12);
    if (t20 && d4)
      E8(i12, t20, d4, o16, r15, s15, n12);
    else if (i12 === O4.OBJECTANDLAYERIDCOLOR && null != e15.objectAndLayerIdColor) {
      const t21 = e15.indices.get(O4.POSITION);
      if (s6(!!t21, `No buffer view for ${i12}`), t21) {
        const o17 = t21.length, r16 = s15.getField(i12, x);
        R2(e15.objectAndLayerIdColor, r16, o17, n12);
      }
    }
  }
}
function E8(e15, t19, d4, a12, y4, B2, g7) {
  switch (e15) {
    case O4.POSITION: {
      s6(3 === t19.size);
      const f9 = B2.getField(e15, i3);
      s6(!!f9, `No buffer view for ${e15}`), f9 && b2(d4, t19.data, a12, f9, g7);
      break;
    }
    case O4.NORMAL: {
      s6(3 === t19.size);
      const f9 = B2.getField(e15, i3);
      s6(!!f9, `No buffer view for ${e15}`), f9 && O7(d4, t19.data, y4, f9, g7);
      break;
    }
    case O4.NORMALCOMPRESSED: {
      s6(2 === t19.size);
      const f9 = B2.getField(e15, q);
      s6(!!f9, `No buffer view for ${e15}`), f9 && u9(d4, t19.data, f9, g7);
      break;
    }
    case O4.UV0: {
      s6(2 === t19.size);
      const f9 = B2.getField(e15, u2);
      s6(!!f9, `No buffer view for ${e15}`), f9 && u9(d4, t19.data, f9, g7);
      break;
    }
    case O4.COLOR:
    case O4.SYMBOLCOLOR: {
      const o16 = B2.getField(e15, x);
      s6(!!o16, `No buffer view for ${e15}`), s6(3 === t19.size || 4 === t19.size), !o16 || 3 !== t19.size && 4 !== t19.size || N2(d4, t19.data, t19.size, o16, g7);
      break;
    }
    case O4.COLORFEATUREATTRIBUTE: {
      const f9 = B2.getField(e15, y);
      s6(!!f9, `No buffer view for ${e15}`), s6(1 === t19.size), f9 && 1 === t19.size && S6(d4, t19.data, f9, g7);
      break;
    }
    case O4.TANGENT: {
      s6(4 === t19.size);
      const f9 = B2.getField(e15, c3);
      s6(!!f9, `No buffer view for ${e15}`), f9 && h8(d4, t19.data, y4, f9, g7);
      break;
    }
    case O4.PROFILERIGHT:
    case O4.PROFILEUP:
    case O4.PROFILEVERTEXANDNORMAL:
    case O4.FEATUREVALUE: {
      s6(4 === t19.size);
      const f9 = B2.getField(e15, c3);
      s6(!!f9, `No buffer view for ${e15}`), f9 && p5(d4, t19.data, f9, g7);
    }
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultBufferWriter.js
var r13 = class {
  constructor(t19) {
    this.vertexBufferLayout = t19;
  }
  elementCount(e15) {
    return e15.indices.get(O4.POSITION).length;
  }
  write(t19, r15, i12, o16, s15) {
    A4(i12, this.vertexBufferLayout, t19, r15, o16, s15);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/StencilUtils.js
var i11 = { func: I.LESS };
var s12 = { func: I.ALWAYS };
var e14 = { mask: 255 };
var f8 = { function: { func: I.ALWAYS, ref: a3.OutlineVisualElementMask, mask: a3.OutlineVisualElementMask }, operation: { fail: O3.KEEP, zFail: O3.KEEP, zPass: O3.ZERO } };
var o15 = { function: { func: I.ALWAYS, ref: a3.OutlineVisualElementMask, mask: a3.OutlineVisualElementMask }, operation: { fail: O3.KEEP, zFail: O3.KEEP, zPass: O3.REPLACE } };
var P3 = { function: { func: I.EQUAL, ref: a3.OutlineVisualElementMask, mask: a3.OutlineVisualElementMask }, operation: { fail: O3.KEEP, zFail: O3.KEEP, zPass: O3.KEEP } };
var m4 = { function: { func: I.NOTEQUAL, ref: a3.OutlineVisualElementMask, mask: a3.OutlineVisualElementMask }, operation: { fail: O3.KEEP, zFail: O3.KEEP, zPass: O3.KEEP } };

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/pbrUtils.js
function u10({ normalTexture: u11, metallicRoughnessTexture: n12, metallicFactor: r15, roughnessFactor: s15, emissiveTexture: o16, emissiveFactor: t19, occlusionTexture: c13 }) {
  return null == u11 && null == n12 && null == o16 && (null == t19 || F(t19, f2)) && null == c13 && (null == s15 || 1 === s15) && (null == r15 || 1 === r15 || 0 === r15);
}
var n11 = [1, 1, 0.5];
var r14 = [0, 0.6, 0.2];
var s13 = [0, 1, 0.2];

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/DefaultMaterialTechnique.js
var k = class extends f5 {
  constructor() {
    super(...arguments), this.isSchematic = false, this.usePBR = false, this.mrrFactors = e3(n11), this.hasVertexColors = false, this.hasSymbolColors = false, this.doubleSided = false, this.doubleSidedType = "normal", this.cullFace = n7.Back, this.isInstanced = false, this.hasInstancedColor = false, this.emissiveFactor = r(0, 0, 0), this.instancedDoublePrecision = false, this.normalType = a4.Attribute, this.receiveSSAO = true, this.receiveShadows = true, this.castShadows = true, this.shadowMappingEnabled = false, this.ambient = r(0.2, 0.2, 0.2), this.diffuse = r(0.8, 0.8, 0.8), this.externalColor = r3(1, 1, 1, 1), this.colorMixMode = "multiply", this.opacity = 1, this.layerOpacity = 1, this.origin = n3(), this.hasSlicePlane = false, this.hasSliceHighlight = true, this.offsetTransparentBackfaces = false, this.vvSize = null, this.vvColor = null, this.vvOpacity = null, this.vvSymbolAnchor = null, this.vvSymbolRotationMatrix = null, this.modelTransformation = null, this.transparent = false, this.writeDepth = true, this.customDepthTest = e9.Less, this.textureAlphaMode = i6.Blend, this.textureAlphaCutoff = o8, this.textureAlphaPremultiplied = false, this.hasOccludees = false, this.renderOccluded = o6.Occlude;
  }
};
var q3 = class _q extends e13 {
  initializeConfiguration(e15, t19) {
    t19.spherical = e15.viewingMode === l3.Global, t19.doublePrecisionRequiresObfuscation = e15.rctx.driverTest.doublePrecisionRequiresObfuscation.result, t19.textureCoordinateType = t19.hasColorTexture || t19.hasMetallicRoughnessTexture || t19.hasEmissionTexture || t19.hasOcclusionTexture || t19.hasNormalTexture ? d.Default : d.None, t19.objectAndLayerIdColorInstanced = t19.instanced;
  }
  initializeProgram(e15) {
    return this._initializeProgram(e15, _q.shader);
  }
  _initializeProgram(e15, t19) {
    return new i8(e15.rctx, t19.get().build(this.configuration), E4);
  }
  _convertDepthTestFunction(e15) {
    return e15 === e9.Lequal ? I.LEQUAL : I.LESS;
  }
  _makePipeline(e15, t19) {
    const i12 = this.configuration, r15 = e15 === o7.NONE, s15 = e15 === o7.FrontFace;
    return W({ blending: i12.output !== h3.Color && i12.output !== h3.Alpha || !i12.transparent ? null : r15 ? c6 : A3(e15), culling: z3(i12) ? h5(i12.cullFace) : null, depthTest: { func: l4(e15, this._convertDepthTestFunction(i12.customDepthTest)) }, depthWrite: (r15 || s15) && i12.writeDepth ? a6 : null, colorWrite: _4, stencilWrite: i12.hasOccludees ? e14 : null, stencilTest: i12.hasOccludees ? t19 ? o15 : f8 : null, polygonOffset: r15 || s15 ? null : a7(i12.enableOffset) });
  }
  initializePipeline() {
    return this._occludeePipelineState = this._makePipeline(this.configuration.transparencyPassType, true), this._makePipeline(this.configuration.transparencyPassType, false);
  }
  getPipelineState(e15, t19) {
    return t19 ? this._occludeePipelineState : super.getPipelineState(e15, t19);
  }
};
function z3(e15) {
  return e15.cullFace !== n7.None || !e15.hasSlicePlane && (!e15.transparent && !e15.doubleSidedMode);
}
q3.shader = new t12(Z2, () => import("./DefaultMaterial.glsl-5WHGSRNB.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultTechniqueConfiguration.js
var s14 = class extends t13 {
};
e([r9({ constValue: true })], s14.prototype, "hasSliceHighlight", void 0), e([r9({ constValue: false })], s14.prototype, "hasSliceInVertexProgram", void 0), e([r9({ constValue: false })], s14.prototype, "instancedDoublePrecision", void 0), e([r9({ constValue: false })], s14.prototype, "hasModelTransformation", void 0), e([r9({ constValue: a5.Pass })], s14.prototype, "pbrTextureBindType", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/DefaultMaterialTechniqueConfiguration.js
var c12 = class extends s14 {
  constructor() {
    super(...arguments), this.output = h3.Color, this.alphaDiscardMode = i6.Opaque, this.doubleSidedMode = i7.None, this.pbrMode = c5.Disabled, this.cullFace = n7.None, this.transparencyPassType = o7.NONE, this.normalType = a4.Attribute, this.textureCoordinateType = d.None, this.customDepthTest = e9.Less, this.spherical = false, this.hasVertexColors = false, this.hasSymbolColors = false, this.hasVerticalOffset = false, this.hasSlicePlane = false, this.hasSliceHighlight = true, this.hasColorTexture = false, this.hasMetallicRoughnessTexture = false, this.hasEmissionTexture = false, this.hasOcclusionTexture = false, this.hasNormalTexture = false, this.hasScreenSizePerspective = false, this.hasVertexTangents = false, this.hasOccludees = false, this.hasMultipassTerrain = false, this.hasModelTransformation = false, this.offsetBackfaces = false, this.vvSize = false, this.vvColor = false, this.receiveShadows = false, this.receiveAmbientOcclusion = false, this.textureAlphaPremultiplied = false, this.instanced = false, this.instancedColor = false, this.objectAndLayerIdColorInstanced = false, this.instancedDoublePrecision = false, this.doublePrecisionRequiresObfuscation = false, this.writeDepth = true, this.transparent = false, this.enableOffset = true, this.cullAboveGround = false, this.snowCover = false, this.hasColorTextureTransform = false, this.hasEmissionTextureTransform = false, this.hasNormalTextureTransform = false, this.hasOcclusionTextureTransform = false, this.hasMetallicRoughnessTextureTransform = false;
  }
};
e([r9({ count: h3.COUNT })], c12.prototype, "output", void 0), e([r9({ count: i6.COUNT })], c12.prototype, "alphaDiscardMode", void 0), e([r9({ count: i7.COUNT })], c12.prototype, "doubleSidedMode", void 0), e([r9({ count: c5.COUNT })], c12.prototype, "pbrMode", void 0), e([r9({ count: n7.COUNT })], c12.prototype, "cullFace", void 0), e([r9({ count: o7.COUNT })], c12.prototype, "transparencyPassType", void 0), e([r9({ count: a4.COUNT })], c12.prototype, "normalType", void 0), e([r9({ count: d.COUNT })], c12.prototype, "textureCoordinateType", void 0), e([r9({ count: e9.COUNT })], c12.prototype, "customDepthTest", void 0), e([r9()], c12.prototype, "spherical", void 0), e([r9()], c12.prototype, "hasVertexColors", void 0), e([r9()], c12.prototype, "hasSymbolColors", void 0), e([r9()], c12.prototype, "hasVerticalOffset", void 0), e([r9()], c12.prototype, "hasSlicePlane", void 0), e([r9()], c12.prototype, "hasSliceHighlight", void 0), e([r9()], c12.prototype, "hasColorTexture", void 0), e([r9()], c12.prototype, "hasMetallicRoughnessTexture", void 0), e([r9()], c12.prototype, "hasEmissionTexture", void 0), e([r9()], c12.prototype, "hasOcclusionTexture", void 0), e([r9()], c12.prototype, "hasNormalTexture", void 0), e([r9()], c12.prototype, "hasScreenSizePerspective", void 0), e([r9()], c12.prototype, "hasVertexTangents", void 0), e([r9()], c12.prototype, "hasOccludees", void 0), e([r9()], c12.prototype, "hasMultipassTerrain", void 0), e([r9()], c12.prototype, "hasModelTransformation", void 0), e([r9()], c12.prototype, "offsetBackfaces", void 0), e([r9()], c12.prototype, "vvSize", void 0), e([r9()], c12.prototype, "vvColor", void 0), e([r9()], c12.prototype, "receiveShadows", void 0), e([r9()], c12.prototype, "receiveAmbientOcclusion", void 0), e([r9()], c12.prototype, "textureAlphaPremultiplied", void 0), e([r9()], c12.prototype, "instanced", void 0), e([r9()], c12.prototype, "instancedColor", void 0), e([r9()], c12.prototype, "objectAndLayerIdColorInstanced", void 0), e([r9()], c12.prototype, "instancedDoublePrecision", void 0), e([r9()], c12.prototype, "doublePrecisionRequiresObfuscation", void 0), e([r9()], c12.prototype, "writeDepth", void 0), e([r9()], c12.prototype, "transparent", void 0), e([r9()], c12.prototype, "enableOffset", void 0), e([r9()], c12.prototype, "cullAboveGround", void 0), e([r9()], c12.prototype, "snowCover", void 0), e([r9()], c12.prototype, "hasColorTextureTransform", void 0), e([r9()], c12.prototype, "hasEmissionTextureTransform", void 0), e([r9()], c12.prototype, "hasNormalTextureTransform", void 0), e([r9()], c12.prototype, "hasOcclusionTextureTransform", void 0), e([r9()], c12.prototype, "hasMetallicRoughnessTextureTransform", void 0), e([r9({ constValue: true })], c12.prototype, "hasVvInstancing", void 0), e([r9({ constValue: false })], c12.prototype, "useCustomDTRExponentForWater", void 0), e([r9({ constValue: false })], c12.prototype, "supportsTextureAtlas", void 0), e([r9({ constValue: true })], c12.prototype, "useFillLights", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/RealisticTreeTechnique.js
var t18 = class _t extends q3 {
  initializeConfiguration(i12, a12) {
    super.initializeConfiguration(i12, a12), a12.hasMetallicRoughnessTexture = false, a12.hasEmissionTexture = false, a12.hasOcclusionTexture = false, a12.hasNormalTexture = false, a12.hasModelTransformation = false, a12.normalType = a4.Attribute, a12.doubleSidedMode = i7.WindingOrder, a12.hasVertexTangents = false;
  }
  initializeProgram(e15) {
    return this._initializeProgram(e15, _t.shader);
  }
};
t18.shader = new t12(R, () => import("./RealisticTree.glsl-ILS272SH.js"));

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultMaterial.js
var I2 = class extends d2 {
  constructor(e15) {
    super(e15, L3), this.supportsEdges = true, this._configuration = new c12(), this._vertexBufferLayout = j4(this.parameters);
  }
  isVisibleForOutput(e15) {
    return e15 !== h3.Shadow && e15 !== h3.ShadowExcludeHighlight && e15 !== h3.ShadowHighlight || this.parameters.castShadows;
  }
  isVisible() {
    const e15 = this.parameters;
    if (!super.isVisible() || 0 === e15.layerOpacity)
      return false;
    const { hasInstancedColor: t19, hasVertexColors: r15, hasSymbolColors: s15, vvColor: a12 } = e15, i12 = "replace" === e15.colorMixMode, o16 = e15.opacity > 0, n12 = e15.externalColor && e15.externalColor[3] > 0, h10 = t19 || a12 || s15;
    return r15 && h10 ? i12 || o16 : r15 ? i12 ? n12 : o16 : h10 ? i12 || o16 : i12 ? n12 : o16;
  }
  getConfiguration(e15, t19) {
    return this._configuration.output = e15, this._configuration.hasNormalTexture = !!this.parameters.normalTextureId, this._configuration.hasColorTexture = !!this.parameters.textureId, this._configuration.hasVertexTangents = this.parameters.hasVertexTangents, this._configuration.instanced = this.parameters.isInstanced, this._configuration.instancedDoublePrecision = this.parameters.instancedDoublePrecision, this._configuration.vvSize = !!this.parameters.vvSize, this._configuration.hasVerticalOffset = null != this.parameters.verticalOffset, this._configuration.hasScreenSizePerspective = null != this.parameters.screenSizePerspective, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.hasSliceHighlight = this.parameters.hasSliceHighlight, this._configuration.alphaDiscardMode = this.parameters.textureAlphaMode, this._configuration.normalType = this.parameters.normalType, this._configuration.transparent = this.parameters.transparent, this._configuration.writeDepth = this.parameters.writeDepth, null != this.parameters.customDepthTest && (this._configuration.customDepthTest = this.parameters.customDepthTest), this._configuration.hasOccludees = this.parameters.hasOccludees, this._configuration.cullFace = this.parameters.hasSlicePlane ? n7.None : this.parameters.cullFace, this._configuration.hasMultipassTerrain = t19.multipassTerrain.enabled, this._configuration.cullAboveGround = t19.multipassTerrain.cullAboveGround, this._configuration.hasModelTransformation = null != this.parameters.modelTransformation, e15 !== h3.Color && e15 !== h3.Alpha || (this._configuration.hasVertexColors = this.parameters.hasVertexColors, this._configuration.hasSymbolColors = this.parameters.hasSymbolColors, this.parameters.treeRendering ? this._configuration.doubleSidedMode = i7.WindingOrder : this._configuration.doubleSidedMode = this.parameters.doubleSided && "normal" === this.parameters.doubleSidedType ? i7.View : this.parameters.doubleSided && "winding-order" === this.parameters.doubleSidedType ? i7.WindingOrder : i7.None, this._configuration.instancedColor = this.parameters.hasInstancedColor, this._configuration.receiveShadows = this.parameters.receiveShadows && this.parameters.shadowMappingEnabled, this._configuration.receiveAmbientOcclusion = !!t19.ssaoHelper.active && this.parameters.receiveSSAO, this._configuration.vvColor = !!this.parameters.vvColor, this._configuration.textureAlphaPremultiplied = !!this.parameters.textureAlphaPremultiplied, this._configuration.pbrMode = this.parameters.usePBR ? this.parameters.isSchematic ? c5.Schematic : c5.Normal : c5.Disabled, this._configuration.hasMetallicRoughnessTexture = !!this.parameters.metallicRoughnessTextureId, this._configuration.hasEmissionTexture = !!this.parameters.emissiveTextureId, this._configuration.hasOcclusionTexture = !!this.parameters.occlusionTextureId, this._configuration.offsetBackfaces = !(!this.parameters.transparent || !this.parameters.offsetTransparentBackfaces), this._configuration.transparencyPassType = t19.transparencyPassType, this._configuration.enableOffset = t19.camera.relativeElevation < S3, this._configuration.snowCover = this.hasSnowCover(t19), this._configuration.hasColorTextureTransform = !!this.parameters.colorTextureTransformMatrix, this._configuration.hasNormalTextureTransform = !!this.parameters.normalTextureTransformMatrix, this._configuration.hasEmissionTextureTransform = !!this.parameters.emissiveTextureTransformMatrix, this._configuration.hasOcclusionTextureTransform = !!this.parameters.occlusionTextureTransformMatrix, this._configuration.hasMetallicRoughnessTextureTransform = !!this.parameters.metallicRoughnessTextureTransformMatrix), this._configuration;
  }
  hasSnowCover(e15) {
    return null != e15.weather && e15.weatherVisible && "snowy" === e15.weather.type && "enabled" === e15.weather.snowCover;
  }
  intersect(h10, l9, u11, m5, p6, d4) {
    if (null != this.parameters.verticalOffset) {
      const h11 = u11.camera;
      o2(z4, l9[12], l9[13], l9[14]);
      let d5 = null;
      switch (u11.viewingMode) {
        case l3.Global:
          d5 = z(B, z4);
          break;
        case l3.Local:
          d5 = r2(B, V4);
      }
      let f9 = 0;
      const g7 = e4(G3, z4, h11.eye), T6 = s5(g7), _8 = g(g7, g7, 1 / T6);
      let x4 = null;
      this.parameters.screenSizePerspective && (x4 = P(d5, _8)), f9 += V(h11, T6, this.parameters.verticalOffset, x4 ?? 0, this.parameters.screenSizePerspective), g(d5, d5, f9), S(H4, d5, u11.transform.inverseRotation), m5 = e4(D3, m5, H4), p6 = e4(N3, p6, H4);
    }
    h4(h10, u11, m5, p6, S5(u11.verticalOffset), d4);
  }
  requiresSlot(e15, t19) {
    if (t19 === h3.Color || t19 === h3.Alpha || t19 === h3.Depth || t19 === h3.Normal || t19 === h3.Shadow || t19 === h3.ShadowHighlight || t19 === h3.ShadowExcludeHighlight || t19 === h3.Highlight || t19 === h3.ObjectAndLayerIdColor) {
      return e15 === (this.parameters.transparent ? this.parameters.writeDepth ? E7.TRANSPARENT_MATERIAL : E7.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL : E7.OPAQUE_MATERIAL) || e15 === E7.DRAPED_MATERIAL;
    }
    return false;
  }
  createGLMaterial(e15) {
    return new P4(e15);
  }
  createBufferWriter() {
    return new r13(this._vertexBufferLayout);
  }
};
var P4 = class extends r8 {
  constructor(e15) {
    super({ ...e15, ...e15.material.parameters });
  }
  _updateShadowState(e15) {
    e15.shadowMap.enabled !== this._material.parameters.shadowMappingEnabled && this._material.setParameters({ shadowMappingEnabled: e15.shadowMap.enabled });
  }
  _updateOccludeeState(e15) {
    e15.hasOccludees !== this._material.parameters.hasOccludees && this._material.setParameters({ hasOccludees: e15.hasOccludees });
  }
  beginSlot(t19) {
    this._output !== h3.Color && this._output !== h3.Alpha || (this._updateShadowState(t19), this._updateOccludeeState(t19));
    const r15 = this._material.parameters;
    this.updateTexture(r15.textureId);
    const s15 = t19.camera.viewInverseTransposeMatrix;
    return o2(r15.origin, s15[3], s15[7], s15[11]), this._material.setParameters(this.textureBindParameters), this.ensureTechnique(r15.treeRendering ? t18 : q3, t19);
  }
};
var E9 = class extends k {
  constructor() {
    super(...arguments), this.initTextureTransparent = false, this.treeRendering = false, this.hasVertexTangents = false;
  }
};
var L3 = new E9();
function j4(e15) {
  const t19 = H2().vec3f(O4.POSITION);
  e15.normalType === a4.Compressed ? t19.vec2i16(O4.NORMALCOMPRESSED, { glNormalized: true }) : t19.vec3f(O4.NORMAL), e15.hasVertexTangents && t19.vec4f(O4.TANGENT);
  return (e15.textureId || e15.normalTextureId || e15.metallicRoughnessTextureId || e15.emissiveTextureId || e15.occlusionTextureId) && t19.vec2f(O4.UV0), e15.hasVertexColors && t19.vec4u8(O4.COLOR), e15.hasSymbolColors && t19.vec4u8(O4.SYMBOLCOLOR), has("enable-feature:objectAndLayerId-rendering") && t19.vec4u8(O4.OBJECTANDLAYERIDCOLOR), t19;
}
var D3 = n3();
var N3 = n3();
var V4 = r(0, 0, 1);
var B = n3();
var H4 = n3();
var z4 = n3();
var G3 = n3();

// node_modules/@arcgis/core/views/3d/layers/graphics/wosrLoader.js
var h9 = s2.getLogger("esri.views.3d.layers.graphics.objectResourceUtils");
async function v5(e15, t19) {
  const n12 = await A5(e15, t19), s15 = await T5(n12.textureDefinitions ?? {}, t19);
  let a12 = 0;
  for (const r15 in s15)
    if (s15.hasOwnProperty(r15)) {
      const e16 = s15[r15];
      a12 += (e16 == null ? void 0 : e16.image) ? e16.image.width * e16.image.height * 4 : 0;
    }
  return { resource: n12, textures: s15, size: a12 + e8(n12) };
}
async function A5(r15, n12) {
  const s15 = null != n12 && n12.streamDataRequester;
  if (s15)
    return j5(r15, s15, n12);
  const a12 = await _(j(r15, n12));
  if (true === a12.ok)
    return a12.value.data;
  f(a12.error), M4(a12.error);
}
async function j5(e15, r15, n12) {
  const s15 = await _(r15.request(e15, "json", n12));
  if (true === s15.ok)
    return s15.value;
  f(s15.error), M4(s15.error.details.url);
}
function M4(e15) {
  throw new s3("", `Request for object resource failed: ${e15}`);
}
function P5(e15) {
  const t19 = e15.params, r15 = t19.topology;
  let n12 = true;
  switch (t19.vertexAttributes || (h9.warn("Geometry must specify vertex attributes"), n12 = false), t19.topology) {
    case "PerAttributeArray":
      break;
    case "Indexed":
    case null:
    case void 0: {
      const e16 = t19.faces;
      if (e16) {
        if (t19.vertexAttributes)
          for (const r16 in t19.vertexAttributes) {
            const t20 = e16[r16];
            t20 && t20.values ? (null != t20.valueType && "UInt32" !== t20.valueType && (h9.warn(`Unsupported indexed geometry indices type '${t20.valueType}', only UInt32 is currently supported`), n12 = false), null != t20.valuesPerElement && 1 !== t20.valuesPerElement && (h9.warn(`Unsupported indexed geometry values per element '${t20.valuesPerElement}', only 1 is currently supported`), n12 = false)) : (h9.warn(`Indexed geometry does not specify face indices for '${r16}' attribute`), n12 = false);
          }
      } else
        h9.warn("Indexed geometries must specify faces"), n12 = false;
      break;
    }
    default:
      h9.warn(`Unsupported topology '${r15}'`), n12 = false;
  }
  e15.params.material || (h9.warn("Geometry requires material"), n12 = false);
  const s15 = e15.params.vertexAttributes;
  for (const a12 in s15) {
    s15[a12].values || (h9.warn("Geometries with externally defined attributes are not yet supported"), n12 = false);
  }
  return n12;
}
function I3(e15, t19) {
  var _a;
  const r15 = new Array(), n12 = new Array(), s15 = new Array(), o16 = new t10(), u11 = e15.resource, c13 = r6.parse(u11.version || "1.0", "wosr");
  O8.validate(c13);
  const p6 = u11.model.name, d4 = u11.model.geometries, x4 = u11.materialDefinitions ?? {}, h10 = e15.textures;
  let v6 = 0;
  const A6 = /* @__PURE__ */ new Map();
  for (let a12 = 0; a12 < d4.length; a12++) {
    const e16 = d4[a12];
    if (!P5(e16))
      continue;
    const i12 = k2(e16), u12 = e16.params.vertexAttributes, c14 = [];
    for (const t20 in u12) {
      const e17 = u12[t20], r16 = e17.values;
      c14.push([t20, new s8(r16, e17.valuesPerElement, true)]);
    }
    const p7 = [];
    if ("PerAttributeArray" !== e16.params.topology) {
      const t20 = e16.params.faces;
      for (const e17 in t20)
        p7.push([e17, t20[e17].values]);
    }
    const j6 = i12.texture, M5 = h10 && h10[j6];
    if (M5 && !A6.has(j6)) {
      const { image: e17, parameters: t20 } = M5, r16 = new w4(e17, t20);
      n12.push(r16), A6.set(j6, r16);
    }
    const I4 = A6.get(j6), U3 = I4 ? I4.id : void 0, T6 = i12.material;
    let O9 = o16.get(T6, j6);
    if (null == O9) {
      const e17 = x4[T6.substring(T6.lastIndexOf("/") + 1)].params;
      1 === e17.transparency && (e17.transparency = 0);
      const r16 = M5 && M5.alphaChannelUsage, n13 = e17.transparency > 0 || "transparency" === r16 || "maskAndTransparency" === r16, s16 = M5 ? E10(M5.alphaChannelUsage) : void 0, a13 = { ambient: e3(e17.diffuse), diffuse: e3(e17.diffuse), opacity: 1 - (e17.transparency || 0), transparent: n13, textureAlphaMode: s16, textureAlphaCutoff: 0.33, textureId: U3, initTextureTransparent: true, doubleSided: true, cullFace: n7.None, colorMixMode: e17.externalColorMixMode || "tint", textureAlphaPremultiplied: (M5 == null ? void 0 : M5.parameters.preMultiplyAlpha) ?? false };
      null != t19 && t19.materialParamsMixin && Object.assign(a13, t19.materialParamsMixin), O9 = new I2(a13), o16.set(T6, j6, O9);
    }
    s15.push(O9);
    const q4 = new b(O9, c14, p7);
    v6 += ((_a = p7.find((e17) => e17[0] === O4.POSITION)) == null ? void 0 : _a[1].length) ?? 0, r15.push(q4);
  }
  return { engineResources: [{ name: p6, stageResources: { textures: n12, materials: s15, geometries: r15 }, pivotOffset: u11.model.pivotOffset, numberOfVertices: v6, lodThreshold: null }], referenceBoundingBox: U2(r15) };
}
function U2(e15) {
  const t19 = P2();
  return e15.forEach((e16) => {
    const r15 = e16.boundingInfo;
    null != r15 && (h2(t19, r15.bbMin), h2(t19, r15.bbMax));
  }), t19;
}
async function T5(e15, t19) {
  const r15 = new Array();
  for (const a12 in e15) {
    const n13 = e15[a12], s16 = n13.images[0].data;
    if (!s16) {
      h9.warn("Externally referenced texture data is not yet supported");
      continue;
    }
    const o16 = n13.encoding + ";base64," + s16, i12 = "/textureDefinitions/" + a12, l9 = "rgba" === n13.channels ? n13.alphaChannelUsage || "transparency" : "none", u11 = { noUnpackFlip: true, wrap: { s: D.REPEAT, t: D.REPEAT }, preMultiplyAlpha: E10(l9) !== i6.Opaque }, c13 = null != t19 && t19.disableTextures ? Promise.resolve(null) : t11(o16, t19);
    r15.push(c13.then((e16) => ({ refId: i12, image: e16, parameters: u11, alphaChannelUsage: l9 })));
  }
  const n12 = await Promise.all(r15), s15 = {};
  for (const a12 of n12)
    s15[a12.refId] = a12;
  return s15;
}
function E10(e15) {
  switch (e15) {
    case "mask":
      return i6.Mask;
    case "maskAndTransparency":
      return i6.MaskBlend;
    case "none":
      return i6.Opaque;
    default:
      return i6.Blend;
  }
}
function k2(e15) {
  const t19 = e15.params;
  return { id: 1, material: t19.material, texture: t19.texture, region: t19.texture };
}
var O8 = new r6(1, 2, "wosr");

// node_modules/@arcgis/core/views/3d/layers/graphics/objectResourceUtils.js
async function X(t19, r15) {
  var _a;
  const o16 = Y(a2(t19));
  if ("wosr" === o16.fileType) {
    const e15 = await (r15.cache ? r15.cache.loadWOSR(o16.url, r15) : v5(o16.url, r15)), { engineResources: t20, referenceBoundingBox: s16 } = I3(e15, r15);
    return { lods: t20, referenceBoundingBox: s16, isEsriSymbolResource: false, isWosr: true };
  }
  const s15 = await (r15.cache ? r15.cache.loadGLTF(o16.url, r15, !!r15.usePBR) : l2(new n6(r15.streamDataRequester), o16.url, r15, r15.usePBR)), i12 = (_a = s15.model.meta) == null ? void 0 : _a.ESRI_proxyEllipsoid, n12 = s15.meta.isEsriSymbolResource && null != i12 && s15.meta.uri.includes("/RealisticTrees/");
  n12 && !s15.customMeta.esriTreeRendering && (s15.customMeta.esriTreeRendering = true, se(s15, i12));
  const l9 = !!r15.usePBR, u11 = s15.meta.isEsriSymbolResource ? { usePBR: l9, isSchematic: false, treeRendering: n12, mrrFactors: [...s13] } : { usePBR: l9, isSchematic: false, treeRendering: false, mrrFactors: [...n11] }, a12 = { ...r15.materialParamsMixin, treeRendering: n12 }, { engineResources: c13, referenceBoundingBox: m5 } = Z3(s15, u11, a12, r15.skipHighLods && null == o16.specifiedLodIndex ? { skipHighLods: true } : { skipHighLods: false, singleLodIndex: o16.specifiedLodIndex });
  return { lods: c13, referenceBoundingBox: m5, isEsriSymbolResource: s15.meta.isEsriSymbolResource, isWosr: false };
}
function Y(e15) {
  const t19 = e15.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);
  if (t19)
    return { fileType: "gltf", url: t19[1], specifiedLodIndex: null != t19[4] ? Number(t19[4]) : null };
  return e15.match(/(.*\.(json|json\.gz))$/) ? { fileType: "wosr", url: e15, specifiedLodIndex: null } : { fileType: "unknown", url: e15, specifiedLodIndex: null };
}
function Z3(e15, t19, r15, o16) {
  const s15 = e15.model, i12 = new Array(), n12 = /* @__PURE__ */ new Map(), l9 = /* @__PURE__ */ new Map(), u11 = s15.lods.length, a12 = P2();
  return s15.lods.forEach((e16, c13) => {
    const m5 = true === o16.skipHighLods && (u11 > 1 && 0 === c13 || u11 > 3 && 1 === c13) || false === o16.skipHighLods && null != o16.singleLodIndex && c13 !== o16.singleLodIndex;
    if (m5 && 0 !== c13)
      return;
    const f9 = new t15(e16.name, e16.lodThreshold, [0, 0, 0]);
    e16.parts.forEach((e17) => {
      const o17 = m5 ? new I2({}) : ee(s15, e17, f9, t19, r15, n12, l9), { geometry: i13, vertexCount: u12 } = te(e17, null != o17 ? o17 : new I2({})), p6 = i13.boundingInfo;
      null != p6 && 0 === c13 && (h2(a12, p6.bbMin), h2(a12, p6.bbMax)), null != o17 && (f9.stageResources.geometries.push(i13), f9.numberOfVertices += u12);
    }), m5 || i12.push(f9);
  }), { engineResources: i12, referenceBoundingBox: a12 };
}
function ee(e15, t19, r15, o16, s15, i12, n12) {
  const l9 = t19.material + (t19.attributes.normal ? "_normal" : "") + (t19.attributes.color ? "_color" : "") + (t19.attributes.texCoord0 ? "_texCoord0" : "") + (t19.attributes.tangent ? "_tangent" : ""), u11 = e15.materials.get(t19.material), a12 = null != t19.attributes.texCoord0, c13 = null != t19.attributes.normal;
  if (null == u11)
    return null;
  const m5 = oe(u11.alphaMode);
  if (!i12.has(l9)) {
    if (a12) {
      const t20 = (t21, r17 = false) => {
        if (null != t21 && !n12.has(t21)) {
          const o17 = e15.textures.get(t21);
          if (null != o17) {
            const e16 = o17.data;
            n12.set(t21, new w4(t8(e16) ? e16.data : e16, { ...o17.parameters, preMultiplyAlpha: !t8(e16) && r17, encoding: t8(e16) && null != e16.encoding ? e16.encoding : void 0 }));
          }
        }
      };
      t20(u11.textureColor, m5 !== i6.Opaque), t20(u11.textureNormal), t20(u11.textureOcclusion), t20(u11.textureEmissive), t20(u11.textureMetallicRoughness);
    }
    const r16 = u11.color[0] ** (1 / o5), f10 = u11.color[1] ** (1 / o5), d4 = u11.color[2] ** (1 / o5), p6 = u11.emissiveFactor[0] ** (1 / o5), g7 = u11.emissiveFactor[1] ** (1 / o5), x4 = u11.emissiveFactor[2] ** (1 / o5), b3 = null != u11.textureColor && a12 ? n12.get(u11.textureColor) : null, h10 = u10({ normalTexture: u11.textureNormal, metallicRoughnessTexture: u11.textureMetallicRoughness, metallicFactor: u11.metallicFactor, roughnessFactor: u11.roughnessFactor, emissiveTexture: u11.textureEmissive, emissiveFactor: u11.emissiveFactor, occlusionTexture: u11.textureOcclusion });
    i12.set(l9, new I2({ ...o16, transparent: m5 === i6.Blend, customDepthTest: e9.Lequal, textureAlphaMode: m5, textureAlphaCutoff: u11.alphaCutoff, diffuse: [r16, f10, d4], ambient: [r16, f10, d4], opacity: u11.opacity, doubleSided: u11.doubleSided, doubleSidedType: "winding-order", cullFace: u11.doubleSided ? n7.None : n7.Back, hasVertexColors: !!t19.attributes.color, hasVertexTangents: !!t19.attributes.tangent, normalType: c13 ? a4.Attribute : a4.ScreenDerivative, castShadows: true, receiveSSAO: true, textureId: null != b3 ? b3.id : void 0, colorMixMode: u11.colorMixMode, normalTextureId: null != u11.textureNormal && a12 ? n12.get(u11.textureNormal).id : void 0, textureAlphaPremultiplied: null != b3 && !!b3.parameters.preMultiplyAlpha, occlusionTextureId: null != u11.textureOcclusion && a12 ? n12.get(u11.textureOcclusion).id : void 0, emissiveTextureId: null != u11.textureEmissive && a12 ? n12.get(u11.textureEmissive).id : void 0, metallicRoughnessTextureId: null != u11.textureMetallicRoughness && a12 ? n12.get(u11.textureMetallicRoughness).id : void 0, emissiveFactor: [p6, g7, x4], mrrFactors: h10 ? [...r14] : [u11.metallicFactor, u11.roughnessFactor, o16.mrrFactors[2]], isSchematic: h10, colorTextureTransformMatrix: r10(u11.colorTextureTransform), normalTextureTransformMatrix: r10(u11.normalTextureTransform), occlusionTextureTransformMatrix: r10(u11.occlusionTextureTransform), emissiveTextureTransformMatrix: r10(u11.emissiveTextureTransform), metallicRoughnessTextureTransformMatrix: r10(u11.metallicRoughnessTextureTransform), ...s15 }));
  }
  const f9 = i12.get(l9);
  if (r15.stageResources.materials.push(f9), a12) {
    const e16 = (e17) => {
      null != e17 && r15.stageResources.textures.push(n12.get(e17));
    };
    e16(u11.textureColor), e16(u11.textureNormal), e16(u11.textureOcclusion), e16(u11.textureEmissive), e16(u11.textureMetallicRoughness);
  }
  return f9;
}
function te(e15, r15) {
  const o16 = e15.attributes.position.count, s15 = o4(e15.indices || o16, e15.primitiveType), i12 = t14(3 * o16), { typedBuffer: n12, typedBufferStride: l9 } = e15.attributes.position;
  r5(i12, n12, e15.transform, 3, l9);
  const u11 = [[O4.POSITION, new s8(i12, 3, true)]], a12 = [[O4.POSITION, s15]];
  if (null != e15.attributes.normal) {
    const r16 = t14(3 * o16), { typedBuffer: i13, typedBufferStride: n13 } = e15.attributes.normal;
    g2(re, e15.transform), n4(r16, i13, re, 3, n13), u11.push([O4.NORMAL, new s8(r16, 3, true)]), a12.push([O4.NORMAL, s15]);
  }
  if (null != e15.attributes.tangent) {
    const r16 = t14(4 * o16), { typedBuffer: i13, typedBufferStride: n13 } = e15.attributes.tangent;
    g2(re, e15.transform), f4(r16, i13, re, 4, n13), u11.push([O4.TANGENT, new s8(r16, 4, true)]), a12.push([O4.TANGENT, s15]);
  }
  if (null != e15.attributes.texCoord0) {
    const t19 = t14(2 * o16), { typedBuffer: r16, typedBufferStride: i13 } = e15.attributes.texCoord0;
    n5(t19, r16, 2, i13), u11.push([O4.UV0, new s8(t19, 2, true)]), a12.push([O4.UV0, s15]);
  }
  if (null != e15.attributes.color) {
    const t19 = new Uint8Array(4 * o16);
    4 === e15.attributes.color.elementCount ? e15.attributes.color instanceof c3 ? u4(t19, e15.attributes.color, 255) : e15.attributes.color instanceof x ? t6(t19, e15.attributes.color) : e15.attributes.color instanceof L && u4(t19, e15.attributes.color, 1 / 256) : (t19.fill(255), e15.attributes.color instanceof i3 ? u3(t19, e15.attributes.color, 255, 4) : e15.attributes.color instanceof O2 ? t5(t19, e15.attributes.color.typedBuffer, 4, e15.attributes.color.typedBufferStride) : e15.attributes.color instanceof E2 && u3(t19, e15.attributes.color, 1 / 256, 4)), u11.push([O4.COLOR, new s8(t19, 4, true)]), a12.push([O4.COLOR, s15]);
  }
  return { geometry: new b(r15, u11, a12), vertexCount: o16 };
}
var re = e5();
function oe(e15) {
  switch (e15) {
    case "BLEND":
      return i6.Blend;
    case "MASK":
      return i6.Mask;
    case "OPAQUE":
    case null:
    case void 0:
      return i6.Opaque;
  }
}
function se(e15, t19) {
  for (let r15 = 0; r15 < e15.model.lods.length; ++r15) {
    const f9 = e15.model.lods[r15];
    for (const d4 of f9.parts) {
      const f10 = d4.attributes.normal;
      if (null == f10)
        return;
      const p6 = d4.attributes.position, g7 = p6.count, b3 = n3(), T6 = n3(), y4 = n3(), R3 = new Uint8Array(4 * g7), w5 = new Float64Array(3 * g7), v6 = h(e6(), d4.transform);
      let M5 = 0, j6 = 0;
      for (let o16 = 0; o16 < g7; o16++) {
        p6.getVec(o16, T6), f10.getVec(o16, b3), O(T6, T6, d4.transform), e4(y4, T6, t19.center), i2(y4, y4, t19.radius);
        const s15 = y4[2], m5 = s5(y4), g8 = Math.min(0.45 + 0.55 * m5 * m5, 1);
        i2(y4, y4, t19.radius), null !== v6 && O(y4, y4, v6), z(y4, y4), r15 + 1 !== e15.model.lods.length && e15.model.lods.length > 1 && A2(y4, y4, b3, s15 > -1 ? 0.2 : Math.min(-4 * s15 - 3.8, 1)), w5[M5] = y4[0], w5[M5 + 1] = y4[1], w5[M5 + 2] = y4[2], M5 += 3, R3[j6] = 255 * g8, R3[j6 + 1] = 255 * g8, R3[j6 + 2] = 255 * g8, R3[j6 + 3] = 255, j6 += 4;
      }
      d4.attributes.normal = new i3(w5), d4.attributes.color = new x(R3);
    }
  }
}
export {
  X as fetch,
  Z3 as gltfToEngineResources,
  Y as parseUrl
};
//# sourceMappingURL=objectResourceUtils-IB56OPSY.js.map
