// node_modules/@arcgis/core/core/byteSizeEstimations.js
function r(r2) {
  return 32 + r2.length;
}
function n(r2) {
  return 16;
}
function t(t2) {
  if (!t2)
    return 0;
  let e2 = f;
  for (const o2 in t2)
    if (t2.hasOwnProperty(o2)) {
      const u2 = t2[o2];
      switch (typeof u2) {
        case "string":
          e2 += r(u2);
          break;
        case "number":
          e2 += n();
          break;
        case "boolean":
          e2 += 4;
      }
    }
  return e2;
}
function e(r2) {
  if (!r2)
    return 0;
  if (Array.isArray(r2))
    return o(r2);
  let n2 = f;
  for (const t2 in r2)
    r2.hasOwnProperty(t2) && (n2 += u(r2[t2]));
  return n2;
}
function o(r2) {
  const n2 = r2.length;
  if (0 === n2 || "number" == typeof r2[0])
    return 32 + 8 * n2;
  let t2 = i;
  for (let e2 = 0; e2 < n2; e2++)
    t2 += u(r2[e2]);
  return t2;
}
function u(t2) {
  switch (typeof t2) {
    case "object":
      return e(t2);
    case "string":
      return r(t2);
    case "number":
      return n();
    case "boolean":
      return 4;
    default:
      return 8;
  }
}
function c(r2, n2) {
  return i + r2.length * n2;
}
var f = 32;
var i = 32;

export {
  t,
  e,
  c
};
//# sourceMappingURL=chunk-7X3AVCRM.js.map
