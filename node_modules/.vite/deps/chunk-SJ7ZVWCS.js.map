{
  "version": 3,
  "sources": ["../../@arcgis/core/views/2d/engine/webgl/BufferPool.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import{unwrapOrThrow as t}from\"../../../../core/maybe.js\";import{FreeList as e}from\"./cpuMapped/FreeList.js\";const s=has(\"esri-2d-log-allocations\");class r{constructor(t,e){this._array=t,this._pool=e}get array(){return this._array}get length(){return this._array.length}static create(t,e){const s=e.acquire(t);return new r(s,e)}expand(t){const e=this._pool.acquire(t);e.set(this._array),this._pool.release(this._array),this._array=e}destroy(){this._pool.release(this._array)}set(t,e){this._array.set(t._array,e)}slice(){const t=this._pool.acquire(this._array.byteLength);return t.set(this._array),new r(t,this._pool)}}class a{constructor(){this._data=new ArrayBuffer(a.BYTE_LENGTH),this._freeList=new e({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 64e6}get buffer(){return this._data}allocate(t){const e=this._freeList.firstFit(t);return null==e?null:new Uint32Array(this._data,e,t/Uint32Array.BYTES_PER_ELEMENT)}free(t){this._freeList.free(t.byteOffset,t.byteLength)}}class i{constructor(){this._bytesAllocated=0,this._pages=[],this._pagesByBuffer=new Map,this._addPage()}destroy(){this._pages=[],this._pagesByBuffer=null}get _bytesTotal(){return this._pages.length*a.BYTE_LENGTH}acquire(e){if(this._bytesAllocated+=e,s&&console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`),e>a.BYTE_LENGTH)return new Uint32Array(e/Uint32Array.BYTES_PER_ELEMENT);for(const t of this._pages){const s=t.allocate(e);if(null!=s)return s}return t(this._addPage().allocate(e),\"Expected to allocate page\")}release(t){this._bytesAllocated-=t.byteLength,s&&console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const e=this._pagesByBuffer.get(t.buffer);e&&e.free(t)}_addPage(){const t=new a;return this._pages.push(t),this._pagesByBuffer.set(t.buffer,t),t}}export{i as BufferPool,r as TypedBuffer};\n"],
  "mappings": "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",
  "names": ["s", "a"]
}
