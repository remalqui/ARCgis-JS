import {
  W
} from "./chunk-X3DVWI3B.js";
import "./chunk-UM5ZV5XB.js";
import "./chunk-SJ7ZVWCS.js";
import "./chunk-W7FXZ6Y5.js";
import "./chunk-LT4GV2NG.js";
import "./chunk-M7TZTH7O.js";
import "./chunk-Y2JGNMOW.js";
import "./chunk-TOXOPWS2.js";
import "./chunk-HSAM6HYE.js";
import "./chunk-7YWQQHOF.js";
import "./chunk-KPMUAI6T.js";
import "./chunk-TBMS67KR.js";
import "./chunk-FZIEP3HG.js";
import "./chunk-N5CR6S5Y.js";
import "./chunk-WON6TZX6.js";
import "./chunk-PEYWLFGJ.js";
import "./chunk-NE5U5H4D.js";
import "./chunk-6YPETR6R.js";
import "./chunk-AER5JAFS.js";
import "./chunk-7HZ72XIE.js";
import {
  d
} from "./chunk-PLCQTNGD.js";
import "./chunk-YM46NRFF.js";
import "./chunk-3Y3ICAIL.js";
import "./chunk-TNXVIMSN.js";
import "./chunk-ZMKH5ZRU.js";
import "./chunk-4NLQ63FV.js";
import "./chunk-Y7HVH6RU.js";
import "./chunk-HZHMZHPT.js";
import "./chunk-UIVGJZCT.js";
import "./chunk-MVR2W3C6.js";
import "./chunk-HPXPYN62.js";
import "./chunk-PM77FW2O.js";
import "./chunk-RNXN3MSP.js";
import "./chunk-A6DRT2G4.js";
import "./chunk-C7U2SKSO.js";
import "./chunk-NVZXNBIH.js";
import "./chunk-GTENSI4J.js";
import "./chunk-CN3PB7HS.js";
import "./chunk-NLX3GR5V.js";
import "./chunk-ZL3HOHNK.js";
import "./chunk-PX3Q44FM.js";
import "./chunk-XYJMHUDA.js";
import "./chunk-CSLWFQJE.js";
import "./chunk-XP6ESZGI.js";
import "./chunk-3VTULECI.js";
import "./chunk-A4HFWKMU.js";
import "./chunk-TDXHXKUI.js";
import "./chunk-PR2OEILG.js";
import "./chunk-PJP6JTP7.js";
import "./chunk-IVABPLLZ.js";
import "./chunk-TBHRKIAA.js";
import "./chunk-34QQ6GDH.js";
import "./chunk-KTII3LWY.js";
import "./chunk-JSMUQBPG.js";
import "./chunk-QAWS7Y22.js";
import "./chunk-OCIERVFA.js";
import "./chunk-QOWAKGE4.js";
import "./chunk-UX5D32RO.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-FF5LS3YE.js";
import "./chunk-BCDDCNQ2.js";
import "./chunk-NYLF7BL2.js";
import "./chunk-YC4PIRSZ.js";
import "./chunk-32JSK7KN.js";
import "./chunk-YIJWIXDP.js";
import "./chunk-KKGVORR5.js";
import "./chunk-WTKN55TU.js";
import "./chunk-TDPKDZC3.js";
import "./chunk-M5UHI5WR.js";
import "./chunk-RR2V4HRU.js";
import "./chunk-WZAASLQW.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import "./chunk-TQGXXOXA.js";
import "./chunk-RADYXGQH.js";
import "./chunk-KKBQS7Z3.js";
import "./chunk-D5NSNTGJ.js";
import "./chunk-OMDLZQUU.js";
import "./chunk-AF36K5Y6.js";
import "./chunk-5K6FTFN4.js";
import "./chunk-QNFDBY7V.js";
import "./chunk-EL72ISXP.js";
import "./chunk-5KLICR5E.js";
import "./chunk-PNA6D76Z.js";
import "./chunk-R2HXL6HT.js";
import "./chunk-2PAQQUAG.js";
import "./chunk-QXPTMFGZ.js";
import "./chunk-4SARN32Z.js";
import "./chunk-QA4FMJA6.js";
import "./chunk-VFQINJTY.js";
import "./chunk-4J6R7QH6.js";
import "./chunk-HB3KZNZ3.js";
import "./chunk-VZAEQ6CY.js";
import "./chunk-SS33L3LC.js";
import "./chunk-X4Y5OF5X.js";
import "./chunk-MUO4EIZP.js";
import "./chunk-42RWGG3D.js";
import "./chunk-LNMNRMVX.js";
import "./chunk-OO4A3EBQ.js";
import "./chunk-ZBWBCN2I.js";
import "./chunk-KTEJJM3A.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-EIE3W25Z.js";
import "./chunk-7KM4XBUC.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-KIEN3CY2.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7E3Q7HTF.js";
import "./chunk-FXDEKQIL.js";
import "./chunk-GJ5WE5D3.js";
import "./chunk-KKGH4SRQ.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-4RFFPIT2.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-7KX64CAH.js";
import "./chunk-J4R3XNTP.js";
import "./chunk-Y6FRAP2R.js";
import "./chunk-BVNZ3ETW.js";
import "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-4H5JODOT.js";
import "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-4NOOGA4U.js";
import "./chunk-CWQ6Q3PH.js";
import {
  h,
  l
} from "./chunk-XN5VV437.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-74O2T7JC.js";
import "./chunk-WBSPL6CJ.js";
import "./chunk-N5ULYWRU.js";
import "./chunk-LQVUN6IS.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-MOIETNWJ.js";
import "./chunk-3GSONYPC.js";
import "./chunk-SFV6XLDZ.js";
import "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import "./chunk-7A5C2EQ3.js";
import "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import "./chunk-2YSHZRCT.js";
import "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import "./chunk-O3CHVGVF.js";
import "./chunk-HNHXEGH2.js";
import "./chunk-DWOEYHKS.js";
import "./chunk-W2N7YT6I.js";
import "./chunk-I5JT24BO.js";
import {
  has
} from "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/2d/layers/SubtypeGroupLayerView2D.js
function n(e2, r) {
  return !e2.visible || 0 !== e2.minScale && r > e2.minScale || 0 !== e2.maxScale && r < e2.maxScale;
}
var l2 = class extends W {
  initialize() {
    this.addHandles([l(() => this.view.scale, () => this._update(), h)], "constructor");
  }
  isUpdating() {
    var _a;
    const e2 = this.layer.sublayers.some((e3) => null != e3.renderer), r = this._commandsQueue.updating, s = null != this._updatingRequiredFieldsPromise, i = !this._proxy || !this._proxy.isReady, t = this._pipelineIsUpdating, a2 = null == this.tileRenderer || ((_a = this.tileRenderer) == null ? void 0 : _a.updating), n2 = e2 && (r || s || i || t || a2);
    return has("esri-2d-log-updating") && console.log(`Updating FLV2D: ${n2}
  -> hasRenderer ${e2}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${i}
  -> updatingPipeline ${t}
  -> updatingTileRenderer ${a2}
`), n2;
  }
  _injectOverrides(e2) {
    let r = super._injectOverrides(e2);
    const s = this.view.scale, i = this.layer.sublayers.filter((e3) => n(e3, s)).map((e3) => e3.subtypeCode);
    if (!i.length)
      return r;
    r = null != r ? r : new d().toJSON();
    const a2 = `NOT ${this.layer.subtypeField} IN (${i.join(",")})`;
    return r.where = r.where ? `(${r.where}) AND (${a2})` : a2, r;
  }
  _setLayersForFeature(e2) {
    const r = this.layer.fieldsIndex.get(this.layer.subtypeField), s = e2.attributes[r.name], i = this.layer.sublayers.find((e3) => e3.subtypeCode === s);
    e2.layer = e2.sourceLayer = i;
  }
  _createSchemaConfig() {
    const e2 = { subtypeField: this.layer.subtypeField, sublayers: Array.from(this.layer.sublayers).map((e3) => ({ featureReduction: null, geometryType: this.layer.geometryType, labelingInfo: e3.labelingInfo, labelsVisible: e3.labelsVisible, renderer: e3.renderer, subtypeCode: e3.subtypeCode, orderBy: null })) }, r = this.layer.sublayers.map((e3) => e3.subtypeCode).join(","), s = this.layer.sublayers.length ? `${this.layer.subtypeField} IN (${r})` : "1=2";
    let i = this.layer.definitionExpression ? this.layer.definitionExpression + " AND " : "";
    return i += s, { ...super._createSchemaConfig(), ...e2, definitionExpression: i };
  }
};
l2 = e([a("esri.views.2d.layers.SubtypeGroupLayerView2D")], l2);
var o = l2;
export {
  o as default
};
//# sourceMappingURL=SubtypeGroupLayerView2D-E63R53ZC.js.map
