import {
  b as b2
} from "./chunk-NZXLLEUL.js";
import {
  t as t3
} from "./chunk-P6EIQMMQ.js";
import {
  t as t4
} from "./chunk-OVCZ34SK.js";
import {
  l
} from "./chunk-BDKC62LO.js";
import {
  M as M2,
  P as P2,
  Z,
  d,
  p as p5
} from "./chunk-CEAO27ON.js";
import {
  A,
  p as p4
} from "./chunk-CIYZZPIM.js";
import {
  B,
  E,
  F2 as F,
  Ge,
  I2 as I,
  J,
  Je,
  K,
  L,
  Le,
  Ne,
  O,
  P2 as P,
  Pe,
  Q,
  U,
  V,
  X,
  Y,
  Ye,
  _,
  _e,
  b,
  ce,
  fe,
  h as h2,
  i,
  ie,
  je,
  me,
  oe,
  pe,
  q,
  se,
  t as t2,
  te,
  v,
  w,
  ye,
  z,
  ze
} from "./chunk-RFI4CCAC.js";
import {
  c as c2
} from "./chunk-YAWND7HF.js";
import {
  p as p3
} from "./chunk-5CIVT7RW.js";
import {
  e,
  t
} from "./chunk-FJYIB7HF.js";
import {
  j as j2
} from "./chunk-7KX64CAH.js";
import {
  p as p2
} from "./chunk-T4XWQYGC.js";
import {
  h,
  j,
  m2 as m,
  u
} from "./chunk-TCASQSKO.js";
import {
  DateTime
} from "./chunk-ODFH3BSN.js";
import {
  c
} from "./chunk-JZM5YUHA.js";
import {
  M
} from "./chunk-3GSONYPC.js";
import {
  f,
  p2 as p,
  x2 as x
} from "./chunk-SFV6XLDZ.js";
import {
  W
} from "./chunk-O3CHVGVF.js";
import {
  T
} from "./chunk-HNHXEGH2.js";
import {
  r
} from "./chunk-DWOEYHKS.js";

// node_modules/@arcgis/core/arcade/treeAnalysis.js
var e2 = { all: { min: 2, max: 2 }, getenvironment: { min: 0, max: 0 }, none: { min: 2, max: 2 }, any: { min: 2, max: 2 }, reduce: { min: 2, max: 3 }, map: { min: 2, max: 2 }, filter: { min: 2, max: 2 }, fromcodepoint: { min: 1, max: -1 }, fromcharcode: { min: 1, max: -1 }, tocodepoint: { min: 1, max: 2 }, tocharcode: { min: 1, max: 2 }, concatenate: { min: 0, max: -1 }, expects: { min: 1, max: -1 }, getfeatureset: { min: 1, max: 2 }, week: { min: 1, max: 2 }, fromjson: { min: 1, max: 1 }, length3d: { min: 1, max: 2 }, tohex: { min: 1, max: 1 }, hash: { min: 1, max: 1 }, timezone: { min: 1, max: 1 }, timezoneoffset: { min: 1, max: 1 }, changetimezone: { min: 2, max: 2 }, isoweek: { min: 1, max: 1 }, isoweekday: { min: 1, max: 1 }, hasvalue: { min: 2, max: 2 }, isomonth: { min: 1, max: 1 }, isoyear: { min: 1, max: 1 }, resize: { min: 2, max: 3 }, slice: { min: 0, max: -1 }, splice: { min: 0, max: -1 }, push: { min: 2, max: 2 }, pop: { min: 1, max: 1 }, includes: { min: 2, max: 2 }, array: { min: 0, max: 2 }, front: { min: 1, max: 1 }, back: { min: 1, max: 1 }, insert: { min: 3, max: 3 }, erase: { min: 2, max: 2 }, split: { min: 2, max: 4 }, guid: { min: 0, max: 1 }, standardizeguid: { min: 2, max: 2 }, today: { min: 0, max: 0 }, angle: { min: 2, max: 3 }, bearing: { min: 2, max: 3 }, urlencode: { min: 1, max: 1 }, now: { min: 0, max: 0 }, timestamp: { min: 0, max: 0 }, day: { min: 1, max: 1 }, month: { min: 1, max: 1 }, year: { min: 1, max: 1 }, hour: { min: 1, max: 1 }, second: { min: 1, max: 1 }, millisecond: { min: 1, max: 1 }, minute: { min: 1, max: 1 }, weekday: { min: 1, max: 1 }, toutc: { min: 1, max: 1 }, tolocal: { min: 1, max: 1 }, date: { min: 0, max: 8 }, datediff: { min: 2, max: 4 }, dateadd: { min: 2, max: 3 }, trim: { min: 1, max: 1 }, text: { min: 1, max: 2 }, left: { min: 2, max: 2 }, right: { min: 2, max: 2 }, mid: { min: 2, max: 3 }, upper: { min: 1, max: 1 }, proper: { min: 1, max: 2 }, lower: { min: 1, max: 1 }, find: { min: 2, max: 3 }, iif: { min: 3, max: 3 }, decode: { min: 2, max: -1 }, when: { min: 2, max: -1 }, defaultvalue: { min: 2, max: 2 }, isempty: { min: 1, max: 1 }, domaincode: { min: 2, max: 4 }, domainname: { min: 2, max: 4 }, polygon: { min: 1, max: 1 }, point: { min: 1, max: 1 }, polyline: { min: 1, max: 1 }, extent: { min: 1, max: 1 }, multipoint: { min: 1, max: 1 }, ringisclockwise: { min: 1, max: 1 }, geometry: { min: 1, max: 1 }, count: { min: 0, max: -1 }, number: { min: 1, max: 2 }, acos: { min: 1, max: 1 }, asin: { min: 1, max: 1 }, atan: { min: 1, max: 1 }, atan2: { min: 2, max: 2 }, ceil: { min: 1, max: 2 }, floor: { min: 1, max: 2 }, round: { min: 1, max: 2 }, cos: { min: 1, max: 1 }, exp: { min: 1, max: 1 }, log: { min: 1, max: 1 }, min: { min: 0, max: -1 }, constrain: { min: 3, max: 3 }, console: { min: 0, max: -1 }, max: { min: 0, max: -1 }, pow: { min: 2, max: 2 }, random: { min: 0, max: 0 }, sqrt: { min: 1, max: 1 }, sin: { min: 1, max: 1 }, tan: { min: 1, max: 1 }, abs: { min: 1, max: 1 }, isnan: { min: 1, max: 1 }, stdev: { min: 0, max: -1 }, average: { min: 0, max: -1 }, mean: { min: 0, max: -1 }, sum: { min: 0, max: -1 }, variance: { min: 0, max: -1 }, distinct: { min: 0, max: -1 }, first: { min: 1, max: 1 }, top: { min: 2, max: 2 }, boolean: { min: 1, max: 1 }, dictionary: { min: 0, max: -1 }, typeof: { min: 1, max: 1 }, reverse: { min: 1, max: 1 }, replace: { min: 3, max: 4 }, sort: { min: 1, max: 2 }, feature: { min: 1, max: -1 }, haskey: { min: 2, max: 2 }, indexof: { min: 2, max: 2 }, disjoint: { min: 2, max: 2 }, intersects: { min: 2, max: 2 }, touches: { min: 2, max: 2 }, crosses: { min: 2, max: 2 }, within: { min: 2, max: 2 }, contains: { min: 2, max: 2 }, overlaps: { min: 2, max: 2 }, equals: { min: 2, max: 2 }, relate: { min: 3, max: 3 }, intersection: { min: 2, max: 2 }, union: { min: 1, max: 2 }, difference: { min: 2, max: 2 }, symmetricdifference: { min: 2, max: 2 }, clip: { min: 2, max: 2 }, cut: { min: 2, max: 2 }, area: { min: 1, max: 2 }, areageodetic: { min: 1, max: 2 }, length: { min: 1, max: 2 }, lengthgeodetic: { min: 1, max: 2 }, distancegeodetic: { min: 2, max: 3 }, distance: { min: 2, max: 3 }, densify: { min: 2, max: 3 }, densifygeodetic: { min: 2, max: 3 }, generalize: { min: 2, max: 4 }, buffer: { min: 2, max: 3 }, buffergeodetic: { min: 2, max: 3 }, offset: { min: 2, max: 6 }, rotate: { min: 2, max: 3 }, issimple: { min: 1, max: 1 }, simplify: { min: 1, max: 1 }, convexhull: { min: 1, max: 1 }, centroid: { min: 1, max: 1 }, nearestcoordinate: { min: 2, max: 2 }, nearestvertex: { min: 2, max: 2 }, isselfintersecting: { min: 1, max: 1 }, multiparttosinglepart: { min: 1, max: 1 }, setgeometry: { min: 2, max: 2 }, portal: { min: 1, max: 1 }, getuser: { min: 0, max: 2 }, subtypes: { min: 1, max: 1 }, subtypecode: { min: 1, max: 1 }, subtypename: { min: 1, max: 1 }, domain: { min: 2, max: 3 }, convertdirection: { min: 3, max: 3 }, sqltimestamp: { min: 1, max: 3 }, schema: { min: 1, max: 1 } };
var n = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
var a = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
for (const b4 of ["pi", "infinity"])
  a.constantDefinitions.set(b4, { type: "constant" }), n.constantDefinitions.set(b4, { type: "constant" });
a.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "newline", type: "constant" }] }), n.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "newline", type: "constant" }] });
for (const b4 in e2) {
  const t7 = e2[b4];
  a.functionDefinitions.set(b4, { overloads: [{ type: "function", parametersInfo: { min: t7.min, max: t7.max } }] }), n.functionDefinitions.set(b4, { overloads: [{ type: "function", parametersInfo: { min: t7.min, max: t7.max } }] });
}
var t5 = ["featureset", "featuresetbyid", "featuresetbyname", "featuresetbyassociation", "featuresetbyrelationshipname", "featuresetbyurl", "getfeatureset", "getuser", "attachments", "featuresetbyportalitem"];
var i2 = ["disjoint", "intersects", "touches", "crosses", "within", "contains", "overlaps", "equals", "relate", "intersection", "nearestvertex", "nearestcoordinate", "union", "difference", "symmetricdifference", "clip", "cut", "area", "areageodetic", "length", "length3d", "lengthgeodetic", "distance", "distancegeodetic", "densify", "densifygeodetic", "generalize", "buffer", "buffergeodetic", "offset", "rotate", "issimple", "convexhull", "simplify", "multiparttosinglepart"];
function m2(e4) {
  return "string" == typeof e4 || e4 instanceof String;
}
function o(e4, t7) {
  var _a;
  const i4 = "sync" === t7 ? n : a;
  i4.functionDefinitions.has(e4.name.toLowerCase()) ? (_a = i4.functionDefinitions.get(e4.name.toLowerCase())) == null ? void 0 : _a.overloads.push({ type: "function", parametersInfo: { min: e4.min, max: e4.max } }) : i4.functionDefinitions.set(e4.name.toLowerCase(), { overloads: [{ type: "function", parametersInfo: { min: e4.min, max: e4.max } }] });
}
function s(e4, n3) {
  if (e4)
    for (const a3 of e4)
      r2(a3, n3);
}
function r2(e4, n3) {
  if (e4 && false !== n3(e4))
    switch (e4.type) {
      case "ImportDeclaration":
        s(e4.specifiers, n3), r2(e4.source, n3);
        break;
      case "ExportNamedDeclaration":
        r2(e4.declaration, n3);
        break;
      case "ArrayExpression":
        s(e4.elements, n3);
        break;
      case "AssignmentExpression":
      case "BinaryExpression":
      case "LogicalExpression":
        r2(e4.left, n3), r2(e4.right, n3);
        break;
      case "BlockStatement":
      case "Program":
        s(e4.body, n3);
        break;
      case "BreakStatement":
      case "ContinueStatement":
      case "EmptyStatement":
      case "Identifier":
      case "Literal":
        break;
      case "CallExpression":
        r2(e4.callee, n3), s(e4.arguments, n3);
        break;
      case "ExpressionStatement":
        r2(e4.expression, n3);
        break;
      case "ForInStatement":
        r2(e4.left, n3), r2(e4.right, n3), r2(e4.body, n3);
        break;
      case "ForStatement":
        r2(e4.init, n3), r2(e4.test, n3), r2(e4.update, n3), r2(e4.body, n3);
        break;
      case "WhileStatement":
        r2(e4.test, n3), r2(e4.body, n3);
        break;
      case "FunctionDeclaration":
        r2(e4.id, n3), s(e4.params, n3), r2(e4.body, n3);
        break;
      case "IfStatement":
        r2(e4.test, n3), r2(e4.consequent, n3), r2(e4.alternate, n3);
        break;
      case "MemberExpression":
        r2(e4.object, n3), r2(e4.property, n3);
        break;
      case "ObjectExpression":
        s(e4.properties, n3);
        break;
      case "Property":
        r2(e4.key, n3), r2(e4.value, n3);
        break;
      case "ReturnStatement":
      case "UnaryExpression":
      case "UpdateExpression":
        r2(e4.argument, n3);
        break;
      case "VariableDeclaration":
        s(e4.declarations, n3);
        break;
      case "VariableDeclarator":
        r2(e4.id, n3), r2(e4.init, n3);
        break;
      case "TemplateLiteral":
        s(e4.expressions, n3), s(e4.quasis, n3);
    }
}
function c3(e4, n3) {
  let a3 = false;
  const t7 = n3.toLowerCase();
  return r2(e4, (e5) => !a3 && ("Identifier" === e5.type && e5.name && e5.name.toLowerCase() === t7 && (a3 = true), true)), a3;
}
function x2(e4) {
  const n3 = [];
  return r2(e4, (e5) => ("ImportDeclaration" === e5.type && e5.source && e5.source.value && n3.push({ libname: e5.specifiers[0].local.name.toLowerCase(), source: e5.source.value }), true)), n3;
}
function p6(e4, n3) {
  let a3 = false;
  const t7 = n3.toLowerCase();
  return r2(e4, (e5) => !a3 && ("CallExpression" !== e5.type || "Identifier" !== e5.callee.type || !e5.callee.name || e5.callee.name.toLowerCase() !== t7 || (a3 = true, false))), a3;
}
function l2(e4) {
  const n3 = [];
  return r2(e4, (e5) => {
    var _a;
    return "MemberExpression" !== e5.type || "Identifier" !== e5.object.type || (false === e5.computed && e5.object && e5.object.name && e5.property && "Identifier" === e5.property.type && e5.property.name ? n3.push(e5.object.name.toLowerCase() + "." + e5.property.name.toLowerCase()) : e5.object && e5.object.name && e5.property && "Literal" === e5.property.type && "string" == typeof e5.property.value && n3.push(e5.object.name.toLowerCase() + "." + ((_a = e5.property.value) == null ? void 0 : _a.toString().toLowerCase())), false);
  }), n3;
}
function u2(e4) {
  const n3 = [];
  return r2(e4, (e5) => {
    var _a;
    if ("CallExpression" === e5.type) {
      if ("Identifier" === e5.callee.type && "expects" === e5.callee.name.toLowerCase()) {
        let a3 = "";
        for (let t7 = 0; t7 < (e5.arguments || []).length; t7++)
          0 === t7 ? "Identifier" === e5.arguments[t7].type && (a3 = e5.arguments[t7].name.toLowerCase()) : a3 && "Literal" === e5.arguments[t7].type && m2(e5.arguments[t7].value) && n3.push(a3 + "." + e5.arguments[t7].value.toLowerCase());
        return false;
      }
      if ("Identifier" === e5.callee.type && ["domainname", "domaincode", "domain", "haskey"].includes(e5.callee.name.toLowerCase()) && e5.arguments.length >= 2) {
        let a3 = "";
        return "Identifier" === e5.arguments[0].type && (a3 = e5.arguments[0].name.toLowerCase()), a3 && "Literal" === e5.arguments[1].type && m2(e5.arguments[1].value) && n3.push(a3 + "." + e5.arguments[1].value.toLowerCase()), false;
      }
    }
    return "MemberExpression" !== e5.type || "Identifier" !== e5.object.type || (false === e5.computed && e5.object && e5.object.name && e5.property && "Identifier" === e5.property.type && e5.property.name ? n3.push(e5.object.name.toLowerCase() + "." + e5.property.name.toLowerCase()) : e5.object && e5.object.name && e5.property && "Literal" === e5.property.type && "string" == typeof e5.property.value && n3.push(e5.object.name.toLowerCase() + "." + ((_a = e5.property.value) == null ? void 0 : _a.toString().toLowerCase())), false);
  }), n3;
}
function y(e4) {
  const n3 = [];
  return r2(e4, (e5) => ("CallExpression" === e5.type && "Identifier" === e5.callee.type && n3.push(e5.callee.name.toLowerCase()), true)), n3;
}
function d2(e4, n3 = []) {
  let a3 = null;
  if (void 0 === e4.usesFeatureSet) {
    null === a3 && (a3 = y(e4)), e4.usesFeatureSet = false;
    for (let n4 = 0; n4 < a3.length; n4++)
      t5.includes(a3[n4]) && (e4.usesFeatureSet = true, e4.isAsync = true);
    if (false === e4.usesFeatureSet && n3 && n3.length > 0) {
      for (const a4 of n3)
        if (c3(e4, a4)) {
          e4.usesFeatureSet = true, e4.isAsync = true;
          break;
        }
    }
  }
  if (void 0 === e4.usesModules) {
    e4.usesModules = false;
    x2(e4).length > 0 && (e4.usesModules = true);
  }
  if (void 0 === e4.usesGeometry) {
    e4.usesGeometry = false, null === a3 && (a3 = y(e4));
    for (let n4 = 0; n4 < a3.length; n4++)
      i2.includes(a3[n4]) && (e4.usesGeometry = true);
  }
}

// node_modules/@arcgis/core/chunks/array.js
function F2(F4) {
  function p9(n3, o2, u3) {
    if (n3 instanceof t2)
      return n3.toArray();
    if (z(n3))
      return n3;
    throw new t(o2, e.InvalidParameter, u3);
  }
  function y4(n3, t7) {
    const r4 = n3.length, e4 = Math.floor(r4 / 2);
    return 0 === r4 ? [] : 1 === r4 ? [n3[0]] : v3(y4(n3.slice(0, e4), t7), y4(n3.slice(e4, r4), t7), t7);
  }
  function v3(n3, t7, r4) {
    const e4 = [];
    for (; n3.length > 0 || t7.length > 0; )
      if (n3.length > 0 && t7.length > 0) {
        let o2 = r4(n3[0], t7[0]);
        isNaN(o2) && (o2 = 0), o2 <= 0 ? (e4.push(n3[0]), n3 = n3.slice(1)) : (e4.push(t7[0]), t7 = t7.slice(1));
      } else
        n3.length > 0 ? (e4.push(n3[0]), n3 = n3.slice(1)) : t7.length > 0 && (e4.push(t7[0]), t7 = t7.slice(1));
    return e4;
  }
  async function P4(n3, t7) {
    const r4 = n3.length, e4 = Math.floor(r4 / 2);
    if (0 === r4)
      return [];
    if (1 === r4)
      return [n3[0]];
    const o2 = [await P4(n3.slice(0, e4), t7), await P4(n3.slice(e4, r4), t7)];
    return I3(o2[0], o2[1], t7, []);
  }
  async function I3(n3, t7, r4, e4) {
    const o2 = e4;
    if (!(n3.length > 0 || t7.length > 0))
      return e4;
    if (n3.length > 0 && t7.length > 0) {
      let i4 = await r4(n3[0], t7[0]);
      return isNaN(i4) && (i4 = 1), i4 <= 0 ? (o2.push(n3[0]), n3 = n3.slice(1)) : (o2.push(t7[0]), t7 = t7.slice(1)), I3(n3, t7, r4, e4);
    }
    return n3.length > 0 ? (o2.push(n3[0]), I3(n3 = n3.slice(1), t7, r4, e4)) : t7.length > 0 ? (o2.push(t7[0]), I3(n3, t7 = t7.slice(1), r4, e4)) : void 0;
  }
  function O3(n3, e4, u3, a3) {
    Q(u3, 1, 2, n3, e4);
    let s4 = u3[0];
    if (q(s4) && (s4 = s4.toArray()), false === z(s4))
      throw new t(n3, e.InvalidParameter, e4);
    if (u3.length > 1) {
      if (false === O(u3[1]))
        throw new t(n3, e.InvalidParameter, e4);
      let o2 = s4;
      const i4 = u3[1].createFunction(n3);
      return a3 ? P4(o2, i4) : (o2 = y4(o2, (n4, t7) => i4(n4, t7)), o2);
    }
    let l5 = s4;
    if (0 === l5.length)
      return [];
    const d4 = {};
    for (let t7 = 0; t7 < l5.length; t7++) {
      const n4 = _(l5[t7]);
      "" !== n4 && (d4[n4] = true);
    }
    if (true === d4.Array || true === d4.Dictionary || true === d4.Feature || true === d4.Point || true === d4.Polygon || true === d4.Polyline || true === d4.Multipoint || true === d4.Extent || true === d4.Function)
      return l5.slice(0);
    let m4 = 0, F5 = "";
    for (const t7 in d4)
      m4++, F5 = t7;
    return l5 = m4 > 1 || "String" === F5 ? y4(l5, (n4, t7) => {
      if (null == n4 || n4 === F)
        return null == t7 || t7 === F ? 0 : 1;
      if (null == t7 || t7 === F)
        return -1;
      const r4 = oe(n4), e5 = oe(t7);
      return r4 < e5 ? -1 : r4 === e5 ? 0 : 1;
    }) : "Number" === F5 ? y4(l5, (n4, t7) => n4 - t7) : "Boolean" === F5 ? y4(l5, (n4, t7) => n4 === t7 ? 0 : t7 ? -1 : 1) : "Date" === F5 ? y4(l5, (n4, t7) => t7 - n4) : l5.slice(0), l5;
  }
  F4.functions.array = function(e4, f3) {
    return F4.standardFunction(e4, f3, (d4, h5, w4) => {
      if (Q(w4, 0, 2, e4, f3), 0 === w4.length)
        return new Array();
      if (1 === w4.length && null === w4[0])
        return new Array();
      if (z(w4[0])) {
        if (2 === w4.length && false === Y(w4[1]))
          throw new t(e4, e.InvalidParameter, f3);
        return true === v(w4[1], false) ? p4(w4[0]) : w4[0].slice(0);
      }
      if (q(w4[0])) {
        if (2 === w4.length && false === Y(w4[1]))
          throw new t(e4, e.InvalidParameter, f3);
        return true === v(w4[1], false) ? p4(w4[0]) : w4[0].toArray().slice(0);
      }
      const g2 = fe(w4[0]);
      if (isNaN(g2) || false === P(g2))
        throw new t(e4, e.InvalidParameter, f3);
      const m4 = v(w4[1], null), F5 = new Array(g2);
      return F5.fill(m4), F5;
    });
  }, F4.functions.front = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, a3, s4) => {
      if (Q(s4, 1, 1, n3, e4), q(s4[0])) {
        if (s4[0].length() <= 0)
          throw new t(n3, e.OutOfBounds, e4);
        return s4[0].get(0);
      }
      if (z(s4[0])) {
        if (s4[0].length <= 0)
          throw new t(n3, e.OutOfBounds, e4);
        return s4[0][0];
      }
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.back = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, a3, s4) => {
      if (Q(s4, 1, 1, n3, e4), q(s4[0])) {
        if (s4[0].length() <= 0)
          throw new t(n3, e.OutOfBounds, e4);
        return s4[0].get(s4[0].length() - 1);
      }
      if (z(s4[0])) {
        if (s4[0].length <= 0)
          throw new t(n3, e.OutOfBounds, e4);
        return s4[0][s4[0].length - 1];
      }
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.push = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, a3, c4) => {
      if (Q(c4, 1, 2, n3, e4), z(c4[0]))
        return c4[0][c4[0].length] = c4[1], c4[0].length;
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.pop = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, a3, c4) => {
      if (Q(c4, 1, 1, n3, e4), z(c4[0])) {
        if (c4[0].length <= 0)
          throw new t(n3, e.OutOfBounds, e4);
        const o2 = c4[0][c4[0].length - 1];
        return c4[0].length = c4[0].length - 1, o2;
      }
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.erase = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, a3, c4) => {
      if (Q(c4, 2, 2, n3, e4), z(c4[0])) {
        let o2 = fe(c4[1]);
        if (isNaN(o2) || false === P(o2))
          throw new t(n3, e.InvalidParameter, e4);
        const i4 = c4[0];
        if (i4.length <= 0)
          throw new t(n3, e.OutOfBounds, e4);
        if (o2 < 0 && (o2 = i4.length + o2), o2 < 0)
          throw new t(n3, e.OutOfBounds, e4);
        if (o2 >= i4.length)
          throw new t(n3, e.OutOfBounds, e4);
        return i4.splice(o2, 1), F;
      }
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.insert = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, a3, c4) => {
      if (Q(c4, 3, 3, n3, e4), z(c4[0])) {
        const o2 = fe(c4[1]);
        if (isNaN(o2) || false === P(o2))
          throw new t(n3, e.InvalidParameter, e4);
        const i4 = c4[2], u4 = c4[0];
        if (o2 > u4.length)
          throw new t(n3, e.OutOfBounds, e4);
        if (o2 < 0 && o2 < -1 * u4.length)
          throw new t(n3, e.OutOfBounds, e4);
        return o2 === u4.length ? (u4[o2] = i4, F) : (u4.splice(o2, 0, i4), F);
      }
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.resize = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, c4, d4) => {
      if (Q(d4, 2, 3, n3, e4), z(d4[0])) {
        const o2 = fe(d4[1]);
        if (isNaN(o2) || false === P(o2))
          throw new t(n3, e.InvalidParameter, e4);
        if (o2 < 0)
          throw new t(n3, e.InvalidParameter, e4);
        const i4 = v(d4[2], null), u4 = d4[0];
        if (u4.length >= o2)
          return u4.length = o2, F;
        const c5 = u4.length;
        u4.length = o2;
        for (let n4 = c5; n4 < u4.length; n4++)
          u4[n4] = i4;
        return F;
      }
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.includes = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, a3, s4) => {
      if (Q(s4, 2, 2, n3, e4), z(s4[0])) {
        const n4 = s4[1];
        return s4[0].findIndex((t7) => ie(t7, n4)) > -1;
      }
      if (q(s4[0])) {
        const n4 = s4[1];
        return s4[0].toArray().findIndex((t7) => ie(t7, n4)) > -1;
      }
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.slice = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, f3, d4) => {
      if (Q(d4, 1, 3, n3, e4), z(d4[0])) {
        const o2 = fe(v(d4[1], 0)), i4 = fe(v(d4[2], d4[0].length));
        if (isNaN(o2) || false === P(o2))
          throw new t(n3, e.InvalidParameter, e4);
        if (isNaN(i4) || false === P(i4))
          throw new t(n3, e.InvalidParameter, e4);
        return d4[0].slice(o2, i4);
      }
      if (q(d4[0])) {
        const o2 = d4[0], i4 = fe(v(d4[1], 0)), u4 = fe(v(d4[2], o2.length()));
        if (isNaN(i4) || false === P(i4))
          throw new t(n3, e.InvalidParameter, e4);
        if (isNaN(u4) || false === P(u4))
          throw new t(n3, e.InvalidParameter, e4);
        return o2.toArray().slice(i4, u4);
      }
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.splice = function(n3, t7) {
    return F4.standardFunction(n3, t7, (n4, t8, r4) => {
      const e4 = [];
      for (let o2 = 0; o2 < r4.length; o2++)
        z(r4[o2]) ? e4.push(...r4[o2]) : q(r4[o2]) ? e4.push(...r4[o2].toArray()) : e4.push(r4[o2]);
      return e4;
    });
  }, F4.functions.top = function(n3, e4) {
    return F4.standardFunction(n3, e4, (u3, a3, l5) => {
      if (Q(l5, 2, 2, n3, e4), z(l5[0]))
        return fe(l5[1]) >= l5[0].length ? l5[0].slice(0) : l5[0].slice(0, fe(l5[1]));
      if (q(l5[0]))
        return fe(l5[1]) >= l5[0].length() ? l5[0].slice(0) : l5[0].slice(0, fe(l5[1]));
      throw new t(n3, e.InvalidParameter, e4);
    });
  }, F4.functions.first = function(n3, t7) {
    return F4.standardFunction(n3, t7, (r4, e4, u3) => (Q(u3, 1, 1, n3, t7), z(u3[0]) ? 0 === u3[0].length ? null : u3[0][0] : q(u3[0]) ? 0 === u3[0].length() ? null : u3[0].get(0) : null));
  }, "sync" === F4.mode && (F4.functions.sort = function(n3, t7) {
    return F4.standardFunction(n3, t7, (r4, e4, o2) => O3(n3, t7, o2, false));
  }, F4.functions.any = function(n3, t7) {
    return F4.standardFunction(n3, t7, (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const a3 = i4[1].createFunction(n3), c4 = p9(i4[0], n3, t7);
      for (const n4 of c4) {
        const t8 = a3(n4);
        if (Y(t8) && true === t8)
          return true;
      }
      return false;
    });
  }, F4.functions.all = function(n3, t7) {
    return F4.standardFunction(n3, t7, (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const u3 = i4[1].createFunction(n3), a3 = p9(i4[0], n3, t7);
      for (const n4 of a3) {
        if (true !== u3(n4))
          return false;
      }
      return true;
    });
  }, F4.functions.none = function(n3, t7) {
    return F4.standardFunction(n3, t7, (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const u3 = i4[1].createFunction(n3), a3 = p9(i4[0], n3, t7);
      for (const n4 of a3) {
        if (true === u3(n4))
          return false;
      }
      return true;
    });
  }, F4.functions.reduce = function(n3, t7) {
    return F4.standardFunction(n3, t7, (r4, e4, i4) => {
      Q(i4, 2, 3, n3, t7);
      const u3 = i4[1].createFunction(n3), a3 = p9(i4[0], n3, t7);
      return 2 === i4.length ? 0 === a3.length ? null : a3.reduce((n4, t8) => {
        const r5 = u3(n4, t8);
        return n4 = void 0 !== r5 && r5 !== F ? r5 : null;
      }) : a3.reduce((n4, t8) => {
        const r5 = u3(n4, t8);
        return n4 = void 0 !== r5 && r5 !== F ? r5 : null;
      }, i4[2]);
    });
  }, F4.functions.map = function(n3, t7) {
    return F4.standardFunction(n3, t7, (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const u3 = i4[1].createFunction(n3), a3 = p9(i4[0], n3, t7), c4 = [];
      for (const n4 of a3) {
        const t8 = u3(n4);
        void 0 !== t8 && t8 !== F ? c4.push(t8) : c4.push(null);
      }
      return c4;
    });
  }, F4.functions.filter = function(n3, t7) {
    return F4.standardFunction(n3, t7, (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const u3 = i4[1].createFunction(n3), a3 = p9(i4[0], n3, t7), c4 = [];
      for (const n4 of a3) {
        true === u3(n4) && c4.push(n4);
      }
      return c4;
    });
  }), "async" === F4.mode && (F4.functions.sort = function(n3, t7) {
    return F4.standardFunctionAsync(n3, t7, (r4, e4, o2) => O3(n3, t7, o2, true));
  }, F4.functions.any = function(n3, t7) {
    return F4.standardFunctionAsync(n3, t7, async (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const a3 = i4[1].createFunction(n3), c4 = p9(i4[0], n3, t7);
      for (const n4 of c4) {
        const t8 = await a3(n4);
        let r5 = null;
        if (r5 = T(r5) ? await t8 : t8, Y(r5) && true === r5)
          return true;
      }
      return false;
    });
  }, F4.functions.all = function(n3, t7) {
    return F4.standardFunctionAsync(n3, t7, async (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const u3 = i4[1].createFunction(n3), a3 = p9(i4[0], n3, t7);
      for (const n4 of a3) {
        const t8 = await u3(n4);
        let r5 = null;
        if (r5 = T(r5) ? await t8 : t8, true !== r5)
          return false;
      }
      return true;
    });
  }, F4.functions.none = function(n3, t7) {
    return F4.standardFunctionAsync(n3, t7, async (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const u3 = i4[1].createFunction(n3), a3 = p9(i4[0], n3, t7);
      for (const n4 of a3) {
        const t8 = await u3(n4);
        let r5 = null;
        if (r5 = T(r5) ? await t8 : t8, true === r5)
          return false;
      }
      return true;
    });
  }, F4.functions.filter = function(n3, t7) {
    return F4.standardFunctionAsync(n3, t7, async (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const u3 = i4[1].createFunction(n3), a3 = p9(i4[0], n3, t7), c4 = [];
      for (const n4 of a3) {
        const t8 = await u3(n4);
        let r5 = null;
        r5 = T(r5) ? await t8 : t8, true === r5 && c4.push(n4);
      }
      return c4;
    });
  }, F4.functions.reduce = function(n3, t7) {
    return F4.standardFunctionAsync(n3, t7, (r4, e4, i4) => {
      Q(i4, 2, 3, n3, t7);
      const u3 = i4[1].createFunction(n3), c4 = p9(i4[0], n3, t7);
      let s4 = null;
      if (i4.length > 2) {
        const n4 = v(i4[2], null);
        s4 = c4.reduce(async (n5, t8) => {
          let r5 = await n5;
          return void 0 !== r5 && r5 !== F || (r5 = null), u3(r5, t8);
        }, Promise.resolve(n4));
      } else {
        if (0 === c4.length)
          return null;
        s4 = c4.reduce(async (n4, t8, r5) => {
          if (r5 <= 1)
            return u3(n4, t8);
          let e5 = await n4;
          return void 0 !== e5 && e5 !== F || (e5 = null), u3(e5, t8);
        });
      }
      return s4.then((n4) => void 0 !== n4 && n4 !== F ? n4 : null);
    });
  }, F4.functions.map = function(n3, t7) {
    return F4.standardFunctionAsync(n3, t7, async (r4, e4, i4) => {
      Q(i4, 2, 2, n3, t7);
      const u3 = i4[1].createFunction(n3), a3 = p9(i4[0], n3, t7), c4 = [];
      for (const n4 of a3) {
        const t8 = await u3(n4);
        let r5 = null;
        r5 = T(r5) ? await t8 : t8, void 0 !== r5 && r5 !== F ? c4.push(r5) : c4.push(null);
      }
      return c4;
    });
  });
}
var p7 = Object.freeze(Object.defineProperty({ __proto__: null, registerFunctions: F2 }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/arcade/functions/date.js
function h3(n3, e4, t7) {
  return n3 + (N(t7) ? A2 : y2)[e4];
}
function N(n3) {
  return n3 % 4 == 0 && (n3 % 100 != 0 || n3 % 400 == 0);
}
var y2 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var A2 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function w2(n3) {
  return null === n3 ? n3 : false === n3.isValid ? null : n3;
}
function D(n3, e4) {
  return "" === n3 || "default" === n3.toLowerCase().trim() ? Pe(e4) : n3;
}
function T2(N4, y4) {
  N4.today = function(r4, o2) {
    return y4(r4, o2, (a3, s4, u3) => {
      Q(u3, 0, 0, r4, o2);
      const c4 = /* @__PURE__ */ new Date();
      return c4.setHours(0, 0, 0, 0), c2.dateJSAndZoneToArcadeDate(c4, Pe(r4));
    });
  }, N4.changetimezone = function(a3, s4) {
    return y4(a3, s4, (u3, c4, l5) => {
      Q(l5, 2, 2, a3, s4);
      const i4 = ce(l5[0], Pe(a3));
      if (null === i4)
        return null;
      const f3 = c2.arcadeDateAndZoneToArcadeDate(i4, D(oe(l5[1]), a3));
      return false === f3.isValid ? null : f3;
    });
  }, N4.timezone = function(o2, a3) {
    return y4(o2, a3, (s4, u3, c4) => {
      Q(c4, 1, 2, o2, a3);
      const l5 = ce(c4[0], Pe(o2));
      if (null === l5)
        return null;
      const i4 = l5.timeZone;
      return "system" === i4 ? c2.systemTimeZoneCanonicalName : i4;
    });
  }, N4.timezoneoffset = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? null : c4.timeZoneOffset;
    });
  }, N4.now = function(r4, o2) {
    return y4(r4, o2, (a3, s4, u3) => {
      Q(u3, 0, 0, r4, o2);
      const c4 = c2.nowToArcadeDate(Pe(r4));
      return false === c4.isValid ? null : c4;
    });
  }, N4.timestamp = function(t7, r4) {
    return y4(t7, r4, (o2, a3, s4) => {
      Q(s4, 0, 0, t7, r4);
      const u3 = c2.nowUTCToArcadeDate();
      return false === u3.isValid ? null : u3;
    });
  }, N4.toutc = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? null : c4.toUTC();
    });
  }, N4.tolocal = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? null : c4.toLocal();
    });
  }, N4.day = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.day;
    });
  }, N4.month = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.monthJS;
    });
  }, N4.year = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.year;
    });
  }, N4.hour = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.hour;
    });
  }, N4.second = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.second;
    });
  }, N4.millisecond = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.millisecond;
    });
  }, N4.minute = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.minute;
    });
  }, N4.week = function(n3, o2) {
    return y4(n3, o2, (u3, c4, l5) => {
      Q(l5, 1, 2, n3, o2);
      const d4 = ce(l5[0], Pe(n3));
      if (null === d4)
        return NaN;
      const m4 = fe(v(l5[1], 0));
      if (m4 < 0 || m4 > 6)
        throw new t(n3, e.InvalidParameter, o2);
      const N5 = d4.day, y5 = d4.monthJS, A5 = d4.year, w4 = d4.dayOfWeekJS, D3 = h3(N5, y5, A5) - 1, T4 = Math.floor(D3 / 7);
      return w4 - m4 + (w4 - m4 < 0 ? 7 : 0) < D3 - 7 * T4 ? T4 + 1 : T4;
    });
  }, N4.weekday = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.dayOfWeekJS;
    });
  }, N4.isoweekday = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.dayOfWeekISO;
    });
  }, N4.isomonth = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.monthISO;
    });
  }, N4.isoweek = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.weekISO;
    });
  }, N4.isoyear = function(n3, o2) {
    return y4(n3, o2, (a3, s4, u3) => {
      Q(u3, 1, 1, n3, o2);
      const c4 = ce(u3[0], Pe(n3));
      return null === c4 ? NaN : c4.yearISO;
    });
  }, N4.date = function(s4, l5) {
    return y4(s4, l5, (i4, f3, h5) => {
      if (Q(h5, 0, 8, s4, l5), 3 === h5.length)
        return w2(c2.fromParts(fe(h5[0]), fe(h5[1]) + 1, fe(h5[2]), 0, 0, 0, 0, Pe(s4)));
      if (4 === h5.length)
        return w2(c2.fromParts(fe(h5[0]), fe(h5[1]) + 1, fe(h5[2]), fe(h5[3]), 0, 0, 0, Pe(s4)));
      if (5 === h5.length)
        return w2(c2.fromParts(fe(h5[0]), fe(h5[1]) + 1, fe(h5[2]), fe(h5[3]), fe(h5[4]), 0, 0, Pe(s4)));
      if (6 === h5.length)
        return w2(c2.fromParts(fe(h5[0]), fe(h5[1]) + 1, fe(h5[2]), fe(h5[3]), fe(h5[4]), fe(h5[5]), 0, Pe(s4)));
      if (7 === h5.length)
        return w2(c2.fromParts(fe(h5[0]), fe(h5[1]) + 1, fe(h5[2]), fe(h5[3]), fe(h5[4]), fe(h5[5]), fe(h5[6]), Pe(s4)));
      if (8 === h5.length)
        return w2(c2.fromParts(fe(h5[0]), fe(h5[1]) + 1, fe(h5[2]), fe(h5[3]), fe(h5[4]), fe(h5[5]), fe(h5[6]), D(oe(h5[7]), s4)));
      if (2 === h5.length) {
        let e4, t7 = oe(h5[1]);
        return "" === t7 ? null : (t7 = te(t7), e4 = "X" === t7 ? DateTime.fromSeconds(fe(h5[0])) : "x" === t7 ? DateTime.fromMillis(fe(h5[0])) : DateTime.fromFormat(oe(h5[0]), t7, { locale: c(), numberingSystem: "latn" }), e4.isValid ? c2.dateTimeToArcadeDate(e4) : null);
      }
      if (1 === h5.length) {
        if (L(h5[0])) {
          if ("" === h5[0].replaceAll(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""))
            return null;
          if (true === /^[0-9][0-9][0-9][0-9]$/.test(h5[0]))
            return ce(h5[0] + "-01-01", Pe(s4));
        }
        const e4 = fe(h5[0]);
        if (false === isNaN(e4)) {
          const r4 = DateTime.fromMillis(e4);
          return r4.isValid ? c2.dateTimeAndZoneToArcadeDate(r4, Pe(s4)) : null;
        }
        return ce(h5[0], Pe(s4));
      }
      return 0 === h5.length ? c2.nowToArcadeDate(Pe(s4)) : null;
    });
  }, N4.datediff = function(a3, u3) {
    return y4(a3, u3, (c4, l5, i4) => {
      Q(i4, 2, 4, a3, u3);
      let f3 = ce(i4[0], Pe(a3)), d4 = ce(i4[1], Pe(a3));
      if (null === f3 || null === d4)
        return NaN;
      let m4 = v(i4[3], "");
      switch ("" !== m4 && null !== m4 ? (m4 = oe(m4), f3 = c2.arcadeDateAndZoneToArcadeDate(f3, m4), d4 = c2.arcadeDateAndZoneToArcadeDate(d4, m4)) : f3.timeZone !== d4.timeZone && (f3.isUnknownTimeZone ? f3 = c2.arcadeDateAndZoneToArcadeDate(f3, d4.timeZone) : d4 = (d4.isUnknownTimeZone, c2.arcadeDateAndZoneToArcadeDate(d4, f3.timeZone))), oe(i4[2]).toLowerCase()) {
        case "days":
        case "day":
        case "d":
          return f3.diff(d4, "days");
        case "months":
        case "month":
          return f3.diff(d4, "months");
        case "minutes":
        case "minute":
        case "m":
          return "M" === i4[2] ? f3.diff(d4, "months") : f3.diff(d4, "minutes");
        case "seconds":
        case "second":
        case "s":
          return f3.diff(d4, "seconds");
        case "milliseconds":
        case "millisecond":
        case "ms":
        default:
          return f3.diff(d4);
        case "hours":
        case "hour":
        case "h":
          return f3.diff(d4, "hours");
        case "years":
        case "year":
        case "y":
          return f3.diff(d4, "years");
      }
    });
  }, N4.dateadd = function(n3, s4) {
    return y4(n3, s4, (u3, c4, i4) => {
      Q(i4, 2, 3, n3, s4);
      const f3 = ce(i4[0], Pe(n3));
      if (null === f3)
        return null;
      let d4 = fe(i4[1]);
      if (isNaN(d4))
        return f3;
      let m4 = "milliseconds";
      switch (oe(i4[2]).toLowerCase()) {
        case "days":
        case "day":
        case "d":
          m4 = "days", d4 = X(d4);
          break;
        case "months":
        case "month":
          m4 = "months", d4 = X(d4);
          break;
        case "minutes":
        case "minute":
        case "m":
          m4 = "M" === i4[2] ? "months" : "minutes";
          break;
        case "seconds":
        case "second":
        case "s":
          m4 = "seconds";
          break;
        case "milliseconds":
        case "millisecond":
        case "ms":
          m4 = "milliseconds";
          break;
        case "hours":
        case "hour":
        case "h":
          m4 = "hours";
          break;
        case "years":
        case "year":
        case "y":
          m4 = "years";
      }
      return f3.plus({ [m4]: d4 });
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/geometry.js
function C(e4) {
  return e4 && "esri.arcade.Feature" === e4.arcadeDeclaredClass;
}
function Z2(z3, Z5) {
  z3.ringisclockwise = function(e4, t7) {
    return Z5(e4, t7, (o2, s4, l5) => {
      Q(l5, 1, 1, e4, t7);
      let c4 = [], f3 = false, u3 = false;
      if (null === l5[0])
        return false;
      if (z(l5[0])) {
        for (const n3 of l5[0]) {
          if (!(n3 instanceof x))
            throw new t(e4, e.InvalidParameter, t7);
          c4.push(n3.hasZ ? n3.hasM ? [n3.x, n3.y, n3.z, n3.m] : [n3.x, n3.y, n3.z] : [n3.x, n3.y]);
        }
        c4.length > 0 && (f3 = l5[0][0].hasZ, u3 = l5[0][0].hasM);
      } else if (l5[0] instanceof i)
        c4 = l5[0]._elements, c4.length > 0 && (f3 = l5[0]._hasZ, u3 = l5[0]._hasM);
      else {
        if (!q(l5[0]))
          throw new t(e4, e.InvalidParameter, t7);
        for (const n3 of l5[0].toArray()) {
          if (!(n3 instanceof x))
            throw new t(e4, e.InvalidParameter, t7);
          c4.push(n3.hasZ ? n3.hasM ? [n3.x, n3.y, n3.z, n3.m] : [n3.x, n3.y, n3.z] : [n3.x, n3.y]);
        }
        c4.length > 0 && (f3 = l5[0].get(0).hasZ, u3 = l5[0].get(0).hasM);
      }
      return !(c4.length < 3) && h(c4, u3, f3);
    });
  }, z3.polygon = function(n3, a3) {
    return Z5(n3, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n3, a3);
      let f3 = null;
      if (c4[0] instanceof A) {
        if (f3 = ye(b2.parseGeometryFromDictionary(c4[0]), n3.spatialReference), f3 instanceof j == false)
          throw new t(n3, e.InvalidParameter, a3);
      } else
        f3 = c4[0] instanceof j ? p2(c4[0].toJSON()) : ye(new j(JSON.parse(c4[0])), n3.spatialReference);
      if (null !== f3 && false === f3.spatialReference.equals(n3.spatialReference))
        throw new t(n3, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.polyline = function(n3, a3) {
    return Z5(n3, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n3, a3);
      let f3 = null;
      if (c4[0] instanceof A) {
        if (f3 = ye(b2.parseGeometryFromDictionary(c4[0]), n3.spatialReference), f3 instanceof m == false)
          throw new t(n3, e.InvalidParameter, a3);
      } else
        f3 = c4[0] instanceof m ? p2(c4[0].toJSON()) : ye(new m(JSON.parse(c4[0])), n3.spatialReference);
      if (null !== f3 && false === f3.spatialReference.equals(n3.spatialReference))
        throw new t(n3, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.point = function(n3, a3) {
    return Z5(n3, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n3, a3);
      let f3 = null;
      if (c4[0] instanceof A) {
        if (f3 = ye(b2.parseGeometryFromDictionary(c4[0]), n3.spatialReference), f3 instanceof x == false)
          throw new t(n3, e.InvalidParameter, a3);
      } else
        f3 = c4[0] instanceof x ? p2(c4[0].toJSON()) : ye(new x(JSON.parse(c4[0])), n3.spatialReference);
      if (null !== f3 && false === f3.spatialReference.equals(n3.spatialReference))
        throw new t(n3, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.multipoint = function(n3, a3) {
    return Z5(n3, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n3, a3);
      let f3 = null;
      if (c4[0] instanceof A) {
        if (f3 = ye(b2.parseGeometryFromDictionary(c4[0]), n3.spatialReference), f3 instanceof u == false)
          throw new t(n3, e.InvalidParameter, a3);
      } else
        f3 = c4[0] instanceof u ? p2(c4[0].toJSON()) : ye(new u(JSON.parse(c4[0])), n3.spatialReference);
      if (null !== f3 && false === f3.spatialReference.equals(n3.spatialReference))
        throw new t(n3, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.extent = function(n3, a3) {
    return Z5(n3, a3, (i4, c4, f3) => {
      var _a;
      f3 = Ne(f3), Q(f3, 1, 1, n3, a3);
      let u3 = null;
      if (f3[0] instanceof A)
        u3 = ye(b2.parseGeometryFromDictionary(f3[0]), n3.spatialReference);
      else if (f3[0] instanceof x) {
        const e4 = { xmin: f3[0].x, ymin: f3[0].y, xmax: f3[0].x, ymax: f3[0].y, spatialReference: f3[0].spatialReference.toJSON() }, t7 = f3[0];
        t7.hasZ ? (e4.zmin = t7.z, e4.zmax = t7.z) : t7.hasM && (e4.mmin = t7.m, e4.mmax = t7.m), u3 = p2(e4);
      } else
        u3 = f3[0] instanceof j || f3[0] instanceof m || f3[0] instanceof u ? p2((_a = f3[0].extent) == null ? void 0 : _a.toJSON()) : f3[0] instanceof M ? p2(f3[0].toJSON()) : ye(new M(JSON.parse(f3[0])), n3.spatialReference);
      if (null !== u3 && false === u3.spatialReference.equals(n3.spatialReference))
        throw new t(n3, e.WrongSpatialReference, a3);
      return pe(u3);
    });
  }, z3.geometry = function(n3, a3) {
    return Z5(n3, a3, (i4, l5, c4) => {
      Q(c4, 1, 1, n3, a3);
      let f3 = null;
      if (null === c4[0])
        return null;
      if (f3 = C(c4[0]) ? ye(c4[0].geometry(), n3.spatialReference) : c4[0] instanceof A ? ye(b2.parseGeometryFromDictionary(c4[0]), n3.spatialReference) : ye(p2(JSON.parse(c4[0])), n3.spatialReference), null !== f3 && false === f3.spatialReference.equals(n3.spatialReference))
        throw new t(n3, e.WrongSpatialReference, a3);
      return pe(f3);
    });
  }, z3.setgeometry = function(e4, t7) {
    return Z5(e4, t7, (n3, a3, i4) => {
      if (Q(i4, 2, 2, e4, t7), !C(i4[0]))
        throw new t(e4, e.InvalidParameter, t7);
      if (true === i4[0].immutable)
        throw new t(e4, e.Immutable, t7);
      if (!(i4[1] instanceof p || null === i4[1]))
        throw new t(e4, e.InvalidParameter, t7);
      return i4[0]._geometry = i4[1], F;
    });
  }, z3.feature = function(n3, r4) {
    return Z5(n3, r4, (a3, i4, s4) => {
      if (0 === s4.length)
        throw new t(n3, e.WrongNumberOfParameters, r4);
      let l5 = null;
      if (1 === s4.length)
        if (L(s4[0]))
          l5 = b2.fromJson(JSON.parse(s4[0]), n3.timeReference);
        else if (C(s4[0]))
          l5 = b2.createFromArcadeFeature(s4[0]);
        else if (s4[0] instanceof p)
          l5 = b2.createFromGraphicLikeObject(s4[0], null, null, n3.timeReference);
        else {
          if (!(s4[0] instanceof A))
            throw new t(n3, e.InvalidParameter, r4);
          {
            let r5 = s4[0].hasField("geometry") ? s4[0].field("geometry") : null, a4 = s4[0].hasField("attributes") ? s4[0].field("attributes") : null;
            null !== r5 && r5 instanceof A && (r5 = b2.parseGeometryFromDictionary(r5)), null !== a4 && (a4 = b2.parseAttributesFromDictionary(a4)), l5 = b2.createFromGraphicLikeObject(r5, a4, null, n3.timeReference);
          }
        }
      else if (2 === s4.length) {
        let a4 = null, i5 = null;
        if (null !== s4[0])
          if (s4[0] instanceof p)
            a4 = s4[0];
          else {
            if (!(a4 instanceof A))
              throw new t(n3, e.InvalidParameter, r4);
            a4 = b2.parseGeometryFromDictionary(s4[0]);
          }
        if (null !== s4[1]) {
          if (!(s4[1] instanceof A))
            throw new t(n3, e.InvalidParameter, r4);
          i5 = b2.parseAttributesFromDictionary(s4[1]);
        }
        l5 = b2.createFromGraphicLikeObject(a4, i5, null, n3.timeReference);
      } else {
        let a4 = null;
        const i5 = {};
        if (null !== s4[0])
          if (s4[0] instanceof p)
            a4 = s4[0];
          else {
            if (!(a4 instanceof A))
              throw new t(n3, e.InvalidParameter, r4);
            a4 = b2.parseGeometryFromDictionary(s4[0]);
          }
        for (let e4 = 1; e4 < s4.length; e4 += 2) {
          const t7 = oe(s4[e4]), a5 = s4[e4 + 1];
          if (!(null == a5 || L(a5) || isNaN(a5) || B(a5) || J(a5) || Y(a5)))
            throw new t(n3, e.InvalidParameter, r4);
          if (O(a5) || false === w(a5))
            throw new t(n3, e.InvalidParameter, r4);
          i5[t7] = a5 === F ? null : a5;
        }
        l5 = b2.createFromGraphicLikeObject(a4, i5, null, n3.timeReference);
      }
      return l5._geometry = ye(l5.geometry(), n3.spatialReference), l5.immutable = false, l5;
    });
  }, z3.dictionary = function(t7, n3) {
    return Z5(t7, n3, (r4, o2, s4) => {
      if (0 === s4.length || 1 === s4.length && null === s4[0]) {
        const t8 = new A();
        return t8.immutable = false, t8;
      }
      if (1 === s4.length && L(s4[0]))
        try {
          const n4 = JSON.parse(s4[0]), r5 = A.convertObjectToArcadeDictionary(n4, Pe(t7), false);
          return r5.immutable = false, r5;
        } catch (R2) {
          throw new t(t7, e.InvalidParameter, n3);
        }
      if (1 === s4.length && s4[0] instanceof p)
        try {
          const n4 = s4[0].toJSON();
          n4.hasZ = true === s4[0].hasZ, n4.hasM = true === s4[0].hasM;
          const r5 = A.convertObjectToArcadeDictionary(n4, Pe(t7), false);
          return r5.immutable = false, r5;
        } catch (R2) {
          throw new t(t7, e.InvalidParameter, n3);
        }
      if (1 === s4.length && E(s4[0]))
        try {
          const t8 = new A();
          t8.immutable = false, t8.setField("geometry", s4[0].geometry());
          const n4 = new A();
          n4.immutable = false, t8.setField("attributes", n4);
          for (const e4 of s4[0].keys())
            n4.setField(e4, s4[0].field(e4));
          return t8;
        } catch (R2) {
          throw new t(t7, e.InvalidParameter, n3);
        }
      if (1 === s4.length && s4[0] instanceof A)
        try {
          const t8 = new A();
          t8.immutable = false;
          for (const e4 of s4[0].keys())
            t8.setField(e4, s4[0].field(e4));
          return t8;
        } catch (R2) {
          throw new t(t7, e.InvalidParameter, n3);
        }
      if (2 === s4.length && s4[0] instanceof A && Y(s4[1]))
        try {
          if (!(true === s4[1])) {
            const t8 = new A();
            t8.immutable = false;
            for (const e4 of s4[0].keys())
              t8.setField(e4, s4[0].field(e4));
            return t8;
          }
          return s4[0].deepClone();
        } catch (R2) {
          throw new t(t7, e.InvalidParameter, n3);
        }
      if (s4.length % 2 != 0)
        throw new t(t7, e.WrongNumberOfParameters, n3);
      const l5 = {};
      for (let e4 = 0; e4 < s4.length; e4 += 2) {
        const r5 = oe(s4[e4]), o3 = s4[e4 + 1];
        if (!(null == o3 || L(o3) || isNaN(o3) || B(o3) || J(o3) || Y(o3) || z(o3) || q(o3)))
          throw new t(t7, e.InvalidParameter, n3);
        if (O(o3))
          throw new t(t7, e.InvalidParameter, n3);
        l5[r5] = o3 === F ? null : o3;
      }
      const d4 = new A(l5);
      return d4.immutable = false, d4;
    });
  }, z3.haskey = function(t7, n3) {
    return Z5(t7, n3, (a3, i4, o2) => {
      Q(o2, 2, 2, t7, n3);
      const s4 = oe(o2[1]);
      if (C(o2[0]))
        return o2[0].hasField(s4);
      if (o2[0] instanceof A)
        return o2[0].hasField(s4);
      if (o2[0] instanceof p) {
        const e4 = W2(o2[0], s4, null, null, 2);
        return !e4 || "notfound" !== e4.keystate;
      }
      throw new t(t7, e.InvalidParameter, n3);
    });
  }, z3.hasvalue = function(t7, n3) {
    return Z5(t7, n3, (a3, i4, o2) => {
      if (Q(o2, 2, 2, t7, n3), null === o2[0] || null === o2[1])
        return false;
      const s4 = oe(o2[1]);
      if (E(o2[0]))
        return !!o2[0].hasField(s4) && null !== o2[0].field(s4);
      if (o2[0] instanceof A)
        return !!o2[0].hasField(s4) && null !== o2[0].field(s4);
      if (o2[0] instanceof p) {
        return null !== W2(o2[0], s4, null, null, 0);
      }
      return false;
    });
  }, z3.indexof = function(e4, t7) {
    return Z5(e4, t7, (n3, o2, s4) => {
      Q(s4, 2, 2, e4, t7);
      const l5 = s4[1];
      if (z(s4[0])) {
        for (let e5 = 0; e5 < s4[0].length; e5++)
          if (ie(l5, s4[0][e5]))
            return e5;
        return -1;
      }
      if (q(s4[0])) {
        const e5 = s4[0].length();
        for (let t8 = 0; t8 < e5; t8++)
          if (ie(l5, s4[0].get(t8)))
            return t8;
        return -1;
      }
      throw new t(e4, e.InvalidParameter, t7);
    });
  }, z3.angle = function(e4, t7) {
    return Z5(e4, t7, (n3, a3, i4) => {
      if (i4 = Ne(i4), Q(i4, 2, 3, e4, t7), !(i4[0] instanceof x))
        throw new t(e4, e.InvalidParameter, t7);
      if (!(i4[1] instanceof x))
        throw new t(e4, e.InvalidParameter, t7);
      if (i4.length > 2 && !(i4[2] instanceof x))
        throw new t(e4, e.InvalidParameter, t7);
      return 2 === i4.length ? p5(i4[0], i4[1]) : P2(i4[0], i4[1], i4[2]);
    });
  }, z3.bearing = function(e4, t7) {
    return Z5(e4, t7, (n3, a3, i4) => {
      if (i4 = Ne(i4), Q(i4, 2, 3, e4, t7), !(i4[0] instanceof x))
        throw new t(e4, e.InvalidParameter, t7);
      if (!(i4[1] instanceof x))
        throw new t(e4, e.InvalidParameter, t7);
      if (i4.length > 2 && !(i4[2] instanceof x))
        throw new t(e4, e.InvalidParameter, t7);
      return 2 === i4.length ? M2(i4[0], i4[1]) : d(i4[0], i4[1], i4[2]);
    });
  }, z3.isselfintersecting = function(e4, t7) {
    return Z5(e4, t7, (n3, o2, s4) => {
      s4 = Ne(s4), Q(s4, 1, 1, e4, t7);
      let c4 = s4[0];
      if (c4 instanceof j)
        return c4.isSelfIntersecting;
      if (c4 instanceof m)
        return c4 = c4.paths, Z(c4);
      if (c4 instanceof u) {
        const e5 = c4.points;
        for (let t8 = 0; t8 < e5.length; t8++)
          for (let n4 = 0; n4 < e5.length; n4++)
            if (n4 !== t8) {
              let r4 = true;
              for (let a3 = 0; a3 < e5[t8].length; a3++)
                if (e5[t8][a3] !== e5[n4][a3]) {
                  r4 = false;
                  break;
                }
              if (true === r4)
                return true;
            }
      }
      return !(!z(c4) && !q(c4)) && (c4 = je(c4, e4.spatialReference), null !== c4 && (c4 = c4.paths), Z(c4));
    });
  };
}
var A3 = 0;
function W2(t7, r4, a3, i4, o2 = 1) {
  let s4;
  switch (r4 = r4.toLowerCase()) {
    case "hasz": {
      const e4 = t7.hasZ;
      return void 0 !== e4 && e4;
    }
    case "hasm": {
      const e4 = t7.hasM;
      return void 0 !== e4 && e4;
    }
    case "spatialreference": {
      let n3 = t7.spatialReference._arcadeCacheId;
      if (void 0 === n3) {
        let e4 = true;
        Object.freeze && Object.isFrozen(t7.spatialReference) && (e4 = false), e4 && (A3++, t7.spatialReference._arcadeCacheId = A3, n3 = A3);
      }
      const r5 = new A({ wkt: t7.spatialReference.wkt, wkid: t7.spatialReference.wkid });
      return void 0 !== n3 && (r5._arcadeCacheId = "SPREF" + n3.toString()), r5;
    }
  }
  switch (t7.type) {
    case "extent":
      switch (r4) {
        case "xmin":
        case "xmax":
        case "ymin":
        case "ymax":
        case "zmin":
        case "zmax":
        case "mmin":
        case "mmax": {
          const e4 = t7[r4];
          return void 0 !== e4 ? e4 : null;
        }
        case "type":
          return "Extent";
      }
      break;
    case "polygon":
      switch (r4) {
        case "rings":
          s4 = t7.cache._arcadeCacheId, void 0 === s4 && (A3++, s4 = A3, t7.cache._arcadeCacheId = s4);
          return new h2(t7.rings, t7.spatialReference, true === t7.hasZ, true === t7.hasM, s4);
        case "type":
          return "Polygon";
      }
      break;
    case "point":
      switch (r4) {
        case "x":
        case "y":
        case "z":
        case "m":
          return void 0 !== t7[r4] ? t7[r4] : null;
        case "type":
          return "Point";
      }
      break;
    case "polyline":
      switch (r4) {
        case "paths":
          s4 = t7.cache._arcadeCacheId, void 0 === s4 && (A3++, s4 = A3, t7.cache._arcadeCacheId = s4);
          return new h2(t7.paths, t7.spatialReference, true === t7.hasZ, true === t7.hasM, s4);
        case "type":
          return "Polyline";
      }
      break;
    case "multipoint":
      switch (r4) {
        case "points":
          s4 = t7.cache._arcadeCacheId, void 0 === s4 && (A3++, s4 = A3, t7.cache._arcadeCacheId = s4);
          return new i(t7.points, t7.spatialReference, true === t7.hasZ, true === t7.hasM, s4, 1);
        case "type":
          return "Multipoint";
      }
  }
  if (1 === o2)
    throw new t(a3, e.InvalidIdentifier, i4);
  return 2 === o2 ? { keystate: "notfound" } : null;
}

// node_modules/@arcgis/core/arcade/functions/maths.js
function l3(n3, t7, r4) {
  return void 0 === r4 || 0 == +r4 ? Math[n3](t7) : (t7 = +t7, r4 = +r4, isNaN(t7) || "number" != typeof r4 || r4 % 1 != 0 ? NaN : (t7 = t7.toString().split("e"), +((t7 = (t7 = Math[n3](+(t7[0] + "e" + (t7[1] ? +t7[1] - r4 : -r4)))).toString().split("e"))[0] + "e" + (t7[1] ? +t7[1] + r4 : r4))));
}
function N2(N4, h5) {
  function m4(n3, t7, r4) {
    const u3 = fe(n3);
    return isNaN(u3) ? u3 : isNaN(t7) || isNaN(r4) || t7 > r4 ? NaN : u3 < t7 ? t7 : u3 > r4 ? r4 : u3;
  }
  N4.number = function(a3, f3) {
    return h5(a3, f3, (s4, l5, N5) => {
      Q(N5, 1, 2, a3, f3);
      const h6 = N5[0];
      if (J(h6))
        return h6;
      if (null === h6)
        return 0;
      if (B(h6))
        return h6.toNumber();
      if (Y(h6))
        return Number(h6);
      if (z(h6))
        return NaN;
      if ("" === h6)
        return Number(h6);
      if (void 0 === h6)
        return Number(h6);
      if (L(h6)) {
        if (void 0 !== N5[1]) {
          let n3 = I(N5[1], "‰", "");
          return n3 = I(n3, "¤", ""), p3(h6, { pattern: n3 });
        }
        return Number(h6.trim());
      }
      return Number(h6);
    });
  }, N4.abs = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.abs(fe(o2[0]))));
  }, N4.acos = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.acos(fe(o2[0]))));
  }, N4.asin = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.asin(fe(o2[0]))));
  }, N4.atan = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.atan(fe(o2[0]))));
  }, N4.atan2 = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 2, 2, t7, r4), Math.atan2(fe(o2[0]), fe(o2[1]))));
  }, N4.ceil = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => {
      if (Q(o2, 1, 2, t7, r4), 2 === o2.length) {
        let n3 = fe(o2[1]);
        return isNaN(n3) && (n3 = 0), l3("ceil", fe(o2[0]), -1 * n3);
      }
      return Math.ceil(fe(o2[0]));
    });
  }, N4.round = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => {
      if (Q(o2, 1, 2, t7, r4), 2 === o2.length) {
        let n3 = fe(o2[1]);
        return isNaN(n3) && (n3 = 0), l3("round", fe(o2[0]), -1 * n3);
      }
      return Math.round(fe(o2[0]));
    });
  }, N4.floor = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => {
      if (Q(o2, 1, 2, t7, r4), 2 === o2.length) {
        let n3 = fe(o2[1]);
        return isNaN(n3) && (n3 = 0), l3("floor", fe(o2[0]), -1 * n3);
      }
      return Math.floor(fe(o2[0]));
    });
  }, N4.cos = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.cos(fe(o2[0]))));
  }, N4.isnan = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), "number" == typeof o2[0] && isNaN(o2[0])));
  }, N4.exp = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.exp(fe(o2[0]))));
  }, N4.log = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.log(fe(o2[0]))));
  }, N4.pow = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 2, 2, t7, r4), fe(o2[0]) ** fe(o2[1])));
  }, N4.random = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 0, 0, t7, r4), Math.random()));
  }, N4.sin = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.sin(fe(o2[0]))));
  }, N4.sqrt = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.sqrt(fe(o2[0]))));
  }, N4.tan = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), Math.tan(fe(o2[0]))));
  }, N4.defaultvalue = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 2, 2, t7, r4), null === o2[0] || "" === o2[0] || void 0 === o2[0] ? o2[1] : o2[0]));
  }, N4.isempty = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => (Q(o2, 1, 1, t7, r4), null === o2[0] || ("" === o2[0] || void 0 === o2[0])));
  }, N4.boolean = function(t7, r4) {
    return h5(t7, r4, (u3, e4, o2) => {
      Q(o2, 1, 1, t7, r4);
      const i4 = o2[0];
      return me(i4);
    });
  }, N4.constrain = function(t7, r4) {
    return h5(t7, r4, (u3, o2, i4) => {
      Q(i4, 3, 3, t7, r4);
      const f3 = fe(i4[1]), c4 = fe(i4[2]);
      if (z(i4[0])) {
        const n3 = [];
        for (const t8 of i4[0])
          n3.push(m4(t8, f3, c4));
        return n3;
      }
      if (q(i4[0])) {
        const n3 = [];
        for (let t8 = 0; t8 < i4[0].length(); t8++)
          n3.push(m4(i4[0].get(t8), f3, c4));
        return n3;
      }
      return m4(i4[0], f3, c4);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/stats.js
function a2(n3, r4, t7, i4) {
  if (1 === i4.length) {
    if (z(i4[0]))
      return l(n3, i4[0], -1);
    if (q(i4[0]))
      return l(n3, i4[0].toArray(), -1);
  }
  return l(n3, i4, -1);
}
function f2(o2, f3) {
  o2.stdev = function(n3, r4) {
    return f3(n3, r4, (n4, r5, t7) => a2("stdev", n4, r5, t7));
  }, o2.variance = function(n3, r4) {
    return f3(n3, r4, (n4, r5, t7) => a2("variance", n4, r5, t7));
  }, o2.average = function(n3, r4) {
    return f3(n3, r4, (n4, r5, t7) => a2("mean", n4, r5, t7));
  }, o2.mean = function(n3, r4) {
    return f3(n3, r4, (n4, r5, t7) => a2("mean", n4, r5, t7));
  }, o2.sum = function(n3, r4) {
    return f3(n3, r4, (n4, r5, t7) => a2("sum", n4, r5, t7));
  }, o2.min = function(n3, r4) {
    return f3(n3, r4, (n4, r5, t7) => a2("min", n4, r5, t7));
  }, o2.max = function(n3, r4) {
    return f3(n3, r4, (n4, r5, t7) => a2("max", n4, r5, t7));
  }, o2.distinct = function(n3, r4) {
    return f3(n3, r4, (n4, r5, t7) => a2("distinct", n4, r5, t7));
  }, o2.count = function(o3, a3) {
    return f3(o3, a3, (f4, c4, m4) => {
      if (Q(m4, 1, 1, o3, a3), z(m4[0]) || L(m4[0]))
        return m4[0].length;
      if (q(m4[0]))
        return m4[0].length();
      throw new t(o3, e.InvalidParameter, a3);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/convertdirection.js
var l4 = (e4) => (n3, t7, r4) => (r4 = r4 || 14, +e4(n3, t7).toFixed(r4));
var d3 = (e4, n3) => e4 + n3;
var m3 = (e4, n3) => e4 * n3;
var g = (e4, n3) => e4 / n3;
var _2 = (e4, n3, t7) => l4(d3)(e4, n3, t7);
var w3 = (e4, n3, t7) => l4(m3)(e4, n3, t7);
var A4 = (e4, n3, t7) => l4(g)(e4, n3, t7);
var D2 = 360;
var p8 = 400;
var E2 = 2 * Math.PI;
var T3 = 3600;
var S = 3240;
var R = 60;
var M3 = 60;
var F3 = 180 * T3 / Math.PI;
var v2 = D2 * R * M3;
var L2 = 90 * T3;
var U2 = 180 * T3;
var N3 = 270 * T3;
var x3 = String.fromCharCode(7501);
var z2 = "°";
function O2(e4) {
  if (false === L(e4))
    throw new t(null, e.InvalidParameter, null);
  return e4;
}
function G(e4, n3) {
  const t7 = 10 ** n3;
  return Math.round(e4 * t7) / t7;
}
function I2(e4, n3) {
  return e4 % n3;
}
function b3(e4) {
  const n3 = parseFloat(e4.toString().replace(Math.trunc(e4).toString(), "0")) * Math.sign(e4);
  if (e4 < 0) {
    return { fraction: n3, integer: Math.ceil(e4) };
  }
  return { fraction: n3, integer: Math.floor(e4) };
}
var H;
var y3;
var q2;
var k;
function C2(e4, n3) {
  switch (e4) {
    case H.north:
      return "SHORT" === n3 ? "N" : "North";
    case H.east:
      return "SHORT" === n3 ? "E" : "East";
    case H.south:
      return "SHORT" === n3 ? "S" : "South";
    case H.west:
      return "SHORT" === n3 ? "W" : "West";
  }
}
function P3(e4, n3, t7) {
  for (; e4.length < t7; )
    e4 = n3 + e4;
  return e4;
}
function Q2(e4, n3) {
  return e4 - Math.floor(e4 / n3) * n3;
}
function j3(e4) {
  switch (e4) {
    case y3.truncated_degrees:
    case y3.decimal_degrees:
      return D2;
    case y3.radians:
      return E2;
    case y3.gradians:
      return p8;
    case y3.seconds:
      return v2;
    case y3.fractional_degree_minutes:
      return R;
    case y3.fractional_minute_seconds:
      return M3;
    default:
      throw new t(null, e.LogicError, null, { reason: "unsupported evaluations" });
  }
}
function W3(e4) {
  switch (e4.toUpperCase().trim()) {
    case "NORTH":
    case "NORTHAZIMUTH":
    case "NORTH AZIMUTH":
      return q2.north_azimuth;
    case "POLAR":
      return q2.polar;
    case "QUADRANT":
      return q2.quadrant;
    case "SOUTH":
    case "SOUTHAZIMUTH":
    case "SOUTH AZIMUTH":
      return q2.south_azimuth;
  }
  throw new t(null, e.LogicError, null, { reason: "unsupported directionType" });
}
function Z3(e4) {
  switch (e4.toUpperCase().trim()) {
    case "D":
    case "DD":
    case "DECIMALDEGREE":
    case "DECIMAL DEGREE":
    case "DEGREE":
    case "DECIMALDEGREES":
    case "DECIMAL DEGREES":
    case "DEGREES":
      return y3.decimal_degrees;
    case "DMS":
    case "DEGREESMINUTESSECONDS":
    case "DEGREES MINUTES SECONDS":
      return y3.degrees_minutes_seconds;
    case "R":
    case "RAD":
    case "RADS":
    case "RADIAN":
    case "RADIANS":
      return y3.radians;
    case "G":
    case "GON":
    case "GONS":
    case "GRAD":
    case "GRADS":
    case "GRADIAN":
    case "GRADIANS":
      return y3.gradians;
  }
  throw new t(null, e.LogicError, null, { reason: "unsupported units" });
}
!function(e4) {
  e4[e4.north = 0] = "north", e4[e4.east = 1] = "east", e4[e4.south = 2] = "south", e4[e4.west = 3] = "west";
}(H || (H = {})), function(e4) {
  e4[e4.decimal_degrees = 1] = "decimal_degrees", e4[e4.seconds = 2] = "seconds", e4[e4.degrees_minutes_seconds = 3] = "degrees_minutes_seconds", e4[e4.radians = 4] = "radians", e4[e4.gradians = 5] = "gradians", e4[e4.truncated_degrees = 6] = "truncated_degrees", e4[e4.fractional_degree_minutes = 7] = "fractional_degree_minutes", e4[e4.fractional_minute_seconds = 8] = "fractional_minute_seconds";
}(y3 || (y3 = {})), function(e4) {
  e4[e4.north_azimuth = 1] = "north_azimuth", e4[e4.polar = 2] = "polar", e4[e4.quadrant = 3] = "quadrant", e4[e4.south_azimuth = 4] = "south_azimuth";
}(q2 || (q2 = {})), function(e4) {
  e4[e4.meridian = 0] = "meridian", e4[e4.direction = 1] = "direction";
}(k || (k = {}));
var B2 = class _B {
  constructor(e4, n3, t7) {
    this.m_degrees = e4, this.m_minutes = n3, this.m_seconds = t7;
  }
  getField(e4) {
    switch (e4) {
      case y3.decimal_degrees:
      case y3.truncated_degrees:
        return this.m_degrees;
      case y3.fractional_degree_minutes:
        return this.m_minutes;
      case y3.seconds:
      case y3.fractional_minute_seconds:
        return this.m_seconds;
      default:
        throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
    }
  }
  static secondsToDMS(e4) {
    const n3 = b3(e4).fraction;
    let t7 = b3(e4).integer;
    const r4 = Math.floor(t7 / T3);
    t7 -= r4 * T3;
    const s4 = Math.floor(t7 / M3);
    return t7 -= s4 * M3, new _B(r4, s4, t7 + n3);
  }
  static numberToDms(e4) {
    const n3 = b3(e4).fraction, t7 = b3(e4).integer, r4 = w3(b3(100 * n3).fraction, 100), s4 = b3(100 * n3).integer;
    return new _B(t7, s4, r4);
  }
  format(e4, n3) {
    let t7 = G(this.m_seconds, n3), r4 = this.m_minutes, s4 = this.m_degrees;
    if (e4 === y3.seconds || e4 === y3.fractional_minute_seconds)
      M3 <= t7 && (t7 -= M3, ++r4), R <= r4 && (r4 = 0, ++s4), D2 <= s4 && (s4 = 0);
    else if (e4 === y3.fractional_degree_minutes)
      t7 = 0, r4 = 30 <= this.m_seconds ? this.m_minutes + 1 : this.m_minutes, s4 = this.m_degrees, R <= r4 && (r4 = 0, ++s4), D2 <= s4 && (s4 = 0);
    else if (e4 === y3.decimal_degrees || e4 === y3.truncated_degrees) {
      const e5 = A4(this.m_seconds, T3), n4 = A4(this.m_minutes, R);
      s4 = Math.round(this.m_degrees + n4 + e5), r4 = 0, t7 = 0;
    }
    return new _B(s4, r4, t7);
  }
  static dmsToSeconds(e4, n3, t7) {
    return e4 * T3 + n3 * M3 + t7;
  }
};
var V2 = class {
  constructor(e4, n3, t7) {
    this.meridian = e4, this.angle = n3, this.direction = t7;
  }
  fetchAzimuth(e4) {
    return e4 === k.meridian ? this.meridian : this.direction;
  }
};
var X2 = class _X {
  constructor(e4) {
    this._angle = e4;
  }
  static createFromAngleAndDirection(e4, n3) {
    return new _X(new K2(_X._convertDirectionFormat(e4.extractAngularUnits(y3.seconds), n3, q2.north_azimuth)));
  }
  getAngle(e4) {
    const n3 = this._angle.extractAngularUnits(y3.seconds);
    switch (e4) {
      case q2.north_azimuth:
      case q2.south_azimuth:
      case q2.polar:
        return new K2(_X._convertDirectionFormat(n3, q2.north_azimuth, e4));
      case q2.quadrant: {
        const e5 = _X.secondsNorthAzimuthToQuadrant(n3);
        return new K2(e5.angle);
      }
    }
  }
  getMeridian(e4) {
    const n3 = this._angle.extractAngularUnits(y3.seconds);
    switch (e4) {
      case q2.north_azimuth:
        return H.north;
      case q2.south_azimuth:
        return H.south;
      case q2.polar:
        return H.east;
      case q2.quadrant:
        return _X.secondsNorthAzimuthToQuadrant(n3).meridian;
    }
  }
  getDirection(e4) {
    const n3 = this._angle.extractAngularUnits(y3.seconds);
    switch (e4) {
      case q2.north_azimuth:
        return H.east;
      case q2.south_azimuth:
        return H.west;
      case q2.polar:
        return H.north;
      case q2.quadrant:
        return _X.secondsNorthAzimuthToQuadrant(n3).direction;
    }
  }
  static secondsNorthAzimuthToQuadrant(e4) {
    const n3 = e4 <= L2 || e4 >= N3 ? H.north : H.south, t7 = n3 === H.north ? Math.min(v2 - e4, e4) : Math.abs(e4 - U2), r4 = e4 > U2 ? H.west : H.east;
    return new V2(n3, t7, r4);
  }
  static createFromAngleMeridianAndDirection(e4, n3, t7) {
    return new _X(new K2(_X.secondsQuadrantToNorthAzimuth(e4.extractAngularUnits(y3.seconds), n3, t7)));
  }
  static secondsQuadrantToNorthAzimuth(e4, n3, t7) {
    return n3 === H.north ? t7 === H.east ? e4 : v2 - e4 : t7 === H.east ? U2 - e4 : U2 + e4;
  }
  static _convertDirectionFormat(e4, r4, s4) {
    let a3 = 0;
    switch (r4) {
      case q2.north_azimuth:
        a3 = e4;
        break;
      case q2.polar:
        a3 = L2 - e4;
        break;
      case q2.quadrant:
        throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
      case q2.south_azimuth:
        a3 = e4 + U2;
    }
    let i4 = 0;
    switch (s4) {
      case q2.north_azimuth:
        i4 = a3;
        break;
      case q2.polar:
        i4 = L2 - a3;
        break;
      case q2.quadrant:
        throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
      case q2.south_azimuth:
        i4 = a3 - U2;
    }
    return i4 = I2(i4, v2), i4 < 0 ? v2 + i4 : i4;
  }
};
function J2(e4, r4, s4) {
  let a3 = null;
  switch (r4) {
    case y3.decimal_degrees:
      a3 = w3(e4, T3);
      break;
    case y3.seconds:
      a3 = e4;
      break;
    case y3.gradians:
      a3 = w3(e4, S);
      break;
    case y3.radians:
      a3 = w3(e4, F3);
      break;
    default:
      throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
  }
  switch (s4) {
    case y3.decimal_degrees:
      return A4(a3, T3);
    case y3.seconds:
      return a3;
    case y3.gradians:
      return A4(a3, S);
    case y3.radians:
      return a3 / F3;
    default:
      throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
  }
}
var K2 = class _K {
  constructor(e4) {
    this._seconds = e4;
  }
  static createFromAngleAndUnits(e4, n3) {
    return new _K(J2(e4, n3, y3.seconds));
  }
  extractAngularUnits(e4) {
    return J2(this._seconds, y3.seconds, Y2(e4));
  }
  static createFromDegreesMinutesSeconds(e4, n3, t7) {
    return new _K(_2(_2(w3(e4, T3), w3(n3, M3)), t7));
  }
};
function Y2(e4) {
  switch (r(e4), e4) {
    case y3.decimal_degrees:
    case y3.truncated_degrees:
    case y3.degrees_minutes_seconds:
      return y3.decimal_degrees;
    case y3.gradians:
      return y3.gradians;
    case y3.fractional_degree_minutes:
      return y3.fractional_degree_minutes;
    case y3.radians:
      return y3.radians;
    case y3.seconds:
    case y3.fractional_minute_seconds:
      return y3.seconds;
  }
}
var $ = class _$ {
  constructor(e4, n3, t7, r4) {
    this.view = e4, this.angle = n3, this.merdian = t7, this.direction = r4, this._dms = null, this._formattedDms = null;
  }
  static createFromStringAndBearing(e4, n3, t7) {
    return new _$(e4, n3.getAngle(t7), n3.getMeridian(t7), n3.getDirection(t7));
  }
  fetchAngle() {
    return this.angle;
  }
  fetchMeridian() {
    return this.merdian;
  }
  fetchDirection() {
    return this.direction;
  }
  fetchView() {
    return this.view;
  }
  fetchDms() {
    return null === this._dms && this._calculateDms(), this._dms;
  }
  fetchFormattedDms() {
    return null === this._formattedDms && this._calculateDms(), this._formattedDms;
  }
  _calculateDms() {
    let e4 = null, n3 = y3.truncated_degrees, t7 = 0;
    for (let r4 = 0; r4 < this.view.length; r4++) {
      const s4 = this.view[r4];
      switch (s4) {
        case "m":
          e4 = de(this.view, r4, s4), n3 = n3 === y3.truncated_degrees ? y3.fractional_degree_minutes : n3, r4 = e4.newpos;
          continue;
        case "s":
          e4 = de(this.view, r4, s4), n3 = y3.fractional_minute_seconds, t7 = t7 < e4.rounding ? e4.rounding : t7, r4 = e4.newpos;
          continue;
        default:
          continue;
      }
    }
    this._dms = B2.secondsToDMS(this.angle.extractAngularUnits(y3.seconds)), this._formattedDms = B2.secondsToDMS(this.angle.extractAngularUnits(y3.seconds)).format(n3, t7);
  }
};
function ee(e4, r4, s4, a3, i4) {
  let o2 = null;
  switch (r4) {
    case y3.decimal_degrees:
    case y3.radians:
    case y3.gradians:
      return o2 = Q2(G(e4.extractAngularUnits(r4), a3), j3(r4)), P3(o2.toFixed(a3), "0", s4 + a3 + (a3 > 0 ? 1 : 0));
    case y3.truncated_degrees:
    case y3.fractional_degree_minutes:
      return o2 = Q2(i4.fetchFormattedDms().getField(r4), j3(r4)), P3(o2.toFixed(a3), "0", s4 + a3 + (a3 > 0 ? 1 : 0));
    case y3.fractional_minute_seconds:
      return o2 = Q2(G(i4.fetchDms().getField(r4), a3), j3(r4)), P3(o2.toFixed(a3), "0", s4 + a3 + (a3 > 0 ? 1 : 0));
    default:
      throw new t(null, e.LogicError, null, { reason: "unexpected evaluation" });
  }
}
function ne(e4, r4, s4) {
  if (s4 === q2.quadrant)
    throw new t(null, e.LogicError, null, { reason: "conversion error" });
  if (r4 === y3.degrees_minutes_seconds) {
    const n3 = B2.numberToDms(e4);
    return X2.createFromAngleAndDirection(K2.createFromDegreesMinutesSeconds(n3.m_degrees, n3.m_minutes, n3.m_seconds), s4);
  }
  return X2.createFromAngleAndDirection(K2.createFromAngleAndUnits(e4, Y2(r4)), s4);
}
function te2(e4) {
  switch (fe(e4)) {
    case 1:
      return { first: H.north, second: H.east };
    case 2:
      return { first: H.south, second: H.east };
    case 3:
      return { first: H.south, second: H.west };
    case 4:
      return { first: H.north, second: H.west };
  }
  return null;
}
function re(e4) {
  switch (e4.toUpperCase().trim()) {
    case "N":
    case "NORTH":
      return H.north;
    case "E":
    case "EAST":
      return H.east;
    case "S":
    case "SOUTH":
      return H.south;
    case "W":
    case "WEST":
      return H.west;
  }
  return null;
}
function se2(e4) {
  const r4 = parseFloat(e4);
  if (J(r4)) {
    if (isNaN(r4))
      throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
    return r4;
  }
  throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
}
function ae(e4, s4, a3) {
  const i4 = a3 === q2.quadrant;
  let o2 = null, c4 = null, u3 = 0, l5 = 0, d4 = 0;
  if (i4) {
    if (e4.length < 2)
      throw new t(null, e.LogicError, null, { reason: "conversion error" });
    d4 = 1;
    const s5 = te2(oe(e4[e4.length - 1]));
    if (s5 ? (o2 = s5.first, c4 = s5.second) : (u3 = 1, o2 = re(oe(e4[0])), c4 = re(oe(e4[e4.length - 1]))), null === o2 || null === c4)
      throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
  }
  switch (s4) {
    case y3.decimal_degrees:
    case y3.radians:
    case y3.gradians:
      if (0 === e4.length)
        throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
      return i4 ? X2.createFromAngleMeridianAndDirection(K2.createFromAngleAndUnits(se2(e4[u3]), Y2(s4)), o2, c4) : X2.createFromAngleAndDirection(K2.createFromAngleAndUnits(se2(e4[u3]), Y2(s4)), a3);
    case y3.degrees_minutes_seconds:
      if (l5 = e4.length - d4 - u3, 3 === l5) {
        const n3 = K2.createFromDegreesMinutesSeconds(se2(e4[u3]), se2(e4[u3 + 1]), se2(e4[u3 + 2]));
        return i4 ? X2.createFromAngleMeridianAndDirection(n3, o2, c4) : X2.createFromAngleAndDirection(n3, a3);
      }
      if (1 === l5) {
        const n3 = se2(e4[u3]), t7 = B2.numberToDms(n3), r4 = K2.createFromDegreesMinutesSeconds(t7.m_degrees, t7.m_minutes, t7.m_seconds);
        return i4 ? X2.createFromAngleMeridianAndDirection(r4, o2, c4) : X2.createFromAngleAndDirection(r4, a3);
      }
  }
  throw new t(null, e.LogicError, null, { reason: "invalid conversion" });
}
function ie2(e4) {
  const n3 = [" ", "-", "/", "'", '"', "\\", "^", z2, x3, "	", "\r", "\n", "*"];
  let t7 = "";
  for (let r4 = 0; r4 < e4.length; r4++) {
    const s4 = e4.charAt(r4);
    n3.includes(s4) ? t7 += "RRSPLITRRSPLITRR" : t7 += s4;
  }
  return t7.split("RRSPLITRRSPLITRR").filter((e5) => "" !== e5);
}
function oe2(e4, r4, u3) {
  if (J(e4))
    return ne(fe(e4), r4, u3);
  if (L(e4))
    return ae(ie2(e4), r4, u3);
  if (z(e4))
    return ae(e4, r4, u3);
  if (q(e4))
    return ae(e4.toArray(), r4, u3);
  throw new t(null, e.LogicError, null, { reason: "conversion error" });
}
function ce2(e4, r4, s4) {
  const a3 = Y2(s4);
  if (a3 && s4 !== y3.degrees_minutes_seconds) {
    return e4.getAngle(r4).extractAngularUnits(a3);
  }
  throw new t(null, e.LogicError, null, { reason: "conversion error" });
}
function ue(e4, n3, t7) {
  const r4 = e4.getAngle(n3);
  if (n3 === q2.quadrant && t7 === y3.degrees_minutes_seconds) {
    const t8 = B2.secondsToDMS(r4.extractAngularUnits(y3.seconds));
    return [C2(e4.getMeridian(n3), "SHORT"), t8.m_degrees, t8.m_minutes, t8.m_seconds, C2(e4.getDirection(n3), "SHORT")];
  }
  if (t7 === y3.degrees_minutes_seconds) {
    const e5 = B2.secondsToDMS(r4.extractAngularUnits(y3.seconds));
    return [e5.m_degrees, e5.m_minutes, e5.m_seconds];
  }
  return n3 === q2.quadrant ? [C2(e4.getMeridian(n3), "SHORT"), r4.extractAngularUnits(t7), C2(e4.getDirection(n3), "SHORT")] : [r4.extractAngularUnits(t7)];
}
function le(e4, r4) {
  let s4 = "";
  switch (e4) {
    case y3.decimal_degrees:
      s4 = r4 === q2.quadrant ? "DD.DD" + z2 : "DDD.DD" + z2;
      break;
    case y3.degrees_minutes_seconds:
      s4 = r4 === q2.quadrant ? "dd" + z2 + ` mm' ss"` : "ddd" + z2 + ` mm' ss.ss"`;
      break;
    case y3.radians:
      s4 = "R.RR";
      break;
    case y3.gradians:
      s4 = "GGG.GG" + x3;
      break;
    default:
      throw new t(null, e.LogicError, null, { reason: "conversion error" });
  }
  return r4 === q2.quadrant && (s4 = "p " + s4 + " b"), s4;
}
function de(e4, n3, t7) {
  const r4 = { padding: 0, rounding: 0, newpos: n3 };
  let s4 = false;
  for (; n3 < e4.length; ) {
    const a3 = e4[n3];
    if (a3 === t7)
      s4 ? r4.rounding++ : r4.padding++, n3++;
    else {
      if ("." !== a3)
        break;
      s4 = true, n3++;
    }
  }
  return r4.newpos = n3 - 1, r4;
}
function he(e4, n3, t7) {
  const r4 = { escaped: "", newpos: n3 };
  for (n3++; n3 < e4.length; ) {
    const t8 = e4[n3];
    if (n3++, "]" === t8)
      break;
    r4.escaped += t8;
  }
  return r4.newpos = n3 - 1, r4;
}
function me2(e4, n3, t7) {
  let r4 = "", s4 = null, a3 = null;
  const i4 = $.createFromStringAndBearing(n3, e4, t7), o2 = { D: y3.decimal_degrees, d: y3.truncated_degrees, m: y3.fractional_degree_minutes, s: y3.fractional_minute_seconds, R: y3.radians, G: y3.gradians };
  for (let c4 = 0; c4 < n3.length; c4++) {
    const u3 = n3[c4];
    switch (u3) {
      case "[":
        s4 = he(n3, c4), r4 += s4.escaped, c4 = s4.newpos;
        continue;
      case "D":
      case "d":
      case "m":
      case "s":
      case "R":
      case "G":
        s4 = de(n3, c4, u3), a3 = e4.getAngle(t7), r4 += ee(a3, o2[u3], s4.padding, s4.rounding, i4), c4 = s4.newpos;
        continue;
      case "P":
      case "p":
        r4 += C2(i4.fetchMeridian(), "p" === u3 ? "SHORT" : "LONG");
        continue;
      case "B":
      case "b":
        r4 += C2(i4.fetchDirection(), "b" === u3 ? "SHORT" : "LONG");
        continue;
      default:
        r4 += u3;
    }
  }
  return r4;
}
function ge(s4, a3, i4) {
  if (!(a3 instanceof A))
    throw new t(null, e.InvalidParameter, null);
  if (false === a3.hasField("directionType"))
    throw new t(null, e.LogicError, null, { reason: "missing directionType" });
  if (false === a3.hasField("angleType"))
    throw new t(null, e.LogicError, null, { reason: "missing angleType" });
  const o2 = W3(O2(a3.field("directiontype"))), c4 = oe2(s4, Z3(O2(a3.field("angletype"))), o2);
  if (!(i4 instanceof A))
    throw new t(null, e.InvalidParameter, null);
  if (false === i4.hasField("directionType"))
    throw new t(null, e.LogicError, null, { reason: "missing directionType" });
  if (false === i4.hasField("outputType"))
    throw new t(null, e.LogicError, null, { reason: "missing angleType" });
  const u3 = W3(O2(i4.field("directiontype"))), l5 = i4.hasField("angleType") ? Z3(O2(i4.field("angletype"))) : null, d4 = O2(i4.field("outputType")).toUpperCase().trim();
  if (!u3 || !d4)
    throw new t(null, e.LogicError, null, { reason: "conversion error" });
  if (!(l5 || "TEXT" === d4 && i4.hasField("format")))
    throw new t(null, e.LogicError, null, { reason: "invalid unit" });
  switch (d4) {
    case "VALUE":
      return u3 === q2.quadrant || l5 === y3.degrees_minutes_seconds ? ue(c4, u3, l5) : ce2(c4, u3, l5);
    case "TEXT": {
      let e4 = "";
      return i4.hasField("format") && (e4 = oe(i4.field("format"))), null !== e4 && "" !== e4 || (e4 = le(l5, u3)), me2(c4, e4, u3);
    }
    default:
      throw new t(null, e.InvalidParameter, null);
  }
}

// node_modules/@arcgis/core/arcade/functions/hash.js
var t6 = 2654435761;
var s2 = 2246822519;
var n2 = 3266489917;
var e3 = 668265263;
var r3 = 374761393;
function h4(t7) {
  const s4 = [];
  for (let n3 = 0, e4 = t7.length; n3 < e4; n3++) {
    let e5 = t7.charCodeAt(n3);
    e5 < 128 ? s4.push(e5) : e5 < 2048 ? s4.push(192 | e5 >> 6, 128 | 63 & e5) : e5 < 55296 || e5 >= 57344 ? s4.push(224 | e5 >> 12, 128 | e5 >> 6 & 63, 128 | 63 & e5) : (n3++, e5 = 65536 + ((1023 & e5) << 10 | 1023 & t7.charCodeAt(n3)), s4.push(240 | e5 >> 18, 128 | e5 >> 12 & 63, 128 | e5 >> 6 & 63, 128 | 63 & e5));
  }
  return new Uint8Array(s4);
}
var i3 = class {
  constructor(t7) {
    this._seed = t7, this._totallen = 0, this._bufs = [], this.init();
  }
  init() {
    return this._bufs = [], this._totallen = 0, this;
  }
  updateFloatArray(t7) {
    const s4 = [];
    for (const n3 of t7)
      isNaN(n3) ? s4.push("NaN") : n3 === 1 / 0 ? s4.push("Infinity") : n3 === -1 / 0 ? s4.push("-Infinity") : 0 === n3 ? s4.push("0") : s4.push(n3.toString(16));
    this.update(h4(s4.join("")));
  }
  updateIntArray(t7) {
    const s4 = Int32Array.from(t7);
    this.update(new Uint8Array(s4.buffer));
  }
  updateUint8Array(t7) {
    this.update(Uint8Array.from(t7));
  }
  updateWithString(t7) {
    return this.update(h4(t7));
  }
  update(t7) {
    return this._bufs.push(t7), this._totallen += t7.length, this;
  }
  digest() {
    const t7 = new Uint8Array(this._totallen);
    let s4 = 0;
    for (const n3 of this._bufs)
      t7.set(n3, s4), s4 += n3.length;
    return this.init(), this._xxHash32(t7, this._seed);
  }
  _xxHash32(h5, i4 = 0) {
    const o2 = h5;
    let u3 = i4 + r3 & 4294967295, a3 = 0;
    if (o2.length >= 16) {
      const n3 = [i4 + t6 + s2 & 4294967295, i4 + s2 & 4294967295, i4 + 0 & 4294967295, i4 - t6 & 4294967295], e4 = h5, r4 = e4.length - 16;
      let o3 = 0;
      for (a3 = 0; (4294967280 & a3) <= r4; a3 += 4) {
        const r5 = a3, h6 = e4[r5] + (e4[r5 + 1] << 8), i5 = e4[r5 + 2] + (e4[r5 + 3] << 8), u4 = h6 * s2 + (i5 * s2 << 16);
        let l6 = n3[o3] + u4 & 4294967295;
        l6 = l6 << 13 | l6 >>> 19;
        const f3 = 65535 & l6, p9 = l6 >>> 16;
        n3[o3] = f3 * t6 + (p9 * t6 << 16) & 4294967295, o3 = o3 + 1 & 3;
      }
      u3 = (n3[0] << 1 | n3[0] >>> 31) + (n3[1] << 7 | n3[1] >>> 25) + (n3[2] << 12 | n3[2] >>> 20) + (n3[3] << 18 | n3[3] >>> 14) & 4294967295;
    }
    u3 = u3 + h5.length & 4294967295;
    const l5 = h5.length - 4;
    for (; a3 <= l5; a3 += 4) {
      const t7 = a3, s4 = o2[t7] + (o2[t7 + 1] << 8), r4 = o2[t7 + 2] + (o2[t7 + 3] << 8);
      u3 = u3 + (s4 * n2 + (r4 * n2 << 16)) & 4294967295, u3 = u3 << 17 | u3 >>> 15, u3 = (65535 & u3) * e3 + ((u3 >>> 16) * e3 << 16) & 4294967295;
    }
    for (; a3 < o2.length; ++a3) {
      u3 += o2[a3] * r3, u3 = u3 << 11 | u3 >>> 21, u3 = (65535 & u3) * t6 + ((u3 >>> 16) * t6 << 16) & 4294967295;
    }
    return u3 ^= u3 >>> 15, u3 = ((65535 & u3) * s2 & 4294967295) + ((u3 >>> 16) * s2 << 16), u3 ^= u3 >>> 13, u3 = ((65535 & u3) * n2 & 4294967295) + ((u3 >>> 16) * n2 << 16), u3 ^= u3 >>> 16, u3 < 0 ? u3 + 4294967296 : u3;
  }
};

// node_modules/@arcgis/core/arcade/functions/string.js
function B3(t7) {
  if ("loaded" === t7.loadStatus && t7.user && t7.user.sourceJSON) {
    return t7.user.sourceJSON;
  }
  return null;
}
function E3(t7, e4) {
  return !!t7 && W(t7, (e4 == null ? void 0 : e4.restUrl) || "");
}
function Z4(t7, e4) {
  if (!t7 || !e4)
    return t7 === e4;
  if (t7.x === e4.x && t7.y === e4.y) {
    if (t7.hasZ) {
      if (t7.z !== e4.z)
        return false;
    } else if (e4.hasZ)
      return false;
    if (t7.hasM) {
      if (t7.m !== e4.m)
        return false;
    } else if (e4.hasM)
      return false;
    return true;
  }
  return false;
}
function q3(o2, i4, u3) {
  if (null !== o2)
    if (z(o2)) {
      if (i4.updateUint8Array([61]), u3.map.has(o2)) {
        const t7 = u3.map.get(o2);
        i4.updateIntArray([61237541 ^ t7]);
      } else {
        u3.map.set(o2, u3.currentLength++);
        for (const t7 of o2)
          q3(t7, i4, u3);
        u3.map.delete(o2), u3.currentLength--;
      }
      i4.updateUint8Array([199]);
    } else if (q(o2)) {
      if (i4.updateUint8Array([61]), u3.map.has(o2)) {
        const t7 = u3.map.get(o2);
        i4.updateIntArray([61237541 ^ t7]);
      } else {
        u3.map.set(o2, u3.currentLength++);
        for (const t7 of o2.toArray())
          q3(t7, i4, u3);
        u3.map.delete(o2), u3.currentLength--;
      }
      i4.updateUint8Array([199]);
    } else {
      if (B(o2))
        return i4.updateIntArray([o2.toNumber()]), void i4.updateUint8Array([241]);
      if (L(o2))
        return i4.updateIntArray([o2.length]), i4.updateWithString(o2), void i4.updateUint8Array([41]);
      if (Y(o2))
        i4.updateUint8Array([true === o2 ? 1 : 0, 113]);
      else {
        if (J(o2))
          return i4.updateFloatArray([o2]), void i4.updateUint8Array([173]);
        if (o2 instanceof t4)
          throw new t(u3.context, e.UnsupportedHashType, u3.node);
        if (o2 instanceof t3)
          throw new t(u3.context, e.UnsupportedHashType, u3.node);
        if (!(o2 instanceof A)) {
          if (E(o2))
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          if (o2 instanceof x)
            return i4.updateIntArray([3833836621]), i4.updateIntArray([0]), i4.updateFloatArray([o2.x]), i4.updateIntArray([1]), i4.updateFloatArray([o2.y]), o2.hasZ && (i4.updateIntArray([2]), i4.updateFloatArray([o2.z])), o2.hasM && (i4.updateIntArray([3]), i4.updateFloatArray([o2.m])), i4.updateIntArray([3765347959]), void q3(o2.spatialReference.wkid, i4, u3);
          if (o2 instanceof j) {
            i4.updateIntArray([1266616829]);
            for (let t7 = 0; t7 < o2.rings.length; t7++) {
              const e4 = o2.rings[t7], r4 = [];
              let n3 = null, a3 = null;
              for (let i5 = 0; i5 < e4.length; i5++) {
                const u4 = o2.getPoint(t7, i5);
                if (0 === i5)
                  n3 = u4;
                else if (Z4(a3, u4))
                  continue;
                a3 = u4, i5 === e4.length - 1 && Z4(n3, u4) || r4.push(u4);
              }
              i4.updateIntArray([1397116793, r4.length]);
              for (let t8 = 0; t8 < r4.length; t8++) {
                const e5 = r4[t8];
                i4.updateIntArray([3962308117, t8]), q3(e5, i4, u3), i4.updateIntArray([2716288009]);
              }
              i4.updateIntArray([2278822459]);
            }
            return i4.updateIntArray([3878477243]), void q3(o2.spatialReference.wkid, i4, u3);
          }
          if (o2 instanceof m) {
            i4.updateIntArray([4106883559]);
            for (let t7 = 0; t7 < o2.paths.length; t7++) {
              const e4 = o2.paths[t7];
              i4.updateIntArray([1397116793, e4.length]);
              for (let r4 = 0; r4 < e4.length; r4++)
                i4.updateIntArray([3962308117, r4]), q3(o2.getPoint(t7, r4), i4, u3), i4.updateIntArray([2716288009]);
              i4.updateIntArray([2278822459]);
            }
            return i4.updateIntArray([2568784753]), void q3(o2.spatialReference.wkid, i4, u3);
          }
          if (o2 instanceof u) {
            i4.updateIntArray([588535921, o2.points.length]);
            for (let t7 = 0; t7 < o2.points.length; t7++) {
              const e4 = o2.getPoint(t7);
              i4.updateIntArray([t7]), q3(e4, i4, u3);
            }
            return i4.updateIntArray([1700171621]), void q3(o2.spatialReference.wkid, i4, u3);
          }
          if (o2 instanceof M)
            return i4.updateIntArray([3483648373]), i4.updateIntArray([0]), i4.updateFloatArray([o2.xmax]), i4.updateIntArray([1]), i4.updateFloatArray([o2.xmin]), i4.updateIntArray([2]), i4.updateFloatArray([o2.ymax]), i4.updateIntArray([3]), i4.updateFloatArray([o2.ymin]), o2.hasZ && (i4.updateIntArray([4]), i4.updateFloatArray([o2.zmax]), i4.updateIntArray([5]), i4.updateFloatArray([o2.zmin])), o2.hasM && (i4.updateIntArray([6]), i4.updateFloatArray([o2.mmax]), i4.updateIntArray([7]), i4.updateFloatArray([o2.mmin])), i4.updateIntArray([3622027469]), void q3(o2.spatialReference.wkid, i4, u3);
          if (o2 instanceof f)
            return i4.updateIntArray([14]), void 0 !== o2.wkid && null !== o2.wkid && i4.updateIntArray([o2.wkid]), void (o2.wkt && i4.updateWithString(o2.wkt));
          if (O(o2))
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          if (V(o2))
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          if (U(o2))
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          if (o2 === F)
            throw new t(u3.context, e.UnsupportedHashType, u3.node);
          throw new t(u3.context, e.UnsupportedHashType, u3.node);
        }
        if (i4.updateUint8Array([223]), u3.map.has(o2)) {
          const t7 = u3.map.get(o2);
          i4.updateIntArray([61237541 ^ t7]);
        } else {
          u3.map.set(o2, u3.currentLength++);
          for (const t7 of o2.keys()) {
            i4.updateIntArray([t7.length]), i4.updateWithString(t7), i4.updateUint8Array([251]);
            q3(o2.field(t7), i4, u3), i4.updateUint8Array([239]);
          }
          u3.map.delete(o2), u3.currentLength--;
        }
        i4.updateUint8Array([73]);
      }
    }
  else
    i4.updateUint8Array([0, 139]);
}
function G2(e4, P4) {
  e4.portal = function(e5, r4) {
    return P4(e5, r4, (n3, a3, u3) => (Q(u3, 1, 1, e5, r4), new t3(oe(u3[0]))));
  }, e4.typeof = function(t7, e5) {
    return P4(t7, e5, (r4, i4, s4) => {
      Q(s4, 1, 1, t7, e5);
      const l5 = _(s4[0]);
      if ("Unrecognised Type" === l5)
        throw new t(t7, e.UnrecognisedType, e5);
      return l5;
    });
  }, e4.trim = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => (Q(a3, 1, 1, t7, e5), oe(a3[0]).trim()));
  }, e4.tohex = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      Q(a3, 1, 1, t7, e5);
      const i4 = fe(a3[0]);
      return isNaN(i4) ? i4 : i4.toString(16);
    });
  }, e4.upper = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => (Q(a3, 1, 1, t7, e5), oe(a3[0]).toUpperCase()));
  }, e4.proper = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      Q(a3, 1, 2, t7, e5);
      let u3 = 1;
      2 === a3.length && "firstword" === oe(a3[1]).toLowerCase() && (u3 = 2);
      const s4 = /\s/, l5 = oe(a3[0]);
      let c4 = "", p9 = true;
      for (let t8 = 0; t8 < l5.length; t8++) {
        let e6 = l5[t8];
        if (s4.test(e6))
          1 === u3 && (p9 = true);
        else {
          e6.toUpperCase() !== e6.toLowerCase() && (p9 ? (e6 = e6.toUpperCase(), p9 = false) : e6 = e6.toLowerCase());
        }
        c4 += e6;
      }
      return c4;
    });
  }, e4.lower = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => (Q(a3, 1, 1, t7, e5), oe(a3[0]).toLowerCase()));
  }, e4.guid = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      if (Q(a3, 0, 1, t7, e5), a3.length > 0)
        switch (oe(a3[0]).toLowerCase()) {
          case "digits":
            return K().replace("-", "").replace("-", "").replace("-", "").replace("-", "");
          case "digits-hyphen":
            return K();
          case "digits-hyphen-braces":
            return "{" + K() + "}";
          case "digits-hyphen-parentheses":
            return "(" + K() + ")";
        }
      return "{" + K() + "}";
    });
  }, e4.standardizeguid = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      Q(a3, 2, 2, t7, e5);
      let u3 = oe(a3[0]);
      if ("" === u3 || null === u3)
        return "";
      const s4 = /^(\{|\()?(?<partA>[0-9a-z]{8})(\-?)(?<partB>[0-9a-z]{4})(\-?)(?<partC>[0-9a-z]{4})(\-?)(?<partD>[0-9a-z]{4})(\-?)(?<partE>[0-9a-z]{12})(\}|\))?$/gim.exec(u3);
      if (!s4)
        return "";
      const l5 = s4.groups;
      switch (u3 = l5.partA + "-" + l5.partB + "-" + l5.partC + "-" + l5.partD + "-" + l5.partE, oe(a3[1]).toLowerCase()) {
        case "digits":
          return u3.replace("-", "").replace("-", "").replace("-", "").replace("-", "");
        case "digits-hyphen":
          return u3;
        case "digits-hyphen-braces":
          return "{" + u3 + "}";
        case "digits-hyphen-parentheses":
          return "(" + u3 + ")";
      }
      return "{" + u3 + "}";
    });
  }, e4.console = function(t7, e5) {
    return P4(t7, e5, (e6, r4, n3) => (0 === n3.length || (1 === n3.length ? t7.console(oe(n3[0])) : t7.console(oe(n3))), F));
  }, e4.mid = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      Q(a3, 2, 3, t7, e5);
      let u3 = fe(a3[1]);
      if (isNaN(u3))
        return "";
      if (u3 < 0 && (u3 = 0), 2 === a3.length)
        return oe(a3[0]).substr(u3);
      let l5 = fe(a3[2]);
      return isNaN(l5) ? "" : (l5 < 0 && (l5 = 0), oe(a3[0]).substr(u3, l5));
    });
  }, e4.find = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      Q(a3, 2, 3, t7, e5);
      let u3 = 0;
      if (a3.length > 2) {
        if (u3 = fe(v(a3[2], 0)), isNaN(u3))
          return -1;
        u3 < 0 && (u3 = 0);
      }
      return oe(a3[1]).indexOf(oe(a3[0]), u3);
    });
  }, e4.left = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      Q(a3, 2, 2, t7, e5);
      let u3 = fe(a3[1]);
      return isNaN(u3) ? "" : (u3 < 0 && (u3 = 0), oe(a3[0]).substr(0, u3));
    });
  }, e4.right = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      Q(a3, 2, 2, t7, e5);
      let u3 = fe(a3[1]);
      return isNaN(u3) ? "" : (u3 < 0 && (u3 = 0), oe(a3[0]).substr(-1 * u3, u3));
    });
  }, e4.split = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      let u3;
      Q(a3, 2, 4, t7, e5);
      let l5 = fe(v(a3[2], -1));
      const c4 = me(v(a3[3], false));
      if (-1 === l5 || null === l5 || true === c4 ? u3 = oe(a3[0]).split(oe(a3[1])) : (isNaN(l5) && (l5 = -1), l5 < -1 && (l5 = -1), u3 = oe(a3[0]).split(oe(a3[1]), l5)), false === c4)
        return u3;
      const f3 = [];
      for (let t8 = 0; t8 < u3.length && !(-1 !== l5 && f3.length >= l5); t8++)
        "" !== u3[t8] && void 0 !== u3[t8] && f3.push(u3[t8]);
      return f3;
    });
  }, e4.text = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => (Q(a3, 1, 2, t7, e5), se(a3[0], a3[1])));
  }, e4.concatenate = function(t7, e5) {
    return P4(t7, e5, (t8, e6, r4) => {
      const n3 = [];
      if (r4.length < 1)
        return "";
      if (z(r4[0])) {
        const t9 = v(r4[2], "");
        for (let e7 = 0; e7 < r4[0].length; e7++)
          n3[e7] = se(r4[0][e7], t9);
        return r4.length > 1 ? n3.join(r4[1]) : n3.join("");
      }
      if (q(r4[0])) {
        const t9 = v(r4[2], "");
        for (let e7 = 0; e7 < r4[0].length(); e7++)
          n3[e7] = se(r4[0].get(e7), t9);
        return r4.length > 1 ? n3.join(r4[1]) : n3.join("");
      }
      for (let a3 = 0; a3 < r4.length; a3++)
        n3[a3] = se(r4[a3]);
      return n3.join("");
    });
  }, e4.reverse = function(t7, e5) {
    return P4(t7, e5, (r4, i4, u3) => {
      if (Q(u3, 1, 1, t7, e5), z(u3[0])) {
        const t8 = u3[0].slice(0);
        return t8.reverse(), t8;
      }
      if (q(u3[0])) {
        const t8 = u3[0].toArray().slice(0);
        return t8.reverse(), t8;
      }
      throw new t(t7, e.InvalidParameter, e5);
    });
  }, e4.replace = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      Q(a3, 3, 4, t7, e5);
      const u3 = oe(a3[0]), s4 = oe(a3[1]), l5 = oe(a3[2]);
      return 4 !== a3.length || me(a3[3]) ? I(u3, s4, l5) : u3.replace(s4, l5);
    });
  }, e4.schema = function(t7, e5) {
    return P4(t7, e5, (o2, i4, u3) => {
      if (E(u3[0])) {
        const e6 = Ge(u3[0]);
        return e6 ? A.convertObjectToArcadeDictionary(e6, Pe(t7)) : null;
      }
      throw new t(t7, e.InvalidParameter, e5);
    });
  }, e4.subtypes = function(t7, e5) {
    return P4(t7, e5, (i4, u3, s4) => {
      if (Q(s4, 1, 1, t7, e5), E(s4[0])) {
        const e6 = Le(s4[0]);
        return e6 ? A.convertObjectToArcadeDictionary(e6, Pe(t7)) : null;
      }
      throw new t(t7, e.InvalidParameter, e5);
    });
  }, e4.subtypecode = function(t7, e5) {
    return P4(t7, e5, (r4, i4, u3) => {
      if (Q(u3, 1, 1, t7, e5), E(u3[0])) {
        const t8 = Le(u3[0]);
        if (!t8)
          return null;
        if (t8.subtypeField && u3[0].hasField(t8.subtypeField)) {
          const e6 = u3[0].field(t8.subtypeField);
          for (const r5 of t8.subtypes)
            if (r5.code === e6)
              return r5.code;
          return null;
        }
        return null;
      }
      throw new t(t7, e.InvalidParameter, e5);
    });
  }, e4.subtypename = function(t7, e5) {
    return P4(t7, e5, (r4, i4, u3) => {
      if (Q(u3, 1, 1, t7, e5), E(u3[0])) {
        const t8 = Le(u3[0]);
        if (!t8)
          return "";
        if (t8.subtypeField && u3[0].hasField(t8.subtypeField)) {
          const e6 = u3[0].field(t8.subtypeField);
          for (const r5 of t8.subtypes)
            if (r5.code === e6)
              return r5.name;
          return "";
        }
        return "";
      }
      throw new t(t7, e.InvalidParameter, e5);
    });
  }, e4.gdbversion = function(t7, e5) {
    return P4(t7, e5, (r4, i4, u3) => {
      if (Q(u3, 1, 1, t7, e5), E(u3[0]))
        return u3[0].gdbVersion();
      throw new t(t7, e.InvalidParameter, e5);
    });
  }, e4.domain = function(t7, e5) {
    return P4(t7, e5, (u3, s4, l5) => {
      if (Q(l5, 2, 3, t7, e5), E(l5[0])) {
        const e6 = _e(l5[0], oe(l5[1]), void 0 === l5[2] ? void 0 : l5[2]);
        return e6 && e6.domain ? "coded-value" === e6.domain.type || "codedValue" === e6.domain.type ? A.convertObjectToArcadeDictionary({ type: "codedValue", name: e6.domain.name, dataType: b[e6.field.type], codedValues: e6.domain.codedValues.map((t8) => ({ name: t8.name, code: t8.code })) }, Pe(t7)) : A.convertObjectToArcadeDictionary({ type: "range", name: e6.domain.name, dataType: b[e6.field.type], min: e6.domain.min, max: e6.domain.max }, Pe(t7)) : null;
      }
      throw new t(t7, e.InvalidParameter, e5);
    });
  }, e4.domainname = function(t7, e5) {
    return P4(t7, e5, (r4, u3, s4) => {
      if (Q(s4, 2, 4, t7, e5), E(s4[0]))
        return Ye(s4[0], oe(s4[1]), s4[2], void 0 === s4[3] ? void 0 : s4[3]);
      throw new t(t7, e.InvalidParameter, e5);
    });
  }, e4.domaincode = function(t7, e5) {
    return P4(t7, e5, (r4, u3, s4) => {
      if (Q(s4, 2, 4, t7, e5), E(s4[0]))
        return Je(s4[0], oe(s4[1]), s4[2], void 0 === s4[3] ? void 0 : s4[3]);
      throw new t(t7, e.InvalidParameter, e5);
    });
  }, e4.urlencode = function(t7, e5) {
    return P4(t7, e5, (n3, a3, u3) => {
      if (Q(u3, 1, 1, t7, e5), null === u3[0])
        return "";
      if (u3[0] instanceof A) {
        let t8 = "";
        for (const e6 of u3[0].keys()) {
          const r4 = u3[0].field(e6);
          "" !== t8 && (t8 += "&"), t8 += null === r4 ? encodeURIComponent(e6) + "=" : encodeURIComponent(e6) + "=" + encodeURIComponent(r4);
        }
        return t8;
      }
      return encodeURIComponent(oe(u3[0]));
    });
  }, e4.hash = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => {
      Q(a3, 1, 1, t7, e5);
      const i4 = new i3(0);
      return q3(a3[0], i4, { context: t7, node: e5, map: /* @__PURE__ */ new Map(), currentLength: 0 }), i4.digest();
    });
  }, e4.convertdirection = function(t7, e5) {
    return P4(t7, e5, (r4, n3, a3) => (Q(a3, 3, 3, t7, e5), ge(a3[0], a3[1], a3[2])));
  }, e4.fromjson = function(t7, e5) {
    return P4(t7, e5, (u3, s4, l5) => {
      if (Q(l5, 1, 1, t7, e5), false === L(l5[0]))
        throw new t(t7, e.InvalidParameter, e5);
      return A.convertJsonToArcade(JSON.parse(oe(l5[0])), Pe(t7));
    });
  }, e4.expects = function(t7, e5) {
    return P4(t7, e5, (r4, o2, i4) => {
      if (i4.length < 1)
        throw new t(t7, e.WrongNumberOfParameters, e5);
      return F;
    });
  }, e4.tocharcode = function(t7, e5) {
    return P4(t7, e5, (r4, u3, l5) => {
      Q(l5, 1, 2, t7, e5);
      const c4 = fe(v(l5[1], 0)), d4 = oe(l5[0]);
      if (0 === d4.length && 1 === l5.length)
        return null;
      if (d4.length <= c4 || c4 < 0)
        throw new t(t7, e.OutOfBounds, e5);
      return d4.charCodeAt(c4);
    });
  }, e4.tocodepoint = function(t7, e5) {
    return P4(t7, e5, (r4, u3, l5) => {
      Q(l5, 1, 2, t7, e5);
      const c4 = fe(v(l5[1], 0)), d4 = oe(l5[0]);
      if (0 === d4.length && 1 === l5.length)
        return null;
      if (d4.length <= c4 || c4 < 0)
        throw new t(t7, e.OutOfBounds, e5);
      return d4.codePointAt(c4);
    });
  }, e4.fromcharcode = function(t7, e5) {
    return P4(t7, e5, (r4, o2, i4) => {
      if (i4.length < 1)
        throw new t(t7, e.WrongNumberOfParameters, e5);
      const u3 = i4.map((t8) => Math.trunc(fe(t8))).filter((t8) => t8 >= 0 && t8 <= 65535);
      return 0 === u3.length ? null : String.fromCharCode.apply(null, u3);
    });
  }, e4.fromcodepoint = function(t7, e5) {
    return P4(t7, e5, (r4, o2, i4) => {
      if (i4.length < 1)
        throw new t(t7, e.WrongNumberOfParameters, e5);
      let u3;
      try {
        u3 = i4.map((t8) => Math.trunc(fe(t8))).filter((t8) => t8 <= 1114111 && t8 >>> 0 === t8);
      } catch (l5) {
        return null;
      }
      return 0 === u3.length ? null : String.fromCodePoint.apply(null, u3);
    });
  }, e4.getuser = function(e5, u3) {
    return P4(e5, u3, (s4, l5, c4) => {
      Q(c4, 0, 2, e5, u3);
      let d4 = v(c4[1], "");
      if (d4 = true === d4 || false === d4 ? "" : oe(d4), null !== d4 && "" !== d4)
        return null;
      if (0 === c4.length || c4[0] instanceof t3) {
        let t7 = null;
        if (t7 = e5.services && e5.services.portal ? e5.services.portal : j2.getDefault(), c4.length > 0) {
          if (!E3(c4[0].field("url"), t7))
            return null;
        }
        if (!t7)
          return null;
        if ("" === d4) {
          const n3 = B3(t7);
          if (n3) {
            const t8 = JSON.parse(JSON.stringify(n3));
            for (const e6 of ["lastLogin", "created", "modified"])
              void 0 !== t8[e6] && null !== t8[e6] && (t8[e6] = new Date(t8[e6]));
            return A.convertObjectToArcadeDictionary(t8, Pe(e5));
          }
        }
        return null;
      }
      throw new t(e5, e.InvalidParameter, u3);
    });
  }, e4.getenvironment = function(t7, e5) {
    return P4(t7, e5, (n3, a3, i4) => (Q(i4, 0, 0, t7, e5), A.convertObjectToArcadeDictionary(ze(Pe(t7), t7.spatialReference), Pe(t7), true)));
  };
}

// node_modules/@arcgis/core/arcade/ArcadeModuleLoader.js
var s3 = class {
  constructor(s4, t7) {
    this._moduleSingletons = s4, this._syntaxModules = t7;
  }
  loadLibrary(s4) {
    if (null == this._syntaxModules)
      return null;
    const t7 = this._syntaxModules[s4.toLowerCase()];
    return t7 ? { syntax: t7.script, uri: t7.uri } : null;
  }
};

export {
  o,
  c3 as c,
  x2 as x,
  p6 as p,
  l2 as l,
  u2 as u,
  y,
  d2 as d,
  p7 as p2,
  T2 as T,
  Z2 as Z,
  W2 as W,
  N2 as N,
  f2 as f,
  G2 as G,
  s3 as s
};
//# sourceMappingURL=chunk-FRJUHTCO.js.map
