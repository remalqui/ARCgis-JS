import {
  a as a3,
  n as n2
} from "./chunk-4NLQ63FV.js";
import {
  b
} from "./chunk-YC4PIRSZ.js";
import {
  c
} from "./chunk-42RWGG3D.js";
import {
  n
} from "./chunk-BVNZ3ETW.js";
import {
  s as s2
} from "./chunk-VBD33VNW.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  s3 as s
} from "./chunk-W2N7YT6I.js";
import {
  a,
  o
} from "./chunk-I5JT24BO.js";

// node_modules/@arcgis/core/layers/support/FeatureFilter.js
var p;
var c2 = new s2({ esriSpatialRelIntersects: "intersects", esriSpatialRelContains: "contains", esriSpatialRelCrosses: "crosses", esriSpatialRelDisjoint: "disjoint", esriSpatialRelEnvelopeIntersects: "envelope-intersects", esriSpatialRelIndexIntersects: "index-intersects", esriSpatialRelOverlaps: "overlaps", esriSpatialRelTouches: "touches", esriSpatialRelWithin: "within", esriSpatialRelRelation: "relation" });
var u = new s2({ esriSRUnit_Meter: "meters", esriSRUnit_Kilometer: "kilometers", esriSRUnit_Foot: "feet", esriSRUnit_StatuteMile: "miles", esriSRUnit_NauticalMile: "nautical-miles", esriSRUnit_USNauticalMile: "us-nautical-miles" });
var m = p = class extends l {
  constructor(e2) {
    super(e2), this.where = null, this.geometry = null, this.spatialRelationship = "intersects", this.distance = void 0, this.objectIds = null, this.units = null, this.timeExtent = null;
  }
  createQuery(e2 = {}) {
    const { where: t, geometry: i, spatialRelationship: r, timeExtent: s3, objectIds: n4, units: l2, distance: p3 } = this;
    return new b({ geometry: a(i), objectIds: a(n4), spatialRelationship: r, timeExtent: a(s3), where: t, units: l2, distance: p3, ...e2 });
  }
  clone() {
    const { where: e2, geometry: t, spatialRelationship: i, timeExtent: r, objectIds: s3, units: n4, distance: l2 } = this;
    return new p({ geometry: a(t), objectIds: a(s3), spatialRelationship: i, timeExtent: a(r), where: e2, units: n4, distance: l2 });
  }
};
e([y({ type: String, json: { write: true } })], m.prototype, "where", void 0), e([y({ types: n, json: { write: true } })], m.prototype, "geometry", void 0), e([y({ type: c2.apiValues, json: { name: "spatialRel", read: { reader: c2.read }, write: { allowNull: false, writer: c2.write, overridePolicy() {
  return { enabled: null != this.geometry };
} } } })], m.prototype, "spatialRelationship", void 0), e([y({ type: Number, json: { write: { overridePolicy(e2) {
  return { enabled: null != e2 && null != this.geometry };
} } } })], m.prototype, "distance", void 0), e([y({ type: [Number], json: { write: true } })], m.prototype, "objectIds", void 0), e([y({ type: u.apiValues, json: { read: u.read, write: { writer: u.write, overridePolicy(e2) {
  return { enabled: null != e2 && null != this.geometry };
} } } })], m.prototype, "units", void 0), e([y({ type: c, json: { write: true } })], m.prototype, "timeExtent", void 0), m = p = e([a2("esri.layers.support.FeatureFilter")], m);
var d = m;

// node_modules/@arcgis/core/layers/support/FeatureEffect.js
var f;
var d2 = { read: { reader: n2 }, write: { writer: a3, overridePolicy() {
  return { allowNull: null != this.excludedEffect, isRequired: null == this.excludedEffect };
} } };
var n3 = { read: { reader: n2 }, write: { writer: a3, overridePolicy() {
  return { allowNull: null != this.includedEffect, isRequired: null == this.includedEffect };
} } };
var a4 = { name: "showExcludedLabels", default: true };
var p2 = f = class extends l {
  constructor(e2) {
    super(e2), this.filter = null, this.includedEffect = null, this.excludedEffect = null, this.excludedLabelsVisible = false;
  }
  write(e2, t) {
    var _a, _b;
    const l2 = super.write(e2, t);
    if (t == null ? void 0 : t.origin) {
      if (l2.filter) {
        const e3 = Object.keys(l2.filter);
        if (e3.length > 1 || "where" !== e3[0])
          return (_a = t.messages) == null ? void 0 : _a.push(new s("web-document-write:unsupported-feature-effect", "Invalid feature effect 'filter'. A filter can only contain a 'where' property", { layer: t.layer, effect: this })), null;
      }
      if ("showExcludedLabels" in l2)
        return (_b = t.messages) == null ? void 0 : _b.push(new s("web-document-write:unsupported-feature-effect", "Invalid value for property 'excludedLabelsVisible' which should always be 'true'", { layer: t.layer, effect: this })), null;
    }
    return l2;
  }
  clone() {
    return new f({ filter: null != this.filter ? this.filter.clone() : null, includedEffect: this.includedEffect, excludedEffect: this.excludedEffect, excludedLabelsVisible: this.excludedLabelsVisible });
  }
};
e([y({ type: d, json: { write: { allowNull: true, writer(e2, r, t, i) {
  const s3 = e2 == null ? void 0 : e2.write({}, i);
  s3 && 0 !== Object.keys(s3).length ? o(t, s3, r) : o(t, null, r);
} } } })], p2.prototype, "filter", void 0), e([y({ json: { write: true, origins: { "web-map": d2, "portal-item": d2 } } })], p2.prototype, "includedEffect", void 0), e([y({ json: { write: true, origins: { "web-map": n3, "portal-item": n3 } } })], p2.prototype, "excludedEffect", void 0), e([y({ type: Boolean, json: { write: true, name: "showExcludedLabels", origins: { "web-map": a4, "portal-item": a4 } } })], p2.prototype, "excludedLabelsVisible", void 0), p2 = f = e([a2("esri.layers.support.FeatureEffect")], p2);
var w = p2;

export {
  d,
  w
};
//# sourceMappingURL=chunk-PLCQTNGD.js.map
