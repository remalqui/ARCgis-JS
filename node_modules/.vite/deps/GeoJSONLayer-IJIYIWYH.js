import {
  c as c2
} from "./chunk-V3KDZQUR.js";
import {
  p as p3
} from "./chunk-XSL4XKVS.js";
import "./chunk-PLCQTNGD.js";
import {
  n as n2
} from "./chunk-UMKNA5PR.js";
import "./chunk-YM46NRFF.js";
import {
  n as n3
} from "./chunk-QRIMDBVP.js";
import "./chunk-62M25QKF.js";
import {
  s as s3
} from "./chunk-W52WZL2F.js";
import {
  p as p4
} from "./chunk-7MOGRCW6.js";
import {
  i
} from "./chunk-3Y3ICAIL.js";
import {
  C
} from "./chunk-TNXVIMSN.js";
import "./chunk-XFLBB3FK.js";
import {
  a as a3
} from "./chunk-77BBQQ7Y.js";
import {
  o as o2
} from "./chunk-FGWFWDIM.js";
import {
  p as p5
} from "./chunk-UCGDNB2P.js";
import {
  n,
  p2
} from "./chunk-E4GDJ764.js";
import "./chunk-Z2T56FN3.js";
import "./chunk-ZMKH5ZRU.js";
import {
  j as j2
} from "./chunk-P46VVEIN.js";
import {
  p
} from "./chunk-X34I34RW.js";
import {
  a as a2
} from "./chunk-5NBE4HDI.js";
import "./chunk-4NLQ63FV.js";
import "./chunk-Y7HVH6RU.js";
import {
  t
} from "./chunk-2HDAD5Q3.js";
import {
  c as c5
} from "./chunk-PPU6QR6F.js";
import {
  O
} from "./chunk-PCVJI7J2.js";
import {
  c as c4,
  d as d2,
  f as f4,
  l,
  m,
  p as p7,
  u,
  v
} from "./chunk-HZHMZHPT.js";
import "./chunk-NU5WEWCI.js";
import "./chunk-UIVGJZCT.js";
import "./chunk-MVR2W3C6.js";
import {
  d
} from "./chunk-RNXN3MSP.js";
import "./chunk-4NWXO2LT.js";
import "./chunk-6ETVGJDF.js";
import "./chunk-34QQ6GDH.js";
import "./chunk-KTII3LWY.js";
import "./chunk-RL6GG46M.js";
import "./chunk-JDYLSHC3.js";
import "./chunk-QAWS7Y22.js";
import "./chunk-UX5D32RO.js";
import {
  c
} from "./chunk-P34MS5MD.js";
import "./chunk-FHYNSVC4.js";
import "./chunk-NYLF7BL2.js";
import {
  b
} from "./chunk-YC4PIRSZ.js";
import "./chunk-32JSK7KN.js";
import "./chunk-YIJWIXDP.js";
import "./chunk-LLQHB2ZB.js";
import "./chunk-EISDT6B4.js";
import "./chunk-LREUW66K.js";
import {
  y as y2
} from "./chunk-RR2V4HRU.js";
import "./chunk-WZAASLQW.js";
import "./chunk-SCOBW7KR.js";
import "./chunk-AHAGGZUI.js";
import {
  f as f3
} from "./chunk-AF36K5Y6.js";
import "./chunk-5K6FTFN4.js";
import "./chunk-CNCZBOLJ.js";
import "./chunk-QXPTMFGZ.js";
import "./chunk-4SARN32Z.js";
import {
  k as k2
} from "./chunk-QA4FMJA6.js";
import "./chunk-VFQINJTY.js";
import "./chunk-4J6R7QH6.js";
import "./chunk-HB3KZNZ3.js";
import "./chunk-MUO4EIZP.js";
import "./chunk-42RWGG3D.js";
import "./chunk-OO4A3EBQ.js";
import "./chunk-ZBWBCN2I.js";
import "./chunk-KTEJJM3A.js";
import "./chunk-SO6DBMQG.js";
import "./chunk-KTSEQWMB.js";
import "./chunk-QXGO5RRL.js";
import "./chunk-EIE3W25Z.js";
import {
  c2 as c3,
  p as p6
} from "./chunk-7KM4XBUC.js";
import "./chunk-OZXJDVTE.js";
import "./chunk-CGK6BJQA.js";
import {
  b as b2
} from "./chunk-XU2Q4SCK.js";
import "./chunk-KIEN3CY2.js";
import "./chunk-4CZO65BK.js";
import "./chunk-7E3Q7HTF.js";
import "./chunk-FXDEKQIL.js";
import "./chunk-GJ5WE5D3.js";
import "./chunk-KKGH4SRQ.js";
import "./chunk-Y2CLYMXQ.js";
import "./chunk-4RFFPIT2.js";
import "./chunk-UKJF25H6.js";
import "./chunk-KSQTM6XI.js";
import "./chunk-D5MIJ6WT.js";
import "./chunk-7KX64CAH.js";
import {
  _
} from "./chunk-J4R3XNTP.js";
import "./chunk-Y6FRAP2R.js";
import "./chunk-BVNZ3ETW.js";
import {
  o
} from "./chunk-FJQ7HIY7.js";
import "./chunk-T4XWQYGC.js";
import "./chunk-4H5JODOT.js";
import {
  j
} from "./chunk-TCASQSKO.js";
import "./chunk-5HAVROZG.js";
import "./chunk-MOPR7RFH.js";
import "./chunk-KW3ZNPTA.js";
import "./chunk-TJB4CGOM.js";
import "./chunk-4NOOGA4U.js";
import "./chunk-CWQ6Q3PH.js";
import "./chunk-XN5VV437.js";
import "./chunk-ODFH3BSN.js";
import "./chunk-74O2T7JC.js";
import "./chunk-WBSPL6CJ.js";
import "./chunk-N5ULYWRU.js";
import "./chunk-LQVUN6IS.js";
import "./chunk-JZM5YUHA.js";
import "./chunk-MOIETNWJ.js";
import {
  M
} from "./chunk-3GSONYPC.js";
import {
  f as f2
} from "./chunk-SFV6XLDZ.js";
import "./chunk-3PLRSFLA.js";
import "./chunk-VBD33VNW.js";
import "./chunk-7A5C2EQ3.js";
import {
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import "./chunk-SHJI4PR4.js";
import "./chunk-2YSHZRCT.js";
import "./chunk-HKVL2MJK.js";
import "./chunk-MH2LNFJK.js";
import {
  L
} from "./chunk-O3CHVGVF.js";
import {
  f,
  k
} from "./chunk-HNHXEGH2.js";
import "./chunk-DWOEYHKS.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-W2N7YT6I.js";
import "./chunk-I5JT24BO.js";
import {
  has
} from "./chunk-I4U7MQNO.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/graphics/sources/GeoJSONSource.js
var h = "esri.layers.graphics.sources.GeoJSONSource";
var m2 = s.getLogger(h);
var y3 = class extends _ {
  constructor() {
    super(...arguments), this.type = "geojson", this.refresh = k(async (e2) => {
      await this.load();
      const { extent: t2, timeExtent: r } = await this._connection.invoke("refresh", e2);
      return this.sourceJSON.extent = t2, r && (this.sourceJSON.timeInfo.timeExtent = [r.start, r.end]), { dataChanged: true, updates: { extent: this.sourceJSON.extent, timeInfo: this.sourceJSON.timeInfo } };
    });
  }
  load(e2) {
    const t2 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this._startWorker(t2)), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  applyEdits(e2) {
    return this.load().then(() => this._applyEdits(e2));
  }
  openPorts() {
    return this.load().then(() => this._connection.openPorts());
  }
  queryFeatures(e2, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryFeatures", e2 ? e2.toJSON() : null, t2)).then((e3) => d.fromJSON(e3));
  }
  queryFeaturesJSON(e2, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryFeatures", e2 ? e2.toJSON() : null, t2));
  }
  queryFeatureCount(e2, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryFeatureCount", e2 ? e2.toJSON() : null, t2));
  }
  queryObjectIds(e2, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryObjectIds", e2 ? e2.toJSON() : null, t2));
  }
  queryExtent(e2, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("queryExtent", e2 ? e2.toJSON() : null, t2)).then((e3) => ({ count: e3.count, extent: M.fromJSON(e3.extent) }));
  }
  querySnapping(e2, t2 = {}) {
    return this.load(t2).then(() => this._connection.invoke("querySnapping", e2, t2));
  }
  _applyEdits(e2) {
    if (!this._connection)
      throw new s2("geojson-layer-source:edit-failure", "Memory source not loaded");
    const r = this.layer.objectIdField, o3 = [], s4 = [], i2 = [];
    if (e2.addFeatures)
      for (const t2 of e2.addFeatures)
        o3.push(this._serializeFeature(t2));
    if (e2.deleteFeatures)
      for (const t2 of e2.deleteFeatures)
        "objectId" in t2 && null != t2.objectId ? s4.push(t2.objectId) : "attributes" in t2 && null != t2.attributes[r] && s4.push(t2.attributes[r]);
    if (e2.updateFeatures)
      for (const t2 of e2.updateFeatures)
        i2.push(this._serializeFeature(t2));
    return this._connection.invoke("applyEdits", { adds: o3, updates: i2, deletes: s4 }).then(({ extent: e3, timeExtent: t2, featureEditResults: r2 }) => (this.sourceJSON.extent = e3, t2 && (this.sourceJSON.timeInfo.timeExtent = [t2.start, t2.end]), this._createEditsResult(r2)));
  }
  _createEditsResult(e2) {
    return { addFeatureResults: e2.addResults ? e2.addResults.map(this._createFeatureEditResult, this) : [], updateFeatureResults: e2.updateResults ? e2.updateResults.map(this._createFeatureEditResult, this) : [], deleteFeatureResults: e2.deleteResults ? e2.deleteResults.map(this._createFeatureEditResult, this) : [], addAttachmentResults: [], updateAttachmentResults: [], deleteAttachmentResults: [] };
  }
  _createFeatureEditResult(e2) {
    const r = true === e2.success ? null : e2.error || { code: void 0, description: void 0 };
    return { objectId: e2.objectId, globalId: e2.globalId, error: r ? new s2("geojson-layer-source:edit-failure", r.description, { code: r.code }) : null };
  }
  _serializeFeature(e2) {
    const { attributes: t2 } = e2, r = this._geometryForSerialization(e2);
    return r ? { geometry: r.toJSON(), attributes: t2 } : { attributes: t2 };
  }
  _geometryForSerialization(e2) {
    const { geometry: t2 } = e2;
    return null == t2 ? null : "mesh" === t2.type || "extent" === t2.type ? j.fromExtent(t2.extent) : t2;
  }
  async _startWorker(e2) {
    this._connection = await f3("GeoJSONSourceWorker", { strategy: has("feature-layers-workers") ? "dedicated" : "local", signal: e2 });
    const { fields: t2, spatialReference: r, hasZ: o3, geometryType: s4, objectIdField: n4, url: a4, timeInfo: l2, customParameters: c6 } = this.layer, d3 = "defaults" === this.layer.originOf("spatialReference"), h2 = { url: a4, customParameters: c6, fields: t2 && t2.map((e3) => e3.toJSON()), geometryType: o.toJSON(s4), hasZ: o3, objectIdField: n4, timeInfo: l2 ? l2.toJSON() : null, spatialReference: d3 ? null : r && r.toJSON() }, y4 = await this._connection.invoke("load", h2, { signal: e2 });
    for (const i2 of y4.warnings)
      m2.warn(i2.message, { layer: this.layer, warning: i2 });
    y4.featureErrors.length && m2.warn(`Encountered ${y4.featureErrors.length} validation errors while loading features`, y4.featureErrors), this.sourceJSON = y4.layerDefinition, this.capabilities = c(this.sourceJSON.hasZ, true);
  }
};
e([y()], y3.prototype, "capabilities", void 0), e([y()], y3.prototype, "type", void 0), e([y({ constructOnly: true })], y3.prototype, "layer", void 0), e([y()], y3.prototype, "sourceJSON", void 0), y3 = e([a(h)], y3);

// node_modules/@arcgis/core/layers/GeoJSONLayer.js
var B = s3();
var Z = class extends c2(o2(n2(p3(a2(a3(t(p(c5(j2(O(b2))))))))))) {
  constructor(e2) {
    super(e2), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.editingEnabled = false, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.hasZ = void 0, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.operationalLayerType = "GeoJSON", this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new y3({ layer: this }), this.spatialReference = f2.WGS84, this.templates = null, this.title = "GeoJSON", this.type = "geojson", this.typeIdField = null, this.types = null;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e2) {
    const t2 = this.loadFromPortal({ supportedTypes: ["GeoJson"], supportsData: false }, e2).catch(f).then(() => this.source.load(e2)).then(() => {
      this.read(this.source.sourceJSON, { origin: "service", url: this.parsedUrl }), this.revert(["objectIdField", "fields", "timeInfo"], "service"), c3(this.renderer, this.fieldsIndex), p6(this.timeInfo, this.fieldsIndex);
    });
    return this.addResolvingPromise(t2), Promise.resolve(this);
  }
  get capabilities() {
    return this.source ? this.source.capabilities : null;
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") || 0) + 1;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get isTable() {
    return this.loaded && null == this.geometryType;
  }
  get parsedUrl() {
    return this.url ? L(this.url) : null;
  }
  set renderer(e2) {
    c3(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  set url(e2) {
    if (!e2)
      return void this._set("url", e2);
    const t2 = L(e2);
    this._set("url", t2.path), t2.query && (this.customParameters = { ...this.customParameters, ...t2.query });
  }
  async applyEdits(e2, t2) {
    const { applyEdits: r } = await import("./editingSupport-6GK7R2PV.js");
    await this.load();
    const i2 = await r(this, this.source, e2, t2);
    return this.read({ extent: this.source.sourceJSON.extent, timeInfo: this.source.sourceJSON.timeInfo }, { origin: "service", ignoreDefaults: true }), i2;
  }
  on(e2, t2) {
    return super.on(e2, t2);
  }
  createPopupTemplate(e2) {
    return p5(this, e2);
  }
  createQuery() {
    const e2 = new b(), t2 = this.get("capabilities.data");
    e2.returnGeometry = true, t2 && t2.supportsZ && (e2.returnZ = true), e2.outFields = ["*"], e2.where = this.definitionExpression || "1=1";
    const { timeOffset: r, timeExtent: i2 } = this;
    return e2.timeExtent = null != r && null != i2 ? i2.offset(-r.value, r.unit) : i2 || null, e2;
  }
  getFieldDomain(e2, t2) {
    let r, i2 = false;
    const o3 = t2 && t2.feature, s4 = o3 && o3.attributes, p8 = this.typeIdField && s4 && s4[this.typeIdField];
    return null != p8 && this.types && (i2 = this.types.some((t3) => t3.id == p8 && (r = t3.domains && t3.domains[e2], r && "inherited" === r.type && (r = this._getLayerDomain(e2)), true))), i2 || r || (r = this._getLayerDomain(e2)), r;
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  queryFeatures(e2, t2) {
    return this.load().then(() => this.source.queryFeatures(b.from(e2) || this.createQuery(), t2)).then((e3) => {
      if (e3 == null ? void 0 : e3.features)
        for (const t3 of e3.features)
          t3.layer = t3.sourceLayer = this;
      return e3;
    });
  }
  queryObjectIds(e2, t2) {
    return this.load().then(() => this.source.queryObjectIds(b.from(e2) || this.createQuery(), t2));
  }
  queryFeatureCount(e2, t2) {
    return this.load().then(() => this.source.queryFeatureCount(b.from(e2) || this.createQuery(), t2));
  }
  queryExtent(e2, t2) {
    return this.load().then(() => this.source.queryExtent(b.from(e2) || this.createQuery(), t2));
  }
  async hasDataChanged() {
    try {
      const { dataChanged: e2, updates: t2 } = await this.source.refresh(this.customParameters);
      return null != t2 && this.read(t2, { origin: "service", url: this.parsedUrl, ignoreDefaults: true }), e2;
    } catch {
    }
    return false;
  }
  _getLayerDomain(e2) {
    if (!this.fields)
      return null;
    let t2 = null;
    return this.fields.some((r) => (r.name === e2 && (t2 = r.domain), !!t2)), t2;
  }
};
e([y({ readOnly: true, json: { read: false, write: false } })], Z.prototype, "capabilities", null), e([y({ type: String })], Z.prototype, "copyright", void 0), e([y({ readOnly: true })], Z.prototype, "createQueryVersion", null), e([y({ readOnly: true })], Z.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], Z.prototype, "definitionExpression", void 0), e([y({ type: String })], Z.prototype, "displayField", void 0), e([y({ type: Boolean })], Z.prototype, "editingEnabled", void 0), e([y(d2)], Z.prototype, "elevationInfo", void 0), e([y({ type: [y2], json: { name: "layerDefinition.fields", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "fields" } } } })], Z.prototype, "fields", void 0), e([y(B.fieldsIndex)], Z.prototype, "fieldsIndex", void 0), e([y({ type: M, json: { name: "extent" } })], Z.prototype, "fullExtent", void 0), e([y({ type: ["point", "polygon", "polyline", "multipoint"], json: { read: { reader: o.read } } })], Z.prototype, "geometryType", void 0), e([y({ type: Boolean })], Z.prototype, "hasZ", void 0), e([y(v)], Z.prototype, "id", void 0), e([y({ type: Boolean, readOnly: true })], Z.prototype, "isTable", null), e([y(m)], Z.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i }, write: true } })], Z.prototype, "labelingInfo", void 0), e([y(c4)], Z.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], Z.prototype, "listMode", void 0), e([y({ type: String, json: { name: "layerDefinition.objectIdField", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "objectIdField" } } } })], Z.prototype, "objectIdField", void 0), e([y(u)], Z.prototype, "opacity", void 0), e([y({ type: ["GeoJSON"] })], Z.prototype, "operationalLayerType", void 0), e([y({ readOnly: true })], Z.prototype, "parsedUrl", null), e([y(p7)], Z.prototype, "popupEnabled", void 0), e([y({ type: k2, json: { name: "popupInfo", write: true } })], Z.prototype, "popupTemplate", void 0), e([y({ types: p2, json: { name: "layerDefinition.drawingInfo.renderer", write: true, origins: { service: { name: "drawingInfo.renderer" }, "web-scene": { types: n } } } })], Z.prototype, "renderer", null), e([y(l)], Z.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ readOnly: true })], Z.prototype, "source", void 0), e([y({ type: f2 })], Z.prototype, "spatialReference", void 0), e([y({ type: [p4] })], Z.prototype, "templates", void 0), e([y()], Z.prototype, "title", void 0), e([y({ json: { read: false }, readOnly: true })], Z.prototype, "type", void 0), e([y({ type: String, readOnly: true })], Z.prototype, "typeIdField", void 0), e([y({ type: [n3] })], Z.prototype, "types", void 0), e([y(f4)], Z.prototype, "url", null), Z = e([a("esri.layers.GeoJSONLayer")], Z);
var M2 = Z;
export {
  M2 as default
};
//# sourceMappingURL=GeoJSONLayer-IJIYIWYH.js.map
