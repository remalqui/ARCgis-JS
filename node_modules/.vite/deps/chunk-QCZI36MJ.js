import {
  n as n5
} from "./chunk-WON6TZX6.js";
import {
  i as i4,
  r as r3
} from "./chunk-NSS3KYAR.js";
import {
  n as n4
} from "./chunk-2XVUXMWQ.js";
import {
  n as n3,
  p as p2
} from "./chunk-6YPETR6R.js";
import {
  n as n2
} from "./chunk-TNXVIMSN.js";
import {
  b
} from "./chunk-PM3CFO6N.js";
import {
  f as f2,
  i as i2,
  s as s2
} from "./chunk-YBMFRTPB.js";
import {
  h
} from "./chunk-4SARN32Z.js";
import {
  y as y2
} from "./chunk-VFQINJTY.js";
import {
  c
} from "./chunk-42RWGG3D.js";
import {
  F,
  i as i3
} from "./chunk-7KM4XBUC.js";
import {
  V
} from "./chunk-4RFFPIT2.js";
import {
  n
} from "./chunk-BVNZ3ETW.js";
import {
  i
} from "./chunk-FJQ7HIY7.js";
import {
  p,
  v as v2
} from "./chunk-T4XWQYGC.js";
import {
  a as a2
} from "./chunk-XN5VV437.js";
import {
  M
} from "./chunk-3GSONYPC.js";
import {
  H,
  f,
  o2 as o,
  r as r2
} from "./chunk-SFV6XLDZ.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  m,
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a,
  e as e2
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  r,
  v
} from "./chunk-2YSHZRCT.js";
import {
  j as j2
} from "./chunk-HKVL2MJK.js";
import {
  j,
  k
} from "./chunk-HNHXEGH2.js";
import {
  s3 as s
} from "./chunk-W2N7YT6I.js";
import {
  R,
  has
} from "./chunk-I4U7MQNO.js";

// node_modules/@arcgis/core/renderers/support/clickToleranceUtils.js
function t(t2, e4) {
  return e4 ? "xoffset" in e4 && e4.xoffset ? Math.max(t2, Math.abs(e4.xoffset)) : "yoffset" in e4 && e4.yoffset ? Math.max(t2, Math.abs(e4.yoffset || 0)) : t2 : t2;
}
function e3(t2) {
  let e4 = 0, n7 = 0;
  for (let r6 = 0; r6 < t2.length; r6++) {
    const s5 = t2[r6].size;
    "number" == typeof s5 && (e4 += s5, n7++);
  }
  return e4 / n7;
}
function n6(t2, n7) {
  return "number" == typeof t2 ? t2 : t2 && t2.stops && t2.stops.length ? e3(t2.stops) : n7;
}
function r4(t2, e4) {
  if (!e4)
    return t2;
  const r6 = e4.filter((t3) => "size" === t3.type).map((e5) => {
    const { maxSize: r7, minSize: s6 } = e5;
    return (n6(r7, t2) + n6(s6, t2)) / 2;
  });
  let s5 = 0;
  const o3 = r6.length;
  if (0 === o3)
    return t2;
  for (let n7 = 0; n7 < o3; n7++)
    s5 += r6[n7];
  const f4 = Math.floor(s5 / o3);
  return Math.max(f4, t2);
}
function s3(e4) {
  var _a;
  const n7 = e4 && e4.renderer, s5 = "touch" === (e4 && e4.event && e4.event.pointerType) ? 9 : 6;
  if (!n7)
    return s5;
  const o3 = "visualVariables" in n7 ? r4(s5, n7.visualVariables) : s5;
  if ("simple" === n7.type)
    return t(o3, n7.symbol);
  if ("unique-value" === n7.type) {
    let e5 = o3;
    return (_a = n7.uniqueValueInfos) == null ? void 0 : _a.forEach((n8) => {
      e5 = t(e5, n8.symbol);
    }), e5;
  }
  if ("class-breaks" === n7.type) {
    let e5 = o3;
    return n7.classBreakInfos.forEach((n8) => {
      e5 = t(e5, n8.symbol);
    }), e5;
  }
  return "dot-density" === n7.type || n7.type, o3;
}

// node_modules/@arcgis/core/rest/operations/identify.js
var s4 = (e4) => e4.spatialReference.wkid || JSON.stringify(e4.spatialReference);
function l2(e4, t2) {
  const { dpi: i5, gdbVersion: n7, geometry: l3, geometryPrecision: a7, height: f4, layerOption: p4, mapExtent: m5, maxAllowableOffset: y3, returnFieldName: u3, returnGeometry: c2, returnUnformattedValues: d, returnZ: g, spatialReference: x, timeExtent: b2, tolerance: h2, width: E } = e4.toJSON(), { dynamicLayers: O, layerDefs: S2, layerIds: N } = o2(e4), j3 = t2 && null != t2.geometry ? t2.geometry : null, J = { geometryPrecision: a7, maxAllowableOffset: y3, returnFieldName: u3, returnGeometry: c2, returnUnformattedValues: d, returnZ: g, tolerance: h2 }, R3 = j3 && j3.toJSON() || l3;
  if (J.imageDisplay = `${E},${f4},${i5}`, n7 && (J.gdbVersion = n7), R3 && (delete R3.spatialReference, J.geometry = JSON.stringify(R3), J.geometryType = v2(R3)), x ? J.sr = x.wkid || JSON.stringify(x) : R3 && R3.spatialReference ? J.sr = s4(R3) : m5 && m5.spatialReference && (J.sr = s4(m5)), J.time = b2 ? [b2.start, b2.end].join(",") : null, m5) {
    const { xmin: e5, ymin: r6, xmax: t3, ymax: i6 } = m5;
    J.mapExtent = `${e5},${r6},${t3},${i6}`;
  }
  return S2 && (J.layerDefs = S2), O && !S2 && (J.dynamicLayers = O), J.layers = "popup" === p4 ? "visible" : p4, N && !O && (J.layers += `:${N.join(",")}`), J;
}
function o2(e4) {
  var _a, _b;
  const { mapExtent: r6, floors: s5, width: l3, sublayers: o3, layerIds: f4, layerOption: p4, gdbVersion: m5 } = e4, y3 = (_b = (_a = o3 == null ? void 0 : o3.find((e5) => null != e5.layer)) == null ? void 0 : _a.layer) == null ? void 0 : _b.serviceSublayers, u3 = "popup" === p4, c2 = {}, d = i4({ extent: r6, width: l3, spatialReference: r6 == null ? void 0 : r6.spatialReference }), g = [], x = (e5) => {
    const r7 = 0 === d, t2 = 0 === e5.minScale || d <= e5.minScale, i5 = 0 === e5.maxScale || d >= e5.maxScale;
    if (e5.visible && (r7 || t2 && i5))
      if (e5.sublayers)
        e5.sublayers.forEach(x);
      else {
        if (false === (f4 == null ? void 0 : f4.includes(e5.id)) || u3 && (!e5.popupTemplate || !e5.popupEnabled))
          return;
        g.unshift(e5);
      }
  };
  if (o3 == null ? void 0 : o3.forEach(x), o3 && !g.length)
    c2.layerIds = [];
  else {
    const e5 = n4(g, y3, m5), r7 = g.map((e6) => {
      const r8 = n5(s5, e6);
      return e6.toExportImageJSON(r8);
    });
    if (e5)
      c2.dynamicLayers = JSON.stringify(r7);
    else {
      if (o3) {
        let e7 = g.map(({ id: e8 }) => e8);
        f4 && (e7 = e7.filter((e8) => f4.includes(e8))), c2.layerIds = e7;
      } else
        (f4 == null ? void 0 : f4.length) && (c2.layerIds = f4);
      const e6 = a3(s5, g);
      if (null != e6 && e6.length) {
        const r8 = {};
        for (const t2 of e6)
          t2.definitionExpression && (r8[t2.id] = t2.definitionExpression);
        Object.keys(r8).length && (c2.layerDefs = JSON.stringify(r8));
      }
    }
  }
  return c2;
}
function a3(r6, t2) {
  const n7 = !!(r6 == null ? void 0 : r6.length), s5 = t2.filter((e4) => null != e4.definitionExpression || n7 && null != e4.floorInfo);
  return s5.length ? s5.map((t3) => {
    const n8 = n5(r6, t3), s6 = n2(n8, t3.definitionExpression);
    return { id: t3.id, definitionExpression: s6 ?? void 0 };
  }) : null;
}

// node_modules/@arcgis/core/rest/support/IdentifyParameters.js
var m2;
var a4 = m2 = class extends l {
  static from(t2) {
    return v(m2, t2);
  }
  constructor(t2) {
    super(t2), this.dpi = 96, this.floors = null, this.gdbVersion = null, this.geometry = null, this.geometryPrecision = null, this.height = 400, this.layerIds = null, this.layerOption = "top", this.mapExtent = null, this.maxAllowableOffset = null, this.returnFieldName = true, this.returnGeometry = false, this.returnM = false, this.returnUnformattedValues = true, this.returnZ = false, this.spatialReference = null, this.sublayers = null, this.timeExtent = null, this.tolerance = null, this.width = 400;
  }
};
e([y({ type: Number, json: { write: true } })], a4.prototype, "dpi", void 0), e([y()], a4.prototype, "floors", void 0), e([y({ type: String, json: { write: true } })], a4.prototype, "gdbVersion", void 0), e([y({ types: n, json: { read: p, write: true } })], a4.prototype, "geometry", void 0), e([y({ type: Number, json: { write: true } })], a4.prototype, "geometryPrecision", void 0), e([y({ type: Number, json: { write: true } })], a4.prototype, "height", void 0), e([y({ type: [Number], json: { write: true } })], a4.prototype, "layerIds", void 0), e([y({ type: ["top", "visible", "all", "popup"], json: { write: true } })], a4.prototype, "layerOption", void 0), e([y({ type: M, json: { write: true } })], a4.prototype, "mapExtent", void 0), e([y({ type: Number, json: { write: true } })], a4.prototype, "maxAllowableOffset", void 0), e([y({ type: Boolean, json: { write: true } })], a4.prototype, "returnFieldName", void 0), e([y({ type: Boolean, json: { write: true } })], a4.prototype, "returnGeometry", void 0), e([y({ type: Boolean, json: { write: true } })], a4.prototype, "returnM", void 0), e([y({ type: Boolean, json: { write: true } })], a4.prototype, "returnUnformattedValues", void 0), e([y({ type: Boolean, json: { write: true } })], a4.prototype, "returnZ", void 0), e([y({ type: f, json: { write: true } })], a4.prototype, "spatialReference", void 0), e([y()], a4.prototype, "sublayers", void 0), e([y({ type: c, json: { write: true } })], a4.prototype, "timeExtent", void 0), e([y({ type: Number, json: { write: true } })], a4.prototype, "tolerance", void 0), e([y({ type: Number, json: { write: true } })], a4.prototype, "width", void 0), a4 = m2 = e([a("esri.rest.support.IdentifyParameters")], a4);
var u = a4;

// node_modules/@arcgis/core/rest/support/IdentifyResult.js
var u2 = class extends l {
  constructor(r6) {
    super(r6), this.displayFieldName = null, this.feature = null, this.layerId = null, this.layerName = null;
  }
  readFeature(r6, t2) {
    return h.fromJSON({ attributes: { ...t2.attributes }, geometry: { ...t2.geometry } });
  }
  writeFeature(r6, e4) {
    if (!r6)
      return;
    const { attributes: t2, geometry: o3 } = r6;
    t2 && (e4.attributes = { ...t2 }), null != o3 && (e4.geometry = o3.toJSON(), e4.geometryType = i.toJSON(o3.type));
  }
};
e([y({ type: String, json: { write: true } })], u2.prototype, "displayFieldName", void 0), e([y({ type: h })], u2.prototype, "feature", void 0), e([o("feature", ["attributes", "geometry"])], u2.prototype, "readFeature", null), e([r2("feature")], u2.prototype, "writeFeature", null), e([y({ type: Number, json: { write: true } })], u2.prototype, "layerId", void 0), e([y({ type: String, json: { write: true } })], u2.prototype, "layerName", void 0), u2 = e([a("esri.rest.support.IdentifyResult")], u2);
var m3 = u2;

// node_modules/@arcgis/core/rest/identify.js
async function f3(u3, i5, f4) {
  const c2 = (i5 = a5(i5)).geometry ? [i5.geometry] : [], l3 = f2(u3);
  return l3.path += "/identify", b(c2).then((e4) => {
    const t2 = l2(i5, { geometry: e4 && e4[0] }), u4 = s2({ ...l3.query, f: "json", ...t2 }), a7 = i2(u4, f4);
    return j2(l3.path, a7).then(m4).then((r6) => p3(r6, i5.sublayers));
  });
}
function m4(r6) {
  const e4 = r6.data;
  return e4.results = e4.results || [], e4.exceededTransferLimit = Boolean(e4.exceededTransferLimit), e4.results = e4.results.map((r7) => m3.fromJSON(r7)), e4;
}
function a5(r6) {
  return r6 = u.from(r6);
}
function p3(r6, e4) {
  if (!(e4 == null ? void 0 : e4.length))
    return r6;
  const t2 = /* @__PURE__ */ new Map();
  function o3(r7) {
    t2.set(r7.id, r7), r7.sublayers && r7.sublayers.forEach(o3);
  }
  e4.forEach(o3);
  for (const s5 of r6.results)
    s5.feature.sourceLayer = t2.get(s5.layerId);
  return r6;
}

// node_modules/@arcgis/core/views/layers/support/MapServiceLayerViewHelper.js
var P = null;
function S(e4, t2) {
  return "tile" === t2.type || "map-image" === t2.type;
}
var U = class extends m {
  constructor(e4) {
    super(e4), this._featuresResolutions = /* @__PURE__ */ new WeakMap(), this.highlightGraphics = null, this.highlightGraphicUpdated = null, this.updateHighlightedFeatures = k(async (e5) => {
      this.destroyed || this.updatingHandles.addPromise(this._updateHighlightedFeaturesGeometries(e5).catch(() => {
      }));
    });
  }
  initialize() {
    const e4 = (e5) => {
      this.updatingHandles.addPromise(this._updateHighlightedFeaturesSymbols(e5).catch(() => {
      })), this.updateHighlightedFeatures(this._highlightGeometriesResolution);
    };
    this.addHandles([a2(() => this.highlightGraphics, "change", (t2) => e4(t2.added), { onListenerAdd: (t2) => e4(t2) })]);
  }
  async fetchPopupFeatures(e4, t2) {
    var _a, _b;
    const { layerView: { layer: r6, view: { scale: s5 } } } = this;
    if (!e4)
      throw new s("fetchPopupFeatures:invalid-area", "Nothing to fetch without area", { layer: r6 });
    const i5 = _(r6.sublayers, s5, t2);
    if (!i5.length)
      return [];
    const a7 = await A(r6, i5);
    if (!((((_b = (_a = r6.capabilities) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsIdentify) ?? true) && r6.version >= 10.5) && !a7)
      throw new s("fetchPopupFeatures:not-supported", "query operation is disabled for this service", { layer: r6 });
    return a7 ? this._fetchPopupFeaturesUsingQueries(e4, i5, t2) : this._fetchPopupFeaturesUsingIdentify(e4, i5, t2);
  }
  clearHighlights() {
    var _a;
    (_a = this.highlightGraphics) == null ? void 0 : _a.removeAll();
  }
  highlight(e4) {
    const r6 = this.highlightGraphics;
    if (!r6)
      return { remove() {
      } };
    let o3 = null;
    if (e4 instanceof h ? o3 = [e4] : V.isCollection(e4) && e4.length > 0 ? o3 = e4.toArray() : Array.isArray(e4) && e4.length > 0 && (o3 = e4), o3 = o3 == null ? void 0 : o3.filter(R), !o3 || !o3.length)
      return e2();
    for (const t2 of o3) {
      const e5 = t2.sourceLayer;
      null != e5 && "geometryType" in e5 && "point" === e5.geometryType && (t2.visible = false);
    }
    return r6.addMany(o3), { remove: () => {
      r6.removeMany(o3 ?? []);
    } };
  }
  async _updateHighlightedFeaturesSymbols(e4) {
    const { layerView: { view: t2 }, highlightGraphics: r6, highlightGraphicUpdated: s5 } = this;
    if (r6 && s5)
      for (const i5 of e4) {
        const e5 = i5.sourceLayer && "renderer" in i5.sourceLayer && i5.sourceLayer.renderer;
        i5.sourceLayer && "geometryType" in i5.sourceLayer && "point" === i5.sourceLayer.geometryType && e5 && "getSymbolAsync" in e5 && e5.getSymbolAsync(i5).then(async (o3) => {
          var _a;
          o3 || (o3 = new y2());
          let a7 = null;
          const n7 = "visualVariables" in e5 ? (_a = e5.visualVariables) == null ? void 0 : _a.find((e6) => "size" === e6.type) : void 0;
          n7 && (P || (P = (await import("./visualVariableUtils-MES5GLX7.js")).getSize), a7 = P(n7, i5, { view: t2.type, scale: t2.scale, shape: "simple-marker" === o3.type ? o3.style : null })), a7 || (a7 = "width" in o3 && "height" in o3 && null != o3.width && null != o3.height ? Math.max(o3.width, o3.height) : "size" in o3 ? o3.size : 16), r6.includes(i5) && (i5.symbol = new y2({ style: "square", size: a7, xoffset: "xoffset" in o3 ? o3.xoffset : 0, yoffset: "yoffset" in o3 ? o3.yoffset : 0 }), s5(i5, "symbol"), i5.visible = true);
        });
      }
  }
  async _updateHighlightedFeaturesGeometries(e4) {
    const { layerView: { layer: t2, view: r6 }, highlightGraphics: s5, highlightGraphicUpdated: i5 } = this;
    if (this._highlightGeometriesResolution = e4, !i5 || !(s5 == null ? void 0 : s5.length) || !t2.capabilities.operations.supportsQuery)
      return;
    const o3 = this._getTargetResolution(e4), a7 = /* @__PURE__ */ new Map();
    for (const c2 of s5)
      if (!this._featuresResolutions.has(c2) || this._featuresResolutions.get(c2) > o3) {
        const e5 = c2.sourceLayer;
        r(a7, e5, () => /* @__PURE__ */ new Map()).set(c2.getObjectId(), c2);
      }
    const l3 = Array.from(a7, ([e5, t3]) => {
      const s6 = e5.createQuery();
      return s6.objectIds = [...t3.keys()], s6.outFields = [e5.objectIdField], s6.returnGeometry = true, s6.maxAllowableOffset = o3, s6.outSpatialReference = r6.spatialReference, e5.queryFeatures(s6);
    }), p4 = await Promise.all(l3);
    if (!this.destroyed)
      for (const { features: n7 } of p4)
        for (const e5 of n7) {
          const t3 = e5.sourceLayer, r7 = a7.get(t3).get(e5.getObjectId());
          r7 && s5.includes(r7) && (r7.geometry = e5.geometry, i5(r7, "geometry"), this._featuresResolutions.set(r7, o3));
        }
  }
  _getTargetResolution(e4) {
    const t2 = e4 * H(this.layerView.view.spatialReference), r6 = t2 / 16;
    return r6 <= 10 ? 0 : e4 / t2 * r6;
  }
  async _fetchPopupFeaturesUsingIdentify(e4, t2, r6) {
    const s5 = await this._createIdentifyParameters(e4, t2, r6);
    if (null == s5)
      return [];
    const { results: i5 } = await f3(this.layerView.layer.parsedUrl, s5);
    return i5.map((e5) => e5.feature);
  }
  async _createIdentifyParameters(e4, t2, r6) {
    const { floors: s5, layer: i5, timeExtent: o3, view: { spatialReference: a7, scale: n7 } } = this.layerView, l3 = null != r6 ? r6.event : null;
    if (!t2.length)
      return null;
    await Promise.all(t2.map(({ sublayer: e5 }) => e5.load().catch(() => {
    })));
    const p4 = Math.min(has("mapservice-popup-identify-max-tolerance"), i5.allSublayers.reduce((e5, t3) => t3.renderer ? s3({ renderer: t3.renderer, event: l3 }) : e5, 2)), c2 = this.createFetchPopupFeaturesQueryGeometry(e4, p4), u3 = r3(n7, a7), h2 = Math.round(c2.width / u3), y3 = new M({ xmin: c2.center.x - u3 * h2, ymin: c2.center.y - u3 * h2, xmax: c2.center.x + u3 * h2, ymax: c2.center.y + u3 * h2, spatialReference: c2.spatialReference });
    return new u({ floors: s5, gdbVersion: "gdbVersion" in i5 ? i5.gdbVersion : void 0, geometry: e4, height: h2, layerOption: "popup", mapExtent: y3, returnGeometry: true, spatialReference: a7, sublayers: i5.sublayers, timeExtent: o3, tolerance: p4, width: h2 });
  }
  async _fetchPopupFeaturesUsingQueries(e4, t2, r6) {
    const { layerView: { floors: i5, timeExtent: o3 } } = this, a7 = null != r6 ? r6.event : null, n7 = t2.map(async ({ sublayer: t3, popupTemplate: r7 }) => {
      var _a;
      if (await t3.load().catch(() => {
      }), t3.capabilities && !t3.capabilities.operations.supportsQuery)
        return [];
      const s5 = t3.createQuery(), n8 = s3({ renderer: t3.renderer, event: a7 }), l3 = this.createFetchPopupFeaturesQueryGeometry(e4, n8), p4 = /* @__PURE__ */ new Set(), [c2] = await Promise.all([n3(t3, r7), (_a = t3.renderer) == null ? void 0 : _a.collectRequiredFields(p4, t3.fieldsIndex)]);
      F(p4, t3.fieldsIndex, c2);
      const u3 = Array.from(p4).sort();
      if (s5.geometry = l3, s5.outFields = u3, s5.timeExtent = o3, i5) {
        const e5 = i5.clone(), r8 = n5(e5, t3);
        null != r8 && (s5.where = s5.where ? `(${s5.where}) AND (${r8})` : r8);
      }
      const h2 = this._getTargetResolution(l3.width / n8), y3 = await R2(r7), m5 = "point" === t3.geometryType || y3 && y3.arcadeUtils.hasGeometryOperations(r7);
      m5 || (s5.maxAllowableOffset = h2);
      let { features: f4 } = await t3.queryFeatures(s5);
      const b2 = m5 ? 0 : h2;
      f4 = await V2(t3, f4);
      for (const e5 of f4)
        this._featuresResolutions.set(e5, b2);
      return f4;
    });
    return (await j(n7)).reverse().reduce((e5, t3) => t3.value ? [...e5, ...t3.value] : e5, []).filter(R);
  }
};
function _(e4, t2, r6) {
  const s5 = [], i5 = (e5) => {
    const o3 = 0 === e5.minScale || t2 <= e5.minScale, a7 = 0 === e5.maxScale || t2 >= e5.maxScale;
    if (e5.visible && o3 && a7) {
      if (e5.sublayers)
        e5.sublayers.forEach(i5);
      else if (e5.popupEnabled) {
        const t3 = p2(e5, { ...r6, defaultPopupTemplateEnabled: false });
        null != t3 && s5.unshift({ sublayer: e5, popupTemplate: t3 });
      }
    }
  };
  return ((e4 == null ? void 0 : e4.toArray()) ?? []).reverse().map(i5), s5;
}
function R2(e4) {
  var _a;
  return ((_a = e4.expressionInfos) == null ? void 0 : _a.length) || Array.isArray(e4.content) && e4.content.some((e5) => "expression" === e5.type) ? i3() : Promise.resolve();
}
async function A(e4, t2) {
  var _a, _b;
  if ((_b = (_a = e4.capabilities) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsQuery)
    return true;
  try {
    return await Promise.any(t2.map(({ sublayer: e5 }) => e5.load().then(() => e5.capabilities.operations.supportsQuery)));
  } catch {
    return false;
  }
}
async function V2(e4, t2) {
  const r6 = e4.renderer;
  return r6 && "defaultSymbol" in r6 && !r6.defaultSymbol && (t2 = r6.valueExpression ? await Promise.all(t2.map((e5) => r6.getSymbolAsync(e5).then((t3) => t3 ? e5 : null))).then((e5) => e5.filter((e6) => null != e6)) : t2.filter((e5) => null != r6.getSymbol(e5))), t2;
}
e([y({ constructOnly: true })], U.prototype, "createFetchPopupFeaturesQueryGeometry", void 0), e([y({ constructOnly: true })], U.prototype, "layerView", void 0), e([y({ constructOnly: true })], U.prototype, "highlightGraphics", void 0), e([y({ constructOnly: true })], U.prototype, "highlightGraphicUpdated", void 0), e([y({ constructOnly: true })], U.prototype, "updatingHandles", void 0), U = e([a("esri.views.layers.support.MapService")], U);

// node_modules/@arcgis/core/views/support/drapedUtils.js
function r5(t2, r6, i5, a7 = new M()) {
  let o3 = 0;
  if ("2d" === i5.type)
    o3 = r6 * (i5.resolution ?? 0);
  else if ("3d" === i5.type) {
    const n7 = i5.overlayPixelSizeInMapUnits(t2), a8 = i5.basemapSpatialReference;
    o3 = null == a8 || a8.equals(i5.spatialReference) ? r6 * n7 : H(a8) / H(i5.spatialReference);
  }
  const s5 = t2.x - o3, l3 = t2.y - o3, m5 = t2.x + o3, p4 = t2.y + o3, { spatialReference: c2 } = i5;
  return a7.xmin = Math.min(s5, m5), a7.ymin = Math.min(l3, p4), a7.xmax = Math.max(s5, m5), a7.ymax = Math.max(l3, p4), a7.spatialReference = c2, a7;
}
var a6 = new M();

export {
  S,
  U,
  r5 as r
};
//# sourceMappingURL=chunk-QCZI36MJ.js.map
