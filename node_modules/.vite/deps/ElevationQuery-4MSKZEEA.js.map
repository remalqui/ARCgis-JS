{
  "version": 3,
  "sources": ["../../@arcgis/core/layers/support/ElevationSampler.js", "../../@arcgis/core/layers/support/ElevationSamplerData.js", "../../@arcgis/core/layers/support/ElevationTile.js", "../../@arcgis/core/layers/support/ElevationQuery.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import\"../../core/has.js\";import e from\"../../core/Logger.js\";import{getMetersPerUnitForSR as t}from\"../../core/unitUtils.js\";import{toExtent as n,containsXY as s,create as i}from\"../../geometry/support/aaBoundingRect.js\";import{project as o}from\"../../geometry/support/webMercatorUtils.js\";import a from\"../../geometry/Point.js\";const r=e.getLogger(\"esri.layers.support.ElevationSampler\");class l{queryElevation(e){return u(e.clone(),this)}on(){return d}projectIfRequired(e,t){return p(e,t)}}class m extends l{get spatialReference(){return this.extent.spatialReference}constructor(e,s,i){super(),this.tile=e,this.noDataValue=i;const o=e.tile.extent;this.extent=n(o,s.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=o;const a=t(s.spatialReference),r=s.lodAt(e.tile.level).resolution*a;this.demResolution={min:r,max:r}}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return null!=t&&this.containsAt(t.x,t.y)}containsAt(e,t){return s(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const n=this.extent,s=`${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`;return r.warn(\"#elevationAt()\",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${s})`),this.noDataValue}return this.tile.sample(e,t)??this.noDataValue}}class c extends l{get spatialReference(){return this.extent.spatialReference}constructor(e,t,s){let o;super(),\"number\"==typeof t?(this.noDataValue=t,o=null):(o=t,this.noDataValue=s),this.samplers=o?e.map((e=>new m(e,o,this.noDataValue))):e;const a=this.samplers[0];if(a){this.extent=a.extent.clone();const{min:e,max:t}=a.demResolution;this.demResolution={min:e,max:t};for(let n=1;n<this.samplers.length;n++){const e=this.samplers[n];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=n(i(),o.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){for(const n of this.samplers)if(n.containsAt(e,t))return n.elevationAt(e,t);return r.warn(\"#elevationAt()\",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue}}function u(e,t){const n=p(e,t.spatialReference);if(!n)return null;switch(e.type){case\"point\":h(e,n,t);break;case\"polyline\":f(e,n,t);break;case\"multipoint\":x(e,n,t)}return e}function p(e,t){if(null==e)return null;const n=e.spatialReference;if(n.equals(t))return e;const s=o(e,t);return s||r.error(`Cannot project geometry spatial reference (wkid:${n.wkid}) to elevation sampler spatial reference (wkid:${t.wkid})`),s}function h(e,t,n){e.z=n.elevationAt(t.x,t.y)}function f(e,t,n){R.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.paths.length;i++){const o=e.paths[i],a=t.paths[i];for(let e=0;e<o.length;e++){const t=o[e],i=a[e];R.x=i[0],R.y=i[1],s&&(t[3]=t[2]),t[2]=n.elevationAt(R.x,R.y)}}e.hasZ=!0}function x(e,t,n){R.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.points.length;i++){const o=e.points[i],a=t.points[i];R.x=a[0],R.y=a[1],s&&(o[3]=o[2]),o[2]=n.elevationAt(R.x,R.y)}e.hasZ=!0}const R=new a,d={remove(){}};export{l as ElevationSamplerBase,c as MultiTileElevationSampler,m as TileElevationSampler,u as updateGeometryElevation};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nclass t{constructor(t,h){this.data=t,this.safeWidth=.99999999*(t.width-1),this.dx=(t.width-1)/(h[2]-h[0]),this.dy=(t.width-1)/(h[3]-h[1]),this.x0=h[0],this.y1=h[3]}}export{t as ElevationSamplerData};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{ElevationSamplerData as a}from\"./ElevationSamplerData.js\";class t{constructor(t,l=null){if(this.tile=t,null!=l&&null!=t){const e=t.extent;this._samplerData=new a(l,e)}}get zmin(){return null!=this._samplerData?this._samplerData.data.minValue:0}get zmax(){return null!=this._samplerData?this._samplerData.data.maxValue:0}sample(a,t){if(null==this._samplerData)return;const{safeWidth:e,data:r,dx:s,dy:n,y1:i,x0:u}=this._samplerData,{width:m,values:o,noDataValue:h}=r,p=l(n*(i-t),0,e),D=l(s*(a-u),0,e),f=Math.floor(p),c=Math.floor(D),d=f*m+c,_=d+m,x=o[d],V=o[_],g=o[d+1],v=o[_+1];if(x!==h&&V!==h&&g!==h&&v!==h){const a=D-c,t=x+(g-x)*a;return t+(V+(v-V)*a-t)*(p-f)}}}function l(a,t,l){return a<t?t:a>l?l:a}export{t as ElevationTile};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i}from\"../../core/maybe.js\";import{whenOrAbort as n,throwIfAbortError as l,eachAlways as s}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as o}from\"../../core/unitUtils.js\";import a from\"../../geometry/Multipoint.js\";import r from\"../../geometry/Point.js\";import c from\"../../geometry/Polyline.js\";import{initializeProjection as u,project as h}from\"../../geometry/projection.js\";import{fromExtent as p,create as m,contains as f}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as d}from\"./ElevationSampler.js\";import{ElevationTile as y}from\"./ElevationTile.js\";import{TileKey as T}from\"./TileKey.js\";class v{async queryAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const l=w.fromGeometry(i);let s=!1;n&&n.returnSampleInfo||(s=!0);const o={...q,...n,returnSampleInfo:!0},a=await this.query(e[e.length-1],l,o),r=await this._queryAllContinue(e,a,o);return r.geometry=r.geometry.export(),s&&delete r.sampleInfo,r}async query(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof w)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const l={...q,...n},s=new _(e,i.spatialReference,l),o=l.signal;return await e.load({signal:o}),await this._createGeometryDescriptor(s,i,o),await this._selectTiles(s,o),await this._populateElevationTiles(s,o),this._sampleGeometryWithElevation(s),this._createQueryResult(s,o)}async createSampler(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...q,...n};return this._createSampler(e,i,l)}async createSamplerAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...q,...n,returnSampleInfo:!0},s=await this._createSampler(e[e.length-1],i,l);return this._createSamplerAllContinue(e,i,s,l)}async _createSampler(e,t,i,n){const l=i.signal;await e.load({signal:l});const s=t.spatialReference,o=e.tileInfo.spatialReference;s.equals(o)||(await u([{source:s,dest:o}],{signal:l}),t=h(t,o));const a=new E(e,t,i,n);return await this._selectTiles(a,l),await this._populateElevationTiles(a,l),new d(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const l=i.samplers.map((e=>p(e.extent))),s=await this._createSampler(e[e.length-1],t,n,l);if(0===s.samplers.length)return i;const o=i.samplers.concat(s.samplers),a=new d(o,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,n){const l=e.pop(),s=t.geometry.coordinates,o=t.sampleInfo;i(o);const a=[],r=[];for(let i=0;i<s.length;i++){const t=o[i];t.demResolution>=0?t.source||(t.source=l):e.length&&(a.push(s[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,n),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{s[e].z=u.geometry.coordinates[t].z,o[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,n)}async _createQueryResult(e,t){const n=await e.geometry.project(e.outSpatialReference,t);i(n);const l={geometry:n.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(l.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),l}async _createGeometryDescriptor(e,i,n){let l;const s=e.layer.tileInfo.spatialReference;if(i instanceof w?l=await i.project(s,n):(await u([{source:i.spatialReference,dest:s}],{signal:n}),l=h(i,s)),!l)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${s.wkid}'`);e.geometry=w.fromGeometry(l)}async _selectTiles(e,i){\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e);const n=e.options.demResolution;if(\"number\"==typeof n)this._selectTilesClosestResolution(e,n);else if(\"finest-contiguous\"===n)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==n)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${n}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(null==e.layer.fullExtent)return;const t=new y(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const n=e.x,l=e.y;(n<i.xmin||n>i.xmax||l<i.ymin||l>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e,t){const i=this._findNearestDemResolutionLODIndex(e,t);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=t/o(i.spatialReference),s=I(i,n);let a=s[0],r=0;for(let o=1;o<s.length;o++){const e=s[o];Math.abs(e.resolution-l)<Math.abs(a.resolution-l)&&(a=e,r=o)}return r}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=R(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,l,t)}async _selectTilesFinestContiguousAt(e,i,s){const o=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=o.tilemapCache,r=e.getTilesToFetch();try{if(a&&!A(a))await n(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:s})))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,s)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},o=e.options.cache,a=e.options.noDataValue,r=i.map((async i=>{if(null==i.id)return;const n=`${e.layer.uid}:${i.id}:${a}`,s=null!=o?o.get(n):null,r=null!=s?s:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:a,signal:t});null!=o&&o.put(n,r),l[i.id]=new y(i,r)}));await n(s(r),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s||A(s))return this._selectTilesAutoPrefetchUpsample(t,i);const o=t.getTilesToFetch(),a={},r=o.map((async t=>{const n=new T(null,0,0,0,m()),o=await e(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==o.ok?null!=t.id&&(a[t.id]=n):l(o.error)}));await n(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},l=e=>{null!=e.id&&(e.id in n?n[e.id]++:(n[e.id]=1,i++))},s=e=>{if(null==e.id)return;const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(l,s);let o=!0;for(;o&&(o=!1,e.forEachTileToFetch((n=>{i<=e.options.maximumAutoTileRequests||(s(n),t.upsampleTile(n)&&(o=!0),l(n))}),s),o););}_selectTilesAutoFinest(e){const{tileInfo:t,tilemapCache:i}=e.layer,n=R(t,i,e.options.minDemResolution);e.selectTilesAtLOD(n,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?n=!0:t()})),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?n=e:t.elevationTile=null}t.z=n}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=o(t.spatialReference);return e.geometry.coordinates.map((n=>{let l=-1;if(n.elevationTile&&n.elevationTile!==e.outsideExtentTile){l=t.lodAt(n.elevationTile.tile.level).resolution*i}return{demResolution:l}}))}}class w{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new w;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await u([{source:this.spatialReference,dest:e}],{signal:t});const i=new a({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),n=h(i,e);if(!n)return null;const l=this.coordinates.map(((e,t)=>{const i=e.clone(),l=n.points[t];return i.x=l[0],i.y=l[1],i})),s=this.clone(l);return s.spatialReference=e,s}static fromGeometry(e){const t=new w;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof w)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case\"point\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?[new g(i.x,i.y,i.z,i.m)]:n?[new g(i.x,i.y,i.z)]:l?[new g(i.x,i.y,null,i.m)]:[new g(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new r(t[0].x,t[0].y,t[0].z,t[0].m,i):new r(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?i.points.map((e=>new g(e[0],e[1],e[2],e[3]))):n?i.points.map((e=>new g(e[0],e[1],e[2]))):l?i.points.map((e=>new g(e[0],e[1],null,e[2]))):i.points.map((e=>new g(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new a({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new a(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,n=[],l=[],{hasZ:s,hasM:o}=e;let a=0;for(const e of i.paths)if(l.push([a,a+e.length]),a+=e.length,s&&o)for(const t of e)n.push(new g(t[0],t[1],t[2],t[3]));else if(s)for(const t of e)n.push(new g(t[0],t[1],t[2]));else if(o)for(const t of e)n.push(new g(t[0],t[1],null,t[2]));else for(const t of e)n.push(new g(t[0],t[1]));t.coordinates=n,t._exporter=(t,i)=>{const n=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),s=l.map((e=>n.slice(e[0],e[1])));return new c({paths:s,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t,i=null,n=null,l=null,s=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=l,this.elevationTile=s}clone(){return new g(this.x,this.y,this.z,this.m)}}class x{constructor(e,t){this.layer=e,this.options=t}}class _ extends x{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,n=I(t,i)[e].level;this.geometry.coordinates.forEach((e=>e.tile=t.tileAt(n,e.x,e.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const l=i.tile?.id;i.elevationTile||!l||e[l]||(e[l]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class E extends x{constructor(e,t,i,n){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=I(t,i);if(!e)return n.length-1;const l=this.extent;if(null==l)return-1;for(let s=n.length-1;s>=0;s--){const i=n[s],o=i.resolution*t.size[0],a=i.resolution*t.size[1];if(Math.ceil(l.width/o)*Math.ceil(l.height/a)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,(()=>n=!0)),n?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const s of e){const e=s.id;e&&!i[e]?(i[e]=s,n.push(s)):t&&t(s)}const l=n.sort(((e,t)=>e.level-t.level));return l.filter(((e,i)=>{for(let n=0;n<i;n++){const i=l[n].extent;if(i&&e.extent&&f(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:n}=this.layer,l=I(i,n)[e],s=i.tileAt(l.level,t.xmin,t.ymin),o=s.extent;if(null==o)return;const a=l.resolution*i.size[0],r=l.resolution*i.size[1],c=Math.ceil((t.xmax-o[0])/a),u=Math.ceil((t.ymax-o[1])/r);for(let h=0;h<u;h++)for(let e=0;e<c;e++){const t=new T(null,s.level,s.row-h,s.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&f(t,e.extent)))}}function R(e,t,i=0){const n=I(e,t);let l=n.length-1;if(i>0){const t=i/o(e.spatialReference),s=n.findIndex((e=>e.resolution<t));0===s?l=0:s>0&&(l=s-1)}return l}const q={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};function I(e,t){const i=e.lods;if(A(t)){const{effectiveMinLOD:e,effectiveMaxLOD:n}=t;return i.filter((t=>t.level>=e&&t.level<=n))}return i}function A(e){return null!=e?.tileInfo}export{v as ElevationQuery,w as GeometryDescriptor,R as getFinestLodIndex};\n"],
  "mappings": "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",
  "names": ["r", "u", "t", "p", "m", "s", "i", "o", "c", "e", "f", "x", "t", "h", "t", "l", "r", "s", "i", "u", "m", "o", "h", "p", "f", "c", "d", "_", "x", "g", "v", "a", "i", "e", "s", "l", "o", "r", "_", "t", "E", "c", "u", "h", "R", "n", "g", "x"]
}
