import {
  o
} from "./chunk-M7TZTH7O.js";
import {
  i as i2
} from "./chunk-FZIEP3HG.js";
import {
  c,
  u
} from "./chunk-PEYWLFGJ.js";
import {
  r as r2
} from "./chunk-U3JB4DA4.js";
import {
  ee
} from "./chunk-3VTULECI.js";
import {
  C,
  E,
  F,
  I,
  R
} from "./chunk-BCDDCNQ2.js";
import {
  v
} from "./chunk-PM3CFO6N.js";
import {
  e
} from "./chunk-D5NSNTGJ.js";
import {
  t as t2
} from "./chunk-5KLICR5E.js";
import {
  M,
  f,
  h,
  i,
  r
} from "./chunk-SS33L3LC.js";
import {
  l,
  t
} from "./chunk-DWOEYHKS.js";

// node_modules/@arcgis/core/views/2d/layers/graphics/GraphicBoundsRenderer.js
var v2 = Math.PI / 180;
var x = 4;
var b = class extends i2 {
  constructor(t3) {
    super(), this._program = null, this._vao = null, this._vertexBuffer = null, this._indexBuffer = null, this._dvsMat3 = e(), this._localOrigin = { x: 0, y: 0 }, this._getBounds = t3;
  }
  destroy() {
    this._vao && (this._vao.dispose(), this._vao = null, this._vertexBuffer = null, this._indexBuffer = null), this._program = t(this._program);
  }
  doRender(t3) {
    const { context: e2 } = t3, r3 = this._getBounds();
    if (r3.length < 1)
      return;
    this._createShaderProgram(e2), this._updateMatricesAndLocalOrigin(t3), this._updateBufferData(e2, r3), e2.setBlendingEnabled(true), e2.setDepthTestEnabled(false), e2.setStencilWriteMask(0), e2.setStencilTestEnabled(false), e2.setBlendFunction(R.ONE, R.ONE_MINUS_SRC_ALPHA), e2.setColorMask(true, true, true, true);
    const s = this._program;
    e2.bindVAO(this._vao), e2.useProgram(s), s.setUniformMatrix3fv("u_dvsMat3", this._dvsMat3), e2.gl.lineWidth(1), e2.drawElements(E.LINES, 8 * r3.length, C.UNSIGNED_INT, 0), e2.bindVAO();
  }
  _createTransforms() {
    return { dvs: e() };
  }
  _createShaderProgram(t3) {
    if (this._program)
      return;
    const e2 = "precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }", r3 = "precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }";
    this._program = t3.programCache.acquire(e2, r3, y().attributes);
  }
  _updateMatricesAndLocalOrigin(t3) {
    const { state: a } = t3, { displayMat3: u2, size: _, resolution: c2, pixelRatio: h2, rotation: m, viewpoint: d } = a, p = v2 * m, { x: g, y: x2 } = d.targetGeometry, b2 = v(g, a.spatialReference);
    this._localOrigin.x = b2, this._localOrigin.y = x2;
    const y2 = h2 * _[0], B = h2 * _[1], M2 = c2 * y2, j = c2 * B, A = r(this._dvsMat3);
    i(A, A, u2), M(A, A, t2(y2 / 2, B / 2)), f(A, A, r2(_[0] / M2, -B / j, 1)), h(A, A, -p);
  }
  _updateBufferData(t3, e2) {
    const { x: r3, y: s } = this._localOrigin, i3 = 2 * x * e2.length, o2 = new Float32Array(i3), a = new Uint32Array(8 * e2.length);
    let n2 = 0, f2 = 0;
    for (const l2 of e2)
      l2 && (o2[2 * n2] = l2[0] - r3, o2[2 * n2 + 1] = l2[1] - s, o2[2 * n2 + 2] = l2[0] - r3, o2[2 * n2 + 3] = l2[3] - s, o2[2 * n2 + 4] = l2[2] - r3, o2[2 * n2 + 5] = l2[3] - s, o2[2 * n2 + 6] = l2[2] - r3, o2[2 * n2 + 7] = l2[1] - s, a[f2] = n2 + 0, a[f2 + 1] = n2 + 3, a[f2 + 2] = n2 + 3, a[f2 + 3] = n2 + 2, a[f2 + 4] = n2 + 2, a[f2 + 5] = n2 + 1, a[f2 + 6] = n2 + 1, a[f2 + 7] = n2 + 0, n2 += 4, f2 += 8);
    if (this._vertexBuffer ? this._vertexBuffer.setData(o2.buffer) : this._vertexBuffer = c.createVertex(t3, F.DYNAMIC_DRAW, o2.buffer), this._indexBuffer ? this._indexBuffer.setData(a) : this._indexBuffer = c.createIndex(t3, F.DYNAMIC_DRAW, a), !this._vao) {
      const e3 = y();
      this._vao = new u(t3, e3.attributes, e3.bufferLayouts, { geometry: this._vertexBuffer }, this._indexBuffer);
    }
  }
};
var y = () => ee("bounds", { geometry: [{ location: 0, name: "a_position", count: 2, type: C.FLOAT }] });

// node_modules/@arcgis/core/views/2d/layers/graphics/BaseGraphicContainer.js
var n = class extends o {
  constructor(e2) {
    super(e2), this.hasHighlight = () => true;
  }
  destroy() {
    super.destroy(), this._boundsRenderer = l(this._boundsRenderer);
  }
  enableRenderingBounds(e2) {
    this._boundsRenderer = new b(e2), this.requestRender();
  }
  get hasLabels() {
    return false;
  }
  onTileData(e2, t3) {
    e2.patch(t3), this.contains(e2) || this.addChild(e2), this.requestRender();
  }
  onTileError(e2) {
    e2.clear(), this.contains(e2) || this.addChild(e2);
  }
  _renderChildren(e2, t3) {
    for (const r3 of this.children)
      r3.isReady && r3.hasData && (r3.commit(e2), e2.context.setStencilFunction(I.EQUAL, r3.stencilRef, 255), r3.getDisplayList().replay(e2, r3, t3));
  }
};

export {
  n
};
//# sourceMappingURL=chunk-2SB5E3DQ.js.map
