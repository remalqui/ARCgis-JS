{
  "version": 3,
  "sources": ["../../@arcgis/core/views/2d/engine/vectorTiles/GeometryUtils.js", "../../@arcgis/core/geometry/support/TileClipper.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst n=Number.POSITIVE_INFINITY,t=Math.PI,r=2*t,u=128/t,o=256/360,e=t/180,c=1/Math.LN2;function f(n,t){return(n%=t)>=0?n:n+t}function i(n){return f(n*u,256)}function I(n){return f(n*o,256)}function N(n){return Math.log(n)*c}function a(n){return n*n}function h(n,t,r){return n*(1-r)+t*r}function M(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}export{r as C_2PI,o as C_DEG_TO_256,e as C_DEG_TO_RAD,n as C_INFINITY,t as C_PI,u as C_RAD_TO_256,M as between,I as degToByte,h as interpolate,N as log2,f as positiveMod,i as radToByte,a as sqr};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nconst i=512;var t,s;!function(i){i[i.Unknown=0]=\"Unknown\",i[i.Point=1]=\"Point\",i[i.LineString=2]=\"LineString\",i[i.Polygon=3]=\"Polygon\"}(t||(t={}));class h{constructor(i,t){this.x=i,this.y=t}clone(){return new h(this.x,this.y)}equals(i,t){return i===this.x&&t===this.y}isEqual(i){return i.x===this.x&&i.y===this.y}setCoords(i,t){this.x=i,this.y=t}normalize(){const i=this.x,t=this.y,s=Math.sqrt(i*i+t*t);this.x/=s,this.y/=s}rightPerpendicular(){const i=this.x;this.x=this.y,this.y=-i}move(i,t){this.x+=i,this.y+=t}assign(i){this.x=i.x,this.y=i.y}assignAdd(i,t){this.x=i.x+t.x,this.y=i.y+t.y}assignSub(i,t){this.x=i.x-t.x,this.y=i.y-t.y}rotate(i,t){const s=this.x,h=this.y;this.x=s*i-h*t,this.y=s*t+h*i}scale(i){this.x*=i,this.y*=i}length(){const i=this.x,t=this.y;return Math.sqrt(i*i+t*t)}static distance(i,t){const s=t.x-i.x,h=t.y-i.y;return Math.sqrt(s*s+h*h)}static add(i,t){return new h(i.x+t.x,i.y+t.y)}static sub(i,t){return new h(i.x-t.x,i.y-t.y)}}class n{constructor(i,t,s){this.ratio=i,this.x=t,this.y=s}}class e{constructor(t,s,h,n=8,e=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=n,this._pixelMargin=e,this._tileSize=i*n,this._dz=t,this._yPos=s,this._xPos=h}setPixelMargin(i){i!==this._pixelMargin&&(this._pixelMargin=i,this.setExtent(this._extent))}setExtent(i){this._extent=i,this._finalRatio=this._tileSize/i*(1<<this._dz);let t=this._pixelRatio*this._pixelMargin;t/=this._finalRatio;const s=i>>this._dz;t>s&&(t=s),this._margin=t,this._xmin=s*this._xPos-t,this._ymin=s*this._yPos-t,this._xmax=this._xmin+s+2*t,this._ymax=this._ymin+s+2*t}reset(i){this._type=i,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(i,t){this._pushLine(),this._prevIsIn=this._isIn(i,t),this._moveTo(i,t,this._prevIsIn),this._prevPt=new h(i,t),this._firstPt=new h(i,t),this._dist=0}lineTo(i,t){const s=this._isIn(i,t),e=new h(i,t),_=h.distance(this._prevPt,e);let l,x,a,y,o,r,m,u;if(s)this._prevIsIn?this._lineTo(i,t,!0):(l=this._prevPt,x=e,a=this._intersect(x,l),this._start=this._dist+_*(1-this._r),this._lineTo(a.x,a.y,!0),this._lineTo(x.x,x.y,!0));else if(this._prevIsIn)x=this._prevPt,l=e,a=this._intersect(x,l),this._lineTo(a.x,a.y,!0),this._lineTo(l.x,l.y,!1);else{const i=this._prevPt,t=e;if(i.x<=this._xmin&&t.x<=this._xmin||i.x>=this._xmax&&t.x>=this._xmax||i.y<=this._ymin&&t.y<=this._ymin||i.y>=this._ymax&&t.y>=this._ymax)this._lineTo(t.x,t.y,!1);else{const s=[];if((i.x<this._xmin&&t.x>this._xmin||i.x>this._xmin&&t.x<this._xmin)&&(y=(this._xmin-i.x)/(t.x-i.x),u=i.y+y*(t.y-i.y),u<=this._ymin?r=!1:u>=this._ymax?r=!0:s.push(new n(y,this._xmin,u))),(i.x<this._xmax&&t.x>this._xmax||i.x>this._xmax&&t.x<this._xmax)&&(y=(this._xmax-i.x)/(t.x-i.x),u=i.y+y*(t.y-i.y),u<=this._ymin?r=!1:u>=this._ymax?r=!0:s.push(new n(y,this._xmax,u))),(i.y<this._ymin&&t.y>this._ymin||i.y>this._ymin&&t.y<this._ymin)&&(y=(this._ymin-i.y)/(t.y-i.y),m=i.x+y*(t.x-i.x),m<=this._xmin?o=!1:m>=this._xmax?o=!0:s.push(new n(y,m,this._ymin))),(i.y<this._ymax&&t.y>this._ymax||i.y>this._ymax&&t.y<this._ymax)&&(y=(this._ymax-i.y)/(t.y-i.y),m=i.x+y*(t.x-i.x),m<=this._xmin?o=!1:m>=this._xmax?o=!0:s.push(new n(y,m,this._ymax))),0===s.length)o?r?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):r?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(s.length>1&&s[0].ratio>s[1].ratio)this._start=this._dist+_*s[1].ratio,this._lineTo(s[1].x,s[1].y,!0),this._lineTo(s[0].x,s[0].y,!0);else{this._start=this._dist+_*s[0].ratio;for(let i=0;i<s.length;i++)this._lineTo(s[i].x,s[i].y,!0)}this._lineTo(t.x,t.y,!1)}}this._dist+=_,this._prevIsIn=s,this._prevPt=e}close(){if(this._line.length>2){const i=this._firstPt,t=this._prevPt;i.x===t.x&&i.y===t.y||this.lineTo(i.x,i.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(i=!0){return this._pushLine(),0===this._lines.length?null:(this._type===t.Polygon&&i&&l.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==t.LineString)throw new Error(\"Only valid for lines\");this._pushLine();const i=this._lines,s=i.length;if(0===s)return null;const h=[];for(let t=0;t<s;t++)h.push({line:i[t],start:this._starts[t]||0});return h}_isIn(i,t){return i>=this._xmin&&i<=this._xmax&&t>=this._ymin&&t<=this._ymax}_intersect(i,t){let s,n,e;if(t.x>=this._xmin&&t.x<=this._xmax)n=t.y<=this._ymin?this._ymin:this._ymax,e=(n-i.y)/(t.y-i.y),s=i.x+e*(t.x-i.x);else if(t.y>=this._ymin&&t.y<=this._ymax)s=t.x<=this._xmin?this._xmin:this._xmax,e=(s-i.x)/(t.x-i.x),n=i.y+e*(t.y-i.y);else{n=t.y<=this._ymin?this._ymin:this._ymax,s=t.x<=this._xmin?this._xmin:this._xmax;const h=(s-i.x)/(t.x-i.x),_=(n-i.y)/(t.y-i.y);h<_?(e=h,n=i.y+h*(t.y-i.y)):(e=_,s=i.x+_*(t.x-i.x))}return this._r=e,new h(s,n)}_pushLine(){this._line&&(this._type===t.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===t.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===t.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(i,s,n){this._type!==t.Polygon?n&&(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(i,s))):(n||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(i,s)),this._isH=!1,this._isV=!1)}_lineTo(i,s,n){let e,_;if(this._type!==t.Polygon)if(n){if(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(e=this._line[this._line.length-1],e.equals(i,s)))return;this._line.push(new h(i,s))}else this._line&&this._line.length>0&&this._pushLine();else if(n||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){e=this._line[this._line.length-1];const t=e.x===i,n=e.y===s;if(t&&n)return;this._isH&&t||this._isV&&n?(e.x=i,e.y=s,_=this._line[this._line.length-2],_.x===i&&_.y===s?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(_=this._line[this._line.length-2],this._isH=_.x===i,this._isV=_.y===s)):(this._isH=_.x===i,this._isV=_.y===s)):(this._line.push(new h(i,s)),this._isH=t,this._isV=n)}else this._line.push(new h(i,s))}}class _{setExtent(i){this._ratio=4096===i?1:4096/i}get validateTessellation(){return this._ratio<1}reset(i){this._lines=[],this._line=null}moveTo(i,t){this._line&&this._lines.push(this._line),this._line=[];const s=this._ratio;this._line.push(new h(i*s,t*s))}lineTo(i,t){const s=this._ratio;this._line.push(new h(i*s,t*s))}close(){const i=this._line;i&&!i[0].isEqual(i[i.length-1])&&i.push(i[0])}result(){return this._line&&this._lines.push(this._line),0===this._lines.length?null:this._lines}}!function(i){i[i.sideLeft=0]=\"sideLeft\",i[i.sideRight=1]=\"sideRight\",i[i.sideTop=2]=\"sideTop\",i[i.sideBottom=3]=\"sideBottom\"}(s||(s={}));class l{static simplify(i,t,h){if(!h)return;const n=-t,e=i+t,_=-t,x=i+t,a=[],y=[],o=h.length;for(let l=0;l<o;++l){const i=h[l];if(!i||i.length<2)continue;let t,o=i[0];const r=i.length;for(let h=1;h<r;++h)t=i[h],o.x===t.x&&(o.x<=n&&(o.y>t.y?(a.push(l),a.push(h),a.push(s.sideLeft),a.push(-1)):(y.push(l),y.push(h),y.push(s.sideLeft),y.push(-1))),o.x>=e&&(o.y<t.y?(a.push(l),a.push(h),a.push(s.sideRight),a.push(-1)):(y.push(l),y.push(h),y.push(s.sideRight),y.push(-1)))),o.y===t.y&&(o.y<=_&&(o.x<t.x?(a.push(l),a.push(h),a.push(s.sideTop),a.push(-1)):(y.push(l),y.push(h),y.push(s.sideTop),y.push(-1))),o.y>=x&&(o.x>t.x?(a.push(l),a.push(h),a.push(s.sideBottom),a.push(-1)):(y.push(l),y.push(h),y.push(s.sideBottom),y.push(-1)))),o=t}if(0===a.length||0===y.length)return;l.fillParent(h,y,a),l.fillParent(h,a,y);const r=[];l.calcDeltas(r,y,a),l.calcDeltas(r,a,y),l.addDeltas(r,h)}static fillParent(i,t,h){const n=h.length,e=t.length;for(let _=0;_<e;_+=4){const e=t[_],l=t[_+1],a=t[_+2],y=i[e][l-1],o=i[e][l];let r=8092,m=-1;for(let t=0;t<n;t+=4){if(h[t+2]!==a)continue;const n=h[t],e=h[t+1],_=i[n][e-1],l=i[n][e];switch(a){case s.sideLeft:case s.sideRight:if(x(y.y,_.y,l.y)&&x(o.y,_.y,l.y)){const i=Math.abs(l.y-_.y);i<r&&(r=i,m=t)}break;case s.sideTop:case s.sideBottom:if(x(y.x,_.x,l.x)&&x(o.x,_.x,l.x)){const i=Math.abs(l.x-_.x);i<r&&(r=i,m=t)}}}t[_+3]=m}}static calcDeltas(i,t,s){const h=t.length;for(let n=0;n<h;n+=4){const h=[],e=l.calcDelta(n,t,s,h);i.push(t[n]),i.push(t[n+1]),i.push(t[n+2]),i.push(e)}}static calcDelta(i,t,s,h){const n=t[i+3];if(-1===n)return 0;const e=h.length;return e>1&&h[e-2]===n?0:(h.push(n),l.calcDelta(n,s,t,h)+1)}static addDeltas(i,t){const h=i.length;let n=0;for(let s=0;s<h;s+=4){const t=i[s+3];t>n&&(n=t)}for(let e=0;e<h;e+=4){const h=t[i[e]],_=i[e+1],l=n-i[e+3];switch(i[e+2]){case s.sideLeft:h[_-1].x-=l,h[_].x-=l,1===_&&(h[h.length-1].x-=l),_===h.length-1&&(h[0].x-=l);break;case s.sideRight:h[_-1].x+=l,h[_].x+=l,1===_&&(h[h.length-1].x+=l),_===h.length-1&&(h[0].x+=l);break;case s.sideTop:h[_-1].y-=l,h[_].y-=l,1===_&&(h[h.length-1].y-=l),_===h.length-1&&(h[0].y-=l);break;case s.sideBottom:h[_-1].y+=l,h[_].y+=l,1===_&&(h[h.length-1].y+=l),_===h.length-1&&(h[0].y+=l)}}}}const x=(i,t,s)=>i>=t&&i<=s||i>=s&&i<=t;export{t as GeometryType,h as Point,_ as SimpleBuilder,e as TileClipper};\n"],
  "mappings": "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",
  "names": ["n", "t", "n", "n", "t", "r", "i", "t", "h", "s", "n", "e", "_", "l", "x", "o", "r", "u"]
}
