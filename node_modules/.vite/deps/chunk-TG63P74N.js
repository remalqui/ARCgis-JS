import {
  _e,
  ae,
  me,
  pe,
  se
} from "./chunk-7KM4XBUC.js";
import {
  s2 as s
} from "./chunk-SFV6XLDZ.js";

// node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js
var o = class {
  constructor() {
    this.code = null, this.description = null;
  }
};
var l = class {
  constructor(e) {
    this.error = new o(), this.globalId = null, this.objectId = null, this.success = false, this.uniqueId = null, this.error.description = e;
  }
};
function u(e) {
  return new l(e);
}
var a = class {
  constructor(e) {
    this.globalId = null, this.success = true, this.objectId = this.uniqueId = e;
  }
};
function c(e) {
  return new a(e);
}
var f = /* @__PURE__ */ new Set();
function d(e, i, r, s2 = false, o2) {
  f.clear();
  for (const l2 in r) {
    const a2 = e.get(l2);
    if (!a2)
      continue;
    const c2 = r[l2], d2 = m(a2, c2);
    if (d2 !== c2 && o2 && o2.push({ name: "invalid-value-type", message: "attribute value was converted to match the field type", details: { field: a2, originalValue: c2, sanitizedValue: d2 } }), f.add(a2.name), a2 && (s2 || a2.editable)) {
      const e2 = pe(a2, d2);
      if (e2)
        return u(_e(e2, a2, d2));
      i[a2.name] = d2;
    }
  }
  for (const t of (e == null ? void 0 : e.requiredFields) ?? [])
    if (!f.has(t.name))
      return u(`missing required field "${t.name}"`);
  return null;
}
function m(e, t) {
  let n = t;
  return "string" == typeof t && se(e) ? n = parseFloat(t) : null != t && ae(e) && "string" != typeof t && (n = String(t)), me(n);
}
var p;
function h(t, n) {
  if (!t || !s(n))
    return t;
  if ("rings" in t || "paths" in t) {
    if (null == p)
      throw new TypeError("geometry engine not loaded");
    return p.simplify(n, t);
  }
  return t;
}
async function g() {
  return null == p && (p = await import("./geometryEngineJSON-IVXHWXT4.js")), p;
}
async function y(t, n) {
  !s(t) || "esriGeometryPolygon" !== n && "esriGeometryPolyline" !== n || await g();
}

export {
  u,
  c,
  d,
  h,
  y
};
//# sourceMappingURL=chunk-TG63P74N.js.map
