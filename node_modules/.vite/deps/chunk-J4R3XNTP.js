import {
  p
} from "./chunk-N5ULYWRU.js";
import {
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2 as a,
  s2
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  h,
  w
} from "./chunk-HNHXEGH2.js";
import {
  e as e2
} from "./chunk-DWOEYHKS.js";
import {
  s3 as s
} from "./chunk-W2N7YT6I.js";

// node_modules/@arcgis/core/core/Loadable.js
var d = "not-loaded";
var h2 = "loading";
var c = "failed";
var u = "loaded";
var p2 = (r) => {
  let p3 = class extends r {
    constructor(...o) {
      super(...o), this._loadController = null, this.loadError = null, this.loadStatus = "not-loaded", this._set("loadWarnings", []), this.addResolvingPromise(new Promise((o2) => {
        const s3 = this.load.bind(this);
        this.load = (r2) => {
          const a2 = new Promise((o3, s4) => {
            const e3 = h(r2, s4);
            this.destroyed && s4(new s("load:instance-destroyed", `Instance of '${this.declaredClass || this.constructor.name}' is already destroyed`, { instance: this })), this.when(o3, s4).finally(() => {
              e3 && e3.remove();
            });
          });
          if (this.loadStatus === d) {
            this._set("loadStatus", h2);
            const o3 = this._loadController = new AbortController();
            s3({ signal: o3.signal }), w(o3.signal, () => {
              this._promiseProps.abort();
            });
          }
          return o2(), a2;
        };
      })), this.when(() => {
        this._set("loadStatus", u), this._loadController = null;
      }, (o2) => {
        this._set("loadStatus", c), this._set("loadError", o2), this._loadController = null;
      });
    }
    destroy() {
      this._loadController = e2(this._loadController), this._set("loadError", null), this._set("loadWarnings", []);
    }
    get loaded() {
      return this.loadStatus === u;
    }
    get loadWarnings() {
      return this._get("loadWarnings");
    }
    load() {
      return null;
    }
    cancelLoad() {
      var _a;
      return this.isFulfilled() || (this._set("loadError", new s("load:cancelled", "Cancelled")), (_a = this._loadController) == null ? void 0 : _a.abort()), this;
    }
  };
  return e([y({ readOnly: true })], p3.prototype, "loaded", null), e([y({ readOnly: true })], p3.prototype, "loadError", void 0), e([y({ clonable: false })], p3.prototype, "loadStatus", void 0), e([y({ type: [s2], readOnly: true })], p3.prototype, "loadWarnings", null), p3 = e([a("esri.core.Loadable")], p3), p3;
};
var m = class extends p2(p) {
};
m = e([a("esri.core.Loadable")], m), function(o) {
  function t(o2) {
    return !(!o2 || !o2.load);
  }
  o.LoadableMixin = p2, o.isLoadable = t;
}(m || (m = {}));
var _ = m;

export {
  _
};
//# sourceMappingURL=chunk-J4R3XNTP.js.map
