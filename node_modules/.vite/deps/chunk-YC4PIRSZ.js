import {
  K
} from "./chunk-YIJWIXDP.js";
import {
  a as a3
} from "./chunk-MUO4EIZP.js";
import {
  c
} from "./chunk-42RWGG3D.js";
import {
  i
} from "./chunk-KTEJJM3A.js";
import {
  n
} from "./chunk-BVNZ3ETW.js";
import {
  p
} from "./chunk-T4XWQYGC.js";
import {
  o
} from "./chunk-4H5JODOT.js";
import {
  f,
  r,
  x2 as x
} from "./chunk-SFV6XLDZ.js";
import {
  s as s2
} from "./chunk-3PLRSFLA.js";
import {
  s
} from "./chunk-VBD33VNW.js";
import {
  l
} from "./chunk-7A5C2EQ3.js";
import {
  y3 as y
} from "./chunk-OYBXMT5R.js";
import {
  a2
} from "./chunk-CIDWM2UN.js";
import {
  e
} from "./chunk-PD5Q7TDW.js";
import {
  v
} from "./chunk-2YSHZRCT.js";
import {
  a
} from "./chunk-I5JT24BO.js";

// node_modules/@arcgis/core/rest/support/FullTextSearch.js
var p2 = class extends i(l) {
  constructor(r2) {
    super(r2), this.onFields = null, this.operator = null, this.searchTerm = null, this.searchType = null;
  }
};
e([y({ type: [String], json: { write: { enabled: true, overridePolicy() {
  return { enabled: null != this.onFields && this.onFields.length > 0 };
} } } })], p2.prototype, "onFields", void 0), e([y({ type: String, json: { write: true } })], p2.prototype, "operator", void 0), e([y({ type: String, json: { write: true } })], p2.prototype, "searchTerm", void 0), e([y({ type: String, json: { write: true } })], p2.prototype, "searchType", void 0), p2 = e([a2("esri.rest.support.FullTextSearch")], p2);
var i2 = p2;

// node_modules/@arcgis/core/rest/support/StatisticDefinition.js
var c2;
var n2 = new s({ count: "count", sum: "sum", min: "min", max: "max", avg: "avg", stddev: "stddev", var: "var", exceedslimit: "exceedslimit", percentile_cont: "percentile-continuous", percentile_disc: "percentile-discrete", EnvelopeAggregate: "envelope-aggregate", CentroidAggregate: "centroid-aggregate", ConvexHullAggregate: "convex-hull-aggregate" });
var p3 = c2 = class extends l {
  constructor(t) {
    super(t), this.maxPointCount = void 0, this.maxRecordCount = void 0, this.maxVertexCount = void 0, this.onStatisticField = null, this.outStatisticFieldName = null, this.statisticType = null, this.statisticParameters = null;
  }
  writeStatisticParameters(t, e2) {
    "percentile-continuous" !== this.statisticType && "percentile-discrete" !== this.statisticType || (e2.statisticParameters = a(t));
  }
  clone() {
    return new c2({ maxPointCount: this.maxPointCount, maxRecordCount: this.maxRecordCount, maxVertexCount: this.maxVertexCount, onStatisticField: this.onStatisticField, outStatisticFieldName: this.outStatisticFieldName, statisticType: this.statisticType, statisticParameters: a(this.statisticParameters) });
  }
};
e([y({ type: Number, json: { write: true } })], p3.prototype, "maxPointCount", void 0), e([y({ type: Number, json: { write: true } })], p3.prototype, "maxRecordCount", void 0), e([y({ type: Number, json: { write: true } })], p3.prototype, "maxVertexCount", void 0), e([y({ type: String, json: { write: true } })], p3.prototype, "onStatisticField", void 0), e([y({ type: String, json: { write: true } })], p3.prototype, "outStatisticFieldName", void 0), e([y({ type: String, json: { read: { source: "statisticType", reader: n2.read }, write: { target: "statisticType", writer: n2.write } } })], p3.prototype, "statisticType", void 0), e([y({ type: Object })], p3.prototype, "statisticParameters", void 0), e([r("statisticParameters")], p3.prototype, "writeStatisticParameters", null), p3 = c2 = e([a2("esri.rest.support.StatisticDefinition")], p3);
var m = p3;

// node_modules/@arcgis/core/rest/support/Query.js
var w;
var v2 = new s({ esriSpatialRelIntersects: "intersects", esriSpatialRelContains: "contains", esriSpatialRelCrosses: "crosses", esriSpatialRelDisjoint: "disjoint", esriSpatialRelEnvelopeIntersects: "envelope-intersects", esriSpatialRelIndexIntersects: "index-intersects", esriSpatialRelOverlaps: "overlaps", esriSpatialRelTouches: "touches", esriSpatialRelWithin: "within", esriSpatialRelRelation: "relation" });
var g = new s({ esriSRUnit_Meter: "meters", esriSRUnit_Kilometer: "kilometers", esriSRUnit_Foot: "feet", esriSRUnit_StatuteMile: "miles", esriSRUnit_NauticalMile: "nautical-miles", esriSRUnit_USNauticalMile: "us-nautical-miles" });
var R = w = class extends l {
  static from(t) {
    return v(w, t);
  }
  constructor(t) {
    super(t), this.aggregateIds = null, this.cacheHint = void 0, this.compactGeometryEnabled = false, this.datumTransformation = null, this.defaultSpatialReferenceEnabled = false, this.distance = void 0, this.dynamicDataSource = void 0, this.formatOf3DObjects = null, this.fullText = null, this.gdbVersion = null, this.geometry = null, this.geometryPrecision = void 0, this.groupByFieldsForStatistics = null, this.having = null, this.historicMoment = null, this.maxAllowableOffset = void 0, this.maxRecordCountFactor = 1, this.multipatchOption = null, this.num = void 0, this.objectIds = null, this.orderByFields = null, this.outFields = null, this.outSpatialReference = null, this.outStatistics = null, this.parameterValues = null, this.pixelSize = null, this.quantizationParameters = null, this.rangeValues = null, this.relationParameter = null, this.resultType = null, this.returnCentroid = false, this.returnDistinctValues = false, this.returnExceededLimitFeatures = true, this.returnGeometry = false, this.returnQueryGeometry = false, this.returnM = void 0, this.returnZ = void 0, this.sourceSpatialReference = null, this.spatialRelationship = "intersects", this.start = void 0, this.sqlFormat = null, this.text = null, this.timeExtent = null, this.timeReferenceUnknownClient = false, this.units = null, this.where = null;
  }
  castDatumTransformation(t) {
    return "number" == typeof t || "object" == typeof t ? t : null;
  }
  writeHistoricMoment(t, e2) {
    e2.historicMoment = t && t.getTime();
  }
  writeParameterValues(t, e2) {
    if (t) {
      const r2 = {};
      for (const e3 in t) {
        const i3 = t[e3];
        Array.isArray(i3) ? r2[e3] = i3.map((t2) => t2 instanceof Date ? t2.getTime() : t2) : i3 instanceof Date ? r2[e3] = i3.getTime() : r2[e3] = i3;
      }
      e2.parameterValues = r2;
    }
  }
  writeStart(t, e2) {
    e2.resultOffset = this.start, e2.resultRecordCount = this.num || 10, e2.where = "1=1";
  }
  writeWhere(t, e2) {
    e2.where = t || "1=1";
  }
  clone() {
    return new w(a({ aggregateIds: this.aggregateIds, cacheHint: this.cacheHint, compactGeometryEnabled: this.compactGeometryEnabled, datumTransformation: this.datumTransformation, defaultSpatialReferenceEnabled: this.defaultSpatialReferenceEnabled, distance: this.distance, fullText: this.fullText, formatOf3DObjects: this.formatOf3DObjects, gdbVersion: this.gdbVersion, geometry: this.geometry, geometryPrecision: this.geometryPrecision, groupByFieldsForStatistics: this.groupByFieldsForStatistics, having: this.having, historicMoment: null != this.historicMoment ? new Date(this.historicMoment.getTime()) : null, maxAllowableOffset: this.maxAllowableOffset, maxRecordCountFactor: this.maxRecordCountFactor, multipatchOption: this.multipatchOption, num: this.num, objectIds: this.objectIds, orderByFields: this.orderByFields, outFields: this.outFields, outSpatialReference: this.outSpatialReference, outStatistics: this.outStatistics, parameterValues: this.parameterValues, pixelSize: this.pixelSize, quantizationParameters: this.quantizationParameters, rangeValues: this.rangeValues, relationParameter: this.relationParameter, resultType: this.resultType, returnDistinctValues: this.returnDistinctValues, returnGeometry: this.returnGeometry, returnCentroid: this.returnCentroid, returnExceededLimitFeatures: this.returnExceededLimitFeatures, returnQueryGeometry: this.returnQueryGeometry, returnM: this.returnM, returnZ: this.returnZ, dynamicDataSource: this.dynamicDataSource, sourceSpatialReference: this.sourceSpatialReference, spatialRelationship: this.spatialRelationship, start: this.start, sqlFormat: this.sqlFormat, text: this.text, timeExtent: this.timeExtent, timeReferenceUnknownClient: this.timeReferenceUnknownClient, units: this.units, where: this.where }));
  }
};
R.MAX_MAX_RECORD_COUNT_FACTOR = 5, e([y({ json: { write: true } })], R.prototype, "aggregateIds", void 0), e([y({ type: Boolean, json: { write: true } })], R.prototype, "cacheHint", void 0), e([y({ type: Boolean, json: { default: false, write: true } })], R.prototype, "compactGeometryEnabled", void 0), e([y({ json: { write: true } })], R.prototype, "datumTransformation", void 0), e([s2("datumTransformation")], R.prototype, "castDatumTransformation", null), e([y({ type: Boolean, json: { default: false, write: true } })], R.prototype, "defaultSpatialReferenceEnabled", void 0), e([y({ type: Number, json: { write: { overridePolicy: (t) => ({ enabled: t > 0 }) } } })], R.prototype, "distance", void 0), e([y({ type: K, json: { write: true } })], R.prototype, "dynamicDataSource", void 0), e([y({ type: String, json: { write: true } })], R.prototype, "formatOf3DObjects", void 0), e([y({ type: [i2], json: { write: { enabled: true, overridePolicy() {
  return { enabled: null != this.fullText && this.fullText.length > 0 };
} } } })], R.prototype, "fullText", void 0), e([y({ type: String, json: { write: true } })], R.prototype, "gdbVersion", void 0), e([y({ types: n, json: { read: p, write: true } })], R.prototype, "geometry", void 0), e([y({ type: Number, json: { write: true } })], R.prototype, "geometryPrecision", void 0), e([y({ type: [String], json: { write: true } })], R.prototype, "groupByFieldsForStatistics", void 0), e([y({ type: String, json: { write: true } })], R.prototype, "having", void 0), e([y({ type: Date })], R.prototype, "historicMoment", void 0), e([r("historicMoment")], R.prototype, "writeHistoricMoment", null), e([y({ type: Number, json: { write: true } })], R.prototype, "maxAllowableOffset", void 0), e([y({ type: Number, cast: (t) => t < 1 ? 1 : t > w.MAX_MAX_RECORD_COUNT_FACTOR ? w.MAX_MAX_RECORD_COUNT_FACTOR : t, json: { write: { overridePolicy: (t) => ({ enabled: t > 1 }) } } })], R.prototype, "maxRecordCountFactor", void 0), e([y({ type: ["xyFootprint"], json: { write: true } })], R.prototype, "multipatchOption", void 0), e([y({ type: Number, json: { read: { source: "resultRecordCount" } } })], R.prototype, "num", void 0), e([y({ json: { write: true } })], R.prototype, "objectIds", void 0), e([y({ type: [String], json: { write: true } })], R.prototype, "orderByFields", void 0), e([y({ type: [String], json: { write: true } })], R.prototype, "outFields", void 0), e([y({ type: f, json: { name: "outSR", write: true } })], R.prototype, "outSpatialReference", void 0), e([y({ type: [m], json: { write: { enabled: true, overridePolicy() {
  return { enabled: null != this.outStatistics && this.outStatistics.length > 0 };
} } } })], R.prototype, "outStatistics", void 0), e([y({ json: { write: true } })], R.prototype, "parameterValues", void 0), e([r("parameterValues")], R.prototype, "writeParameterValues", null), e([y({ type: x, json: { write: true } })], R.prototype, "pixelSize", void 0), e([y({ type: a3, json: { write: true } })], R.prototype, "quantizationParameters", void 0), e([y({ type: [Object], json: { write: true } })], R.prototype, "rangeValues", void 0), e([y({ type: String, json: { read: { source: "relationParam" }, write: { target: "relationParam", overridePolicy() {
  return { enabled: "relation" === this.spatialRelationship };
} } } })], R.prototype, "relationParameter", void 0), e([y({ type: String, json: { write: true } })], R.prototype, "resultType", void 0), e([y({ type: Boolean, json: { default: false, write: true } })], R.prototype, "returnCentroid", void 0), e([y({ type: Boolean, json: { default: false, write: true } })], R.prototype, "returnDistinctValues", void 0), e([y({ type: Boolean, json: { default: true, write: true } })], R.prototype, "returnExceededLimitFeatures", void 0), e([y({ type: Boolean, json: { write: true } })], R.prototype, "returnGeometry", void 0), e([y({ type: Boolean, json: { default: false, write: true } })], R.prototype, "returnQueryGeometry", void 0), e([y({ type: Boolean, json: { default: false, write: true } })], R.prototype, "returnM", void 0), e([y({ type: Boolean, json: { write: { overridePolicy: (t) => ({ enabled: t }) } } })], R.prototype, "returnZ", void 0), e([y({ type: f, json: { write: true } })], R.prototype, "sourceSpatialReference", void 0), e([o(v2, { ignoreUnknown: false, name: "spatialRel" })], R.prototype, "spatialRelationship", void 0), e([y({ type: Number, json: { read: { source: "resultOffset" } } })], R.prototype, "start", void 0), e([r("start"), r("num")], R.prototype, "writeStart", null), e([y({ type: String, json: { write: true } })], R.prototype, "sqlFormat", void 0), e([y({ type: String, json: { write: true } })], R.prototype, "text", void 0), e([y({ type: c, json: { write: true } })], R.prototype, "timeExtent", void 0), e([y({ type: Boolean, json: { default: false, write: true } })], R.prototype, "timeReferenceUnknownClient", void 0), e([o(g, { ignoreUnknown: false }), y({ json: { write: { overridePolicy(t) {
  return { enabled: !!t && null != this.distance && this.distance > 0 };
} } } })], R.prototype, "units", void 0), e([y({ type: String, json: { write: { overridePolicy(t) {
  return { enabled: null != t || null != this.start && this.start > 0 };
} } } })], R.prototype, "where", void 0), e([r("where")], R.prototype, "writeWhere", null), R = w = e([a2("esri.rest.support.Query")], R);
var b = R;

export {
  m,
  b
};
//# sourceMappingURL=chunk-YC4PIRSZ.js.map
