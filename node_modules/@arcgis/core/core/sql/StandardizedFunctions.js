/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{SqlError as a,SqlErrorCodes as e}from"../../arcade/featureset/support/errorsupport.js";import{escapeRegExpString as t}from"../string.js";import{DateTime as r}from"luxon";class n{constructor(){this.op="+",this.day=0,this.second=0,this.hour=0,this.month=0,this.year=0,this.minute=0,this.millis=0}static _fixDefaults(a){if(null!==a.precision||null!==a.secondary)throw new Error("Primary and Secondary SqlInterval qualifiers not supported")}static _parseSecondsComponent(a,e){if(e.includes(".")){const t=e.split(".");a.second=parseFloat(t[0]),a.millis=parseInt(t[1],10)}else a.second=parseFloat(e)}static createFromMilliseconds(a){const e=new n;return e.second=a/1e3,e}static createFromValueAndQualifer(a,e,t){let r=null;const l=new n;if(l.op="-"===t?"-":"+","interval-period"===e.type){n._fixDefaults(e);const t=new RegExp("^[0-9]{1,}$");if("year"===e.period||"month"===e.period)throw new Error("Year-Month Intervals not supported");if("second"===e.period){if(!/^[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$/.test(a))throw new Error("Illegal Interval");n._parseSecondsComponent(l,a)}else{if(!t.test(a))throw new Error("Illegal Interval");l[e.period]=parseFloat(a)}}else{if(n._fixDefaults(e.start),n._fixDefaults(e.end),"year"===e.start.period||"month"===e.start.period)throw new Error("Year-Month Intervals not supported");if("year"===e.end.period||"month"===e.end.period)throw new Error("Year-Month Intervals not supported");switch(e.start.period){case"day":switch(e.end.period){case"hour":if(r=new RegExp("^[0-9]{1,} [0-9]{1,}$"),!r.test(a))throw new Error("Illegal Interval");l[e.start.period]=parseFloat(a.split(" ")[0]),l[e.end.period]=parseFloat(a.split(" ")[1]);break;case"minute":if(r=new RegExp("^[0-9]{1,} [0-9]{1,2}:[0-9]{1,}$"),!r.test(a))throw new Error("Illegal Interval");{l[e.start.period]=parseFloat(a.split(" ")[0]);const t=a.split(" ")[1].split(":");l.hour=parseFloat(t[0]),l.minute=parseFloat(t[1])}break;case"second":if(r=new RegExp("^[0-9]{1,} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$"),!r.test(a))throw new Error("Illegal Interval");{l[e.start.period]=parseFloat(a.split(" ")[0]);const t=a.split(" ")[1].split(":");l.hour=parseFloat(t[0]),l.minute=parseFloat(t[1]),n._parseSecondsComponent(l,t[2])}break;default:throw new Error("Invalid Interval.")}break;case"hour":switch(e.end.period){case"minute":if(r=new RegExp("^[0-9]{1,}:[0-9]{1,}$"),!r.test(a))throw new Error("Illegal Interval");l.hour=parseFloat(a.split(":")[0]),l.minute=parseFloat(a.split(":")[1]);break;case"second":if(r=new RegExp("^[0-9]{1,}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$"),!r.test(a))throw new Error("Illegal Interval");{const e=a.split(":");l.hour=parseFloat(e[0]),l.minute=parseFloat(e[1]),n._parseSecondsComponent(l,e[2])}break;default:throw new Error("Invalid Interval.")}break;case"minute":if("second"!==e.end.period)throw new Error("Invalid Interval.");if(r=new RegExp("^[0-9]{1,}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$"),!r.test(a))throw new Error("Illegal Interval");{const e=a.split(":");l.minute=parseFloat(e[0]),n._parseSecondsComponent(l,e[1])}break;default:throw new Error("Invalid Interval.")}}return l}valueInMilliseconds(){return("-"===this.op?-1:1)*(this.millis+1e3*this.second+60*this.minute*1e3+60*this.hour*60*1e3+24*this.day*60*60*1e3+this.month*(365/12)*24*60*60*1e3+365*this.year*24*60*60*1e3)}}function l(a,e){const t=c[a.toLowerCase()];if(null==t)throw new Error("Function Not Recognised");if(e.length<t.minParams||e.length>t.maxParams)throw new Error(`Invalid Parameter count for call to ${a.toUpperCase()}`);return t.evaluate(e)}function s(a,e){const t=c[a.toLowerCase()];return null!=t&&e>=t.minParams&&e<=t.maxParams}function o(a){return"string"==typeof a||a instanceof String}function i(a){return a instanceof Date}function u(a){const e=new Date(a.getTime());return e.setHours(0,0,0,0),e}function m(t,n){if(i(t))return n?u(t):t;if(o(t)){const a=r.fromSQL(t);if(a.isValid)return n?u(a.toJSDate()):a.toJSDate()}throw new a(e.CannotCastValue)}const c={extract:{minParams:2,maxParams:2,evaluate:([a,e])=>{if(null==e)return null;if(e instanceof Date)switch(a.toUpperCase()){case"SECOND":return e.getSeconds();case"MINUTE":return e.getMinutes();case"HOUR":return e.getHours();case"DAY":return e.getDate();case"MONTH":return e.getMonth()+1;case"YEAR":return e.getFullYear()}throw new Error("Invalid Parameter for call to EXTRACT")}},substring:{minParams:2,maxParams:3,evaluate:a=>{if(2===a.length){const[e,t]=a;return null==e||null==t?null:e.toString().substring(t-1)}if(3===a.length){const[e,t,r]=a;return null==e||null==t||null==r?null:r<=0?"":e.toString().substring(t-1,t+r-1)}}},position:{minParams:2,maxParams:2,evaluate:([a,e])=>null==a||null==e?null:e.indexOf(a)+1},trim:{minParams:2,maxParams:3,evaluate:a=>{const e=3===a.length,r=e?a[1]:" ",n=e?a[2]:a[1];if(null==r||null==n)return null;const l=`(${t(r)})`;switch(a[0]){case"BOTH":return n.replaceAll(new RegExp(`^${l}*|${l}*$`,"g"),"");case"LEADING":return n.replaceAll(new RegExp(`^${l}*`,"g"),"");case"TRAILING":return n.replaceAll(new RegExp(`${l}*$`,"g"),"")}throw new Error("Invalid Parameter for call to TRIM")}},abs:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.abs(a[0])},ceiling:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.ceil(a[0])},floor:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.floor(a[0])},log:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])},log10:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])*Math.LOG10E},sin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.sin(a[0])},cos:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.cos(a[0])},tan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.tan(a[0])},asin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.asin(a[0])},acos:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.acos(a[0])},atan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.atan(a[0])},sign:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0]>0?1:a[1]<0?-1:0},power:{minParams:2,maxParams:2,evaluate:a=>null==a[0]||null==a[1]?null:a[0]**a[1]},mod:{minParams:2,maxParams:2,evaluate:a=>null==a[0]||null==a[1]?null:a[0]%a[1]},round:{minParams:1,maxParams:2,evaluate:a=>{const e=a[0],t=2===a.length?10**a[1]:1;return null==e?null:Math.round(e*t)/t}},truncate:{minParams:1,maxParams:2,evaluate:a=>null==a[0]?null:1===a.length?parseInt(a[0].toFixed(0),10):parseFloat(a[0].toFixed(a[1]))},char_length:{minParams:1,maxParams:1,evaluate:a=>"string"==typeof a[0]||a[0]instanceof String?a[0].length:0},concat:{minParams:1,maxParams:1/0,evaluate:a=>{let e="";for(let t=0;t<a.length;t++){if(null==a[t])return null;e+=a[t].toString()}return e}},lower:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toLowerCase()},upper:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toUpperCase()},coalesce:{minParams:1,maxParams:1/0,evaluate:a=>{for(const e of a)if(null!==e)return e;return null}},cosh:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.cosh(a[0])},sinh:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.sinh(a[0])},tanh:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.tanh(a[0])},nullif:{minParams:2,maxParams:2,evaluate:a=>{const e=a[0],t=a[1];return(e instanceof Date?e.valueOf():e)===(t instanceof Date?t.valueOf():t)?null:e}},cast:{minParams:2,maxParams:2,evaluate:t=>{const r=t[0],n=t[1];if(null===r)return null;switch(n.type){case"integer":{const t=parseInt(r,10);if(isNaN(t))throw new a(e.CannotCastValue);return t}case"smallint":{const t=parseInt(r,10);if(isNaN(t))throw new a(e.CannotCastValue);if(t>32767||t<-32767)throw new a(e.CannotCastValue);return t}case"float":case"real":{const t=parseFloat(r);if(isNaN(t))throw new a(e.CannotCastValue);return t}case"date":return m(r,!0);case"timestamp":return m(r,!1);case"varchar":{const t=r.toString();if(t.length>n.size)throw new a(e.CannotCastValue);return t}default:throw new a(e.InvalidDataType)}}}};export{n as SqlInterval,l as evaluateFunction,s as isStandardized};
