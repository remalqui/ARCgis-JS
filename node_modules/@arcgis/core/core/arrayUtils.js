/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import t from"./RandomLCG.js";const n=1.5,e=1/n,r=.5;function o(t){if(!t)return;return t.length>0?t[0]:void 0}function l(t){if(!t)return;const n=t.length;return n>0?t[n-1]:void 0}function u(t){return t}function f(t,n=u){if(!t||0===t.length)return;let e=t[0],r=n(e);for(let o=1;o<t.length;++o){const l=t[o],u=Number(n(l));u>r&&(r=u,e=l)}return e}function i(t,n=u){return f(t,(t=>-n(t)))}function c(t,n){return n?t.filter(((t,e,r)=>r.findIndex(n.bind(null,t))===e)):t.filter(((t,n,e)=>e.indexOf(t)===n))}function s(t,n,e){if(null==t&&null==n)return!0;if(null==t||null==n||t.length!==n.length)return!1;if(e){for(let r=0;r<t.length;r++)if(!e(t[r],n[r]))return!1}else for(let r=0;r<t.length;r++)if(t[r]!==n[r])return!1;return!0}function h(t,n){let e=t.length!==n.length;e&&(t.length=n.length);for(let r=0;r<n.length;++r)t[r]!==n[r]&&(t[r]=n[r],e=!0);return e}function a(t,n,e){let r,o;return e?(r=n.filter((n=>!t.some((t=>e(t,n))))),o=t.filter((t=>!n.some((n=>e(n,t)))))):(r=n.filter((n=>!t.includes(n))),o=t.filter((t=>!n.includes(t)))),{added:r,removed:o}}function g(t,n,e){return t&&n?e?t.filter((t=>n.findIndex((n=>e(t,n)))>-1)):t.filter((t=>n.includes(t))):[]}function d(t){return t&&"number"==typeof t.length}function p(t,n){const e=t.length;if(0===e)return[];const r=[];for(let o=0;o<e;o+=n)r.push(t.slice(o,o+n));return r}const m=!!Array.prototype.fill;function M(t,n){if(m)return new Array(t).fill(n);const e=new Array(t);for(let r=0;r<t;r++)e[r]=n;return e}function w(t,n){void 0===n&&(n=t,t=0);const e=new Array(n-t);for(let r=t;r<n;r++)e[r-t]=r;return e}function x(t,n,e){const r=t.length;let o=0,l=r-1;for(;o<l;){const e=o+Math.floor((l-o)/2);n>t[e]?o=e+1:l=e}const u=t[o];return e?n>=t[r-1]?-1:u===n?o:o-1:u===n?o:-1}function y(t,n,e){if(!t||0===t.length)return;const r=t.length-1,o=t[0];if(n<=e(o))return o;const l=t[r];if(n>=e(l))return l;let u=0,f=0,i=r;for(;u<i;){f=u+Math.floor((i-u)/2);const o=t[f],l=e(o);if(l===n)return o;if(n<l){if(f>0){const r=t[f-1],u=e(r);if(n>u)return n-u>=l-n?o:r}i=f}else{if(f<r){const r=t[f+1],u=e(r);if(n<u)return n-l>=u-n?r:o}u=f+1}}return t[f]}class v{constructor(){this.last=0}}const A=new v;function b(t,n,e,r){r=r||A;const o=Math.max(0,r.last-10);for(let u=o;u<e;++u)if(t[u]===n)return r.last=u,u;const l=Math.min(o,e);for(let u=0;u<l;++u)if(t[u]===n)return r.last=u,u;return-1}function z(t,n,e,r){const o=e??t.length,l=b(t,n,o,r);if(-1!==l)return t[l]=t[o-1],null==e&&t.pop(),n}const I=new Set;function O(t,n,e=t.length,r=n.length,o,l){if(0===r||0===e)return e;I.clear();for(let f=0;f<r;++f)I.add(n[f]);o=o||A;const u=Math.max(0,o.last-10);for(let f=u;f<e;++f)if(I.has(t[f])&&(l&&l.push(t[f]),I.delete(t[f]),t[f]=t[e-1],--e,--f,0===I.size||0===e))return I.clear(),e;for(let f=0;f<u;++f)if(I.has(t[f])&&(l&&l.push(t[f]),I.delete(t[f]),t[f]=t[e-1],--e,--f,0===I.size||0===e))return I.clear(),e;return I.clear(),e}function S(t,n){let e=0;for(let r=0;r<t.length;++r){const o=t[r];n(o,r)&&(t[e]=o,e++)}t.length=e}function j(t,n,e){const r=t.length;if(n>=r)return t.slice(0);const o=C(e),l=new Set,u=[];for(;u.length<n;){const n=Math.floor(o()*r);l.has(n)||(l.add(n),u.push(t[n]))}return u}function C(t){return t?(G.seed=t,()=>G.getFloat()):Math.random}function F(t,n){const e=C(n);for(let r=t.length-1;r>0;r--){const n=Math.floor(e()*(r+1)),o=t[r];t[r]=t[n],t[n]=o}return t}const G=new t;function L(t,n){const e=t.indexOf(n);return-1!==e?(t.splice(e,1),n):null}function N(t,n){const e=new Map,r=t.length;for(let o=0;o<r;o++){const r=t[o],l=n(r,o,t),u=e.get(l);u?u.push(r):e.set(l,[r])}return e}function R(t,n){return null!=t}const k=[];export{k as EmptyArray,v as PositionHint,n as ReallocGrowthFactor,e as ReallocShrinkFactor,r as ReallocShrinkTreshold,y as binaryFindClosest,x as binaryIndexOf,M as constant,a as difference,s as equals,S as filterInPlace,o as first,N as groupToMap,b as indexOf,g as intersect,d as isArrayLike,R as isSome,l as last,f as max,i as min,j as pickRandom,w as range,L as remove,z as removeUnordered,O as removeUnorderedMany,F as shuffle,p as splitIntoChunks,c as unique,h as update};
