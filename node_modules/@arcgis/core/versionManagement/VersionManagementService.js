/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../request.js";import{JSONSupportMixin as t}from"../core/JSONSupport.js";import o from"../core/Loadable.js";import{Url as s}from"../core/urlUtils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../core/accessorSupport/ensureType.js";import"../core/arrayUtils.js";import"../core/has.js";import{reader as n}from"../core/accessorSupport/decorators/reader.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import{writer as l}from"../core/accessorSupport/decorators/writer.js";import{parseUrl as u}from"../rest/utils.js";import{currentSessionId as c}from"./support/versionManagementUtils.js";var d;let m=d=class extends(t(o)){constructor(e){super(e),this.sourceJSON=null,this.capabilities=null}initialize(){d.versionCollection.has(this.url)||d.versionCollection.set(this.url,new Map);const e=(d.versionCollectionCount.get(this.url)??0)+1;d.versionCollectionCount.set(this.url,e)}destroy(){const e=(d.versionCollectionCount.get(this.url)??1)-1;d.versionCollectionCount.set(this.url,e),0===e&&d.versionCollection.delete(this.url)}read(e,r){this.sourceJSON=e,super.read(e,r)}readDefaultVersionIdentifier(e,r){return{name:r.defaultVersionName,guid:r.defaultVersionGuid}}writeDefaultVersionIdentifier(e,r){r.defaultVersionName=e.name,r.defaultVersionGuid=e.guid}load(e){return this.addResolvingPromise(this._fetchService(this.url,e)),Promise.resolve(this)}async createVersion(e){const[{createVersion:r},{default:t}]=await Promise.all([import("../rest/versionManagement/createVersion.js"),import("../rest/versionManagement/support/CreateVersionParameters.js")]),o=t.from(e);return r(this.url,o)}async deleteVersion(e){const[{deleteVersion:r},{default:t}]=await Promise.all([import("../rest/versionManagement/deleteVersion.js"),import("../rest/versionManagement/support/DeleteVersionParameters.js")]);let o;e.guid&&d.versionCollection.get(this.url)?.has(e.guid)&&(o=c??void 0);const s=new t({versionName:e.name,sessionId:o});return r(this.url,s)}async getVersionInfoExtended(e){const{getVersion:r}=await import("../rest/versionManagement/getVersion.js");return r(this.url,e.guid)}async getVersionInfos(e={}){const[{getVersionInfos:r},{default:t}]=await Promise.all([import("../rest/versionManagement/getVersionInfos.js"),import("../rest/versionManagement/support/GetVersionInfosParameters.js")]),o=t.from(e);return r(this.url,o)}getLockType(e){const r=d.versionCollection.get(this.url)?.get(e.guid)?.lockType;return r??"none"}changeVersion(e,r,t){let o;o="layers"in e?e.allTables.concat(e.allLayers):e;const i=new s(this.url).host;let n=null,a=null,l=null,u=null;const c=e=>!e||e===this.defaultVersionIdentifier.name,m=e=>{const r=d.versionCollection?.get(this.url)?.get(e.guid);l=e.name,u=r?.moment??null},p=(e,r)=>!e&&!r||!(!e||!r)&&e.toISOString()===r.toISOString();if("name"in r){if("none"!==this.getLockType(r))return!1;n=r.name,a=null,"name"in t?m(t):(l=this.defaultVersionIdentifier.name,u=t)}else n=this.defaultVersionIdentifier.name,a=r,"name"in t?m(t):(l=this.defaultVersionIdentifier.name,u=t);const f=c(n);for(const d of o)if("feature"===d.type){const e=new s(d.url??null).host;i.toLowerCase()===e.toLowerCase()&&(f&&c(d.gdbVersion)&&p(d.historicMoment,a)||n===d.gdbVersion&&p(d.historicMoment,a))&&(d.gdbVersion=l,d.historicMoment=u)}return!0}async _fetchService(e,t){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:u(e)});const o=await r(e,{responseType:"json",query:{f:"json"},...t});this.read(o.data)}};m.versionCollection=new Map,m.versionCollectionCount=new Map,e([i()],m.prototype,"url",void 0),e([i()],m.prototype,"sourceJSON",void 0),e([i({type:String,json:{write:!0}})],m.prototype,"name",void 0),e([i({json:{write:{target:{defaultVersionName:{type:String},defaultVersionGuid:{type:String}}},read:{source:["defaultVersionName","defaultVersionGuid"]}}})],m.prototype,"defaultVersionIdentifier",void 0),e([n("defaultVersionIdentifier",["defaultVersionName","defaultVersionGuid"])],m.prototype,"readDefaultVersionIdentifier",null),e([l("defaultVersionIdentifier",{defaultVersionName:{type:String},defaultVersionGuid:{type:String}})],m.prototype,"writeDefaultVersionIdentifier",null),e([i({json:{write:!0}})],m.prototype,"capabilities",void 0),m=d=e([a("esri.versionManagement.VersionManagementService")],m);const p=m;export{p as default};
