/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../../Color.js";import"../../rasterRenderers.js";import{getMetersPerUnitForSR as t}from"../../core/unitUtils.js";import n from"../../layers/support/Field.js";import a from"../../layers/support/RasterInfo.js";import l from"../FlowRenderer.js";import r from"./AuthoringInfo.js";import s from"./ClassBreakInfo.js";import{PREDEFINED_JSON_COLOR_RAMPS as i,convertColorRampToColormap as o}from"./colorRampUtils.js";import{isVectorFieldRendererSupported as u,isColormapRendererSupported as m,isUVRendererSupported as c,isClassBreaksSupported as f,isShadedReliefRendererSupported as p,isFlowRendererSupported as d}from"./rasterRendererChecks.js";import h from"./UniqueValueInfo.js";import b from"../../rest/support/ClassBreaksDefinition.js";import{createGenerateRendererClassBreaks as g}from"../../rest/support/generateRendererUtils.js";import y from"../../rest/support/MultipartColorRamp.js";import v from"../RasterStretchRenderer.js";import C from"../UniqueValueRenderer.js";import w from"../RasterColormapRenderer.js";import M from"../RasterShadedReliefRenderer.js";import x from"../ClassBreaksRenderer.js";import R from"../VectorFieldRenderer.js";const T=.25,j=y.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),I=y.fromJSON(i[0]),V=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function k(e,t){const{attributeTable:n,colormap:a}=e;if(u(e)){const t=H(e);if(null!=t)return t}if(null!=a){const t=J(e);if(null!=t)return t}if(null!=n){const t=N(e);if(null!=t)return t}return B(e,t)}function S(e,t=!1){const n=["raster-stretch"];return m(e,t)&&n.push("raster-colormap"),c(e)&&n.push("unique-value"),f(e,t)&&n.push("class-breaks"),p(e)&&n.push("raster-shaded-relief"),u(e)&&n.push("vector-field"),d(e)&&n.push("flow"),n}function L(e,t,n){const a=["nearest","bilinear","cubic","majority"].find((e=>e===n?.toLowerCase()));if("Map"===t)return a??"bilinear";if("standard-time"===e.dataType)return a??"nearest";return"thematic"===e.dataType||e.attributeTable||e.colormap?"nearest"===a||"majority"===a?a:"nearest":a??"bilinear"}function B(e,t){e=E(e,t?.variableName);const{bandCount:n}=e;let{bandIds:a,stretchType:l}=t||{};a?.some((e=>e>=n))&&(a=null);let r=e.statistics,s=e.histograms;n>1?(a=a?.length?a:q(e),r=null==r?null:a?.map((e=>r[e])),s=null==s?null:a?.map((e=>s[e]))):a=[0],null==l&&(l=W(e));let i=!1;switch(l){case"none":i=!1;break;case"percent-clip":i=!s?.length;break;default:i=!r?.length}const{dataType:o}=e,u=1===a?.length&&V.has(o)?j:null,m=new v({stretchType:l,dynamicRangeAdjustment:i,colorRamp:u,outputMin:0,outputMax:255,gamma:1===a?.length?[1]:[1,1,1],useGamma:!1});return"percent-clip"===l?m.maxPercent=m.minPercent=T:"standard-deviation"===l&&(m.numberOfStandardDeviations=2),i||null==e.multidimensionalInfo&&!t?.includeStatisticsInStretch||("percent-clip"===l?m.histograms=s:"min-max"!==l&&"standard-deviation"!==l||(m.statistics=r)),m}function E(e,t){if(!t)return e;let n=e.statistics,l=e.histograms;const{multidimensionalInfo:r}=e;if(t&&null!=r){const e=r.variables.find((e=>e.name===t));if(e){const{statistics:t,histograms:a}=e;t?.length&&(n=t),a?.length&&(l=a)}}return a.fromJSON({...e.toJSON(),statistics:n,histograms:l})}function q(e){const t=e.bandCount;if(1===t)return null;if(2===t)return[0];const{bandInfos:n}=e;let a;if(n.length===t){const{red:e,green:t,blue:l,nir:r}=z(n);null!=e&&null!=t&&null!=l?a=[e,t,l]:null!=r&&null!=e&&null!=t&&(a=[r,e,t])}return!a&&t>=3&&(a=[0,1,2]),a}function F(e,t){const n=e.bandInfos.map((({name:e})=>e));return t?.length?t.map((e=>n[e])):n}function z(e){const t={};for(let n=0;n<e.length;n++){const a=e[n],l=a.name.toLowerCase();if("red"===l)t.red=n;else if("green"===l)t.green=n;else if("blue"===l)t.blue=n;else if("nearinfrared"===l||"nearinfrared_1"===l||"nir"===l)t.nir=n;else if(a.maxWavelength&&a.minWavelength){const e=a.minWavelength,l=a.maxWavelength;null==t.blue&&e>=410&&e<=480&&l>=480&&l<=540?t.blue=n:null==t.green&&e>=490&&e<=560&&l>=560&&l<=610?t.green=n:null==t.red&&e>=595&&e<=670&&l>=660&&l<=730?t.red=n:null==t.nir&&e>=700&&e<=860&&l>=800&&l<=950&&(t.nir=n)}}return t}function W(e){let t="percent-clip";const{pixelType:n,dataType:a,histograms:l,statistics:r,multidimensionalInfo:s}=e,i=V.has(a)||"generic"===a&&null!=s;return"u8"!==n||"processed"!==a&&null!=l&&null!=r?"u8"===n||"elevation"===a||i?t="min-max":null!=l?t="percent-clip":null!=r&&(t="min-max"):t="none",t}function N(t,n,a,l){if(!c(t,n))return null;const{attributeTable:s,statistics:i}=t,u=O(s,n),m=D(s,"red"),f=D(s,"green"),p=D(s,"blue"),d=new r,b=[],g=new Set,y=!!(m&&f&&p);if(null!=s)s.features.forEach((t=>{const n=t.attributes[u.name];if(!g.has(t.attributes[u.name])&&null!=n){g.add(n);const a=y&&("single"===m.type||"double"===m.type)&&("single"===f.type||"double"===f.type)&&("single"===p.type||"double"===p.type)&&!s.features.some((e=>e.attributes[m.name]>1||e.attributes[f.name]>1||e.attributes[p.name]>1)),l=a?255:1;b.push(new h({value:t.attributes[u.name],label:t.attributes[u.name]+"",symbol:{type:"simple-fill",style:"solid",outline:null,color:new e(y?[t.attributes[m.name]*l,t.attributes[f.name]*l,t.attributes[p.name]*l,1]:[0,0,0,0])}}))}}));else if(i?.[0])for(let r=i[0].min;r<=i[0].max;r++)b.push(new h({value:r,label:r.toString(),symbol:{type:"simple-fill",style:"solid",outline:null,color:new e([0,0,0,0])}}));if(b.sort(((e,t)=>e.value&&"string"==typeof e.value.valueOf()?0:e.value>t.value?1:-1)),!y){const t=o(I,{numColors:b.length});b.forEach(((n,a)=>n.symbol.color=new e(t[a].slice(1,4)))),d.colorRamp=I}if(a||l){const t=a||o(l,{numColors:b.length}).map((e=>e.slice(1)));b.forEach(((n,a)=>n.symbol.color=new e(t[a]))),d.colorRamp=l}return new C({field:u.name,uniqueValueInfos:b,authoringInfo:d})}function O(e,t,a){let l;return null!=e?(l=t?e.fields.find((e=>t.toLowerCase()===e.name.toLowerCase())):U(e.fields),l||(a||(l=e.fields.find((e=>"string"===e.type))),l||(l=D(e,"value")))):l=new n({name:"value"}),l}function U(e){let t;for(let n=0;n<e.length;n++){const a=e[n].name.toLowerCase();if("string"===e[n].type){if(a.startsWith("class")){t=e[n];break}null==t&&(a.endsWith("name")||a.endsWith("type"))&&(t=e[n])}}return t}function D(e,t){return null==e?null:e.fields.find((e=>e.name.toLowerCase()===t))}function J(e){if(!m(e))return null;let t;const{attributeTable:n,colormap:a}=e;if(null!=n){const e=D(n,"value"),a=O(n,null,!0);"string"===a.type&&(t={},n.features.forEach((n=>{const l=n.attributes;t[l[e.name]]=a?l[a.name]:l[e.name]})))}return w.createFromColormap(a,t)}function A(e,n="traditional"){if(!p(e))return null;const{extent:a}=e,l=a.width*t(a.spatialReference);return new M({hillshadeType:n,scalingType:l>5e6?"adjusted":"none"})}function P(e,t){e=E(e,t?.variableName);const{attributeTable:n}=e;if(!f(e))return null;const a=null!=e.histograms?e.histograms[0]:null,l=null!=t?.numClasses&&isFinite(t?.numClasses)?t.numClasses:5,i=new r({classificationMethod:t?.classificationMethod,colorRamp:t?.colorRamp});let u=t?.field||"value";const m=[],c=[],p=1e3,d=null!=n,h=d&&n.fields.find((e=>"count"===e.name.toLowerCase())),y=d?n.fields.find((e=>e.name.toLowerCase()===u.toLowerCase())):void 0;if(y&&d){u=y.name;const e=n.features.length;let t=0;n.features.forEach((n=>t+=(h?n.attributes[h.name]:50)/e)),n.features.forEach((n=>{const a=n.attributes[y.name],l=h?n.attributes[h.name]:50;if(l>0){c.push(l);const n=Math.max(1,Math.round(l/e/t*p));for(let e=0;e<n;e++)m.push(a)}}))}else{const{pixelType:t}=e,l=(a.max-a.min)/a.size,r=t.includes("s")||t.includes("u"),s=r&&1===l?Math.floor(a.min+.5):a.min,i=r&&1===l?Math.floor(a.max-.5):a.max,o=a.size;let u,f=0;a.counts.forEach((e=>f+=e/o)),a.counts.forEach(((e,t)=>{if(e>0){c.push(e);const r=Math.max(1,Math.round(e/o/f*p));u=d?n.features[t].attributes[y.name]:0===t?s:t===o-1?i:a.min+l*(t+.5);for(let e=0;e<r;e++)m.push(u)}}))}const v=t?.classificationMethod||"natural-breaks";let C=t?.definedInterval;"defined-interval"!==v||C||(C=G(e,y,l));const w=g({values:m,valueFrequency:c,normalizationTotal:null,definition:new b({classificationMethod:v,breakCount:l,definedInterval:C})});let M=t?.colors;if(!M){const e=t?.colorRamp||j;i.colorRamp=e;const n=o(e,{numColors:w.classBreaks.length,interpolateAlpha:!0});M=n.map((e=>e.slice(1)))}const R=w.classBreaks.map(((e,t)=>new s({minValue:e.minValue,maxValue:e.maxValue,label:e.label,symbol:{type:"simple-fill",color:M[t]}})));return new x({field:u,classBreakInfos:R,authoringInfo:i})}function G(e,t,n){let a=0,l=0;if(null!=e.attributeTable){const n=e.attributeTable;a=l=n.features[0].attributes[t.name],n.features.forEach((e=>{const n=e.attributes[t.name];n<a&&(a=n),n>l&&(l=n)}))}else if(null!=e.histograms){const t=e.histograms;a=t[0].min,l=t[0].max}return(l-a)/n}const _=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function H(e){if(!u(e))return null;let t;if(null!=e.statistics&&e.statistics.length&&("vector-magdir"===e.dataType||"vector-uv"===e.dataType)){const{minMagnitude:n,maxMagnitude:a}=Y(e.dataType,e.statistics);t=[{type:"size",field:"Magnitude",minSize:10,maxSize:40,minDataValue:n,maxDataValue:a}]}const n=null!=e.multidimensionalInfo?_.get(e.multidimensionalInfo.variables[0].unit):null,a=new R({visualVariables:t,inputUnit:n,rotationType:"geographic"});return a.visualVariables=[...a.sizeVariables,...a.rotationVariables],a}function K(e){return{color:e.symbolLayers[0].material?.color,type:"esriSFS",style:"esriSFSSolid"}}function Q(e){if("uniqueValue"===e.type){const t=e.uniqueValueInfos,n=t?.[0].symbol;return n?.symbolLayers?.length&&(e.uniqueValueInfos=t?.map((e=>({value:e.value,label:e.label,symbol:e.symbol?K(e.symbol):null})))),e}if("classBreaks"===e.type){const t=e.classBreakInfos,n=t[0].symbol;return n?.symbolLayers?.length&&(e.classBreakInfos=t.map((e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?K(e.symbol):null})))),e}return e}function X(e){if(!d(e))return null;let t;if(null!=e.statistics&&e.statistics.length>0&&("vector-magdir"===e.dataType||"vector-uv"===e.dataType)){const{minMagnitude:n,maxMagnitude:a}=Y(e.dataType,e.statistics);t=[{type:"color",field:"Magnitude",stops:[{value:n,color:"#1020C0"},{value:a,color:"#C02010"}]}]}return new l({visualVariables:t})}function Y(e,t){let n,a;if("vector-magdir"===e)n=t[0].min,a=t[0].max;else{const e=t[0].min,l=t[0].max,r=t[1].min,s=t[1].max;n=0,a=Math.max(Math.abs(e),Math.abs(r),Math.abs(l),Math.abs(s))}return{minMagnitude:n,maxMagnitude:a}}export{P as createClassBreaksRenderer,J as createColormapRenderer,k as createDefaultRenderer,X as createFlowRenderer,A as createShadedReliefRenderer,B as createStretchRenderer,N as createUVRenderer,H as createVectorFieldRenderer,Y as estimateMagnitudeRange,F as getBandNames,O as getClassField,q as getDefaultBandCombination,L as getDefaultInterpolation,G as getDefinedInterval,D as getField,S as getSupportedRendererTypes,E as getVariableRasterInfo,z as getWellKnownBandIndexes,Q as normalizeRendererJSON};
