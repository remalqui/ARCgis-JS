/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../../../Color.js";import a from"../../../Graphic.js";import{neverReached as n}from"../../../core/compilerUtils.js";import i from"../../../core/Logger.js";import{meterIn as r}from"../../support/lengthUtils.js";import{isSizeVariable as t,isValidNumber as s,TransformationType as l,InputValueType as o}from"./sizeVariableUtils.js";const c=i.getLogger("esri.renderers.visualVariables.support.visualVariableUtils"),u=new a,f=Math.PI,d=/^\s*(return\s+)?\$view\.scale\s*(;)?\s*$/i;function p(a,n,i){const r="visualVariables"in a&&a.visualVariables?a.visualVariables.find((e=>"color"===e.type)):a;if(!r)return;if("esri.renderers.visualVariables.ColorVariable"!==r.declaredClass)return void c.warn("The visualVariable should be an instance of esri.renderers.visualVariables.ColorVariable");const t="number"==typeof n,s=t?null:n,l=s&&s.attributes;let o=t?n:null;const u=r.field,{ipData:f,hasExpression:d}=r.cache;let p=r.cache.compiledFunc;if(!u&&!d){const e=r.stops;return e&&e[0]&&e[0].color}if("number"!=typeof o)if(d){if(null==i||null==i.arcade)return void c.error("Use of arcade expressions requires an arcade context");const e={viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference},a=i.arcade.arcadeUtils,n=a.getViewInfo(e),t=a.createExecContext(s,n);if(!p){const e=a.createSyntaxTree(r.valueExpression);p=a.createFunction(e),r.cache.compiledFunc=p}o=a.executeFunction(p,t)}else l&&(o=l[u]);const v=r.normalizationField,b=null!=l&&null!=v?parseFloat(l[v]):void 0;if(null!=o&&(!v||t||!isNaN(b)&&0!==b)){isNaN(b)||t||(o/=b);const a=k(o,f);if(a){const n=a[0],t=a[1],s=n===t?r.stops[n].color:e.blendColors(r.stops[n].color,r.stops[t].color,a[2],null!=i?i.color:void 0);return new e(s)}}}function v(e,a,n){const i="visualVariables"in e&&e.visualVariables?e.visualVariables.find((e=>"opacity"===e.type)):e;if(!i)return;if("esri.renderers.visualVariables.OpacityVariable"!==i.declaredClass)return void c.warn("The visualVariable should be an instance of esri.renderers.visualVariables.OpacityVariable");const r="number"==typeof a,t=r?null:a,s=t&&t.attributes;let l=r?a:null;const o=i.field,{ipData:u,hasExpression:f}=i.cache;let d=i.cache.compiledFunc;if(!o&&!f){const e=i.stops;return e&&e[0]&&e[0].opacity}if("number"!=typeof l)if(f){if(null==n||null==n.arcade)return void c.error("Use of arcade expressions requires an arcade context");const e={viewingMode:n.viewingMode,scale:n.scale,spatialReference:n.spatialReference},a=n.arcade.arcadeUtils,r=a.getViewInfo(e),s=a.createExecContext(t,r);if(!d){const e=a.createSyntaxTree(i.valueExpression);d=a.createFunction(e),i.cache.compiledFunc=d}l=a.executeFunction(d,s)}else s&&(l=s[o]);const p=i.normalizationField,v=null!=s&&null!=p?parseFloat(s[p]):void 0;if(null!=l&&(!p||r||!isNaN(v)&&0!==v)){isNaN(v)||r||(l/=v);const e=k(l,u);if(e){const a=e[0],n=e[1];if(a===n)return i.stops[a].opacity;{const r=i.stops[a].opacity;return r+(i.stops[n].opacity-r)*e[2]}}}}function b(e,a,n){const i="visualVariables"in e&&e.visualVariables?e.visualVariables.find((e=>"rotation"===e.type)):e;if(!i)return;if("esri.renderers.visualVariables.RotationVariable"!==i.declaredClass)return void c.warn("The visualVariable should be an instance of esri.renderers.visualVariables.RotationVariable");const r=i.axis||"heading",t="heading"===r&&"arithmetic"===i.rotationType?90:0,s="heading"===r&&"arithmetic"===i.rotationType?-1:1,l="number"==typeof a?null:a,o=l&&l.attributes,u=i.field,{hasExpression:f}=i.cache;let d=i.cache.compiledFunc,p=0;if(!u&&!f)return p;if(f){if(null==n||null==n.arcade)return void c.error("Use of arcade expressions requires an arcade context");const e={viewingMode:n.viewingMode,scale:n.scale,spatialReference:n.spatialReference},a=n.arcade.arcadeUtils,r=a.getViewInfo(e),t=a.createExecContext(l,r);if(!d){const e=a.createSyntaxTree(i.valueExpression);d=a.createFunction(e),i.cache.compiledFunc=d}p=a.executeFunction(d,t)}else o&&(p=o[u]||0);return p="number"!=typeof p||isNaN(p)?null:t+s*p,p}function h(e,a,n){const i="number"==typeof a,r=i?null:a,t=r&&r.attributes;let l=i?a:null;const{isScaleDriven:u}=e.cache;let f=e.cache.compiledFunc;if(u){const a=null!=n?n.scale:void 0,i=null!=n?n.view:void 0;l=null==a||"3d"===i?m(e):a}else if(!i)switch(e.inputValueType){case o.Expression:{if(null==n||null==n.arcade)return void c.error("Use of arcade expressions requires an arcade context");const a={viewingMode:n.viewingMode,scale:n.scale,spatialReference:n.spatialReference},i=n.arcade.arcadeUtils,t=i.getViewInfo(a),s=i.createExecContext(r,t);if(!f){const a=i.createSyntaxTree(e.valueExpression);f=i.createFunction(a),e.cache.compiledFunc=f}l=i.executeFunction(f,s);break}case o.Field:t&&(l=t[e.field]);break;case o.Unknown:l=null}if(!s(l))return null;if(i||!e.normalizationField)return l;const d=t?parseFloat(t[e.normalizationField]):null;return s(d)&&0!==d?l/d:null}function m(e){let a=null,n=null;const i=e.stops;return i?(a=i[0].value,n=i[i.length-1].value):(a=e.minDataValue||0,n=e.maxDataValue||0),(a+n)/2}function V(e,a,n){const i="visualVariables"in e&&e.visualVariables?e.visualVariables.find((e=>"size"===e.type)):e;if(!i)return;if("esri.renderers.visualVariables.SizeVariable"!==i.declaredClass)return void c.warn("The visualVariable should be an instance of esri.renderers.visualVariables.SizeVariable");const r=C(h(i,a,n),i,a,n,i.cache.ipData);return null==r||isNaN(r)?0:r}function x(e,a,n){return null==e?null:t(e)?V(e,a,n):s(e)?e:null}function y(e,a,n){return s(n)&&e>n?n:s(a)&&e<a?a:e}function w(e,a,n,i){return e+((x(a.minSize,n,i)||a.minDataValue)??0)}function g(e,a,n){const i=e.stops;let r=i&&i.length&&i[0].size;return null==r&&(r=e.minSize),x(r,a,n)}function z(e,a,n,i){const r=(e-a.minDataValue)/(a.maxDataValue-a.minDataValue),t=x(a.minSize,n,i),s=x(a.maxSize,n,i),l=null!=i?i.shape:void 0;if(e<=a.minDataValue)return t;if(e>=a.maxDataValue)return s;if(null==t||null==s)return null;if("area"===a.scaleBy&&l){const e="circle"===l,a=e?f*(t/2)**2:t*t,n=a+r*((e?f*(s/2)**2:s*s)-a);return e?2*Math.sqrt(n/f):Math.sqrt(n)}return t+r*(s-t)}function F(e,a,n,i){const r=null!=i?i.shape:void 0,t=e/a.minDataValue,s=x(a.minSize,n,i),l=x(a.maxSize,n,i);let o=null;return o="circle"===r?2*Math.sqrt(t*(s/2)**2):"square"===r||"diamond"===r||"image"===r?Math.sqrt(t*s**2):t*s,y(o,s,l)}function S(e,a,n,i,r){const[t,s,l]=k(e,r);if(t===s)return x(a.stops?.[t].size,n,i);{const e=x(a.stops?.[t].size,n,i);return e+(x(a.stops?.[s].size,n,i)-e)*l}}function E(e,a,n,i){const t=(null!=i&&i.resolution?i.resolution:1)*r[a.valueUnit],s=x(a.minSize,n,i),l=x(a.maxSize,n,i),{valueRepresentation:o}=a;let c=null;return c="area"===o?2*Math.sqrt(e/f)/t:"radius"===o||"distance"===o?2*e/t:e/t,y(c,s,l)}function U(e){return e}function C(e,a,n,i,r){switch(a.transformationType){case l.Additive:return w(e,a,n,i);case l.Constant:return g(a,n,i);case l.ClampedLinear:return z(e,a,n,i);case l.Proportional:return F(e,a,n,i);case l.Stops:return S(e,a,n,i,r);case l.RealWorldSize:return E(e,a,n,i);case l.Identity:return U(e);case l.Unknown:return null}}function D(e,a,n){const{isScaleDriven:i}=e.cache;if(!(i&&"3d"===n||a))return null;const r={scale:a,view:n};let t=x(e.minSize,u,r),s=x(e.maxSize,u,r);if(null!=t||null!=s){if(t>s){const e=s;s=t,t=e}return{minSize:t,maxSize:s}}}function M(e,a,n){if(!e.visualVariables)return;const i=[],r=[],t=[],s=[],l=[];for(const o of e.visualVariables)switch(o.type){case"color":r.push(o);break;case"opacity":t.push(o);break;case"rotation":l.push(o);break;case"size":s.push(o)}return r.forEach((e=>{const r=p(e,a,n);i.push({variable:e,value:r})})),t.forEach((e=>{const r=v(e,a,n);i.push({variable:e,value:r})})),l.forEach((e=>{const r=b(e,a,n);i.push({variable:e,value:r})})),s.forEach((e=>{const r=V(e,a,n);i.push({variable:e,value:r})})),i.filter((e=>null!=e.value))}function k(e,a){if(!a)return;let n=0,i=a.length-1;return a.some(((a,r)=>e<a?(i=r,!0):(n=r,!1))),[n,i,(e-a[n])/(a[i]-a[n])]}function N(e,a,i){const r=["proportional","proportional","proportional"];for(const t of e){const e=t.useSymbolValue?"symbol-value":V(t,a,i);switch(t.axis){case"width":r[0]=e;break;case"depth":r[1]=e;break;case"height":r[2]=e;break;case"width-and-depth":r[0]=e,r[1]=e;break;case"all":case void 0:case null:r[0]=e,r[1]=e,r[2]=e;break;default:n(t.axis)}}return r}export{N as getAllSizes,p as getColor,v as getOpacity,b as getRotationAngle,V as getSize,C as getSizeForValue,x as getSizeFromNumberOrVariable,D as getSizeRangeAtScale,M as getVisualVariableValues,d as viewScaleRE};
