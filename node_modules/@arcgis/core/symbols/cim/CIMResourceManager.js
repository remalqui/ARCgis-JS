/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../../request.js";import t from"../../core/Error.js";import{loadFont as r}from"../../core/fontUtils.js";import{isAbortError as i}from"../../core/promiseUtils.js";import{base64ToArrayBuffer as s}from"../../support/base64Utils.js";import{isAnimatedPNG as o,parseApng as n}from"../../views/2d/engine/webgl/animatedFormats/apng.js";import{isAnimatedGIF as a,parseGif as c}from"../../views/2d/engine/webgl/animatedFormats/gif.js";class h{constructor(){this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}destroy(){this._inFlightResourceMap.clear(),this._resourceMap.clear()}getResource(e){return this._resourceMap.get(e)??null}async fetchResource(e,t){const r=this._resourceMap.get(e);if(r)return{width:r.width,height:r.height};let i=this._inFlightResourceMap.get(e);return i?i.then((e=>({width:e.width,height:e.height}))):(i=l(e,t),this._inFlightResourceMap.set(e,i),i.then((t=>(this._inFlightResourceMap.delete(e),this._resourceMap.set(e,t),{width:t.width,height:t.height})),(()=>({width:0,height:0}))))}deleteResource(e){this._inFlightResourceMap.delete(e),this._resourceMap.delete(e)}loadFont(e){return r(e)}}async function u(r,s){const o=window.URL.createObjectURL(r);try{const{data:t}=await e(o,{...s,responseType:"image"});return t}catch(n){if(!i(n))throw new t("mapview-invalid-resource",`Could not fetch requested resource at ${o}`);throw n}finally{window.URL.revokeObjectURL(o)}}async function l(e,t){const{arrayBuffer:r,mediaType:i}=await p(e,t),s="image/png"===i;if("image/gif"===i&&a(r))return c(r);if(s&&o(r))return n(r,t);return u(new Blob([r],{type:i}),t)}async function p(r,o){let n;const a=";base64,";if(r.includes(a)){const e=r.indexOf(a),t=r.indexOf(a)+a.length,i=r.substring(t);n={arrayBuffer:s(i),mediaType:r.substring(0,e).replace("data:","")}}else try{const t=await e(r,{responseType:"array-buffer",...o}),i=t.data;n={arrayBuffer:i,mediaType:t.getHeader("Content-Type")}}catch(c){if(!i(c))throw new t("mapview-invalid-resource",`Could not fetch requested resource at ${r}`)}return n}export{h as default};
