/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{px2pt as e,pt2px as t}from"../../core/screenUtils.js";import{OverrideHelper as i,CIMSymbolHelper as l}from"../cim/CIMSymbolHelper.js";import{CIMSymbolRasterizer as r,GeometryStyle as n}from"../cim/CIMSymbolRasterizer.js";import{mapCIMSymbolToGeometryType as o}from"../cim/utils.js";import{SymbolSizeDefaults as a}from"./previewUtils.js";import{renderSymbol as s}from"./renderUtils.js";const c=new r(null,!0),h=e(a.size),m=e(a.maxSize),u=e(a.lineWidth),f=1;function y(e){const t=e?.size;if("number"==typeof t)return{width:t,height:t};return{width:null!=t&&"object"==typeof t&&"width"in t?t.width:null,height:null!=t&&"object"==typeof t&&"height"in t?t.height:null}}async function d(e,r={}){const{node:a,opacity:d,symbolConfig:g}=r,p=null!=g&&"object"==typeof g&&"isSquareFill"in g&&g.isSquareFill,w=r.cimOptions||r,b=w.geometryType||o(e?.data?.symbol),M=y(r),{feature:j,fieldMap:v}=w;if(null==M.width||null==M.height){const t=await i.resolveSymbolOverrides(e.data,j,null,v,b);if(!t)return null;(e=e.clone()).data={type:"CIMSymbolReference",symbol:t},e.data.primitiveOverrides=void 0;const r=[];l.fetchResources(t,c.resourceManager,r),l.fetchFonts(t,c.resourceManager,r),r.length>0&&await Promise.all(r);const n=l.getEnvelope(t,null,c.resourceManager),o=n?.width,a=n?.height;M.width="esriGeometryPolygon"===b?h:"esriGeometryPolyline"===b?u:null!=o&&isFinite(o)?Math.min(o,m):h,M.height="esriGeometryPolygon"===b?h:null!=a&&isFinite(a)?Math.max(Math.min(a,m),f):h}const S=await c.rasterizeCIMSymbolAsync(e,j,M,p||"esriGeometryPolygon"!==b?n.Preview:n.Legend,v,b);if(!S)return null;const{width:C,height:L}=S,I=document.createElement("canvas");I.width=C,I.height=L;I.getContext("2d").putImageData(S,0,0);const P=t(M.width),x=t(M.height),z=new Image(P,x);z.src=I.toDataURL(),z.ariaLabel=r.ariaLabel??null,z.alt=r.ariaLabel??"",null!=d&&(z.style.opacity=`${d}`);let F=z;if(null!=r.effectView){const e={shape:{type:"image",x:0,y:0,width:P,height:x,src:z.src},fill:null,stroke:null,offset:[0,0]};F=s([[e]],[P,x],{effectView:r.effectView,ariaLabel:r.ariaLabel})}return a&&F&&a.appendChild(F),F}export{d as previewCIMSymbol};
