/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{sqlAnd as e}from"../../core/sql.js";import{getJsonType as r}from"../../geometry/support/jsonUtils.js";import{getScale as t}from"../../geometry/support/scaleUtils.js";import{getLayerFloorFilterClause as i}from"../../layers/support/floorFilterUtils.js";import{isExportDynamic as n}from"../../layers/support/sublayerUtils.js";const s=e=>e.spatialReference.wkid||JSON.stringify(e.spatialReference);function l(e,t){const{dpi:i,gdbVersion:n,geometry:l,geometryPrecision:a,height:f,layerOption:p,mapExtent:m,maxAllowableOffset:y,returnFieldName:u,returnGeometry:c,returnUnformattedValues:d,returnZ:g,spatialReference:x,timeExtent:b,tolerance:h,width:E}=e.toJSON(),{dynamicLayers:O,layerDefs:S,layerIds:N}=o(e),j=t&&null!=t.geometry?t.geometry:null,J={geometryPrecision:a,maxAllowableOffset:y,returnFieldName:u,returnGeometry:c,returnUnformattedValues:d,returnZ:g,tolerance:h},R=j&&j.toJSON()||l;if(J.imageDisplay=`${E},${f},${i}`,n&&(J.gdbVersion=n),R&&(delete R.spatialReference,J.geometry=JSON.stringify(R),J.geometryType=r(R)),x?J.sr=x.wkid||JSON.stringify(x):R&&R.spatialReference?J.sr=s(R):m&&m.spatialReference&&(J.sr=s(m)),J.time=b?[b.start,b.end].join(","):null,m){const{xmin:e,ymin:r,xmax:t,ymax:i}=m;J.mapExtent=`${e},${r},${t},${i}`}return S&&(J.layerDefs=S),O&&!S&&(J.dynamicLayers=O),J.layers="popup"===p?"visible":p,N&&!O&&(J.layers+=`:${N.join(",")}`),J}function o(e){const{mapExtent:r,floors:s,width:l,sublayers:o,layerIds:f,layerOption:p,gdbVersion:m}=e,y=o?.find((e=>null!=e.layer))?.layer?.serviceSublayers,u="popup"===p,c={},d=t({extent:r,width:l,spatialReference:r?.spatialReference}),g=[],x=e=>{const r=0===d,t=0===e.minScale||d<=e.minScale,i=0===e.maxScale||d>=e.maxScale;if(e.visible&&(r||t&&i))if(e.sublayers)e.sublayers.forEach(x);else{if(!1===f?.includes(e.id)||u&&(!e.popupTemplate||!e.popupEnabled))return;g.unshift(e)}};if(o?.forEach(x),o&&!g.length)c.layerIds=[];else{const e=n(g,y,m),r=g.map((e=>{const r=i(s,e);return e.toExportImageJSON(r)}));if(e)c.dynamicLayers=JSON.stringify(r);else{if(o){let e=g.map((({id:e})=>e));f&&(e=e.filter((e=>f.includes(e)))),c.layerIds=e}else f?.length&&(c.layerIds=f);const e=a(s,g);if(null!=e&&e.length){const r={};for(const t of e)t.definitionExpression&&(r[t.id]=t.definitionExpression);Object.keys(r).length&&(c.layerDefs=JSON.stringify(r))}}}return c}function a(r,t){const n=!!r?.length,s=t.filter((e=>null!=e.definitionExpression||n&&null!=e.floorInfo));return s.length?s.map((t=>{const n=i(r,t),s=e(n,t.definitionExpression);return{id:t.id,definitionExpression:s??void 0}})):null}export{l as identifyToIdentifyRESTParameters,o as toDynamicLayersJSON};
