/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import{createTask as e}from"../../core/asyncUtils.js";import t from"../../core/Handles.js";import{applySome as i,abortMaybe as n,destroyMaybe as a}from"../../core/maybe.js";import{throwIfAborted as r,isAbortError as o,isAborted as l}from"../../core/promiseUtils.js";import{watch as c,sync as h,syncAndInitial as y,whenOnce as w}from"../../core/reactiveUtils.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as _}from"../../core/accessorSupport/decorators/subclass.js";import{InteractiveToolViewModel as u}from"./InteractiveToolViewModel.js";var V;!function(s){s[s.PENDING=0]="PENDING",s[s.WAIT_FOR_VIEW_READY=1]="WAIT_FOR_VIEW_READY",s[s.RUNNING=2]="RUNNING"}(V||(V={}));let d=class extends u{constructor(s={}){super(s),this.analysisView=null,this._reconnectViewTask=null,this._analysisBaseHandles=new t,this._parentChangeFromReconnect=!1,this._startUserOperation=null;const e=s?.analysis;null!=e?this.analysis=e:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0))}normalizeCtorArgs(s){const{analysis:e,...t}=s;return t}initialize(){this._analysisBaseHandles.add([c((()=>i(this.analysis,(({parent:s})=>s))),(s=>{this._parentChangeFromReconnect||s===this.view||this._set("isAnalysisOwner",!1);const e=!this._parentChangeFromReconnect;this._parentChangeFromReconnect=!1,e&&this._scheduleViewReconnect()}),h),c((()=>({view:this.view,ready:null!=this.view&&this.view.ready,supported:this.supported})),(({view:s},e)=>{const t=e?.view;s!==t&&(this._startUserOperation=n(this._startUserOperation),this._disconnectFromView(t)),this._scheduleViewReconnect()}),y),c((()=>this.analysis.isEditable),((s,e)=>{null!=this.analysisView&&(s&&!e&&null==this.tool?this.createTool():s||!e||null==this.tool||this.tool.active||this.removeTool())}))])}destroy(){this._analysisBaseHandles=a(this._analysisBaseHandles),this._reconnectViewTask=n(this._reconnectViewTask),this._startUserOperation=n(this._startUserOperation),null!=this.analysisView&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),null!=this.analysis&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}set analysis(s){s!==this._get("analysis")&&(this._startUserOperation=n(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(s),this._scheduleViewReconnect())}get ready(){return null!=this.analysisView&&!this.connectingToView}get connectingToView(){return null!=this._reconnectViewTask}get isAnalysisOwner(){return this._get("isAnalysisOwner")}set visible(s){this._set("visible",s),null!=this.analysisView&&(this.analysisView.visible=s)}async start(){this.clear();const s={task:null,abort:null,state:V.PENDING},t=e((async e=>{s.state=V.WAIT_FOR_VIEW_READY,await w((()=>this.ready),e),s.state=V.RUNNING,this.createTool({interactive:!0})}));return s.task=t,s.abort=()=>t.abort(),this._startUserOperation=s,t.promise}clear(){this._startUserOperation=n(this._startUserOperation),this.removeTool(),this.analysis.clear()}onConnectToAnalysisView(s){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=n(this._reconnectViewTask);const s=e((async e=>{try{await this._reconnectView(e)}catch(t){if(r(e),!o(t))return void this.logger.warn("Failed to use analysis in view model",t);throw t}finally{s===this._reconnectViewTask&&(this._reconnectViewTask=null)}}));this._reconnectViewTask=s}async _reconnectView(s){const{view:e}=this,t=null!=e&&e.ready&&this.supported,i=this.analysis;if(this._startUserOperation=m(this._startUserOperation),this._disconnectFromView(e),t&&null!=e&&null!=i){if(this.isAnalysisOwner){if(null!=i.parent)return void this.logError("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,e.analyses.add(i)}this.analysisView=await e.whenAnalysisView(i),l(s)?this._startUserOperation=m(this._startUserOperation):(this.analysisView.visible=this.visible,this.onConnectToAnalysisView(this.analysisView),this.createTool())}}_disconnectFromView(s){this.removeTool(),null!=s&&this.isAnalysisOwner&&(this._parentChangeFromReconnect=!0,s.analyses.remove(this.analysis),this.analysis.clear()),this.analysisView=null,this.onDisconnectFromAnalysisView()}_setExternalAnalysis(s){null==this.analysisView||this.isAnalysisOwner||(this.analysisView.visible=!0),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",s),this._parentChangeFromReconnect=!1}get testInfo(){return{analysisView:this.analysisView}}};function m(s){return null!=s&&s.state>=V.RUNNING?(s.abort(),null):s}s([p({nonNullable:!0})],d.prototype,"analysis",null),s([p()],d.prototype,"analysisView",void 0),s([p()],d.prototype,"ready",null),s([p()],d.prototype,"connectingToView",null),s([p({readOnly:!0})],d.prototype,"isAnalysisOwner",null),s([p({type:Boolean,value:!0})],d.prototype,"visible",null),s([p()],d.prototype,"_reconnectViewTask",void 0),d=s([_("esri.widgets.support.InteractiveAnalysisViewModel")],d);export{d as InteractiveAnalysisViewModel};
