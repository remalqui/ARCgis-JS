/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../symbols.js";import t from"../../../core/Collection.js";import o from"../../../core/Evented.js";import s from"../../../core/Handles.js";import{destroyMaybe as i}from"../../../core/maybe.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import n from"../../../layers/GraphicsLayer.js";import c from"../../Sketch/SketchViewModel.js";import{updateSelection as a}from"./selectorUtils.js";import p from"../../../symbols/SimpleFillSymbol.js";import h from"../../../symbols/SimpleLineSymbol.js";import d from"../../../symbols/SimpleMarkerSymbol.js";let m=class extends o.EventedAccessor{constructor({candidates:e,options:o,view:i}){super(),this._activeOptions=null,this._dashedFillSymbol=new p({color:[0,0,0,0],outline:{style:"dash",color:[12,207,255],width:2}}),this._dashedLineSymbol=new h({style:"dash",color:[12,207,255],width:2}),this._defaultOptions={createTool:"rectangle",createOptions:void 0,selectionOptions:{overlaps:!0,intersects:!0,contains:!1}},this._completed=!1,this._handles=new s,this._sketchViewModel=new c,this._sketchGraphicsLayer=new n({listMode:"hide",internal:!0}),this._transparentPointSymbol=new d({color:[0,0,0,0],outline:{style:"none",width:0}}),this.candidates=null,this.geometry=null,this.options=null,this.selection=new t,this.view=null,this.candidates=e,this.options=o,this.view=i;const{_dashedFillSymbol:r,_dashedLineSymbol:l,_sketchViewModel:a,_sketchGraphicsLayer:m,_transparentPointSymbol:y}=this;a.set({layer:m,view:this.view,activePointSymbol:y,activeLineSymbol:l,activeVertexSymbol:y,activeFillSymbol:r,pointSymbol:y,polygonSymbol:r,polylineSymbol:l,vertexSymbol:y}),this._handles.add([a.on("create",(e=>this._onSketchEvent(e))),a.on(["undo","redo"],(e=>this._onSketchEvent(e)))])}initialize(){this._load()}destroy(){this._handles=i(this._handles)}get state(){const{_completed:e,_sketchViewModel:{state:t}}=this;return e?"complete":"active"===t?"active":"disabled"}cancel(){return this._sketchViewModel.cancel()}async _load(){await(this.view?.whenReady());const{options:e}=this,{createTool:t,createOptions:o}=this._activeOptions={...this._defaultOptions,...e};this._sketchViewModel.create(t,o)}_onSketchEvent(e){const t="create"===e.type?e.graphic:e.graphics[0],o=t?.geometry||null,s="create"===e.type&&"cancel"===e.state,i="create"===e.type&&"complete"===e.state;this._processSelectionGeometry(o,i,s)}_processSelectionGeometry(e,t,o){if(this._set("geometry",e),(t||o)&&(this._completed=!0),o)return void this._onComplete([],!0);const{_activeOptions:s,candidates:i,selection:r,view:l}=this;a({selector:e,candidates:i,currentSelection:r,options:s.selectionOptions,view:l}).then((({added:e,removed:o})=>{t?this._onComplete(this.selection.toArray(),!1):(e.length||o.length)&&this.emit("selection-change",{added:e,removed:o,type:"selection-change"})}))}_onComplete(e,t){this._handles.removeAll(),this.notifyChange("state"),this.emit("complete",{aborted:t,selection:e,type:"complete"})}};e([r()],m.prototype,"_completed",void 0),e([r()],m.prototype,"candidates",void 0),e([r({readOnly:!0})],m.prototype,"geometry",void 0),e([r()],m.prototype,"options",void 0),e([r({readOnly:!0})],m.prototype,"selection",void 0),e([r({readOnly:!0})],m.prototype,"state",null),e([r({value:null})],m.prototype,"view",void 0),m=e([l("esri.widgets.support.Selector2D.SelectionOperation2D")],m);const y=m;export{y as default};
