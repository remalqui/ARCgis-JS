/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import e from"../../core/Evented.js";import t from"../../core/Handles.js";import{destroyMaybe as r,applySome as s}from"../../core/maybe.js";import{when as i,watch as n}from"../../core/reactiveUtils.js";import{property as c}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";var l;const p=Symbol("anchorHandles");let d=class extends e.EventedAccessor{constructor(o){super(o),this[l]=new t,this.location=null,this.screenLocationEnabled=!1,this.view=null,this[p].add([i((()=>s(this.screenLocationEnabled?this.view:null,(o=>[o.size,"3d"===o.type?o.camera:o.viewpoint]))),(()=>this.notifyChange("screenLocation"))),n((()=>this.screenLocation),((o,e)=>{null!=o&&null!=e&&this.emit("view-change")}))])}destroy(){this.view=null,this[p]=r(this[p])}get screenLocation(){const{location:o,view:e,screenLocationEnabled:t}=this;return t&&null!=o&&null!=e&&e.ready?e.toScreen?.(o):null}};l=p,o([c()],d.prototype,"location",void 0),o([c()],d.prototype,"screenLocation",null),o([c()],d.prototype,"screenLocationEnabled",void 0),o([c()],d.prototype,"view",void 0),d=o([a("esri.widgets.support.AnchorElementViewModel")],d);const m=d;export{m as default};
