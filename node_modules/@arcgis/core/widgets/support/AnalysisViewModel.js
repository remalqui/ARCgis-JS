/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../core/Accessor.js";import{createTask as t}from"../../core/asyncUtils.js";import i from"../../core/Logger.js";import{applySome as n,abortMaybe as r,removeMaybe as a}from"../../core/maybe.js";import{throwIfAborted as o,isAbortError as l,isAborted as c}from"../../core/promiseUtils.js";import{watch as h,syncAndInitial as p,sync as y,whenOnce as w,when as u}from"../../core/reactiveUtils.js";import{property as d}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as _}from"../../core/accessorSupport/decorators/subclass.js";var v;!function(e){e[e.PENDING=0]="PENDING",e[e.WAIT_FOR_VIEW_READY=1]="WAIT_FOR_VIEW_READY",e[e.RUNNING=2]="RUNNING"}(v||(v={}));let V=class extends s{constructor(e={}){super(e),this.view=null,this.analysisView=null,this._reconnectViewTask=null,this._forceInteractiveHandle=null,this._parentChangeFromReconnect=!1,this._startUserOperation=null,this.logger=i.getLogger(this);const s=e?.analysis;null!=s?this.analysis=s:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0)),e&&null!=e.visible&&(this.visible=e.visible)}normalizeCtorArgs(e){const{analysis:s,...t}=e;return t}initialize(){this.addHandles([h((()=>({readyAndNotSupported:null!=this.view&&this.view.ready&&!this.supported})),(({readyAndNotSupported:e})=>{e&&this.logger.errorOnce(this.unsupportedErrorMessage)}),p),h((()=>n(this.analysis,(({parent:e})=>e))),(e=>{this._parentChangeFromReconnect||e===this.view||this._set("isAnalysisOwner",!1);const s=!this._parentChangeFromReconnect;this._parentChangeFromReconnect=!1,s&&this._scheduleViewReconnect()}),y),h((()=>({view:this.view,ready:null!=this.view&&this.view.ready,supported:this.supported})),(({view:e},s)=>{const t=s?.view;e!==t&&(this._startUserOperation=r(this._startUserOperation),this._disconnectFromView(t)),this._scheduleViewReconnect()}),p)])}destroy(){this._reconnectViewTask=r(this._reconnectViewTask),this._startUserOperation=r(this._startUserOperation),null!=this.analysisView&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),this._set("view",null),null!=this.analysis&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}get supported(){return null==this.view||this.view.type===this.supportedViewType}set visible(e){this._set("visible",e),null!=this.analysisView&&(this.analysisView.visible=e)}get active(){return null!=this.tool&&this.tool.active}get disabled(){return null==this.view||!this.view.ready||!this.supported}set analysis(e){e!==this._get("analysis")&&(this._startUserOperation=r(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(e),this._scheduleViewReconnect())}get ready(){return null!=this.analysisView&&!this.connectingToView}get connectingToView(){return null!=this._reconnectViewTask}get isAnalysisOwner(){return this._get("isAnalysisOwner")}get tool(){return null!=this.analysisView?this.analysisView.tool:null}clear(){this._startUserOperation=r(this._startUserOperation),this._resetInteractiveCreationState(),null!=this.tool&&null!=this.view&&this.view.activeTool===this.tool&&(this.view.activeTool=null)}async start(){this.clear();const e={task:null,abort:null,state:v.PENDING},s=t((async s=>{if(e.state=v.WAIT_FOR_VIEW_READY,await w((()=>this.ready),s),e.state=v.RUNNING,null==this.analysisView||null==this.view)return;const t=this.analysisView.tool;null!=t&&(this.view.activeTool=t,u((()=>t.created),(()=>{t.active&&null!=this.view&&(this.view.activeTool=null)}),{initial:!0,once:!0}))}));return e.task=s,e.abort=()=>s.abort(),this._startUserOperation=e,s.promise}onConnectToAnalysisView(e){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=r(this._reconnectViewTask);const e=t((async s=>{try{await this._reconnectView(s)}catch(t){if(o(s),!l(t))return void this.logger.warn("Failed to use analysis in view model",t);throw t}finally{e===this._reconnectViewTask&&(this._reconnectViewTask=null)}}));this._reconnectViewTask=e}async _reconnectView(e){const{view:s}=this,t=null!=s&&s.ready&&this.supported,i=this.analysis;if(this._startUserOperation=m(this._startUserOperation),this._disconnectFromView(s),t&&null!=s&&null!=i){if(this.isAnalysisOwner){if(null!=i.parent)return void this.logger.errorOnce("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,s.analyses.add(i)}this.analysisView=await s.whenAnalysisView(i),c(e)?this._startUserOperation=m(this._startUserOperation):(this.analysisView.visible=this.visible,this._forceInteractiveHandle=this.analysisView.forceInteractiveForViewModel(),this.addHandles(this._forceInteractiveHandle),this.onConnectToAnalysisView(this.analysisView))}}_disconnectFromView(e){null!=e&&this.isAnalysisOwner&&e.analyses.includes(this.analysis)&&(this._parentChangeFromReconnect=!0,this.analysis.clear(),e.analyses.remove(this.analysis)),this.onDisconnectFromAnalysisView(),this._forceInteractiveHandle=a(this._forceInteractiveHandle),this.analysisView=null}_setExternalAnalysis(e){null==this.analysisView||this.isAnalysisOwner||(this.analysisView.visible=void 0,this._forceInteractiveHandle=a(this._forceInteractiveHandle)),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",e),this._parentChangeFromReconnect=!1}_resetInteractiveCreationState(){this.analysis.clear(),null!=this.tool&&this.tool.resetCreated()}get testInfo(){return{analysisView:this.analysisView}}};function m(e){return null!=e&&e.state>=v.RUNNING?(e.abort(),null):e}e([d()],V.prototype,"supported",null),e([d()],V.prototype,"view",void 0),e([d({type:Boolean,value:!0})],V.prototype,"visible",null),e([d()],V.prototype,"active",null),e([d()],V.prototype,"disabled",null),e([d({nonNullable:!0})],V.prototype,"analysis",null),e([d()],V.prototype,"analysisView",void 0),e([d()],V.prototype,"ready",null),e([d()],V.prototype,"connectingToView",null),e([d({readOnly:!0})],V.prototype,"isAnalysisOwner",null),e([d()],V.prototype,"_reconnectViewTask",void 0),e([d()],V.prototype,"_forceInteractiveHandle",void 0),e([d()],V.prototype,"tool",null),V=e([_("esri.widgets.support.AnalysisViewModel")],V);export{V as AnalysisViewModel};
