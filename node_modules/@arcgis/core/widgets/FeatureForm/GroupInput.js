/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{deprecated as e}from"../../core/deprecate.js";import s from"../../core/Logger.js";import{applySome as i}from"../../core/maybe.js";import{watch as r}from"../../core/reactiveUtils.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{isFieldInput as n}from"./featureFormUtils.js";import l from"./InputBase.js";const a="esri.widgets.FeatureForm.GroupInput",u=s.getLogger(a);let m=class extends l{constructor(t){super(t),this._expressionTrackingHandles=new Map,this.type="group"}initialize(){this.addHandles([r((()=>[this.visible,this.inputs]),(([t])=>{const{inputs:e}=this,s=!!t&&void 0;for(const i of e)n(i)&&(i.required=s)}),{initial:!0,equals:(t,e)=>e[0]===t[0]&&e[1]===t[1]})])}destroy(){for(const t of this._expressionTrackingHandles.values())t.remove()}set inputFields(t){e(u,"Property: GroupInput.inputFields",{replacement:"GroupInput.inputs",version:"4.27"}),this.inputs=t}get inputFields(){return e(u,"Property: GroupInput.inputFields",{replacement:"GroupInput.inputs",version:"4.27"}),this.inputs}get inputs(){return this._get("inputs")}set inputs(t){this.handles.removeAll(),t&&this.handles.add(t.map((t=>r((()=>t.visible),(()=>this._dirtyEvaluatedVisibilityExpression()))))),this._set("inputs",t)}get label(){return this.element.label}set label(t){i(this.element,(e=>{e.label=t}))}get state(){return this.element.initialState||"expanded"}set state(t){this._overrideIfSome("state",t)}get visible(){return!1!==this.evaluatedVisibilityExpression&&this.inputs&&this.inputs.some((t=>t.visible))}_dirtyEvaluatedVisibilityExpression(){const{element:t}=this;t.visibilityExpression&&this.notifyChange("evaluatedVisibilityExpression")}};t([o()],m.prototype,"inputs",null),t([o()],m.prototype,"label",null),t([o()],m.prototype,"state",null),t([o({readOnly:!0})],m.prototype,"type",void 0),t([o()],m.prototype,"visible",null),m=t([p(a)],m);const c=m;export{c as default};
