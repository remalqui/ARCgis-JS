/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import{createTask as e}from"../core/asyncUtils.js";import{destroyMaybe as i,applySome as s,abortMaybe as r}from"../core/maybe.js";import{memoize as n}from"../core/memoize.js";import{createAbortError as o}from"../core/promiseUtils.js";import{watch as a,initial as l}from"../core/reactiveUtils.js";import{property as h}from"../core/accessorSupport/decorators/property.js";import"../core/accessorSupport/ensureType.js";import"../core/arrayUtils.js";import"../core/has.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";import d from"./Widget.js";import{CSS as p}from"./ElevationProfile/css.js";import u from"./ElevationProfile/ElevationProfileViewModel.js";import m from"./ElevationProfile/ElevationProfileVisibleElements.js";import{Legend as _}from"./ElevationProfile/components/Legend.js";import{SettingsButton as C}from"./ElevationProfile/components/SettingsButton.js";import{createChart as v}from"./ElevationProfile/support/chartUtils.js";import{ElevationProfileErrorState as g,getConfig as f,ElevationProfileState as y}from"./ElevationProfile/support/constants.js";import{onResize as w}from"./support/widgetUtils.js";import{messageBundle as b}from"./support/decorators/messageBundle.js";import{tsx as k}from"./support/jsxFactory.js";var S;!function(t){t.Sketch="sketch",t.SketchCancel="sketch-cancel",t.SketchDone="sketch-done",t.Select="select",t.SelectCancel="select-cancel"}(S||(S={}));const B=[{type:S.Select},{type:S.Sketch}],M={[g.None]:null,[g.NoValidInput]:"noProfile",[g.NoVisibleProfiles]:"noProfile",[g.RefinedButNoChartData]:"noProfile",[g.TooComplex]:"tooComplex",[g.UnknownError]:"unknown",[g.InvalidGeometry]:"invalidGeometry",[g.InvalidElevationInfo]:"invalidElevationInfo"},P=Symbol("resize-observer-handle");let E=class extends d{constructor(t,e){super(t,e),this.viewModel=null,this.visibleElements=new m,this.iconClass=p.widgetIcon,this.icon=null,this.messages=null,this.messagesCommon=null,this.messagesUnits=null,this._chartContainer=null,this._chart=null,this._chartInitTask=null,this._chartIsRefined=!1,this._width=0,this._zoomOutButtonVisible=!1,this._getChartUpdateParamsMemoized=n(((t,e,i,s)=>({chart:t,data:e,stationary:i,messages:s}))),this._getDetailsPropsMemoized=n(((t,e)=>({effectiveUnits:t,profiles:e}))),t?.viewModel||(this._defaultViewModel=new u({view:t?.view}),this.viewModel=this._defaultViewModel)}initialize(){this._legend=new _(this._legendProps),this._settingsButton=new C(this._settingsButtonProps),this.addHandles([a((()=>this._legendProps),(t=>this._legend.set(t))),a((()=>this._settingsButtonProps),(t=>this._settingsButton.set(t)))])}postInitialize(){this.addHandles([a((()=>({container:this._chartContainer,width:this._width})),(({container:t,width:e})=>{this._destroyChart(),null!=t&&e>0&&this._initializeChart(t)}),l),a((()=>this._chartUpdateParams),(()=>this._updateChart(this._chartUpdateParams)),l)])}destroy(){this._destroyChart(),null!=this._defaultViewModel&&this.viewModel!==this._defaultViewModel&&this._defaultViewModel.destroy(),this._legend=i(this._legend),this._settingsButton=i(this._settingsButton)}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get input(){return this.viewModel.input}set input(t){this.viewModel.input=t}get profiles(){return this.viewModel.profiles}set profiles(t){this.viewModel.profiles=t}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}get geodesicDistanceThreshold(){return this.viewModel.geodesicDistanceThreshold}set geodesicDistanceThreshold(t){this.viewModel.geodesicDistanceThreshold=t}get label(){return this.messages?.widgetLabel??""}set label(t){this._overrideIfSome("label",t)}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get _portrait(){return this._width<f().portraitModePixelBreakpoint}get _chartUpdateParams(){const t=this.view;return this._getChartUpdateParamsMemoized(this._chart,this.viewModel.chartData,null==t||t.stationary,this._chartMessages)}get _chartMessages(){return{...this.messagesUnits,...this.messages}}get _legendProps(){return this._getDetailsPropsMemoized(this.viewModel.effectiveUnits,this._profilesArray)}get _profilesArray(){return this.profiles.toArray()}get _settingsButtonProps(){return{viewModel:this.viewModel,visibleElements:this.visibleElements}}render(){const{viewModel:t,visible:e}=this;return k("div",{key:this,class:this.classes({[p.base]:e,[p.esriWidget]:e,[p.esriWidgetDisabled]:e&&"disabled"===t.state,[p.portrait]:this._portrait,[p.refined]:1===t.progress}),"aria-label":this.messages.widgetLabel},k("div",{key:"content-wrapper",bind:this,afterCreate:this._onContentWrapperAfterCreate,afterRemoved:this._onContentWrapperRemoved},e&&this._renderContentForState()))}_renderContentForState(){switch(this.viewModel.state){case y.Ready:return this._renderContentForReadyState();case y.Selecting:return this._renderContentForSelectingState();case y.Creating:return this._renderContentForCreatingState();case y.Selected:return this._renderContentForSelectedState();case y.Created:return this._renderContentForCreatedState();case y.Disabled:return this._renderContentForReadyState()}}_renderContentForReadyState(){const{sketchButton:t,selectButton:e}=this.visibleElements,i=this.messages;let s;return s=t&&e?i.readyPrompt:t?i.readyPromptCreateOnly:e?i.readyPromptSelectOnly:i.errors?.noProfile,this._renderContent({prompt:s,chart:!1,actions:B})}_renderContentForSelectingState(){const t=this.view;if(null==t)return null;const e=this.messages[`selectingPrompt-${t.type}`];return this._renderContent({prompt:e,chart:!1,actions:[{type:S.SelectCancel}]})}_renderContentForCreatingState(){const{view:t,viewModel:e}=this;if(null==t)return null;const i=e.hasVertices?[{type:S.SketchCancel},{type:S.SketchDone,disabled:!e.tool.interaction.canStopCreating}]:[{type:S.Select},{type:S.Sketch,disabled:!0}];if(e.errorState===g.NoValidInput){const e=this.messages[`creatingPrompt-${t.type}`];return this._renderContent({chart:!1,actions:i,prompt:e})}const s=this._getErrorMessage();return s?this._renderContent({chart:!1,actions:i,prompt:s}):this._renderContent({chart:!0,actions:i})}_renderContentForSelectedState(){const t=this._getErrorMessage();return t?this._renderContent({chart:!1,actions:B,prompt:t}):this._renderContent({chart:!0,actions:B})}_renderContentForCreatedState(){const t=this._getErrorMessage();return t?this._renderContent({chart:!1,actions:B,prompt:t}):this._renderContent({chart:!0,actions:B})}_getErrorMessage(){const t=M[this.viewModel.errorState];return t?this.messages?.errors?.[t]:null}_renderContent(t){const e=null!=t.prompt?this._renderPrompt(t.prompt):t.chart&&this._renderChart(),i=null!=this.viewModel.input;return[k("header",{key:"header",class:p.header},this._zoomOutButtonVisible&&this._renderZoomOutButton(),this.visibleElements.clearButton&&i&&this._renderClearButton(),this.visibleElements.settingsButton&&this._settingsButton.render()),k("div",{class:p.mainContainer},e),this.visibleElements.legend&&this._legend.render(),this._renderActions(t)]}_renderZoomOutButton(){return k("button",{key:"zoom-out",class:p.zoomOutButton,bind:this,onclick:this._onZoomOutButtonClick,title:this.messages.zoomOut,type:"button"})}_onZoomOutButtonClick(){s(this._chart,(t=>t.zoomOut()))}_renderClearButton(){return k("button",{key:"clear-profile",class:p.clearButton,bind:this,onclick:this._onClearButtonClick,title:this.messages.clearProfile,type:"button"})}_onClearButtonClick(){this.viewModel.clear()}_renderPrompt(t){return[k("div",{key:"prompt-container",bind:this,class:p.promptContainer},k("p",null,t))]}_renderChart(){if(!this.visibleElements.chart)return[k("div",{key:"empty-chart-container",class:p.chartContainer})];const t=this._chartIsRefined||this._canRenderChart();if(!t)return[this._renderSpinner({size:"large"}),k("div",{key:"chart-container-empty",class:p.chartContainer})];const{chartData:e,progress:i}=this.viewModel;return[null!=e&&i>0&&i<1&&this._renderSpinner({size:t?"small":"large"}),k("div",{key:"chart-container",bind:this,class:p.chartContainer,afterCreate:this._onChartContainerAfterCreate,afterRemoved:this._onChartContainerRemoved})]}_renderSpinner(t){return k("div",{key:"spinner",class:this.classes(p.chartSpinner,{[p.chartSpinnerSmall]:"small"===t.size}),afterCreate:this._onSpinnerAfterCreate,exitAnimation:this._onSpinnerExit})}_onSpinnerAfterCreate(t){requestAnimationFrame((()=>t.classList.add(p.chartSpinnerVisible)))}_onSpinnerExit(t,e){t.classList.remove(p.chartSpinnerVisible),setTimeout(e,200)}_canRenderChart(){const t=this.viewModel.chartData;if(null==t)return!1;if(!this.viewModel.inputIsSketched)return t.refined;let e=0;for(const{samples:i}of t.lines)e+=null!=i?i.length:0;return t.refined||e<=f().largeChartSamples}_renderActions({actions:t}){const e=t.map((t=>{switch(t.type){case S.Sketch:return this.visibleElements.sketchButton&&this._renderAction({action:t,onClick:this._onSketchButtonClick,className:p.sketchButton,label:this.messages.sketchButtonLabel});case S.SketchCancel:return this.visibleElements.sketchButton&&this._renderAction({action:t,onClick:this._onCancelButtonClick,className:p.sketchCancelButton,label:this.messagesCommon.cancel});case S.SketchDone:return this.visibleElements.sketchButton&&this._renderAction({action:t,onClick:this._onDoneButtonClick,className:p.sketchDoneButton,label:this.messagesCommon.done});case S.Select:return this.visibleElements.selectButton&&this._renderAction({action:t,onClick:this._onSelectButtonClick,className:p.selectButton,label:this.messages.selectButtonLabel});case S.SelectCancel:return this.visibleElements.selectButton&&this._renderAction({action:t,onClick:this._onCancelButtonClick,className:p.selectCancelButton,label:this.messagesCommon.cancel})}})).filter(Boolean);return e.length?k("footer",{key:"footer",class:p.footer},e):null}_renderAction({action:t,onClick:e,className:i,label:s}){return k("button",{key:`action-${t.type}`,class:this.classes(p.actionButton,i,{[p.buttonDisabled]:!!t.disabled}),bind:this,disabled:t.disabled,onclick:e,type:"button"},s)}_onSketchButtonClick(){this.viewModel.start({mode:"sketch"})}_onSelectButtonClick(){this.viewModel.start({mode:"select"})}_onCancelButtonClick(){this.viewModel.cancel()}_onDoneButtonClick(){this.viewModel.stop()}_onContentWrapperAfterCreate(t){const e=w(t,(t=>{this._width=t.contentRect.width}));this.addHandles(e,P)}_onContentWrapperRemoved(){this.removeHandles(P)}_updateChart(t){const{data:e,chart:i,messages:s,stationary:r}=t;null!=i&&null!=s&&r&&this._canRenderChart()&&(i.update(t),this._chartIsRefined=null!=e&&e.refined)}_onChartContainerAfterCreate(t){this._chartContainer=t}_onChartContainerRemoved(){this._chartContainer=null}_initializeChart(t){r(this._chartInitTask),this._chartInitTask=e((async e=>{const s=await v({container:t,abortOptions:{signal:e},onRangeChange:(t,e)=>{this._zoomOutButtonVisible=1!==t||1!==e},onCursorPositionChange:t=>{this.viewModel.hoveredChartPosition=t}});if(e.aborted)throw i(s),o();this._chart=s,this._updateChart(this._chartUpdateParams)}))}_destroyChart(){this._chartInitTask=r(this._chartInitTask),this._chart=i(this._chart),this._chartIsRefined=!1}get test(){return{chart:this._chart}}};t([h({type:u})],E.prototype,"viewModel",void 0),t([h()],E.prototype,"view",null),t([h()],E.prototype,"input",null),t([h()],E.prototype,"profiles",null),t([h()],E.prototype,"unitOptions",null),t([h()],E.prototype,"unit",null),t([h()],E.prototype,"geodesicDistanceThreshold",null),t([h({type:m,nonNullable:!0})],E.prototype,"visibleElements",void 0),t([h()],E.prototype,"iconClass",void 0),t([h()],E.prototype,"icon",void 0),t([h()],E.prototype,"label",null),t([h()],E.prototype,"visible",null),t([h(),b("esri/widgets/ElevationProfile/t9n/ElevationProfile")],E.prototype,"messages",void 0),t([h(),b("esri/t9n/common")],E.prototype,"messagesCommon",void 0),t([h(),b("esri/core/t9n/Units")],E.prototype,"messagesUnits",void 0),t([h()],E.prototype,"_chartContainer",void 0),t([h()],E.prototype,"_chart",void 0),t([h()],E.prototype,"_chartInitTask",void 0),t([h()],E.prototype,"_chartIsRefined",void 0),t([h()],E.prototype,"_settingsButton",void 0),t([h()],E.prototype,"_legend",void 0),t([h()],E.prototype,"_width",void 0),t([h()],E.prototype,"_portrait",null),t([h()],E.prototype,"_zoomOutButtonVisible",void 0),t([h()],E.prototype,"_chartUpdateParams",null),t([h()],E.prototype,"_chartMessages",null),t([h()],E.prototype,"_legendProps",null),t([h()],E.prototype,"_profilesArray",null),t([h()],E.prototype,"_settingsButtonProps",null),E=t([c("esri.widgets.ElevationProfile")],E);const j=E;export{j as default};
