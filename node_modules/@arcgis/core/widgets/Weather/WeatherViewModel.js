/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import r from"../../core/Handles.js";import n from"../../core/Logger.js";import{destroyMaybe as o,applySome as s}from"../../core/maybe.js";import{watch as i,syncAndInitial as a}from"../../core/reactiveUtils.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import m from"../../views/3d/environment/CloudyWeather.js";import p from"../../views/3d/environment/FoggyWeather.js";import y from"../../views/3d/environment/RainyWeather.js";import u from"../../views/3d/environment/SnowyWeather.js";import c from"../../views/3d/environment/SunnyWeather.js";import{validateWeatherType as d}from"../../views/3d/environment/weather.js";import{WeatherState as w,WeatherError as v}from"./enums.js";const g="esri.widgets.Weather.WeatherViewModel",_=n.getLogger(g);let f=class extends t{constructor(e){super(e),this.view=null,this._handles=new r,this._settingWeather=!1,this._weatherByType={sunny:new c,cloudy:new m,rainy:new y,snowy:new u,foggy:new p}}initialize(){this._handles.add([i((()=>this.current),(e=>{this._settingWeather||null==e||(this._weatherByType={...this._weatherByType,[e.type]:e})}),a)])}destroy(){this._handles=o(this._handles)}get state(){const e=this.view;return null!=e&&e.ready?null!=this.error?this.error===v.NotVisible?w.Ready:w.Error:w.Ready:w.Disabled}get error(){const e=this.view;return null!=e&&e.ready?"3d"!==e.type?v.UnsupportedView:"local"===e.viewingMode?v.LocalScene:e.environment.atmosphereEnabled?e.environmentManager.weatherVisible?null:v.NotVisible:v.NoAtmosphere:null}get current(){return this._environment?.weather??this._weatherByType.sunny}set current(e){s(this._environment,(t=>t.weather=e))}get test(){return{...this._weatherByType}}get _environment(){const e=this.view;return null!=e&&"3d"===e.type?e.environment:null}setWeatherByType(e){if(!d(e,_))return;const t=this._environment;null!=t&&(this._settingWeather=!0,t.weather=this._weatherByType[e],this._settingWeather=!1)}setSnowCoverEnabled(e){const t=this.current;"snowCover"in t&&(t.snowCover=e?"enabled":"disabled")}};e([h()],f.prototype,"view",void 0),e([h()],f.prototype,"state",null),e([h()],f.prototype,"error",null),e([h()],f.prototype,"current",null),e([h()],f.prototype,"_environment",null),f=e([l(g)],f);const j=f;export{j as default};
