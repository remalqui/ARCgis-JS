/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../request.js";import r from"../../core/Collection.js";import o from"../../core/Error.js";import{clone as s}from"../../core/lang.js";import i from"../../core/Loadable.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{formatDate as n,convertDateFormatToIntlOptions as p}from"../../intl/date.js";import{getLanguage as c}from"../../intl/locale.js";import u from"../../portal/Portal.js";import{execute as m}from"../../rest/geoprocessor/execute.js";import"../../rest/geoprocessor/GPOptions.js";import"../../core/has.js";import"../../geometry/support/normalizeUtils.js";import"../../layers/support/Field.js";import"../../layers/support/MapImage.js";import"../../config.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../rest/support/DataFile.js";import"../../rest/support/FeatureSet.js";import"../../rest/support/LinearUnit.js";import"../../rest/support/ParameterValue.js";import"../../rest/support/RasterData.js";import"../../rest/support/JobInfo.js";import{execute as f}from"../../rest/print.js";import{fromJSON as d}from"../../rest/support/fileFormat.js";import{fromJSON as h}from"../../rest/support/layoutTemplate.js";import y from"../../rest/support/PrintParameters.js";import v from"../../rest/support/PrintTemplate.js";import T from"./CustomTemplate.js";const w=6e4,j=r.ofType(T);function x(t){t.layoutOptions||(t.layoutOptions={}),t.layoutOptions.customTextElements||(t.layoutOptions.customTextElements=[]);const e="date";if(!t.layoutOptions.customTextElements.find((t=>e in t))){const{customTextElements:e}=t.layoutOptions;let r=n(Date.now(),p("short-date"));"ar"===c()&&(r="‏"+r),e.push({date:r})}}let g=class extends i{constructor(t){super(t),this._serviceTemplateCustomTextElements=null,this.allowedFormats="all",this.allowedLayouts="all",this.defaultTemplates=new j,this.extraParameters=null,this.includeDefaultTemplates=!0,this.error=null,this.portal=u.getDefault(),this.printServiceUrl=null,this.templatesInfo=null,this.updateDelay=1e3,this.view=null,this.templateCustomTextElements=null,this.print=this.print.bind(this)}destroy(){this.view=null}get effectivePrintServiceUrl(){return this.printServiceUrl??null}get effectiveTemplateCustomTextElements(){if(!this._serviceTemplateCustomTextElements)return{};const t=s(this._serviceTemplateCustomTextElements);return this.templateCustomTextElements&&Object.keys(this.templateCustomTextElements).forEach((e=>{const r=t[e];if(r){const t=this.templateCustomTextElements?.[e];r.forEach((e=>{const[r]=Object.entries(e)[0];t?.forEach((t=>{const[o,s]=Object.entries(t)[0];r===o&&(e[r]=s)}))}))}})),Object.freeze(t)}get state(){return"loading"===this.loadStatus?"initializing":this.error||"failed"===this.loadStatus?"error":this.get("view.ready")&&"loaded"===this.loadStatus?"ready":"disabled"}async load(t){return this.addResolvingPromise(this._loadResources(t).catch((t=>this.error=t))),this}async print(t){const{view:e,extraParameters:r,updateDelay:s}=this;if(!e)throw new o("print:view-required","view is not set");x(t);const i=new y({view:e,template:t,extraParameters:r,updateDelay:s});try{return await f(this.effectivePrintServiceUrl,i)}catch(a){throw new o("print:export-error","An error occurred while exporting the web map.",{error:a})}}toPrintTemplate({attributionEnabled:t,author:e,copyright:r,customTextElements:o,dpi:s,forceFeatureAttributes:i,format:a,height:l,layout:n,legendEnabled:p,northArrowEnabled:c,scale:u,scaleEnabled:m,title:f,width:d}){const h=new v({attributionVisible:t,forceFeatureAttributes:i,format:a,layout:n,layoutOptions:{authorText:e||"",copyrightText:r||"",customTextElements:o,titleText:f||""},outScale:u??0,scalePreserved:m});d&&(h.exportOptions.width=d),l&&(h.exportOptions.height=l),s&&(h.exportOptions.dpi=s),!p&&h.layoutOptions&&(h.layoutOptions.legendLayers=[]);const y=this.templateToNorthArrowInfo[n];if(y){!(y.visible===c)&&h.layoutOptions&&(h.layoutOptions.elementOverrides={[y.name]:{visible:c}})}return h}async _loadResources(t){let e=[];const{printServiceUrl:r}=this;if(!r){if(this.destroyed)return;const{portal:r}=this;try{await r.load(t)}catch(i){throw new o("print:could-not-load-portal","Cannot load print resource information from portal",{url:this.effectivePrintServiceUrl})}const s=r.helperServices?.printTask;s&&(this._set("effectivePrintServiceUrl",s.url),e=(s?.templates??[]).map((t=>T.fromJSON(t))))}e.length>0&&this.defaultTemplates.addMany(e);const s=this.effectivePrintServiceUrl?.toLowerCase().split("/");if(-1===(s?.indexOf("gpserver")??-1))throw new o("print:invalid-print-service-url","Can't fetch print templates information from provided URL",{url:this.effectivePrintServiceUrl});this._processLayoutTemplateInfos(await this._getLayoutTemplatesInfo(t)),await this._loadServiceDescription(t)}async _loadServiceDescription(t){const e=await this._getPrintTemplatesFromService(t);this._set("templatesInfo",e)}async _getLayoutTemplatesInfo(t){let e=[];const r=async e=>{const r=this.effectivePrintServiceUrl.replace(/(\/GPServer\/).+/i,`$1${encodeURI(e)}`);return(await m(r,null,null,t)).results[0].value};try{e=await r("Get Layout Templates Info Task")}catch(o){}if(!e||e.length<1)try{e=await r("Get Layout Templates Info")}catch(o){}return e}_processLayoutTemplateInfos(t){const e={},r={};t.forEach((({layoutTemplate:t,layoutOptions:{customTextElements:o,mapSurroundInfos:s}})=>{const i=h(t);e[i]=o,s&&(r[i]=s.find((t=>"CIMMarkerNorthArrow"===t.type)))})),this._serviceTemplateCustomTextElements=Object.freeze(e),this.templateToNorthArrowInfo=r}async _getPrintTemplatesFromService(t){return e(this.effectivePrintServiceUrl,{...t,query:{f:"json"},timeout:w}).then((t=>{const e=t&&t.data,r=e&&e.parameters;let o=null,s=null;r.forEach((t=>{let e=t.choiceList&&t.choiceList.slice(),r=-1;e&&e.length&&t.defaultValue&&(r=e.indexOf(t.defaultValue)),r>-1&&(e.splice(r,1),e.unshift(t.defaultValue));const i=(t,e)=>{const r="all"===e?t:t.filter((t=>e.includes(t)));return 0===r.length?t:r};if("Format"===t.name){const r=i(e.map(d),this.allowedFormats),s=d(t.defaultValue);o={defaultValue:r.includes(s)?s:r[0],choiceList:r}}else if("Layout_Template"===t.name){e=e.filter((t=>"map_only"!==t.toLowerCase()));let r,o=-1;e.some(((t,e)=>{const r=t.toLowerCase();return r.includes("letter")&&r.includes("landscape")?(o=e,!0):!(!r.includes("a4")||!r.includes("landscape"))&&(o=e,!1)})),o>0&&(r=e[o],e.splice(o,1),e.unshift(r));const a=i(e.map(h),this.allowedLayouts),l=h(t.defaultValue);s={defaultValue:a.includes(l)?l:a[0],choiceList:a}}})),this.error=null;return{format:o,layout:s}})).catch((t=>{throw new o("print:unavailable-service-info","Can't fetch templates info from service",{error:t})}))}};t([a()],g.prototype,"_serviceTemplateCustomTextElements",void 0),t([a()],g.prototype,"allowedFormats",void 0),t([a()],g.prototype,"allowedLayouts",void 0),t([a({type:j})],g.prototype,"defaultTemplates",void 0),t([a()],g.prototype,"extraParameters",void 0),t([a()],g.prototype,"includeDefaultTemplates",void 0),t([a({readOnly:!0})],g.prototype,"effectivePrintServiceUrl",null),t([a()],g.prototype,"effectiveTemplateCustomTextElements",null),t([a()],g.prototype,"error",void 0),t([a({type:u})],g.prototype,"portal",void 0),t([a()],g.prototype,"printServiceUrl",void 0),t([a({readOnly:!0})],g.prototype,"state",null),t([a({readOnly:!0})],g.prototype,"templatesInfo",void 0),t([a()],g.prototype,"updateDelay",void 0),t([a()],g.prototype,"view",void 0),t([a()],g.prototype,"templateCustomTextElements",void 0),t([a()],g.prototype,"templateToNorthArrowInfo",void 0),g=t([l("esri.widgets.Print.PrintViewModel")],g);const S=g;export{S as default};
