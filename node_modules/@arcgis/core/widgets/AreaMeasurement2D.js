/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import{ignoreAbortErrors as t}from"../core/promiseUtils.js";import{isMeasurementSystem as s}from"../core/unitUtils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../core/accessorSupport/ensureType.js";import"../core/arrayUtils.js";import"../core/has.js";import{subclass as r}from"../core/accessorSupport/decorators/subclass.js";import n from"./Widget.js";import a from"./AreaMeasurement2D/AreaMeasurement2DViewModel.js";import{accessibleHandler as o}from"./support/decorators/accessibleHandler.js";import{messageBundle as l}from"./support/decorators/messageBundle.js";import{tsx as u}from"./support/jsxFactory.js";import"./support/widgetUtils.js";const m="esri-area-measurement-2d",p=`${m}__units`,c=`${m}__measurement`,d={buttonDisabled:"esri-button--disabled",widgetIcon:"esri-icon-measure-area",base:`${m} esri-widget esri-widget--panel`,container:`${m}__container`,hint:`${m}__hint`,hintText:`${m}__hint-text`,panelError:`${m}__panel--error`,measurement:c,measurementItem:`${c}-item`,measurementItemDisabled:`${c}-item--disabled`,measurementItemTitle:`${c}-item-title`,measurementItemValue:`${c}-item-value`,settings:`${m}__settings`,units:p,unitsLabel:`${p}-label`,unitsSelect:`${p}-select esri-select`,unitsSelectWrapper:`${p}-select-wrapper`,actionSection:`${m}__actions`,newMeasurementButton:`${m}__clear-button esri-button esri-button--primary`};let v=class extends n{constructor(e,t){super(e,t),this.iconClass=d.widgetIcon,this.icon=null,this.messages=null,this.messagesUnits=null,this.viewModel=new a}get active(){return this.viewModel.active}get label(){return this.messages?.widgetLabel??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{id:e,viewModel:t,visible:i}=this,{active:r,supported:n,measurementLabel:a,state:o,unit:l,unitOptions:m}=t,p="disabled"===o,c="ready"===o,v="measuring"===o||"measured"===o,{messages:b,messagesUnits:h}=this,w=r&&c?u("section",{key:"hint",class:d.hint},u("p",{class:d.hintText},b.hint)):null,g=n?null:u("section",{key:"unsupported",class:d.panelError},u("p",null,b.unsupported)),y=(e,t,s)=>t?u("div",{key:`${s}-enabled`,class:d.measurementItem},u("span",{class:d.measurementItemTitle},e),u("span",{"aria-live":"polite",class:d.measurementItemValue},t)):u("div",{key:`${s}-disabled`,class:this.classes(d.measurementItem,d.measurementItemDisabled),"aria-disabled":"true"},u("span",{class:d.measurementItemTitle},e)),M=v?u("section",{key:"measurement",class:d.measurement},y(b.area,a?.area,"area"),y(b.perimeter,a?.perimeter,"perimeter")):null,_=`${e}__units`,$=u("section",{key:"units",class:d.units},u("label",{class:d.unitsLabel,for:_},b.unit),u("div",{class:d.unitsSelectWrapper},u("select",{class:d.unitsSelect,id:_,onchange:this._changeUnit,bind:this,value:l},m.map((e=>u("option",{key:e,value:e},s(e)?h.systems[e]:h.units[e]?.pluralCapitalized)))))),j=v?u("div",{key:"settings",class:d.settings},$):null,I=!n||r&&!v?null:u("div",{class:d.actionSection},u("button",{"aria-label":b.newMeasurement,bind:this,class:this.classes(d.newMeasurementButton,p&&d.buttonDisabled),disabled:p,onclick:this._newMeasurement,title:b.newMeasurement,type:"button"},b.newMeasurement)),f=i?u("div",{class:d.container},g,w,j,M,I):null;return u("div",{"aria-label":b.widgetLabel,class:d.base,role:"region"},f)}_newMeasurement(){t(this.viewModel.start())}_changeUnit(e){const t=e.target,s=t.options[t.selectedIndex];s&&(this.viewModel.unit=s.value)}};e([i({readOnly:!0})],v.prototype,"active",null),e([i()],v.prototype,"iconClass",void 0),e([i()],v.prototype,"icon",void 0),e([i()],v.prototype,"label",null),e([i(),l("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],v.prototype,"messages",void 0),e([i(),l("esri/core/t9n/Units")],v.prototype,"messagesUnits",void 0),e([i()],v.prototype,"uiStrings",void 0),e([i()],v.prototype,"unit",null),e([i()],v.prototype,"unitOptions",null),e([i()],v.prototype,"view",null),e([i({type:a})],v.prototype,"viewModel",void 0),e([i({type:Boolean})],v.prototype,"visible",null),e([o()],v.prototype,"_newMeasurement",null),e([o()],v.prototype,"_changeUnit",null),v=e([r("esri.widgets.AreaMeasurement2D")],v);const b=v;export{b as default};
