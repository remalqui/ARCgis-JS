/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import{ignoreAbortErrors as t}from"../core/promiseUtils.js";import{isMeasurementSystem as s}from"../core/unitUtils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../core/accessorSupport/ensureType.js";import"../core/arrayUtils.js";import"../core/has.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import r from"./Widget.js";import a from"./DistanceMeasurement2D/DistanceMeasurement2DViewModel.js";import{accessibleHandler as o}from"./support/decorators/accessibleHandler.js";import{messageBundle as l}from"./support/decorators/messageBundle.js";import{tsx as u}from"./support/jsxFactory.js";import"./support/widgetUtils.js";const m="esri-distance-measurement-2d",p=`${m}__measurement`,c=`${m}__units`,d={buttonDisabled:"esri-button--disabled",widgetIcon:"esri-icon-measure-line",base:`${m} esri-widget esri-widget--panel`,container:`${m}__container`,hint:`${m}__hint`,hintText:`${m}__hint-text`,panelError:`${m}__panel--error`,measurement:p,measurementItem:`${p}-item`,measurementItemDisabled:`${p}-item--disabled`,measurementItemTitle:`${p}-item-title`,measurementItemValue:`${p}-item-value`,settings:`${m}__settings`,units:c,unitsLabel:`${c}-label`,unitsSelect:`${c}-select esri-select`,unitsSelectWrapper:`${c}-select-wrapper`,actionSection:`${m}__actions`,newMeasurementButton:`${m}__clear-button esri-button esri-button--primary`};let v=class extends r{constructor(e,t){super(e,t),this.iconClass=d.widgetIcon,this.icon=null,this.messages=null,this.messagesUnits=null,this.viewModel=new a}get active(){return this.viewModel.active}get label(){return this.messages?.widgetLabel??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{id:e,messages:t,messagesUnits:i,viewModel:n,visible:r}=this,{active:a,supported:o,measurementLabel:l,state:m,unit:p,unitOptions:c}=n,v="disabled"===m,b="measuring"===m||"measured"===m,h=a&&"ready"===m?u("section",{key:"hint",class:d.hint},u("p",{class:d.hintText},t.hint)):null,w=o?null:u("section",{key:"unsupported",class:d.panelError},u("p",null,t.unsupported)),g=(e,t,s)=>null!=t?u("div",{key:`${s}-enabled`,class:d.measurementItem},u("span",{class:d.measurementItemTitle},e),u("span",{"aria-live":"polite",class:d.measurementItemValue},t)):u("div",{key:`${s}-disabled`,class:this.classes(d.measurementItem,d.measurementItemDisabled),"aria-disabled":"true"},u("span",{class:d.measurementItemTitle},e)),y=b?u("section",{key:"measurement",class:d.measurement},g(t.distance,l,"distance")):null,M=`${e}-units`,_=b?u("section",{key:"units",class:d.units},u("label",{class:d.unitsLabel,for:M},t.unit),u("div",{class:d.unitsSelectWrapper},u("select",{class:d.unitsSelect,id:M,onchange:this._changeUnit,bind:this,value:p},c.map((e=>u("option",{key:e,value:e},s(e)?i.systems[e]:i.units[e]?.pluralCapitalized)))))):null,$=b?u("div",{key:"settings",class:d.settings},_):null,j=!o||a&&!b?null:u("div",{class:d.actionSection},u("button",{"aria-label":t.newMeasurement,bind:this,class:this.classes(d.newMeasurementButton,v&&d.buttonDisabled),disabled:v,onclick:this._newMeasurement,title:t.newMeasurement,type:"button"},t.newMeasurement)),D=r?u("div",{class:d.container},w,h,$,y,j):null;return u("div",{"aria-label":t.widgetLabel,class:d.base,role:"region"},D)}_newMeasurement(){t(this.viewModel.start())}_changeUnit(e){const t=e.target,s=t.options[t.selectedIndex];s&&(this.viewModel.unit=s.value)}};e([i({readOnly:!0})],v.prototype,"active",null),e([i()],v.prototype,"iconClass",void 0),e([i()],v.prototype,"icon",void 0),e([i()],v.prototype,"label",null),e([i()],v.prototype,"uiStrings",void 0),e([i(),l("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],v.prototype,"messages",void 0),e([i(),l("esri/core/t9n/Units")],v.prototype,"messagesUnits",void 0),e([i()],v.prototype,"unit",null),e([i()],v.prototype,"unitOptions",null),e([i()],v.prototype,"view",null),e([i({type:a})],v.prototype,"viewModel",void 0),e([i({type:Boolean})],v.prototype,"visible",null),e([o()],v.prototype,"_newMeasurement",null),e([o()],v.prototype,"_changeUnit",null),v=e([n("esri.widgets.DistanceMeasurement2D")],v);const b=v;export{b as default};
