/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../intl.js";import e from"../../core/Accessor.js";import i from"../../core/Collection.js";import r from"../../core/Error.js";import{HandleOwnerMixin as s}from"../../core/HandleOwner.js";import o from"../../core/Logger.js";import{watch as a,on as n}from"../../core/reactiveUtils.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as d}from"../../core/accessorSupport/decorators/subclass.js";import y from"../../geometry/Extent.js";import{isFeatureLayer as c}from"../../layers/support/layerUtils.js";import h from"../../rest/networks/support/ValidateNetworkTopologyParameters.js";import{onLocaleChange as p}from"../../intl/locale.js";import{fetchMessageBundle as w}from"../../intl/messages.js";const m={noDirtyAreasInExtent:-2147208940,noUtilityNetworkExtension:-2147208474,cannotAcquireVersionLock_v10:-2147217146,cannotAcquireVersionLock_v11:-2147220947};let u=class extends(s(e)){constructor(t){super(t),this._activeOperationDidSucceed=!1,this._initialValidationsFinished=!1,this._dirtyAreasLayer=null,this._noViewPropertyErrorMessage="Property 'view' is missing on UtilityNetworkValidateTopologyViewModel.",this._validView=!1,this.executionError="",this.extentToValidate="current",this.loadErrors=new i}initialize(){const t=async()=>{this.messages||(this.messages=await w("esri/widgets/UtilityNetworkValidateTopology/t9n/UtilityNetworkValidateTopology"))};t().then((()=>{this.view||(this.view=null),this.utilityNetwork||(this.utilityNetwork=null),this.addHandles([a((()=>[this.view,this.utilityNetwork]),(async()=>{const{loadErrors:t,messages:e}=this,i=e.info;if(this._initialValidationsFinished=!1,t.removeAll(),this._validView=!0,this._dirtyAreasLayer=null,this.view&&"2d"===this.view.type||(this._validView=!1,o.getLogger(this).error(new r("validateNetworkTopology:missing-property",this._noViewPropertyErrorMessage))),this.utilityNetwork&&"utility"===this.utilityNetwork.type){this.utilityNetwork.loaded||await this.utilityNetwork.load(),await this._checkUtilityNetworkExtension();const e=1===t.length&&this.loadErrors.find((t=>t===i.noUtilityNetworkServiceUserTypeExtension));t.length&&!e||this._setDirtyAreasLayer(),this._validView&&(this._initialValidationsFinished=!0)}else this.loadErrors.push(i.noUtilityNetwork)}),{initial:!0}),n((()=>this.view?.map?.layers),"change",(()=>{const{loadErrors:t,messages:e}=this,i=e.info,r=t.find((t=>t===i.noUtilityNetwork)),s=t.find((t=>t===i.noUtilityNetworkServiceUserTypeExtension));this._initialValidationsFinished=!1,r||(t.removeAll(),s&&t.push(i.noUtilityNetworkServiceUserTypeExtension),this._setDirtyAreasLayer()),this._validView&&(this._initialValidationsFinished=!0)})),p(t)])}))}get state(){return this.loadErrors.length?"disabled":this.executionError?"failed":this.updatingHandles.updating?"executing":this._activeOperationDidSucceed?"success":this._initialValidationsFinished?"ready":"loading"}set utilityNetwork(t){this._get("utilityNetwork")!==t&&this._set("utilityNetwork",t)}set view(t){this._get("view")!==t&&this._set("view",t)}async validateTopology(){const{messages:t,utilityNetwork:e,view:i}=this;if(!this.loadErrors.length){let s;this._activeOperationDidSucceed=!1,this._set("executionError",""),s="current"===this.extentToValidate?{xmin:i?.extent.xmin,ymin:i?.extent.ymin,xmax:i?.extent.xmax,ymax:i?.extent.ymax,spatialReference:{wkid:i?.spatialReference.wkid,latestWkid:i?.spatialReference.latestWkid}}:{xmin:e?.fullExtent?.xmin,ymin:e?.fullExtent?.ymin,xmax:e?.fullExtent?.xmax,ymax:e?.fullExtent?.ymax,spatialReference:{wkid:e?.spatialReference.wkid,latestWkid:e?.spatialReference.latestWkid}},this.updatingHandles.addPromise(e?.validateTopology(new h({gdbVersion:this._dirtyAreasLayer.gdbVersion,validateArea:new y(s)})).then((()=>{this._activeOperationDidSucceed=!0}),(e=>{let i="Error: "+e;e instanceof r&&e.details&&e.details.raw&&(e.details.raw.extendedCode===m.noDirtyAreasInExtent?i=t.info.noDirtyAreasInExtent:e.details.raw.extendedCode!==m.cannotAcquireVersionLock_v10&&e.details.raw.extendedCode!==m.cannotAcquireVersionLock_v11||(i=t.info.cannotAcquireVersionLock)),this._set("executionError",i)})))}}_setDirtyAreasLayer(){const t=this.view?.map.layers;if(t){const e=t.items.filter((t=>c(t))).find((t=>t.parsedUrl?.path===this.utilityNetwork?.networkSystemLayers.dirtyAreasLayerUrl));e?this._dirtyAreasLayer=e:this.loadErrors.push(this.messages.info.noDirtyAreasLayer)}}async _checkUtilityNetworkExtension(){await(this.utilityNetwork?.queryNamedTraceConfigurations({globalIds:["{AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}"]}).catch((t=>{t.details.raw.extendedCode===m.noUtilityNetworkExtension?this.loadErrors.push(this.messages.info.noUtilityNetworkServiceUserTypeExtension):this.loadErrors.push(t.message)})))}};t([l()],u.prototype,"_initialValidationsFinished",void 0),t([l()],u.prototype,"_dirtyAreasLayer",void 0),t([l({readOnly:!0})],u.prototype,"executionError",void 0),t([l()],u.prototype,"extentToValidate",void 0),t([l()],u.prototype,"loadErrors",void 0),t([l()],u.prototype,"messages",void 0),t([l({readOnly:!0})],u.prototype,"state",null),t([l()],u.prototype,"utilityNetwork",null),t([l()],u.prototype,"view",null),u=t([d("esri.widgets.UtilityNetworkValidateTopology.UtilityNetworkValidateTopologyViewModel")],u);const A=u;export{A as default};
