/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Basemap.js";import s from"../../core/Collection.js";import{HandleOwnerMixin as i}from"../../core/HandleOwner.js";import a from"../../core/Loadable.js";import{watch as r,on as o,when as n}from"../../core/reactiveUtils.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import{cast as c}from"../../core/accessorSupport/decorators/cast.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{canProjectWithoutEngine as l,isLoaded as u,load as d}from"../../geometry/projection.js";import{equals as h}from"../../geometry/support/spatialReferenceUtils.js";import{contentEquals as f}from"../../support/basemapUtils.js";import{default3DCompatibility as y,default2DCompatibility as v}from"./support/basemapCompatibilityUtils.js";import b from"./support/BasemapGalleryItem.js";import j from"./support/LocalBasemapsSource.js";import g from"./support/PortalBasemapsSource.js";const w=s.ofType(b);function B(e){return e&&"esri.portal.Portal"===e.declaredClass}function _(e){return e&&!(e instanceof g)&&(!!e.portal||!!e.query)}function I(e){return e&&"basemaps"in e&&"state"in e&&"refresh"in e}let R=class extends(i(a)){constructor(e){super(e),this._loadingProjectionEngine=!1,this.items=new w,this.source=new g,this.view=null}initialize(){const e=()=>this._recreateItems();this.handles.add([r((()=>"ready"===this.state?this.compatibilityFunction:null),(()=>this._updateItems())),o((()=>this.source?.basemaps),"change",e,{onListenerAdd:e}),n((()=>this.view),(()=>{this.source instanceof g&&(this.source.viewType=this.view?.type)}),{once:!0})])}get activeBasemap(){return this.view?.map?.basemap??null}set activeBasemap(e){const s=this.view;if(!s?.map)return;const i="string"==typeof e?t.fromId(e):e;if(!i||!s.ready)return s.map.basemap=i,void this._clearOverride("activeBasemap");const a=i.spatialReference||this.items?.find((e=>this.basemapEquals(i,e.basemap)))?.spatialReference;if(a&&"spatialReferenceLocked"in s&&!s.spatialReferenceLocked){const t=s.spatialReference;if(null!=a&&!h(t,a)&&!l(s.spatialReference,a)&&!u())return this._override("activeBasemap",i),this._loadingProjectionEngine=!0,void d().then((()=>{this._get("activeBasemap")===e&&(s.map.basemap=e,s.spatialReference=a,this._clearOverride("activeBasemap"))}),(()=>{})).then((()=>{this._loadingProjectionEngine=!1}));s.map.basemap=i,this._clearOverride("activeBasemap"),null==a||h(s.spatialReference,a)||(s.spatialReference=a)}else s.map.basemap=i,this._clearOverride("activeBasemap")}get activeBasemapIndex(){const{state:e,items:t,activeBasemap:s}=this;if("ready"!==e)return-1;const i=t.findIndex((e=>e.basemap===s));return-1===i?t.findIndex((e=>this.basemapEquals(e.basemap,s))):i}get compatibilityFunction(){return"3d"===this.view?.type?y:v}set compatibilityFunction(e){this._overrideIfSome("compatibilityFunction",e)}castSource(e){return Array.isArray(e)||s.isCollection(e)?new j({basemaps:e}):B(e)?new g({portal:e}):_(e)?new g(e):I(e)?e:null}get state(){return this.view?.ready&&this.source?this._loadingProjectionEngine?"loading":"ready":"disabled"}basemapEquals(e,t){return f(e,t)}refresh(){this._recreateItems()}load(e){return this.addResolvingPromise(a.isLoadable(this.source)?this.source.load(e):null),Promise.resolve(this)}_recreateItems(){const e=this.source?.basemaps,{view:t,compatibilityFunction:s}=this;this.items.removeAll().forEach((e=>e.destroy())),e&&this.items.addMany(e.map((e=>new b({basemap:e,compatibilityFunction:s,view:t}))))}_updateItems(){for(const e of this.items)e.compatibilityFunction=this.compatibilityFunction,e.view=this.view}};e([p()],R.prototype,"_loadingProjectionEngine",void 0),e([p()],R.prototype,"activeBasemap",null),e([p({readOnly:!0})],R.prototype,"activeBasemapIndex",null),e([p()],R.prototype,"compatibilityFunction",null),e([p({readOnly:!0,type:w})],R.prototype,"items",void 0),e([p()],R.prototype,"source",void 0),e([c("source")],R.prototype,"castSource",null),e([p({readOnly:!0})],R.prototype,"state",null),e([p()],R.prototype,"view",void 0),R=e([m("esri.widgets.BasemapGallery.BasemapGalleryViewModel")],R);const E=R;export{E as default};
