/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../core/Accessor.js";import t from"../../core/Collection.js";import{referenceSetter as r}from"../../core/collectionUtils.js";import i from"../../core/Handles.js";import o from"../../core/Logger.js";import{isAbortError as l}from"../../core/promiseUtils.js";import{watch as a,whenOnce as p}from"../../core/reactiveUtils.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as d}from"../../core/accessorSupport/decorators/subclass.js";import h from"../../layers/BuildingSceneLayer.js";import y from"../../layers/support/BuildingFilter.js";import c from"./BuildingDisciplinesViewModel.js";import m from"./BuildingLevel.js";import u from"./BuildingPhase.js";import{showFullModel as f}from"./support/buildingLayerUtils.js";import{setFilterOnLayers as g,getFilterBlockSolid as j,getFilterBlockXRay as _,generateFilterId as v}from"./support/filterUtils.js";import{createLoadLayersFunction as w}from"./support/layerUtils.js";let L=class extends s{constructor(e){super(e),this.view=null,this.state="disabled",this.level=new m,this.phase=new u,this.disciplines=new c,this._handles=new i,this._loadLayers=w(),this.layers=new t}initialize(){this._handles.add([this.layers.on("change",(()=>this._onLayersChange())),a((()=>({state:this.state,layers:this.layers,filter:this._filter})),(({state:e,layers:s,filter:t})=>{"ready"===e&&g(s,t)}),{initial:!0})]),this._onLayersChange()}destroy(){this._handles.destroy(),this.level.destroyed||this.level.destroy(),this.phase.destroyed||this.phase.destroy(),this.disciplines.destroyed||this.disciplines.destroy()}get isSupported(){return"3d"===this.view?.type}get layers(){return this._get("layers")}set layers(e){const s=e.filter((e=>e instanceof h));s.length!==e.length&&o.getLogger(this).error("Some layers are not BuildingSceneLayers but only BuildingSceneLayers can be passed to the widget."),this._set("layers",r(s,this._get("layers")))}get _filter(){const e=this.level.filterExpressions,s=this.phase.filterExpressions,t=[],r=j([e.solid,s.solid]);null!=r&&t.push(r);const i=_([e.xRay,s.xRay]);return null!=i&&t.push(i),0===t.length?null:new y({id:v(),name:"Building Explorer Filter",filterBlocks:t})}async _onLayersChange(){const e=this.layers;if(this.level.layers=e,this.phase.layers=e,this.disciplines.layers=e,0!==e.length){this._set("state","loading");try{await this._loadLayers(e),await Promise.all([p((()=>"ready"===this.level.state)),p((()=>"ready"===this.phase.state)),p((()=>"ready"===this.disciplines.state))]),e.forEach(f),this._set("state","ready")}catch(s){l(s)||this._set("state","failed")}}else this._set("state","disabled")}};e([n({value:null})],L.prototype,"view",void 0),e([n()],L.prototype,"isSupported",null),e([n({type:t,nonNullable:!0})],L.prototype,"layers",null),e([n({readOnly:!0})],L.prototype,"state",void 0),e([n({readOnly:!0,type:m})],L.prototype,"level",void 0),e([n({readOnly:!0,type:u})],L.prototype,"phase",void 0),e([n({readOnly:!0,type:c})],L.prototype,"disciplines",void 0),e([n()],L.prototype,"_filter",null),L=e([d("esri.widgets.BuildingExplorer.BuildingExplorerViewModel")],L);const B=L;export{B as default};
