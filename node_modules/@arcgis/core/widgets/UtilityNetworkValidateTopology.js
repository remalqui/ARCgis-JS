/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import{property as e}from"../core/accessorSupport/decorators/property.js";import"../core/accessorSupport/ensureType.js";import"../core/arrayUtils.js";import"../core/has.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import i from"./Widget.js";import{loadCalciteComponents as s}from"./support/componentsUtils.js";import"./support/widgetUtils.js";import{messageBundle as n}from"./support/decorators/messageBundle.js";import{tsx as a}from"./support/jsxFactory.js";import l from"./UtilityNetworkValidateTopology/UtilityNetworkValidateTopologyViewModel.js";const r={container:"esri-un-validate-topology__container",content:"esri-un-validate-topology__content",controlsContainer:"esri-un-validate-topology__controls-container",statusIconError:"esri-un-validate-topology__status-icon-error",statusIconSuccess:"esri-un-validate-topology__status-icon-success",statusIconContainer:"esri-un-validate-topology__status-icon-container"};let c=class extends i{constructor(t,e){super(t,e),this.messages=null,this.viewModel=new l}loadDependencies(){return s({action:()=>import("@esri/calcite-components/dist/components/calcite-action.js"),block:()=>import("@esri/calcite-components/dist/components/calcite-block.js"),icon:()=>import("@esri/calcite-components/dist/components/calcite-icon.js"),notice:()=>import("@esri/calcite-components/dist/components/calcite-notice.js"),option:()=>import("@esri/calcite-components/dist/components/calcite-option.js"),select:()=>import("@esri/calcite-components/dist/components/calcite-select.js"),tooltip:()=>import("@esri/calcite-components/dist/components/calcite-tooltip.js")})}get extentToValidate(){return this.viewModel.extentToValidate}set extentToValidate(t){this.viewModel.extentToValidate=t}get label(){return this.messages?.label??""}set label(t){this._overrideIfSome("label",t)}get utilityNetwork(){return this.viewModel.utilityNetwork}set utilityNetwork(t){this.viewModel.utilityNetwork=t}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}render(){const{viewModel:t}=this;return"disabled"===t.state?a("div",{class:r.container},a("calcite-block",{heading:this.label,class:r.content,collapsible:!1,open:!0},this._renderLoadErrorStatusIcon(),this._renderLoadErrorsNotices())):a("div",{class:r.container},a("calcite-block",{heading:this.label,class:r.content,collapsible:!0,open:!1},this._renderStatusIcon(),this._renderValidateTopologyAction(),this._renderControls()))}_extentOptionSelectChange(t){this.extentToValidate=t.target.value}_getLoadErrorMessagesAsNotices(t,e){return a("calcite-notice",{key:"error-notice-"+e,open:!0,closable:!1,kind:"warning",scale:"s"},a("div",{slot:"message"},t))}_handleValidateTopologyAction(){this.viewModel.validateTopology().catch((()=>{}))}_renderControls(){const{viewModel:t}=this;return"failed"===t.state?a("div",{class:r.controlsContainer},this._renderExtentOptionSelect(),this._renderStatusNotice()):this._renderExtentOptionSelect()}_renderExtentOptionSelect(){const{messages:t,viewModel:e}=this;return a("div",{key:"selectExtentDiv"},a("calcite-select",{bind:this,label:t.input.extentToValidate,disabled:"loading"===e.state||"executing"===e.state,onCalciteSelectChange:this._extentOptionSelectChange},a("calcite-option",{value:"current"},t.input.currentExtent),a("calcite-option",{value:"entire"},t.input.entireExtent)))}_renderLoadErrorsNotices(){const{viewModel:t}=this;return a("div",{key:"loadErrorsDiv",class:r.controlsContainer},t.loadErrors.items.map(this._getLoadErrorMessagesAsNotices))}_renderLoadErrorStatusIcon(){return a("div",{key:"statusDiv",slot:"control",class:r.statusIconContainer},a("calcite-icon",{icon:"exclamation-mark-triangle",scale:"s",class:r.statusIconError}))}_renderStatusIcon(){const{messages:t,viewModel:e}=this,o=`${this.id}-validation-status-action`,i=`${this.id}-error-status-icon`,s=`${this.id}-success-status-icon`,n=t=>{setTimeout((()=>{t.innerHTML=""}),3500)};return"executing"===e.state?a("div",{key:"statusDivExecuting",slot:"control"},a("calcite-action",{id:o,text:t.status.executing,textEnabled:!1,loading:!0}),a("calcite-tooltip",{referenceElement:o,label:t.status.executing},a("span",null,t.status.executing))):"success"===e.state?a("div",{key:"statusDivSuccess",slot:"control",class:r.statusIconContainer,afterCreate:n},a("calcite-icon",{id:s,icon:"check-circle",scale:"s",class:r.statusIconSuccess}),a("calcite-tooltip",{referenceElement:s,label:t.status.success},a("span",null,t.status.success))):"failed"===e.state?a("div",{key:"statusDivFailed",slot:"control",class:r.statusIconContainer},a("calcite-icon",{id:i,icon:"exclamation-mark-triangle",scale:"s",class:r.statusIconError}),a("calcite-tooltip",{referenceElement:i,label:e.executionError},a("span",null,e.executionError))):a("div",{key:"statusDiv",slot:"control",class:r.statusIconContainer})}_renderStatusNotice(){const{viewModel:t}=this;return a("div",{key:"executionErrorDiv"},a("calcite-notice",{open:!0,closable:!0,kind:"warning",scale:"s"},a("div",{slot:"message"},t.executionError)))}_renderValidateTopologyAction(){const{messages:t,viewModel:e}=this,o=`${this.id}-validation-action`;return a("div",{key:"actionDiv",slot:"control"},a("calcite-action",{id:o,bind:this,icon:"play-f",disabled:"executing"===e.state,text:t.input.validateTopology,textEnabled:!1,loading:"loading"===e.state,onclick:this._handleValidateTopologyAction}),a("calcite-tooltip",{referenceElement:o,label:t.input.validateTopology},a("span",null,"loading"===e.state?t.status.loading:t.input.validateTopology)))}};t([e()],c.prototype,"extentToValidate",null),t([e()],c.prototype,"label",null),t([e(),n("esri/widgets/UtilityNetworkValidateTopology/t9n/UtilityNetworkValidateTopology")],c.prototype,"messages",void 0),t([e()],c.prototype,"utilityNetwork",null),t([e()],c.prototype,"view",null),t([e({type:l})],c.prototype,"viewModel",void 0),c=t([o("esri.widgets.UtilityNetworkValidateTopology")],c);const d=c;export{d as default};
