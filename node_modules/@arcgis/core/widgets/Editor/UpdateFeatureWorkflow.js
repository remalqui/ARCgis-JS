/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Error.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{sceneLayerEditingEnabled as o,i3sPatchingEnabled as s}from"../../support/featureFlags.js";import{highlightsSupported as a}from"../../views/support/layerViewUtils.js";import l from"./UpdateFeatureWorkflowData.js";import{HANDLE_KEYS as n,UpdateRecordWorkflow as c}from"./UpdateRecordWorkflow.js";import{canCreateInteractiveEditSession as d,getVisualVariableAttributes as h,setUpGeometryUpdate as p,isTerminalUpdateEventType as u}from"./workflowUtils.js";var m;const y={...n,highlights:Symbol(),interactiveGraphics:Symbol(),geometryGraphics:Symbol()};let w=m=class extends c{constructor(e){super(e),this.type="update-feature",this._layerViewEditSession=null,this._webStyleCache=new Map}async initialize(){const{edits:{feature:e},layerView:t}=this.data;d(t)&&(this._layerViewEditSession=t.createInteractiveEditSession(e))}destroy(){this._layerViewEditSession?.rollback()}async commit(){this.removeHandles(y.interactiveGraphics);try{const e=this.data.edits.stagedForDelete;await super.commit(),this.removeHandles(y.geometryGraphics);const t=this._layerViewEditSession;e?t?.rollback():t?.commit()}catch(e){throw this.removeHandles(y.geometryGraphics),await this._configureSketchViewModel(),new t("editor-workflow:failed-to-commit","An error occurred when sending the updates to the service",{error:e})}}async enter(){await super.enter(),this.data.editableItem.geometryUpdatesEnabled?this.hasHandles(y.interactiveGraphics)||await this._configureSketchViewModel():this._configureHighlight()}exit(e={removeSketchHandles:!0}){super.exit(e),e.removeSketchHandles&&this.removeHandles([y.geometryGraphics,y.interactiveGraphics])}_configureFeatureFormViewModel(){super._configureFeatureFormViewModel();const{_layerViewEditSession:e}=this,{viewModel:t}=this.data;this.addHandles(t.featureFormViewModel.on("value-change",(t=>{e?.setAttribute(t.fieldName,t.value)})),y.exit)}_configureHighlight(){const{edits:e,layerView:t}=this.data;a(t)&&this.addHandles(t.highlight(e.feature),y.highlights)}async _configureSketchViewModel(){const{data:e,_layerViewEditSession:t}=this,{edits:r,viewModel:i}=e,a=r.feature,{featureFormViewModel:l,sketchViewModel:n,view:c}=i;n.allowDeleteKey=!1;const d=h(a),{interactive:m,visual:w}=await p(a,d,n,c,(({geometry:e,attributes:i},n)=>{if(r.updateAttributes(i),r.updateGeometry(e),l.feature.geometry=e,null!=d.rotation){const{field:e}=d.rotation;l.setValue(e,i[e])}if(null!=d.size){const{field:e}=d.size;l.setValue(e,i[e])}const{sourceLayer:c}=a;null!=c&&"scene"===c.type&&null!=c.infoFor3D&&o()&&s()&&t&&null!=e&&"mesh"===e.type&&t.setGeometry(e),("undo"===n.type||"redo"===n.type||"update"===n.type&&null!=n.toolEventInfo&&u(n.toolEventInfo.type))&&l.notifyFeatureGeometryChanged()}),this._webStyleCache);this.addHandles(m,y.interactiveGraphics),this.addHandles(w,y.geometryGraphics)}_onFullFeatureLoaded(e){super._onFullFeatureLoaded(e);const{edits:t}=this.data;t.updateGeometry(e.geometry),t.trackChanges()}static async create(e){const t=new m({data:await l.create(e),onCommit:this._onCommitFactory(e.applyEdits)});return t._set("steps",this._createWorkflowSteps(t)),t}};e([r()],w.prototype,"_layerViewEditSession",void 0),w=m=e([i("esri.widgets.Editor.UpdateFeatureWorkflow")],w);export{y as HANDLE_KEYS,w as UpdateFeatureWorkflow};
