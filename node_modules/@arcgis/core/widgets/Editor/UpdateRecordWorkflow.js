/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Error.js";import{abortHandle as a}from"../../core/handleUtils.js";import{isAborted as r}from"../../core/promiseUtils.js";import{watch as i}from"../../core/reactiveUtils.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import{getEffectiveLayerCapabilities as d,getEffectiveEditingEnabled as n}from"../../layers/support/layerUtils.js";import{sceneLayerEditingEnabled as l,i3sPatchingEnabled as c}from"../../support/featureFlags.js";import u from"./UpdateRecordWorkflowData.js";import p from"./Workflow.js";import{fetchFullFeature as m}from"./workflowUtils.js";var h;const f={exit:Symbol()},g="esri.widgets.Editor.UpdateRecordWorkflow";let w=h=class extends p{constructor(e){super(e),this.fullFeature=null,this.type="update-table-record"}async initialize(){const{data:e}=this,{edits:i}=e,s=i.feature,o=new AbortController;this.addHandles(a(o)),this.updatingHandles.addPromise(m(s,e.viewModel.view.spatialReference,o.signal).then((e=>{r(o)||this._onFullFeatureLoaded(e)}),(e=>this.cancel({force:!0,error:new t("editor:failed-to-fetch-full-feature","Failed to retrieve all information for this feature. The update cannot proceed.",{detail:{error:e}})}))))}get editableItem(){return this.data.editableItem}get hasPendingEdits(){return this.data.edits.modified}get shouldShowAttachments(){return this.editableItem.attachmentsOnUpdateEnabled}get shouldAllowAttachmentEditing(){return this.editableItem.supports.includes("update")}get updating(){return this.updatingHandles.updating}get reliesOnOwnerAdminPrivileges(){const{layer:e}=this.editableItem,t=e.capabilities?.operations.supportsUpdate,a=d(e)?.operations.supportsUpdate;return n(e)&&!e.editingEnabled||!!a&&!t}async deleteAndCommit(){return this.data.edits.stageDelete(),this.commit()}async enter(){this._configureAttachmentsViewModel(),this._configureFeatureFormViewModel()}exit(e){this.removeHandles(f.exit)}_configureAttachmentsViewModel(){const{data:e,fullFeature:t}=this,{attachmentsCapabilities:a,viewModel:r}=e,{attachmentsViewModel:s}=r;s.set({capabilities:a,graphic:t,filesEnabled:!1,mode:"view"}),this.addHandles(i((()=>s.mode),(e=>{switch(e){case"add":this.go("adding-attachment");break;case"edit":this.go("editing-attachment")}})),f.exit)}_configureFeatureFormViewModel(){const{edits:e,formTemplate:t,viewModel:{featureFormViewModel:a,view:r}}=this.data;a.set({arcadeEditType:"UPDATE",feature:this.fullFeature,formTemplate:t,map:r?.map,spatialReference:r.spatialReference}),this.addHandles(a.on("value-change",(()=>{e.updateAttributes(a.getValues()),this.fullFeature.attributes=e.feature.attributes})),f.exit)}_onFullFeatureLoaded(e){this.fullFeature=e;const{edits:t}=this.data;t.updateAttributes(e.attributes),t.trackChanges()}static async create(e){const t=new h({data:await u.create(e),onCommit:this._onCommitFactory(e.applyEdits)});return t._set("steps",this._createWorkflowSteps(t)),t}static _createWorkflowSteps(e){const{attachmentsViewModel:t}=e.data.viewModel;return[{id:"editing-attributes",async setUp(){},async tearDown(){}},{id:"adding-attachment",async setUp(){},async tearDown(){t.mode="view"}},{id:"editing-attachment",async setUp(){},async tearDown(){t.mode="view"}}]}};w._onCommitFactory=e=>async t=>{const{edits:a}=t,{feature:r}=a;if(!r)return;const i=r.sourceLayer,s=r.clone();if(!a.attributesModified||a.stagedForDelete){const e=i.objectIdField;if(s.attributes={[e]:r.getAttribute(e)},l()&&c()&&"scene"===i.type&&null!=i.infoFor3D){const e=i.associatedLayer?.globalIdField;null!=e&&s.setAttribute(e,r.getAttribute(e))}}a.geometryModified&&!a.stagedForDelete||(s.geometry=null);const o=a.stagedForDelete?"deleteFeatures":"updateFeatures";await e(i,{[o]:[s]})},e([s()],w.prototype,"editableItem",null),e([s()],w.prototype,"fullFeature",void 0),e([s()],w.prototype,"hasPendingEdits",null),e([s()],w.prototype,"shouldShowAttachments",null),e([s()],w.prototype,"shouldAllowAttachmentEditing",null),e([s()],w.prototype,"updating",null),e([s()],w.prototype,"reliesOnOwnerAdminPrivileges",null),w=h=e([o(g)],w);export{f as HANDLE_KEYS,w as UpdateRecordWorkflow};
