/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import o from"../../core/Accessor.js";import{createTask as r}from"../../core/asyncUtils.js";import t from"../../core/Error.js";import{on as s}from"../../core/events.js";import{handlesGroup as n,makeHandle as i}from"../../core/handleUtils.js";import{abortMaybe as c}from"../../core/maybe.js";import{isAbortError as l,throwIfAborted as a,createAbortError as u,throwIfNotAbortError as p,createResolver as m}from"../../core/promiseUtils.js";import{property as f}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as d}from"../../core/accessorSupport/decorators/subclass.js";import h from"../../geometry/Point.js";import{getFilePickerAcceptTypes as y,getSupportedExtensions as w}from"../../layers/support/infoFor3D.js";let j=class extends o{constructor(){super({}),this._uploadTask=null}destroy(){this.cancel()}get state(){const e=this._uploadTask;return e?e.finished?e.error?l(e.error)?"canceled":"error":"success":"pending":"default"}get result(){return this._uploadTask?.value??null}get error(){return this._uploadTask?.error??null}uploadTo(e){this.cancel(),this._uploadTask=r((async o=>{const r=await g(e);if(a(o),0===r.length)throw u();const s=(await import("../../geometry/Mesh.js")).default;a(o);const n=new h({x:0,y:0,z:0,spatialReference:e.spatialReference}),i=await s.createFromFiles(n,r,{layer:e,signal:o});if(a(o),!i)throw new t("editor:upload","could not upload or convert model");return i.load()}))}cancel(){this._uploadTask=c(this._uploadTask)}};e([f()],j.prototype,"state",null),e([f()],j.prototype,"result",null),e([f()],j.prototype,"error",null),e([f()],j.prototype,"_uploadTask",void 0),j=e([d("esri.widgets.Editor.Upload")],j);let T=null;async function g(e){return"showOpenFilePicker"in window&&!T?k(e):v(e)}async function k(e){try{const o=await window.showOpenFilePicker({multiple:!0,excludeAcceptAllOption:!0,types:y(e.infoFor3D)});return Promise.all(o.map((e=>e.getFile())))}catch(o){return p(o),[]}}async function v(e){const o=m();let r;const t=document.createElement("input");t.type="file",t.multiple=!0,t.accept=w(e.infoFor3D).join(",");const c=n([s(t,"change",(()=>a(l()))),i((()=>clearTimeout(r))),s(document,["focus","focusin"],u),s(window,["focus","focusin"],u)]);function l(){return t.files?Array.from(t.files):[]}function a(e){c.remove(),o.resolve(e)}function u(){clearTimeout(r),r=setTimeout((()=>{if(!document.hasFocus())return;const e=l();0===e.length&&a(e)}),E)}return T?T(t):t.click(),o.promise.finally((()=>c.remove()))}function F(e){T=o=>{setTimeout((()=>{const r=new DataTransfer;e.forEach((e=>r.items.add(e))),o.files=r.files,o.dispatchEvent(new Event("change"))}))}}function _(){T=null}const E=5e3;export{j as Upload,_ as clearPromptForFilesStub,F as simulateSelectingFiles};
