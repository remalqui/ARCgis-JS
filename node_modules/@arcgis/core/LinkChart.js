/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"./chunks/tslib.es6.js";import r from"./Map.js";import o from"./core/Error.js";import e from"./core/Loadable.js";import{loadAll as i}from"./core/loadAll.js";import s from"./core/Logger.js";import{MultiOriginJSONMixin as a}from"./core/MultiOriginJSONSupport.js";import{EsriPromiseMixin as l}from"./core/Promise.js";import{urlToObject as p}from"./core/urlUtils.js";import{Version as n}from"./core/Version.js";import{property as c}from"./core/accessorSupport/decorators/property.js";import"./core/accessorSupport/ensureType.js";import"./core/arrayUtils.js";import"./core/has.js";import{subclass as m}from"./core/accessorSupport/decorators/subclass.js";import{readLoadable as h}from"./core/accessorSupport/read.js";import d from"./linkchart/InitialViewProperties.js";import u from"./portal/Portal.js";import y from"./portal/PortalItem.js";import{computeInitialViewpoint as f}from"./webmap/initialViewPropertiesUtils.js";let S=class extends(a(e.LoadableMixin(l(r)))){constructor(t){super(t),this.initialViewProperties=new d,this.portalItem=null}load(t){return this.addResolvingPromise(this._loadFromSource()),Promise.resolve(this)}destroy(){const t=this.portalItem;this.portalItem=null,t?.destroy()}initialize(){if(this.when().catch((t=>{s.getLogger(this).error("#load()","Failed to load link chart",t)})),this.sourceJSON){let r;try{r=this._validateJSON(this.sourceJSON)}catch(t){return void this.addResolvingPromise(Promise.reject(t))}this.read(r)}}loadAll(){return i(this,(t=>{t(this.ground,this.basemap,this.layers,this.tables)}))}read(t,r){r={...r,origin:"link-chart"},h(this,t,(r=>super.read(t,r)),r)}_loadFromSource(){return this.sourceJSON?this._loadFromJSON(this.sourceJSON,{origin:"link-chart"}):this.portalItem&&this.portalItem.id?this._loadFromItem(this.portalItem):Promise.resolve()}_loadFromJSON(t,r){const o={context:{...r,layerContainerType:"operational-layers"}};return this.portalItem&&(o.context.portal=this.portalItem.portal||u.getDefault()),import("./layers/support/layersCreator.js").then((({populateOperationalLayers:r})=>{const e=[],i=t.operationalLayers;i&&i.length&&e.push(r(this.layers,i,o));const s={...o,context:{...o.context,layerContainerType:"tables"},defaultLayerType:"ArcGISFeatureLayer"},a=t.tables;return a&&a.length&&e.push(r(this.tables,a,s)),Promise.allSettled(e).then((()=>{}))}))}async _loadFromItem(t){if(await t.load().catch((t=>{throw new o("linkchart:load-portal-item","Failed to load portal item",{error:t})})),t.type!==this.constructor.PORTAL_ITEM_TYPE)throw new o("linkchart:invalid-portal-item",`Invalid portal item type '${t.type}', expected '${this.constructor.PORTAL_ITEM_TYPE}'`,{type:t.type});const r=await t.fetchData();this.sourceJSON=r;const e={origin:"link-chart",url:p(t.itemUrl),portal:t.portal||u.getDefault(),portalItem:t,readResourcePaths:[]};await this._readAndLoadFromJSON(r,e);const i=await f(this.initialViewProperties,t,s.getLogger(this));if(i){const t=this.initialViewProperties?.clone()??new d;t.viewpoint=i,this.initialViewProperties=t}}_readAndLoadFromJSON(t,r){const o=this._validateJSON(t);return this.read(o,r),this._loadFromJSON(o,r)}_validateJSON(t){const r=n.parse(t.version||"","linkchart");return this.constructor.VERSION.validate(r),t.version=`${r.major}.${r.minor}`,t}};S.PORTAL_ITEM_TYPE="Link Chart",S.VERSION=new n(2,27),t([c({type:d,nonNullable:!0,json:{read:{source:["background","initialState.viewpoint","mapRangeInfo","spatialReference"]}}})],S.prototype,"initialViewProperties",void 0),t([c({json:{read:!1}})],S.prototype,"layers",void 0),t([c()],S.prototype,"linkChartProperties",void 0),t([c({type:y})],S.prototype,"portalItem",void 0),t([c()],S.prototype,"sourceJSON",void 0),t([c({json:{read:!1}})],S.prototype,"tables",void 0),S=t([m("esri.LinkChart")],S);const j=S;export{j as default};
