/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{OverlayStretch as e}from"../views/3d/terrain/Overlay.js";import{addProjViewLocalOrigin as i}from"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js";import{FloatPassUniform as o}from"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js";import{glsl as r}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as a}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{VertexAttribute as t}from"../views/3d/webgl-engine/lib/VertexAttribute.js";function s(s){const d=new a,{vertex:n,fragment:u,attributes:l,varyings:c}=d;i(n,s);const{isAttributeDriven:f,usesHalfFloat:v}=s;return l.add(t.POSITION,"vec3"),l.add(t.UV0,"vec2"),f&&(l.add(t.FEATUREATTRIBUTE,"float"),c.add("attributeValue","float")),v&&d.constants.add("compressionFactor","float",.25),c.add("unitCirclePos","vec2"),n.uniforms.add(new o("radius",(({resolutionForScale:i,searchRadius:o},{camera:r,screenToWorldRatio:a})=>2*o*(0===i?1:i/a)*r.pixelRatio/r.fullViewport[2]/e))),n.code.add(r`
    void main() {
      unitCirclePos = uv0;

      vec4 posProj = proj * (view * vec4(${t.POSITION}, 1.0));
      vec4 quadOffset = vec4(unitCirclePos * radius, 0.0, 0.0);

      ${f?r`attributeValue = ${t.FEATUREATTRIBUTE};`:""}
      gl_Position = posProj + quadOffset;
    }
  `),u.code.add(r`
    void main() {
      float radiusRatioSquared = dot(unitCirclePos, unitCirclePos);
      if (radiusRatioSquared > 1.0) {
        discard;
      }

      float oneMinusRadiusRatioSquared = 1.0 - radiusRatioSquared;
      float density = oneMinusRadiusRatioSquared * oneMinusRadiusRatioSquared ${f?r` * attributeValue`:""} ${v?r` * compressionFactor`:""};
      fragColor = vec4(density);
    }
  `),d}const d=Object.freeze(Object.defineProperty({__proto__:null,build:s},Symbol.toStringTag,{value:"Module"}));export{d as H,s as b};
