/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import t from"../TimeExtent.js";import{isSome as e}from"../core/arrayUtils.js";import{eachAlways as n}from"../core/promiseUtils.js";import{offsetDate as i}from"../core/timeUtils.js";function r(t){return void 0!==t.timeInfo}async function o(i,o){if(0===i.length)return t.allTime;const m=i.filter(r);await Promise.all(m.map((t=>t.load({signal:o}))));const s=[],l=[];for(const t of m)"feature"!==t?.type&&"map-image"!==t?.type||!t.timeInfo?.hasLiveData?l.push(t):s.push(t);const f=t=>null==t||t.isAllTime,a=l.map((t=>t.timeInfo?.fullTimeExtent));if(a.some(f))return t.allTime;const u=s.map((async t=>{const{timeExtent:e}=await t.fetchRecomputedExtents({signal:o});return e||t.timeInfo?.fullTimeExtent})),c=(await n(u)).map((t=>t.value));if(c.some(f))return t.allTime;return[...c,...a].filter(e).reduce(((t,e)=>t.union(e)))}function m(e){if(!e)return e;const{start:n,end:r}=e;return new t({start:null!=n?i(n,-n.getTimezoneOffset(),"minutes"):n,end:null!=r?i(r,-r.getTimezoneOffset(),"minutes"):r})}function s(e){if(!e)return e;const{start:n,end:r}=e;return new t({start:null!=n?i(n,n.getTimezoneOffset(),"minutes"):n,end:null!=r?i(r,r.getTimezoneOffset(),"minutes"):r})}export{o as getTimeExtentFromLayers,s as toLocalTimeExtent,m as toUTCTimeExtent};
