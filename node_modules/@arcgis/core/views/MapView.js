/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../Graphic.js";import i from"../Viewpoint.js";import{isSome as r}from"../core/arrayUtils.js";import s from"../core/Collection.js";import a from"../core/CollectionFlattener.js";import n from"../core/Error.js";import has from"../core/has.js";import{isIterable as o}from"../core/iteratorUtils.js";import l from"../core/Logger.js";import{destroyMaybe as p}from"../core/maybe.js";import{throwIfAborted as h}from"../core/promiseUtils.js";import{watch as g,whenOnce as c,sync as u,syncAndInitial as d}from"../core/reactiveUtils.js";import{initialize as m}from"../core/workers/workers.js";import{property as y}from"../core/accessorSupport/decorators/property.js";import{cast as f}from"../core/accessorSupport/decorators/cast.js";import{subclass as w}from"../core/accessorSupport/decorators/subclass.js";import{ensureClass as _}from"../core/accessorSupport/ensureType.js";import{load as M,canProjectWithoutEngine as V,isLoaded as v}from"../geometry/projection.js";import T from"../layers/support/TileInfo.js";import{BreakpointsOwner as S}from"./BreakpointsOwner.js";import{DOMContainer as b}from"./DOMContainer.js";import{PopupView as j}from"./PopupView.js";import k from"./View.js";import L from"./ViewAnimation.js";import O from"./2d/AnimationManager.js";import P from"./2d/FrameTask.js";import{layerView2DImporter as R}from"./2d/layerViewModuleImportUtils.js";import x from"./2d/MapViewConstraints.js";import"./2d/tiling/PagedTileQueue.js";import E from"./2d/tiling/TileInfoView.js";import"./2d/tiling/TileKey.js";import"./2d/tiling/TileQueue.js";import"./2d/tiling/TileStrategy.js";import{create as C,extentToScale as z}from"./2d/viewpointUtils.js";import{ViewStateManager as D}from"./2d/ViewStateManager.js";import G from"./2d/input/MapViewInputManager.js";import q from"./2d/layers/features/support/TileStore.js";import A from"./2d/support/HighlightOptions.js";import{Timeline as I}from"./2d/support/Timeline.js";import N from"./support/createScreenshotPlan.js";import{encode as U,encodeData as F,getMaximumResolutionScale as W,getFormatAndQuality as $}from"./support/screenshotUtils.js";import{isSupportedScreenPointEvent as H,createScreenPointFromSupportedEvent as B}from"./support/screenUtils.js";import{check as Q}from"./support/WebGLRequirements.js";import J from"./ui/DefaultUI.js";import K from"./ui/2d/DefaultUI2D.js";import Y from"../webmap/background/ColorBackground.js";let X,Z,ee,te,ie,re;async function se(){const[,{GraphicsView2D:e,GraphicContainer:t,LabelManager:i,MapViewNavigation:r,MagnifierView2D:s,Stage:a}]=await Promise.all([import("./2d/webglDeps.js"),import("./2d/mapViewDeps.js")]);Z=e,ee=t,te=i,ie=r,re=s,X=a}const ae=160,ne={flipY:!0,premultipliedAlpha:!0};let oe=class extends(S(j(b(k)))){constructor(e){super(e),this._magnifierView=null,this._stage=null,this._resolveWhenReady=[],this.rootLayerViews=new a({getCollections:()=>[this.basemapView?.baseLayerViews,this.layerViews,this.basemapView?.referenceLayerViews],getChildrenFunction:()=>null}),this.featuresTilingScheme=null,this.fullOpacity=1,this.graphicsView=null,this.stateManager=new D({constraints:new x({view:this})}),this.labelManager=null,this.mapViewNavigation=null,this.renderingOptions={samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0},this.rendering=!1,this.supersampleScreenshotsEnabled=!0,this.supportsGround=!1,this._stationaryTimer=null,this._gotoTask=null,this.frameTask=new P(this),this._pePromise=null,this.floors=new s,this.highlightOptions=new A,this.inputManager=new G({view:this}),this.map=null,this.spatialReferenceLocked=!1,this.timeline=new I,this.type="2d",this.ui=new K,this.padding={top:0,right:0,bottom:0,left:0},this.addHandles([g((()=>this.viewpoint),(()=>{this._lastStationaryEventTimestamp=performance.now(),this._flipStationary(ae)}),u),this.on("resize",(e=>this.stateManager.resize(e.width,e.height))),g((()=>this.animationManager?.animation),(e=>{this.animation=e}))]),m()}destroy(){this._set("preconditionsReady",!1),this.frameTask=p(this.frameTask),this._gotoTask=null,this.rootLayerViews.destroy(),this.inputManager.destroy(),this._set("inputManager",null)}get graphicsTileStore(){return new q(this.featuresTilingScheme)}get constraintsInfo(){const e=this.defaultsFromMap?.tileInfo,t=this.spatialReference;return{lods:e?.spatialReference?.equals(t)?e.lods:null,spatialReference:t}}get state(){return this.stateManager.state}get initialExtentRequired(){if(!this.stateManager)return!1;const{scale:e,constraints:t,center:i,viewpoint:r,extent:s}=this;let a=this.zoom;return!(this.map&&"initialViewProperties"in this.map&&this.map.initialViewProperties?.viewpoint)&&(!s&&(t?.effectiveLODs||(a=-1),(!i||0===e&&-1===a)&&(!r||null==r.targetGeometry||"extent"!==r.targetGeometry.type&&!r.scale)))}get resourceManager(){return this._stage.resourceManager}get textureManager(){return this._stage.painter.textureManager}get _defaultsFromMapSettings(){return{required:{tileInfo:!0,heightModelInfo:!1,extent:!1},requiresExtentInSpatialReference:this.spatialReferenceLocked}}get _projectionEngineLoaded(){return!!v()||(this._pePromise||(this._pePromise=M().finally((()=>{this._pePromise=null}))),!1)}get typeSpecificPreconditionsReady(){const e=this._getDefaultViewpoint();if(!e)return!1;const t=this.spatialReference,i=e.targetGeometry;return!!V(i.spatialReference,t)||this._projectionEngineLoaded}set animation(e){const t=this._get("animation");if(e===t)return;if(t&&t.stop(),!e||e.isFulfilled())return void this._set("animation",null);this._set("animation",e),this.frameTask.animationInProgress=!0;const i=()=>{e===this._get("animation")&&(this._set("animation",null),this.frameTask?.requestFrame()),this.frameTask.animationInProgress=!1};e.when(i,i)}get background(){return ce(this.map)?this.map.initialViewProperties.background:null}set background(e){this._override("background",e)}get center(){return this.stateManager?.center??null}set center(e){this.stateManager.center=e}get constraints(){return this.stateManager?.constraints}set constraints(e){e.view=this;const t=this.stateManager.constraints;this.stateManager.constraints=e,t?.destroy()}get extent(){return this.stateManager?.extent??null}set extent(e){this.stateManager.extent=e}get padding(){return this.stateManager?.padding}set padding(e){this.stateManager&&(this.stateManager.padding=e)}get resizeAlign(){return this.stateManager.resizeAlign}set resizeAlign(e){this.stateManager.resizeAlign=e}get resolution(){return this.stateManager.resolution??0}get rotation(){return this.stateManager.rotation??0}set rotation(e){this.stateManager.rotation=e}get scale(){return this.stateManager?.scale??0}set scale(e){this.stateManager&&(this.stateManager.scale=e)}get stationary(){return!(this.animation||this.navigating||this.resizing||this._stationaryTimer)}get updating(){const e=!this.destroyed&&(!this.layerViewManager||!this.labelManager||!this.graphicsView||!0===this.layerViewManager.updating||!0===this.labelManager.updating||!0===this.graphicsView.updating||this.allLayerViews.some((e=>!e.destroyed&&!("layerViews"in e)&&!0===e.updating)));if(has("esri-2d-log-updating")){const t=this.allLayerViews.reduce(((e,t)=>({...e,[t.layer.id]:!t.destroyed&&!("layerViews"in t)&&t.updating})),{});console.log(`Updating MapView: ${e}\n-> Null LayerViewManager: ${!this.layerViewManager}\n-> Null LabelManager: ${!this.labelManager}\n-> Null GraphicsView: ${!this.graphicsView}\n-> layerViewManager.updating: ${this.layerViewManager?.updating}\n-> labelManager.updating: ${this.labelManager?.updating}\n-> graphicsView.updating: ${this.graphicsView?.updating}\n-> allLayerViews: ${JSON.stringify(t)}\n`)}return e}get viewpoint(){return this.stateManager.viewpoint??null}set viewpoint(e){this.stateManager.viewpoint=e,this.frameTask.requestFrame()}get zoom(){return this.stateManager.zoom??-1}set zoom(e){this.stateManager.zoom=e}get navigating(){return!(!this.mapViewNavigation||!this.mapViewNavigation.interacting)}goTo(e,t){if(e)return this.animation&&(this.animation=null),this._createAnimation(),c((()=>this.ready),t).then((()=>{const i={animate:!0,...t},r=C(e,this);return this.animation?.update(r),this._gotoTask={},i.animate?this._gotoAnimated(r,i):this._gotoImmediate(r,i)}));l.getLogger(this).error("#goTo()","target cannot be null or undefined")}async hitTest(e,t){const i=H(e)?B(this,e):e;if(!this.ready||isNaN(i.x)||isNaN(i.y))return{screenPoint:i,results:[]};let s=new Set,a=!1,n=null,o=null;t?.include?ge(t.include,he(this,(e=>s.add(e)),(e=>{n||(n=new Set),n.add(e)}),(e=>s.add(e)),(()=>a=!0))):(a=!0,s=new Set(this.allLayerViews)),t?.exclude&&ge(t.exclude,he(this,(e=>s.delete(e)),(e=>{o||(o=new Set),o.add(e)})));const l=this.allLayerViews.filter((e=>!e.suspended&&s.has(e))).reverse(),p=this.toMap(i);let h=[...a?this.graphicsView.hitTest(p).map((e=>({type:"graphic",graphic:e,layer:null,mapPoint:p}))):[],...await Promise.all(l.map((e=>e.hitTest(p,i))).toArray())].filter(r).flat().filter(r);return n&&(h=h.filter((e=>!("graphic"in e)||!e.graphic||n?.has(pe(e.graphic))))),o&&(h=h.filter((e=>!("graphic"in e)||!e.graphic||!o?.has(pe(e.graphic))))),{screenPoint:i,results:h}}async takeScreenshot(e){const t=this._createScreenshotPlan(e),i=await this._stage.takeScreenshot(t);return U(i,{format:t.format,quality:t.quality,rotation:0,disableDecorations:!1},ne)}async _takeScreenshot(e){const t=this._createScreenshotPlan(e),i=await this._stage.takeScreenshot(t);return F(i,ne)}_createScreenshotPlan(e){e=e??{};const t=this.supersampleScreenshotsEnabled?Math.min(4,W(this.size,Math.min(4096,this._stage.context.parameters.maxTextureSize))):1;let i;e.layers?(i=[],e.layers.forEach((e=>{const t=this.allLayerViews.find((t=>t.layer.id===e.id));t&&"container"in t&&t.container&&i.push(t.container)}))):i=this._stage.children;const{format:r,quality:s}=$(e.format,e.quality);return N(e,t,this.size,this.padding,r,s,i,e.rotation)}get test(){return{takeScreenshot:e=>this._takeScreenshot(e)}}toMap(e){if(!this.ready)return null;const t=H(e)?B(this,e):e;return this.stateManager.toMap(t)}toScreen(e){return this.stateManager.toScreen(e)}on(e,t,i,r){const s=this.inputManager&&this.viewEvents.on(e,t,i,r);return s||super.on(e,t)}hasEventListener(e){return super.hasEventListener(e)||this.viewEvents.hasHandler(e)}whenLayerView(e){return super.whenLayerView(e)}graphicChanged(e){if(this.graphicsView){this.graphicsView.graphicUpdateHandler(e)}}whenReady(){return new Promise((e=>{this.ready?e(this):this._resolveWhenReady.push(e)}))}forceDOMReadyCycle(){this.forceReadyCycle()}getDefaultSpatialReference(){return this.map&&"initialViewProperties"in this.map&&this.map?.initialViewProperties?.spatialReference||this.defaultsFromMap?.spatialReference||null}hasLayerViewModule(e){return R.hasLayerViewModule(e)}importLayerView(e){return R.importLayerView(e)}pixelSizeAt(){return this.ready?this.resolution:(l.getLogger(this).error("#pixelSizeAt()","Map view cannot be used before it is ready"),null)}popupHitTest(e){return this.hitTest(e).then((t=>({...t,mapPoint:this.toMap(e)})))}requestUpdate(){this.ready&&this.frameTask.requestUpdate()}validate(){let e=Q(this.type);return has("safari")&&has("safari")<9&&(e=new n("mapview:browser-not-supported","This browser is not supported by MapView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:has("safari")})),null!=e?(l.getLogger(this).warn("#validate()",e.message),Promise.reject(e)):se()}_createAnimation(){return this.animation&&!this.animation.done||(this.animation=new L),this.animation}_cancellableGoTo(e,t,i){const r=()=>e===this._gotoTask,s=i.then((()=>{r()&&(this.animation=null)})).catch((e=>{throw r()&&(t&&!t.done&&(t.stop(),this.frameTask.animationInProgress=!1),this.animation=null),e})),a=new Promise((e=>e(s)));return t.when().catch((()=>{r()&&a.cancel&&a.cancel()})),a}_gotoImmediate(e,t){const i=this._gotoTask,r=this.animation,s=e.then((e=>{if(h(t),i!==this._gotoTask)throw new n("view:goto-interrupted","Goto was interrupted");this.viewpoint=r.target=e,r.finish()}));return this._cancellableGoTo(i,r,s)}_flipStationary(e){return null!==this._stationaryTimer||(this._stationaryTimer=setTimeout((()=>{this._stationaryTimer=null;const e=performance.now()-this._lastStationaryEventTimestamp;e<ae&&(this._stationaryTimer=this._flipStationary(e))}),e)),this._stationaryTimer}_getDefaultViewpoint(){const{constraints:e,initialExtent:t,map:r,padding:s,size:a}=this;if(!e)return null;const n=r&&"initialViewProperties"in r?r.initialViewProperties:void 0,o=this.stateManager.getUserStartupOptions(this.size),l=n?.viewpoint,p=l?.targetGeometry?.extent??t,h=p?.center,g=l?.rotation??0,c=l?.scale||p&&z(p,[a[0]-s.left-s.right,a[1]-s.top-s.bottom]),u=o.center??h,d=o.rotation??g,m=o.scale??c;return u&&m?new i({targetGeometry:u,scale:m,rotation:d}):null}_gotoAnimated(e,t){const i=this._gotoTask,r=this.animation;if(!r)return Promise.resolve();const s=e.then((e=>{if(h(t),i!==this._gotoTask)throw new n("view:goto-interrupted","Goto was interrupted");return r.update(e),this.animationManager.animate(r,this.viewpoint,t),r.when().then((()=>{}),(()=>{}))}));return this._cancellableGoTo(i,r,s)}_startup(){this.timeline.begin("MapView Startup");const e=this._getDefaultViewpoint();this.stateManager.startup(e,this.size,this.spatialReference,this.defaultsFromMap.extent?.center),this.graphics.owner=this;const t=new X(this.surface,{canvas:this.renderCanvas,supersampleScreenshots:this.supersampleScreenshotsEnabled,contextOptions:{disabledExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},renderingOptions:this.renderingOptions,timeline:this.timeline});this._stage=t,this._magnifierView=new re,this._magnifierView.magnifier=this.magnifier;const i=new te({view:this});this._set("labelManager",i);const r=new O({view:this});this._set("animationManager",r);const s=new ie({view:this,animationManager:r});this._set("mapViewNavigation",s),this._setupSpatialReferenceDependentProperties(),this.handles.add([this.rootLayerViews.on("change",(()=>this._updateStageChildren())),t.on("post-render",(()=>this._set("rendering",t.renderRequested))),t.on("will-render",(()=>this._set("rendering",t.renderRequested))),t.on("webgl-error",(e=>this.fatalError=e.error)),g((()=>this.stationary),(e=>t.stationary=e),d),g((()=>this.background),(e=>{t.backgroundColor=e?.color,this._magnifierView.backgroundColor=e?.color}),d),g((()=>this.magnifier),(e=>this._magnifierView.magnifier=e),d),g((()=>this.renderingOptions),(e=>t.renderingOptions=e),d),g((()=>this.highlightOptions),(e=>t.highlightOptions=e),d),g((()=>this.state.id),(()=>t.state=this.state),d)],"map-view"),this._updateStageChildren();const a=this._resolveWhenReady;this._resolveWhenReady=[],a.forEach((e=>e(this))),this.timeline.end("MapView Startup"),this.frameTask.start(),this._set("ready",!0)}_teardown(){this._destroySpatialReferenceDependentProperties(),this.handles.remove("map-view"),this.mapViewNavigation.destroy(),this._set("mapViewNavigation",null),this.animationManager.destroy(),this._set("animationManager",null),this.layerViewManager.clear(),this.labelManager.destroy(),this._magnifierView.destroy(),this._stage.destroy(),this._stage=null,this._set("graphicsView",null),this._magnifierView=null,this._set("labelManager",null),this._set("mapViewNavigation",null),this.graphics.owner=null,this.frameTask.stop(),this._stationaryTimer&&(clearTimeout(this._stationaryTimer),this._stationaryTimer=null),this._set("ready",!1),this.stateManager.teardown(),this.animation=null}_updateStageChildren(){this._stage.removeAllChildren(),this.rootLayerViews.forEach((e=>{this._stage.addChild(e.container)}));const e=this.graphicsView;this._stage.addChild(e.container),this._stage.addChild(this._magnifierView)}_setupSpatialReferenceDependentProperties(){const e=new E(T.create({spatialReference:this.spatialReference,size:512,numLODs:36}));this._set("featuresTilingScheme",e);const t=new Z({view:this,graphics:this.graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new ee(e)});this._set("graphicsView",t)}_destroySpatialReferenceDependentProperties(){const e=this.graphicsView;this._set("graphicsView",null),e.destroy(),this._set("featuresTilingScheme",null)}_spatialReferenceChanged(e){if(this.ready){this.frameTask.stop();for(const e of this.allLayerViews)e.processDetach();this._destroySpatialReferenceDependentProperties(),this.stateManager.changeSpatialReference(e),this._stage.state=this.state,this._setupSpatialReferenceDependentProperties();for(const e of this.allLayerViews)e.processAttach();this.frameTask.requestFrame(),this.frameTask.start(),this._updateStageChildren()}}};oe.type="2d",e([y({readOnly:!0})],oe.prototype,"animationManager",void 0),e([y({constructOnly:!0})],oe.prototype,"deactivatedWebGLExtensions",void 0),e([y({constructOnly:!0})],oe.prototype,"debugWebGLExtensions",void 0),e([y({readOnly:!0})],oe.prototype,"featuresTilingScheme",void 0),e([y({readOnly:!0})],oe.prototype,"fullOpacity",void 0),e([y({readOnly:!0})],oe.prototype,"graphicsTileStore",null),e([y()],oe.prototype,"graphicsView",void 0),e([y()],oe.prototype,"stateManager",void 0),e([y()],oe.prototype,"constraintsInfo",null),e([y({readOnly:!0})],oe.prototype,"state",null),e([y()],oe.prototype,"initialExtentRequired",null),e([y()],oe.prototype,"labelManager",void 0),e([y({readOnly:!0})],oe.prototype,"resourceManager",null),e([y({readOnly:!0})],oe.prototype,"textureManager",null),e([y({readOnly:!0})],oe.prototype,"mapViewNavigation",void 0),e([y({constructOnly:!0})],oe.prototype,"renderCanvas",void 0),e([y()],oe.prototype,"renderingOptions",void 0),e([y({readOnly:!0})],oe.prototype,"rendering",void 0),e([y({constructOnly:!0})],oe.prototype,"supersampleScreenshotsEnabled",void 0),e([y({readOnly:!0})],oe.prototype,"supportsGround",void 0),e([y()],oe.prototype,"_stationaryTimer",void 0),e([y()],oe.prototype,"_defaultsFromMapSettings",null),e([y()],oe.prototype,"_pePromise",void 0),e([y({readOnly:!0})],oe.prototype,"typeSpecificPreconditionsReady",null),e([y()],oe.prototype,"animation",null),e([y({type:Y})],oe.prototype,"background",null),e([y()],oe.prototype,"center",null),e([y({type:x})],oe.prototype,"constraints",null),e([y()],oe.prototype,"extent",null),e([y()],oe.prototype,"floors",void 0),e([y({type:A})],oe.prototype,"highlightOptions",void 0),e([y({readOnly:!0})],oe.prototype,"inputManager",void 0),e([y()],oe.prototype,"map",void 0),e([y()],oe.prototype,"padding",null),e([y()],oe.prototype,"resizeAlign",null),e([y({readOnly:!0})],oe.prototype,"resolution",null),e([y()],oe.prototype,"rotation",null),e([y()],oe.prototype,"scale",null),e([y({constructOnly:!0})],oe.prototype,"spatialReferenceLocked",void 0),e([y()],oe.prototype,"stationary",null),e([y({type:I,readOnly:!0})],oe.prototype,"timeline",void 0),e([y({readOnly:!0})],oe.prototype,"type",void 0),e([y({readOnly:!0})],oe.prototype,"updating",null),e([y()],oe.prototype,"viewpoint",null),e([y()],oe.prototype,"zoom",null),e([y({readOnly:!0})],oe.prototype,"navigating",null),e([y(),f((e=>e instanceof J?e:_(K,e)))],oe.prototype,"ui",void 0),oe=e([w("esri.views.MapView")],oe);const le=oe;function pe(e){const t=e.getObjectId();return t?`${e.layer?.uid??e.sourceLayer?.uid??"MapView"}/${t}`:`"MapView/${e.uid}`}function he(e,i,r,s,a){return n=>{if(n instanceof t){if(n.layer===e)a?.();else{const t=e.allLayerViews.find((e=>e.layer===n.layer));t&&s?.(t)}r(pe(n))}else{const t=e.allLayerViews.find((e=>e.layer===n));t&&i(t)}}}function ge(e,t){if(e)if(o(e))for(const i of e)if(o(i))for(const e of i)t(e);else t(i);else t(e)}function ce(e){return"esri.WebMap"===e?.declaredClass}export{le as default};
