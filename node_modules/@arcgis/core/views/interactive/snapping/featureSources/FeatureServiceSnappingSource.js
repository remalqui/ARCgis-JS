/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import{HandleOwnerMixin as r}from"../../../../core/HandleOwner.js";import{destroyHandle as i}from"../../../../core/handleUtils.js";import{throwIfAborted as s,ignoreAbortErrors as o}from"../../../../core/promiseUtils.js";import{watch as a,on as n,initial as l,sync as u}from"../../../../core/reactiveUtils.js";import{signal as p}from"../../../../core/signal.js";import{property as c}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as d}from"../../../../core/accessorSupport/decorators/subclass.js";import{elevationContextAffectsAlignment as h}from"../../../../support/elevationInfoUtils.js";import{FeatureServiceTiles2D as y}from"../../../2d/interactive/snapping/featureSources/featureServiceSource/FeatureServiceTiles2D.js";import{FeatureServiceTiles3D as g}from"../../../3d/interactive/snapping/featureSources/featureServiceSource/FeatureServiceTiles3D.js";import{convertSnappingCandidate as f,makeGetGroundElevation as m}from"./queryEngineUtils.js";import{WorkerTileTreeDebugger as v}from"./WorkerTileTreeDebugger.js";import{FeatureServiceSnappingSourceWorkerHandle as S}from"./featureServiceSource/FeatureServiceSnappingSourceWorkerHandle.js";import{FeatureServiceTilesSimple as _}from"./featureServiceSource/FeatureServiceTilesSimple.js";import w from"../../../support/debugFlags.js";let b=class extends(r(t)){get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){return this._workerHandle?.updating||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=null!=e?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._workerHandle=null,this._debug=null}initialize(){let e;const t=this.view;if(null!=t)switch(t.type){case"2d":this._tilesOfInterest=new y({view:t,layer:this._layer}),e=this._workerHandle=new S;break;case"3d":{const{resourceController:r}=t,i=this._layer,u=t.whenLayerView(i);this._tilesOfInterest=new g({view:t}),e=this._workerHandle=new S({schedule:e=>r.immediate.schedule(e),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(e,t)=>{const r=await u;return s(t),r.elevationAlignPointsInFeatures(e,t)},queryForSymbologySnapping:async(e,t)=>{const r=await u;return s(t),r.queryForSymbologySnapping(e,t)}});const c=p(null);u.then((e=>c.value=e)),this.addHandles([t.elevationProvider.on("elevation-change",(({context:t})=>{const{elevationInfo:r}=i;h(t,r)&&o(e.notifyElevationSourceChange())})),a((()=>i.elevationInfo),(()=>o(e.notifyElevationSourceChange())),l),a((()=>c.value?.processor?.renderer),(()=>o(e.notifySymbologyChange())),l),a((()=>c.value?.symbologySnappingSupported??!1),(t=>o(e.setSymbologySnappingSupported(t))),l),n((()=>c.value?.layer),["edits","apply-edits","graphic-update"],(()=>e.notifySymbologyChange()))]);break}}else this._tilesOfInterest=new _({layer:this._layer}),e=this._workerHandle=new S;this.handles.add([i(e)]),o(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this.updatingHandles.add((()=>this._updateTilesParameters),(()=>o(e.updateTiles(this._updateTilesParameters,null))),l),this.handles.add([a((()=>this.configuration),(t=>o(e.configure(t,null))),u)]),null!=t&&this.handles.add(a((()=>w.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES),(r=>{r&&!this._debug?(this._debug=new v({view:t,handle:e}),this.handles.add(i(this._debug),"debug")):!r&&this._debug&&this.handles.remove("debug")}),l)),this.handles.add(this.layerSource.layer.on("apply-edits",(t=>{o(e.applyEdits(t,null))})))}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:r,point:i}=e;this._tilesOfInterest.pointOfInterest=r.arrayToPoint(i);const s=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map((e=>f(e,s)))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return m(this.view)}};e([c({constructOnly:!0})],b.prototype,"spatialReference",void 0),e([c({constructOnly:!0})],b.prototype,"layerSource",void 0),e([c({constructOnly:!0})],b.prototype,"view",void 0),e([c()],b.prototype,"_tilesOfInterest",void 0),e([c({readOnly:!0})],b.prototype,"_updateTilesParameters",null),e([c({readOnly:!0})],b.prototype,"updating",null),e([c({readOnly:!0})],b.prototype,"configuration",null),e([c({readOnly:!0})],b.prototype,"availability",null),e([c()],b.prototype,"_getGroundElevation",null),b=e([d("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],b);export{b as FeatureServiceSnappingSource};
