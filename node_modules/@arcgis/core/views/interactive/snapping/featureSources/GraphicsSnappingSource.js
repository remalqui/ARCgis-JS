/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import{removeUnordered as s}from"../../../../core/arrayUtils.js";import{createTask as o}from"../../../../core/asyncUtils.js";import{HandleOwnerMixin as r}from"../../../../core/HandleOwner.js";import{eachAlwaysValues as i,throwIfAborted as n,whenOrAbort as a}from"../../../../core/promiseUtils.js";import{initial as l,watch as p,on as c}from"../../../../core/reactiveUtils.js";import{property as d}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/has.js";import{subclass as u}from"../../../../core/accessorSupport/decorators/subclass.js";import h from"../../../../geometry/Polygon.js";import{canProjectWithoutEngine as y,project as g,initializeProjection as m}from"../../../../geometry/projection.js";import{normalizeCentralMeridianForDisplay as f}from"../../../../geometry/support/normalizeUtilsSync.js";import{featureGeometryTypeKebabDictionary as _}from"../../../../geometry/support/typeUtils.js";import{convertFromGeometry as v}from"../../../../layers/graphics/featureConversionUtils.js";import{OptimizedFeature as S}from"../../../../layers/graphics/OptimizedFeature.js";import w from"../../../../layers/graphics/data/FeatureStore.js";import{QueryEngine as j}from"../../../../layers/graphics/data/QueryEngine.js";import{elevationContextAffectsAlignment as b}from"../../../../support/elevationInfoUtils.js";import{symbolHasExtrudeSymbolLayer as E}from"../../../../symbols/support/utils.js";import{sortCandidatesInPlace as k,makeSnappingQuery as C}from"../snappingUtils.js";import{convertSnappingCandidate as F,makeGetGroundElevation as A}from"./queryEngineUtils.js";import{getSnappingCandidateElevationAligner as P}from"./snappingCandidateElevationAlignment.js";import{getSnappingCandidateElevationFilter as R}from"./snappingCandidateElevationFilter.js";import{getSymbologySnappingCandidatesFetcher as G}from"./symbologySnappingCandidates.js";const I="graphics-collections";let O=class extends(r(t)){get updating(){return this.updatingHandles.updating}get _hasZ(){const e=this.view;return null!=e&&"3d"===e.type&&"map-notes"!==this.layerSource.layer.type}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,s=null!=e&&"3d"===e.type;if(!s||"map-notes"===t.type)return P();const o=async(s,o)=>(await a(e.whenLayerView(t),o)).elevationAlignPointsInFeatures(s,o);return P(s,{elevationInfo:t.elevationInfo,alignPointsInFeatures:o,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=null!=e&&"3d"===e.type&&"map-notes"!==this.layerSource.layer.type;return R(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,s=null!=e&&"3d"===e.type,o=this._extrudedPolygonSymbolsCount>0;return s&&"map-notes"!==t.type&&o?G(o,(async(s,o)=>{const r=await e.whenLayerView(t);return n(o),r.queryForSymbologySnapping({candidates:s,spatialReference:e.spatialReference},o)})):G()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources((e=>this._destroySource(e)))}initialize(){this.updatingHandles.add((()=>this.getGraphicsLayers()),(e=>{this.updatingHandles.removeHandles(I);for(const t of e)this._addMany(t.graphics.toArray()),this.handles.add([t.on("graphic-update",(e=>this._onGraphicUpdate(e))),this.updatingHandles.addOnCollectionChange((()=>t.graphics),(e=>this._onGraphicsChanged(e)))],I)}),l);const{view:e}=this,{layer:t}=this.layerSource;null!=e&&"3d"===e.type&&"map-notes"!==t.type&&this.addHandles([e.elevationProvider.on("elevation-change",(({context:e})=>{b(e,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()})),p((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),l),c((()=>t),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))])}async fetchCandidates(e,t){const{point:s}=e,o=await i(this._mapSources((s=>this._fetchCandidatesForSource(s,e,t))));n(t);const r=this._getGroundElevation,a=o.flat().map((e=>F(e,r)));return k(s,a),a}get _getGroundElevation(){return A(this.view)}async _fetchCandidatesForSource(e,t,s){const o=C(t,this.view?.type??"2d"),r=await e.queryEngine.executeQueryForSnapping(o,s);n(s);const i=await this._snappingElevationAligner.alignCandidates(r.candidates,s);n(s);const a=await this._symbologySnappingFetcher.fetch(i,s);n(s);const l=0===a.length?i:[...i,...a];return this._snappingElevationFilter.filter(o,l)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some((t=>t.graphics.includes(e.graphic))))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],s=new Map;for(const o of e)null!=o.geometry&&(this._needsInitializeProjection(o.geometry.spatialReference)?(t.push(o.geometry.spatialReference),s.set(o.uid,o)):this._add(o));this._createPendingAdd(t,s)}_createPendingAdd(e,t){if(!e.length)return;const r=o((async s=>{await m(e.map((e=>({source:e,dest:this.spatialReference}))),{signal:s}),this._markLoadedSpatialReferences(e);for(const[,e]of t)this._add(e)}));this.updatingHandles.addPromise(r.promise);const i={task:r,graphics:t},n=()=>s(this._pendingAdds,i);r.promise.then(n,n),this._pendingAdds.push(i)}_markLoadedSpatialReferences(e){for(const t of e)null!=t.wkid&&this._loadedWkids.add(t.wkid),null!=t.wkt&&this._loadedWkts.add(t.wkt)}_add(e){if(null==e.geometry||!e.visible)return;let t=e.geometry;if("mesh"===t.type)return;"extent"===t.type&&(t=h.fromExtent(t));const s=this._ensureSource(t.type);if(null==s)return;const o=this._createOptimizedFeature(e.uid,t);null!=o&&(s.featureStore.add(o),E(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){return(null==e.wkid||!this._loadedWkids.has(e.wkid))&&((null==e.wkt||!this._loadedWkts.has(e.wkt))&&!y(e,this.spatialReference))}_createOptimizedFeature(e,t){const s=g(f(t),this.spatialReference);if(!s)return null;const o=this._ensureGeometryHasZ(s),r=v(o,this._hasZ,!1);return new S(r,{[U]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=e=>{for(;e.length<3;)e.push(0)},s=e.clone();switch(s.hasZ=!0,s.type){case"point":s.z=s.z??0;break;case"multipoint":s.points.forEach(t);break;case"polyline":s.paths.forEach((e=>e.forEach(t)));break;case"polygon":s.rings.forEach((e=>e.forEach(t)))}return s}_ensureSource(e){const t=this._sources[e];if(null!=t)return t;const s=this._createSource(e);return this._sources[e]=s,s}_createSource(e){const t=_.toJSON(e),s=this._hasZ,o=new w({geometryType:t,hasZ:s,hasM:!1});return{featureStore:o,queryEngine:new j({featureStore:o,fields:[{name:U,type:"esriFieldTypeOID",alias:U}],geometryType:t,hasM:!1,hasZ:s,objectIdField:U,spatialReference:this.spatialReference,scheduler:null!=this.view&&"3d"===this.view.type?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this._pendingAdds)t.graphics.delete(e.uid),0===t.graphics.size&&t.task.abort()}_removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&(e.featureStore.removeById(t.uid),E(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:s,polyline:o,multipoint:r}=this._sources,i=[];return null!=t&&i.push(e(t)),null!=s&&i.push(e(s)),null!=o&&i.push(e(o)),null!=r&&i.push(e(r)),i}};e([d()],O.prototype,"getGraphicsLayers",void 0),e([d({constructOnly:!0})],O.prototype,"layerSource",void 0),e([d({constructOnly:!0})],O.prototype,"spatialReference",void 0),e([d({constructOnly:!0})],O.prototype,"view",void 0),e([d({readOnly:!0})],O.prototype,"updating",null),e([d({readOnly:!0})],O.prototype,"availability",void 0),e([d()],O.prototype,"_hasZ",null),e([d()],O.prototype,"_snappingElevationAligner",null),e([d()],O.prototype,"_snappingElevationFilter",null),e([d()],O.prototype,"_symbologySnappingFetcher",null),e([d()],O.prototype,"_extrudedPolygonSymbolsCount",void 0),e([d()],O.prototype,"_getGroundElevation",null),O=e([u("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],O);const U="OBJECTID";export{O as GraphicsSnappingSource};
