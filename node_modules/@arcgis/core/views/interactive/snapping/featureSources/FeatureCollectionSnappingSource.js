/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import{throwIfAborted as i,whenOrAbort as n}from"../../../../core/promiseUtils.js";import{watch as r,initial as o,on as a}from"../../../../core/reactiveUtils.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as p}from"../../../../core/accessorSupport/decorators/subclass.js";import{elevationContextAffectsAlignment as l}from"../../../../support/elevationInfoUtils.js";import{makeFilter as y,makeSnappingQuery as c}from"../snappingUtils.js";import{convertSnappingCandidate as u,makeGetGroundElevation as g}from"./queryEngineUtils.js";import{getSnappingCandidateElevationAligner as h}from"./snappingCandidateElevationAlignment.js";import{getSnappingCandidateElevationFilter as m}from"./snappingCandidateElevationFilter.js";import{getSymbologySnappingCandidatesFetcher as d}from"./symbologySnappingCandidates.js";let v=class extends t{get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=null!=e&&"3d"===e.type;if(!i||"subtype-group"===t.type)return h();const r=async(i,r)=>(await n(e.whenLayerView(t),r)).elevationAlignPointsInFeatures(i,r);return h(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:r,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=null!=e&&"3d"===e.type&&"subtype-group"!==this.layerSource.layer.type;return m(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return null!=e&&"3d"===e.type&&"subtype-group"!==t.type?d(this._symbologySnappingSupported,(async(n,r)=>{const o=await e.whenLayerView(t);return i(r),o.queryForSymbologySnapping({candidates:n,spatialReference:e.spatialReference},r)})):d()}get _symbologySnappingSupported(){return null!=this._layerView3D&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;null!=e&&"3d"===e.type&&"subtype-group"!==t.type&&(e.whenLayerView(t).then((e=>this._layerView3D=e)),this.addHandles([e.elevationProvider.on("elevation-change",(({context:e})=>{const{elevationInfo:i}=t;l(e,i)&&this._snappingElevationAligner.notifyElevationSourceChange()})),r((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),o),r((()=>null!=this._layerView3D?this._layerView3D.processor?.renderer:null),(()=>this._symbologySnappingFetcher.notifySymbologyChange()),o),a((()=>this._layerView3D?.layer),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))]))}constructor(e){super(e),this.view=null,this._layerView3D=null}refresh(){}async fetchCandidates(e,t){const{layer:n}=this.layerSource,r=n.source;if(!r?.querySnapping)return[];const o=y(n),a=c(e,this.view?.type??"2d",o),s=await r.querySnapping(a,{signal:t});i(t);const p=await this._snappingElevationAligner.alignCandidates(s.candidates,t);i(t);const l=await this._symbologySnappingFetcher.fetch(p,t);i(t);const g=0===l.length?p:[...p,...l],h=this._snappingElevationFilter.filter(a,g),m=this._getGroundElevation;return h.map((e=>u(e,m)))}get _getGroundElevation(){return g(this.view)}};e([s({constructOnly:!0})],v.prototype,"layerSource",void 0),e([s({constructOnly:!0})],v.prototype,"view",void 0),e([s()],v.prototype,"_snappingElevationAligner",null),e([s()],v.prototype,"_snappingElevationFilter",null),e([s()],v.prototype,"_symbologySnappingFetcher",null),e([s()],v.prototype,"_layerView3D",void 0),e([s()],v.prototype,"_symbologySnappingSupported",null),e([s()],v.prototype,"_getGroundElevation",null),v=e([p("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],v);export{v as FeatureCollectionSnappingSource};
