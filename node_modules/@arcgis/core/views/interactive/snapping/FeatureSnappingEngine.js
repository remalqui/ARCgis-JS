/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{HandleOwner as t}from"../../../core/HandleOwner.js";import r from"../../../core/Handles.js";import{someMap as n}from"../../../core/MapUtils.js";import{eachAlwaysValues as s,throwIfAborted as o}from"../../../core/promiseUtils.js";import{sync as a,watch as i,syncAndInitial as u}from"../../../core/reactiveUtils.js";import{property as c}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import{k as p}from"../../../chunks/vec2.js";import{d,c as h}from"../../../chunks/vec3.js";import{c as g}from"../../../chunks/vec3f64.js";import{g as S}from"../../../chunks/common.js";import{absoluteHeightElevationInfo as m}from"../../../support/elevationInfoUtils.js";import{VerticalHalfPlaneConstraint as y}from"./SnappingConstraint.js";import{SnappingDomain as f}from"./SnappingDomain.js";import{anyMapPointToSnappingPoint as w}from"./SnappingPoint.js";import{sortCandidatesInPlace as v,screenDistance as _}from"./snappingUtils.js";import{DrapedEdgeSnappingCandidate as j}from"./candidates/DrapedEdgeSnappingCandidate.js";import{EdgeSnappingCandidate as C}from"./candidates/EdgeSnappingCandidate.js";import{FeatureSnappingCandidate as F}from"./candidates/FeatureSnappingCandidate.js";import{RightAngleSnappingCandidate as x,OtherVertexType as b}from"./candidates/RightAngleSnappingCandidate.js";import{vectorToScreenPoint as L}from"../support/viewUtils.js";let M=class extends t{get updating(){return n(this.snappingSources,(({snappingSource:e})=>e.updating))||this.updatingHandles.updating}get snappingSources(){const e=this._get("snappingSources")||new Map,t=new Map;if(null!=this.options&&null!=this.options.featureSources)for(const r of this.options.featureSources.items){const n=r.layer.uid,s=e.get(n);if(s){e.delete(n),t.set(n,s);continue}if(!r.layer.loaded){this.updatingHandles.addPromise(r.layer.load());continue}const o=this._createSourceInfo(r);null!=o&&t.set(n,o)}for(const[,r]of e)r.destroy();return t}constructor(e){super(e),this.options=null,this._domain=f.FEATURE,this._sourceModules={featureService:{module:null,loader:null},featureCollection:{module:null,loader:null},graphics:{module:null,loader:null},notes:{module:null,loader:null},scene:{module:null,loader:null}}}initialize(){this.updatingHandles.add((()=>this.snappingSources),(()=>this.notifyChange("updating")),a),null!=this.view&&this.handles.add([this.view.on("layerview-create",(e=>this._updateLayerView(e.layer,e.layerView))),this.view.on("layerview-destroy",(e=>this._updateLayerView(e.layer,null)))])}_updateLayerView(e,t){for(const[,r]of this.snappingSources)r.snappingSource.layerSource.layer===e&&(r.layerView=t)}destroy(){this._set("options",null);for(const[,e]of this.snappingSources)e.destroy()}async fetchCandidates(e,t,r,n){if(!(t&this._domain&&null!=this.options&&this.options.effectiveFeatureEnabled))return[];const a=[],i=this._computeScreenSizeDistanceParameters(e,r),u={distance:i,mode:this.view?.type??"2d",point:e,coordinateHelper:r.coordinateHelper,...this._types};for(const[,{snappingSource:s,layerView:o}]of this.snappingSources)!s.layerSource.enabled||null!=o&&o.suspended||a.push(s.fetchCandidates(u,n).then((e=>e.filter((e=>!this._candidateIsExcluded(s,e,r.excludeFeature))))));const c=(await s(a)).flat();return this._addRightAngleCandidates(c,e,i,r),o(n),v(e,c),c}_addRightAngleCandidates(e,t,r,n){const s=null!=n.vertexHandle?n.vertexHandle.rightEdge?.rightVertex?.pos:null!=n.editGeometryOperations&&"polygon"===n.editGeometryOperations.data.type?n.editGeometryOperations.data.components[0]?.getFirstVertex()?.pos:null,o=null!=n.vertexHandle?n.vertexHandle.leftEdge?.leftVertex?.pos:null!=n.editGeometryOperations?n.editGeometryOperations.data.components[0]?.getLastVertex()?.pos:null,{view:a}=this,i=w(s,a,n),u=w(o,a,n),c=e.length;for(let l=0;l<c;l++)this._addRightAngleCandidate(e[l],u,t,r,e),this._addRightAngleCandidate(e[l],i,t,r,e)}_addRightAngleCandidate(e,t,r,n,s){if(null==t||!H(e))return;const o=e.constraint.closestTo(t),a=(o[0]-r[0])/n.x,i=(o[1]-r[1])/n.y,{start:u,end:c}=e.constraint;if(a*a+i*i<=1){const r=new x({targetPoint:o,otherVertex:t,otherVertexType:b.NEXT,previousVertex:p(o,u)>p(o,c)?u:c,constraint:new y(t,o),objectId:e.objectId,isDraped:e.isDraped});s.push(r)}}_computeScreenSizeDistanceParameters(e,t){let r=null!=this.options?this.options.distance*("touch"===t.pointer?this.options.touchSensitivityMultiplier:1):0;return null==this.view?{x:r,y:r,z:r,distance:r}:"2d"===this.view.type?(r*=this.view.resolution,{x:r,y:r,z:r,distance:r}):this._computeScreenSizeDistanceParameters3D(e,r,this.view,t)}_computeScreenSizeDistanceParameters3D(e,t,r,n){const{spatialReference:s}=n;r.renderCoordsHelper.toRenderCoords(e,s,P);const o=r.state.camera.computeScreenPixelSizeAt(P),a=o*r.renderCoordsHelper.unitInMeters/r.mapCoordsHelper.unitInMeters,i=t*a,u=L(e,s,m,r),c=u?I(u,e,a,0,0,r,n):0,l=u?I(u,e,0,a,0,r,n):0,p=u?I(u,e,0,0,a,r,n):0;return{x:0===c?0:i/c,y:0===l?0:i/l,z:0===p?0:i/p,distance:o*t}}get _types(){return{returnEdge:!0,returnVertex:!0}}_candidateIsExcluded(e,t,r){if(null==r)return!1;const n=this._getCandidateObjectId(t);if(null==n)return!1;const s=e.layerSource.layer;return"graphics"===s.type?r.uid===n:r.sourceLayer===s&&(!(!r.attributes||!("objectIdField"in s))&&r.attributes[s.objectIdField]===n)}_getCandidateObjectId(e){return e instanceof F?e.objectId:null}_createSourceInfo(e){const t=this._createFeatureSnappingSourceType(e);if(null==t)return null;if("loading"in t)return this.updatingHandles.addPromise(t.loading.then((()=>{this.destroyed||this.notifyChange("snappingSources")}))),null;const r=null!=this.view?this.view.allLayerViews.find((t=>t.layer===e.layer)):null;return new R(t.source,r)}_createFeatureSnappingSourceType(e){switch(e.layer.type){case"feature":case"geojson":case"csv":case"oriented-imagery":case"subtype-group":case"wfs":return this._createFeatureSnappingSourceFeatureLayer(e);case"graphics":return this._createFeatureSnappingSourceGraphicsLayer(e);case"map-notes":return this._createFeatureSnappingSourceMapNotesLayer(e);case"scene":case"building-scene":return this._createFeatureSnappingSourceSceneLayer(e)}return null}_createFeatureSnappingSourceSceneLayer(e){const{view:t}=this;if(null==t||"3d"!==t.type)return null;const r=this._getSourceModule("scene");return null!=r.module?{source:new r.module.SceneLayerSnappingSource({layerSource:e,view:t})}:{loading:r.loader}}_createFeatureSnappingSourceFeatureLayer(e){switch(e.layer.source?.type){case"feature-layer":case"oriented-imagery":{const t=this._getSourceModule("featureService");return null!=t.module?{source:new t.module.FeatureServiceSnappingSource({spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}}case"memory":case"csv":case"geojson":case"wfs":{if("mesh"===e.layer.geometryType)return null;const t=this._getSourceModule("featureCollection");return null!=t.module?{source:new t.module.FeatureCollectionSnappingSource({layerSource:e,view:this.view})}:{loading:t.loader}}}return null}_createFeatureSnappingSourceGraphicsLayer(e){const t=this._getSourceModule("graphics");return null!=t.module?{source:new t.module.GraphicsSnappingSource({getGraphicsLayers:()=>[e.layer],spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}}_createFeatureSnappingSourceMapNotesLayer(e){const t=this._getSourceModule("notes");return null!=t.module?{source:new t.module.GraphicsSnappingSource({getGraphicsLayers:()=>null!=e.layer.sublayers?e.layer.sublayers.toArray():[],spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}}_getSourceModule(e){const t=this._sourceModules[e];if(null==t.loader){const r=this._loadSourceModule(e).then((e=>{t.module=e}));return t.loader=r,{module:t.module,loader:r}}return{module:t.module,loader:t.loader}}_loadSourceModule(e){const t=this.updatingHandles;switch(e){case"featureService":return t.addPromise(import("./featureSources/FeatureServiceSnappingSource.js"));case"featureCollection":return t.addPromise(import("./featureSources/FeatureCollectionSnappingSource.js"));case"graphics":case"notes":return t.addPromise(import("./featureSources/GraphicsSnappingSource.js"));case"scene":return t.addPromise(import("./featureSources/SceneLayerSnappingSource.js"))}}};e([c({constructOnly:!0})],M.prototype,"spatialReference",void 0),e([c({constructOnly:!0})],M.prototype,"view",void 0),e([c()],M.prototype,"options",void 0),e([c({readOnly:!0})],M.prototype,"updating",null),e([c({readOnly:!0})],M.prototype,"snappingSources",null),M=e([l("esri.views.interactive.snapping.FeatureSnappingEngine")],M);class R{constructor(e,t){this.snappingSource=e,this.layerView=t,this.handles=new r;const n=this.snappingSource.layerSource.layer;if("refresh"in n){const t=n;this.handles.add(t.on("refresh",(()=>e.refresh())))}this.handles.add([i((()=>e.updating),(t=>e.layerSource.updating=t),u),i((()=>e.availability),(t=>e.layerSource.availability=t),u)])}destroy(){this.snappingSource.destroy(),this.handles.destroy()}}function H(e){return(e instanceof C||e instanceof j)&&!V(e)}function V({constraint:{start:e,end:t}}){const r=d(e,t),n=p(e,t);return r<S()||n/r<G}function I(e,t,r,n,s,o,{spatialReference:a}){const i=h(E,t);i[0]+=r,i[1]+=n,i[2]+=s;const u=L(i,a,m,o);return u?_(u,e):1/0}const P=g(),E=g(),G=1e-4;export{M as FeatureSnappingEngine};
