/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Graphic.js";import i from"../../core/Evented.js";import{HandleOwnerMixin as o}from"../../core/HandleOwner.js";import{makeHandle as r}from"../../core/handleUtils.js";import{destroyMaybe as l}from"../../core/maybe.js";import{createLength as n,zeroMeters as a,zeroSquareMeters as s}from"../../core/quantityUtils.js";import{watch as p,syncAndInitial as c}from"../../core/reactiveUtils.js";import{getMetersPerVerticalUnitForSR as h}from"../../core/unitUtils.js";import{property as u}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import{subclass as d}from"../../core/accessorSupport/decorators/subclass.js";import y from"../../layers/GraphicsLayer.js";import{getConvertedElevation as m}from"../../support/elevationInfoUtils.js";import{createSquare as g,createRectangle as f,createCircle as v,createEllipse as _,createPolygon as w,createPolyline as O,createMultipoint as T}from"./support/createUtils.js";import{getDrawHelpMessage as G}from"./support/helpMessageUtils.js";import{createViewAlignedCoordinateSystem as x}from"./support/surfaceCoordinateSystems.js";import{InteractiveToolBase as V}from"../interactive/InteractiveToolBase.js";import b from"../interactive/sketch/SketchLabelOptions.js";import S from"../interactive/sketch/SketchTooltipOptions.js";import{DrawPointTooltipInfo as I,DrawPolylineTooltipInfo as j,DrawPolygonTooltipInfo as M,DrawMeshTooltipInfo as U,DrawRectangleTooltipInfo as C,DrawCircleTooltipInfo as z}from"../interactive/tooltip/DrawTooltipInfos.js";import{Tooltip as k}from"../interactive/tooltip/Tooltip.js";import{autoAreaByElevationMode as P}from"../support/automaticAreaMeasurementUtils.js";import{autoLengthByElevationMode as A,autoHorizontalDistanceByElevationModeBetweenPoints as R}from"../support/automaticLengthMeasurementUtils.js";class D{constructor(){this.regularVertices=null,this.activeVertex=null,this.full=null,this.outline=null,this.circle=null,this.rectangle=null}}let E=class extends(o(i.EventedMixin(V))){constructor(e){super(e),this._graphic=null,this._createOperationGeometry=null,this.defaultZ=0,this.geometryType=null,this.hasZ=!0,this.labelOptions=new b,this.geometryToPlace=null,this.mode=null,this.snappingManager=null,this.snapToScene=!1,this.tooltip=null,this.tooltipOptions=new S}initialize(){this.internalGraphicsLayer=new y({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer),this.drawOperation=this.makeDrawOperation(),this.handles.add([this.drawOperation.on("vertex-add",(e=>this.onVertexAdd(e))),this.drawOperation.on("vertex-remove",(e=>this.onVertexRemove(e))),this.drawOperation.on("vertex-update",(e=>this.onVertexUpdate(e))),this.drawOperation.on("cursor-update",(e=>this.onCursorUpdate(e))),this.drawOperation.on("complete",(e=>this.onComplete(e))),p((()=>this.tooltipOptions.enabled),(e=>{this.tooltip=e?new k({view:this.view,info:this._tooltipInfo}):l(this.tooltip)}),c),p((()=>this._tooltipInfo),(e=>{null!=this.tooltip&&(this.tooltip.info=e)}),c)]),this.finishToolCreation()}destroy(){this.drawOperation=l(this.drawOperation),this.tooltip=l(this.tooltip),this._destroyAllVisualisations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=l(this.internalGraphicsLayer),this._set("view",null)}get _defaultElevation(){return n(this.defaultZ,"meters")}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(e){this._set("centered",e),this._updateGraphic()}set enabled(e){this.drawOperation.interactive=e,this._set("enabled",e)}set forceUniformSize(e){this._set("forceUniformSize",e),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(e){this._set("graphicSymbol",e),null!=this._graphic&&(this._graphic.symbol=e)}get updating(){return this.drawOperation?.updating??!1}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(e){this.drawOperation.onInputEvent(e)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo()}_destroyAllVisualisations(){this.handles.remove(Z.outline),this.handles.remove(Z.regularVertices),this.handles.remove(Z.activeVertex),this.handles.remove(L)}_createOrUpdateGraphic(e){if(null!=this._graphic)return this._updateGraphicGeometry(this._graphic,e),this._graphic;const i=this._graphic=new t({...this.graphicProperties,symbol:this.graphicSymbol});return this._updateGraphicGeometry(i,e),this.internalGraphicsLayer.add(i),this.handles.add(this.initializeGraphic(i)),this.notifyChange("graphic"),this.handles.add(r((()=>{this.internalGraphicsLayer.remove(i),l(i),this._graphic===i&&(this._graphic=null)})),L),i}_updateGraphicGeometry(e,t){e.geometry=t}_getCreateOperationGeometry(e={operationComplete:!1}){const{drawOperation:t}=this;if(null==t||0===t.numVertices)return null;const{coordinateHelper:i,view:o}=t,r=t.stagedVertex,l=t.committedVertices,n=l.slice(),a=null!=r;a&&n.push(i.pointToArray(r));const s=a?i.pointToArray(r):l.splice(-1)[0],p=n.length,c=o.spatialReference,h="3d"===o.type&&"global"===o.viewingMode,u=new D;switch(this.geometryType){case"point":case"mesh":u.regularVertices=l,u.activeVertex=s,u.full=i.arrayToPoint(n[0]);break;case"multipoint":u.regularVertices=l,u.activeVertex=s,p>0&&(u.full=T(n,c));break;case"polyline":u.regularVertices=l,u.activeVertex=s,p>0&&(u.full=O([n],c,h));break;case"polygon":u.regularVertices=l,u.activeVertex=s,p>0&&(u.full=w([n],c,h,!0));break;case"circle":if(p>0){const t=x(o,n[0]);if(1===p&&e.operationComplete){const e=n[0],i=t.makeMapPoint(e[0]+N*o.resolution,e[1]);u.circle=v([e,i],t,!0),u.full=null!=u.circle?u.circle.geometry:null}else 2===p&&(this.forceUniformSize?(u.circle=v(n,t,this.centered),u.full=null!=u.circle?u.circle.geometry:null):(u.rectangle=_(n,t,this.centered),u.full=u.rectangle.geometry))}break;case"rectangle":if(p>0){const t=x(o,n[0]);if(1===p&&e.operationComplete){const e=n[0],i=t.makeMapPoint(e[0]+N*o.resolution,e[1]);u.rectangle=g([e,i],t,!0),u.full=u.rectangle.geometry}else 2===p&&(u.rectangle=this.forceUniformSize?g(n,t,this.centered):f(n,t,this.centered),u.full=u.rectangle.geometry)}break;default:return null}switch(this.geometryType){case"point":case"multipoint":break;case"polyline":u.outline=p>1?O([n],c,h):null;break;case"polygon":u.outline=p>1?w([n],c,h):null;break;case"circle":case"rectangle":u.outline="polygon"===u.full?.type?w(u.full.rings,c,h):null}return u}initializeGraphic(e){return null}onComplete(e){this._updateGraphic();let t=null;if(this.drawOperation.isCompleted){const e=this._getCreateOperationGeometry({operationComplete:!0});null!=e&&(t=this._createOrUpdateGraphic(e.full).clone())}this._createOperationGeometry=null,this.emit("complete",{graphic:t,...e})}onCursorUpdate(e){this._updateGraphic(),this.emit("cursor-update",e)}onDeactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}onVertexAdd(e){this._updateGraphic(),this.emit("vertex-add",e)}onVertexRemove(e){this._updateGraphic(),this.emit("vertex-remove",e)}onVertexUpdate(e){this._updateGraphic(),this.emit("vertex-update",e)}_updateGraphic(){const e=this._getCreateOperationGeometry();this._createOperationGeometry=e,null!=e?(null!=e.outline?this.handles.add(this.onOutlineChanged(e.outline),Z.outline):this.handles.remove(Z.outline),null!=e.regularVertices?this.handles.add(this.onRegularVerticesChanged(e.regularVertices),Z.regularVertices):this.handles.remove(Z.regularVertices),null!=e.activeVertex?this.handles.add(this.onActiveVertexChanged(e.activeVertex),Z.activeVertex):this.handles.remove(Z.activeVertex),null!=e.full?this._createOrUpdateGraphic(e.full):this.handles.remove(L)):this._destroyAllVisualisations()}get _tooltipInfo(){const{drawOperation:e}=this;if(!e)return null;switch(this.geometryType){case"point":return this._drawPointTooltipInfo;case"polyline":return this._drawPolylineTooltipInfo;case"polygon":return this._drawPolygonTooltipInfo;case"rectangle":return this._drawRectangleTooltipInfo;case"circle":return this._drawCircleTooltipInfo;case"mesh":return this._drawMeshTooltipInfo;default:return null}}get _drawPointTooltipInfo(){const{view:e,graphic:t}=this,i=t?.geometry;return"point"!==i?.type||"2d"===e.type&&0===this.defaultZ?null:new I({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail,viewType:e.type,helpMessage:G("point",i,e)})}get _drawPolylineTooltipInfo(){const e=this._createOperationGeometry,t=null!=e?e.full:null;if("polyline"!==t?.type)return null;const i=A(t,this._elevationMode),{view:o}=this;return new j({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail,totalLength:i??a,viewType:o.type,helpMessage:G("polyline",t,o)})}get _drawPolygonTooltipInfo(){const e=this._createOperationGeometry,t=null!=e?e.full:null;if("polygon"!==t?.type)return null;const i=P(t,this._elevationMode),{view:o}=this;return new M({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail,area:i??s,viewType:o.type,helpMessage:G("polygon",t,o)})}get _drawMeshTooltipInfo(){const{view:e,graphic:t}=this,i=t?.geometry;return"mesh"!==i?.type||"2d"===e.type&&0===this.defaultZ?null:new U({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail,viewType:e.type,helpMessage:G("mesh",i,e)})}get _drawRectangleTooltipInfo(){return null==this.drawOperation?null:new C({tooltipOptions:this.tooltipOptions,xSize:this._xSize??a,ySize:this._ySize??a,area:this._fullGeometryArea??s})}get _drawCircleTooltipInfo(){if(null==this.drawOperation)return null;const e=this.forceUniformSize;return new z({tooltipOptions:this.tooltipOptions,radius:e?this._circleRadius??a:null,xSize:e?null:this._xSize??a,ySize:e?null:this._ySize??a,area:this._fullGeometryArea??s})}get _circleRadius(){const e=this._createOperationGeometry;return null!=e&&null!=e.circle&&null!=e.circle.center&&null!=e.circle.edge?R(e.circle.center,e.circle.edge,this._elevationMode):null}get _xSize(){const e=this._createOperationGeometry;if(null==e?.rectangle)return null;const{midpoints:t}=e.rectangle;return null!=t?R(t.left,t.right,this._elevationMode):null}get _ySize(){const e=this._createOperationGeometry;if(null==e?.rectangle)return null;const{midpoints:t}=e.rectangle;return null!=t?R(t.top,t.bottom,this._elevationMode):null}get _fullGeometryArea(){const e=this._createOperationGeometry,t=null!=e?e.full:null;return"polygon"!==t?.type?null:P(t,this._elevationMode)}get _elevationTooltipDetail(){return{mode:this.drawOperation.elevationInfo.mode,...this._vertexTooltipElevation}}get _vertexTooltipElevation(){const{tooltipOptions:e,view:t,drawOperation:i}=this;if(null==i)return this._defaultElevation;const o=i.stagedVertex??i.lastVertex;if(null==o||"2d"===t.type)return this._defaultElevation;const r={mode:e.elevation.mode,offset:0},l=(m(t,o,i.elevationInfo,r)??0)*h(o.spatialReference);return n(l,"meters")}get _elevationMode(){return this.drawOperation.isDraped?"on-the-ground":"absolute-height"}};e([u()],E.prototype,"_createOperationGeometry",void 0),e([u()],E.prototype,"_defaultElevation",null),e([u({value:!0})],E.prototype,"centered",null),e([u({nonNullable:!0})],E.prototype,"defaultZ",void 0),e([u()],E.prototype,"drawOperation",void 0),e([u({value:!0})],E.prototype,"enabled",null),e([u({value:!0})],E.prototype,"forceUniformSize",null),e([u({constructOnly:!0})],E.prototype,"geometryType",void 0),e([u()],E.prototype,"graphic",null),e([u({constructOnly:!0})],E.prototype,"graphicProperties",void 0),e([u()],E.prototype,"graphicSymbol",null),e([u({constructOnly:!0})],E.prototype,"hasZ",void 0),e([u({constructOnly:!0,type:b})],E.prototype,"labelOptions",void 0),e([u({constructOnly:!0})],E.prototype,"geometryToPlace",void 0),e([u({constructOnly:!0})],E.prototype,"mode",void 0),e([u()],E.prototype,"snappingManager",void 0),e([u()],E.prototype,"snapToScene",void 0),e([u()],E.prototype,"tooltip",void 0),e([u({constructOnly:!0,type:S})],E.prototype,"tooltipOptions",void 0),e([u({readOnly:!0})],E.prototype,"type",void 0),e([u({readOnly:!0})],E.prototype,"updating",null),e([u({constructOnly:!0,nonNullable:!0})],E.prototype,"view",void 0),e([u()],E.prototype,"_tooltipInfo",null),e([u()],E.prototype,"_drawPointTooltipInfo",null),e([u()],E.prototype,"_drawPolylineTooltipInfo",null),e([u()],E.prototype,"_drawPolygonTooltipInfo",null),e([u()],E.prototype,"_drawMeshTooltipInfo",null),e([u()],E.prototype,"_drawRectangleTooltipInfo",null),e([u()],E.prototype,"_drawCircleTooltipInfo",null),e([u()],E.prototype,"_circleRadius",null),e([u()],E.prototype,"_xSize",null),e([u()],E.prototype,"_ySize",null),e([u()],E.prototype,"_fullGeometryArea",null),e([u()],E.prototype,"_elevationTooltipDetail",null),e([u()],E.prototype,"_vertexTooltipElevation",null),e([u()],E.prototype,"_elevationMode",null),E=e([d("esri.views.draw.DrawGraphicTool")],E);const L="create-operation-graphic",Z={outline:"outline-visual",regularVertices:"regular-vertices-visual",activeVertex:"active-vertex-visual"};function H(e){switch(e){case"point":case"polyline":case"polygon":case"multipoint":return e;case"circle":case"rectangle":return"segment";case"mesh":return"point"}}const N=48;export{D as CreateOperationGeometry,E as DrawGraphicTool,H as geometryTypeToDrawOperationGeometryType};
