/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import"../../../../../../core/has.js";import{isAborted as e}from"../../../../../../core/promiseUtils.js";import{loadLibtess as t}from"../../../../../../geometry/libtess.js";import{isAggregateId as s}from"../../DisplayId.js";import r from"../templates/WGLLabelTemplate.js";import l from"../templates/WGLMarkerTemplate.js";import{isDynamicId as i}from"../templates/WGLTemplateStore.js";class a{constructor(e,s,r){this._loadPromise=t(),this._geometryType=e,this._idField=s,this._templateStore=r}update(e,t){null!=e.mesh.labels&&(this._labelTemplates=this._createLabelTemplates(e.mesh.labels,t)),this._schema=e}_createLabelTemplates(e,t){const s=new Map;if("simple"===e.type){for(const l of e.classes){const e=r.fromLabelClass(l,t);s.set(l.index,e)}return s}for(const l in e.classes){const i=e.classes[l];for(const e of i){const l=r.fromLabelClass(e,t);s.set(e.index,l)}}return s}get templates(){return this._templateStore}async analyze(t,r,l,a,o,n,m){if(e(m))return;let p;"dictionary"===l?.type&&(p=await l.analyze(this._idField,t.copy(),r,o,n,m));let f=0;for(;t.next();){let e=null;if(e=p?p[f++]:null!=a&&s(t.getDisplayId())&&1!==t.readAttribute("cluster_count")?a.match(this._idField,t,this._geometryType,o,n):l.match(this._idField,t,this._geometryType,o,n),t.setGroupId(e),i(e)){const s=this._templateStore.getDynamicTemplateGroup(e).templates;for(const e of s)e&&e.analyze&&e.analyze(this._templateStore,t,o,n)}}return await this._loadPromise,this._templateStore.finalize(m)}async analyzeGraphics(t,s,r,l,a,o){if(e(o))return;const n=t.getCursor();for(r&&await r.analyze(this._idField,n.copy(),s,l,a,o);n.next();){let e=n.getGroupId();if(null!=e&&-1!==e||(e=r?.match(this._idField,n,n.geometryType,l,a),n.setGroupId(e)),i(e)){const t=this._templateStore.getDynamicTemplateGroup(e).templates;for(const e of t)e&&e.analyze&&e.analyze(this._templateStore,n,l,a)}n.setGroupId(e)}return await this._loadPromise,this._templateStore.finalize(o)}writeGraphic(e,t,s,r){const l=t.getGroupId(),a=t.getDisplayId(),o=this._templateStore.getTemplateGroup(l);if(e.featureStart(t.insertAfter,0),null!=a){if(i(l))for(const e of o.templates)e&&e.bindFeature(t,null,null);if(o){for(const l of o.templates)l&&l.write(e,t,s,r);e.featureEnd()}}}writeCursor(e,t,s,r,l,a,o){const n=t.getGroupId(),m=t.getDisplayId(),p=this._templateStore.getTemplateGroup(n),f=p.templates,u=this._getSortKeyValue(t,p);if(e.featureStart(0,u),null!=m&&f){if(i(n))for(const e of f)e.bindFeature(t,s,r);for(const s of f)s.write(e,t,l,o);if(null!=a&&e.hasRecords){const s=a&&this._findLabelRef(f);this._writeLabels(e,t,a,s,l,o)}e.featureEnd()}}_getSortKeyValue(e,t){const s=this._schema.mesh.sortKey;if(null==s)return 0;let r=0;return r=!0===s.byRenderer&&null!=t.sortKey?t.sortKey:null!=s.fieldIndex?e.getComputedNumericAtIndex(s.fieldIndex):null!=s.field?e.readAttribute(s.field):e.readAttribute(this._idField),r*="asc"===s.order?1:-1,null==r||isNaN(r)?0:r}_findLabelRef(e){for(const t of e)if(t instanceof l)return t;return null}_writeLabels(e,t,s,r,l,i){for(const a of s)if(null!=a&&a){const{glyphs:s,rtl:o,index:n}=a,m=this._labelTemplates.get(n);if(!m)continue;m.setZoomLevel(l),m.bindReferenceTemplate(r),m.bindTextInfo(s,o),m.write(e,t,null,i)}}}export{a as WGLMeshFactory};
