/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{forEach as t,result as i}from"../../../core/asyncUtils.js";import{makeHandle as r}from"../../../core/handleUtils.js";import a from"../../../core/Logger.js";import{abortMaybe as s}from"../../../core/maybe.js";import{debounce as n,isAbortError as o,eachAlways as l,onAbort as h,isAborted as m,createAbortError as d,throwIfAborted as c}from"../../../core/promiseUtils.js";import{whenOnce as g}from"../../../core/reactiveUtils.js";import{property as u}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as p}from"../../../core/accessorSupport/decorators/subclass.js";import f from"../../../geometry/Extent.js";import{equals as y,create as _,width as w,height as x,copy as R,intersection as v}from"../../../geometry/support/aaBoundingRect.js";import{DrapeSourceType as S}from"./interfaces.js";import{LayerView3D as b}from"./LayerView3D.js";import{computeImageExportSize as E,createGeometryForExtent as j,createOuterImageGeometry as I}from"./support/overlayImageUtils.js";import{toViewIfLocal as A}from"./support/projectExtentUtils.js";import C from"../support/debugFlags.js";import{OverlayIndex as D}from"../terrain/interfaces.js";import{DirtyOperation as L}from"../webgl-engine/lib/ModelDirtyTypes.js";import{RenderGeometry as M}from"../webgl-engine/lib/RenderGeometry.js";import{Texture as T}from"../webgl-engine/lib/Texture.js";import{UpdatePolicy as G}from"../webgl-engine/lib/UpdatePolicy.js";import{ImageMaterial as P}from"../webgl-engine/materials/ImageMaterial.js";import O from"../../layers/LayerView.js";import U from"../../layers/RefreshableLayerView.js";import{isScaleRangeActive as H}from"../../support/layerViewUtils.js";import{TextureWrapMode as N}from"../../webgl/enums.js";let V=class extends(U(b(O))){constructor(){super(...arguments),this.drapeSourceType=S.RasterImage,this.updatePolicy=G.SYNC,this.fullExtentInLocalViewSpatialReference=null,this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlays=new Array,this.updateWhenStationary=!0,this._drapeSourceRenderer=null,this.refreshDebounced=n((async e=>{this.destroyed||await this._doRefresh(e).catch((e=>{o(e)||a.getLogger(this).error(e)}))}),2e3)}initialize(){this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this),this.handles.add(r((()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this)))),this.addResolvingPromise(A(this).then((e=>this._set("fullExtentInLocalViewSpatialReference",e)))),this.updatingHandles.add((()=>this.suspended),(()=>this._suspendedChangeHandler())),this.handles.add(this.view.resourceController.scheduler.registerIdleStateCallbacks((()=>{this._isScaleRangeActive()&&this.notifyChange("suspended")}),(()=>{}))),this._isScaleRangeLayer()&&this.updatingHandles.add((()=>this.layer.effectiveScaleRange),(()=>this.notifyChange("suspended")))}destroy(){this.clear()}setDrapingExtent(e,t){this._spatialReference=t,e.forEach((e=>{this._overlays[e.index]=e,this._updateImageExtent(e)}))}_updateImageExtent(e){const t=this._clippedExtent(e.extent,F);if(null==t)return;const i=E(e.extent,t,e.resolution);let r=e.pixelRatio*this.view.state.pixelRatio;const{layer:s}=this;if("imageMaxWidth"in s&&null!=s.imageMaxWidth||"imageMaxHeight"in s&&null!=s.imageMaxHeight){const e=s.imageMaxWidth,t=s.imageMaxHeight;if(i.width>e){const t=e/i.width;i.height=Math.floor(i.height*t),i.width=e,r*=t}if(i.height>t){const e=t/i.height;i.width=Math.floor(i.width*e),i.height=t,r*=e}}const n=this._extents[e.index];n&&y(n.extent,t)&&this._imageSizeEquals(t,n.imageSize,i)||(this._extents[e.index]={extent:_(t),imageSize:i,pixelRatio:r},this.suspended||this._fetch(e.index).catch((e=>{o(e)||a.getLogger(this).error(e)})))}clear(){for(let e=0;e<this._images.length;e++)this._clearImage(e)}async doRefresh(){return this._doRefresh()}async _doRefresh(e){if(this.suspended)return;const t=[];for(let i=0;i<this._extents.length;i++)this._extents[i]&&t.push(this._fetch(i,e));await l(t)}canResume(){if(!super.canResume())return!1;const e=this.layer;if(this._isScaleRangeActive()){const{minScale:t,maxScale:i}=e.effectiveScaleRange,r=this.view.scale;if(r<i||t>0&&r>t)return!1}return!0}isUpdating(){return this._images.some((e=>!!e.loadingPromise))}async processResult(e,t,i){(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement)&&(e.image=t)}findExtentInfoAt(e){for(const t of this._extents){const i=t.extent;if(new f(i[0],i[1],i[2],i[3],this._spatialReference).contains(e))return t}return null}getFetchOptions(){}async redraw(e,i){await t(this._images,(async(t,r)=>{t&&(await e(t,i),await this._createStageObjects(r,t.image,i))}))}_imageSizeEquals(e,t,i){if(!this.maximumDataResolution)return!1;const r=w(e)/this.maximumDataResolution.x,a=x(e)/this.maximumDataResolution.y,s=r/t.width,n=a/t.height,o=r/i.width,l=a/i.height,h=Math.abs(s-o),m=Math.abs(n-l),d=C.TESTS_DISABLE_OPTIMIZATIONS?0:1.5;return h<=d&&m<=d}async _fetch(e,t){if(this.suspended)return;const i=this._extents[e],r=i.extent;this._images[e]||(this._images[e]={texture:null,material:null,renderGeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:_(r)});const n=this._images[e];n.loadingAbortController=s(n.loadingAbortController);const l=new f(r[0],r[1],r[2],r[3],this._spatialReference);if(0===l.width||0===l.height)return void this._clearImage(e);const c=new AbortController;n.loadingAbortController=c,h(t,(()=>c.abort()));const g=c.signal,u=this._waitFetchReady(g).then((async()=>{const t={requestAsImageElement:!0,pixelRatio:this._overlays[e].pixelRatio,...this.getFetchOptions(),signal:g},{height:r,width:a}=i.imageSize;return this.layer.fetchImage(l,a,r,t)})).then((e=>{if(m(g))throw a.getLogger(this).warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),d();return this.processResult(n,e)})).then((()=>{R(n.renderExtent,r)})).finally((()=>{u===n.loadingPromise&&(n.loadingPromise=null,n.loadingAbortController=null)}));n.loadingPromise=u,this.notifyChange("updating"),await u.then((async()=>{if(g.aborted)throw d();await this._createStageObjects(e,n.image,g),this.notifyChange("updating")})).catch((e=>{throw e&&!o(e)&&a.getLogger(this).error(e),this.notifyChange("updating"),e}))}_clearImage(e){const t=this._images[e];if(t){null!=t.renderGeometry&&(this._drapeSourceRenderer.removeGeometries([t.renderGeometry],L.UPDATE),t.renderGeometry=null);const e=this.view._stage;e.remove(t.texture),t.texture=null,e.remove(t.material),t.material=null,t.loadingAbortController=s(t.loadingAbortController),t.loadingPromise=null,t.image=null,t.pixelData=null}}async _createStageObjects(e,t,r){const a=this.view._stage,s=this._images[e],n=()=>{a.remove(s.texture),s.texture=null,null!=s.renderGeometry&&(this._drapeSourceRenderer.removeGeometries([s.renderGeometry],L.UPDATE),s.renderGeometry=null)};if(t){const o=new T(t,{width:t.width,height:t.height,preMultiplyAlpha:!0,wrap:{s:N.CLAMP_TO_EDGE,t:N.CLAMP_TO_EDGE}});let l;if(await i(this._images[e===D.INNER?D.OUTER:D.INNER].loadingPromise),c(r),n(),a.add(o),await a.loadImmediate(o),s.texture=o,null==s.material?(s.material=new P({transparent:!0,textureId:o.id}),a.add(s.material)):s.material.setParameters({textureId:o.id}),e===D.INNER)l=j(s.material,s.renderExtent);else{const e=this._images[0].renderExtent;if(!e)return void n();l=I(s.material,e,s.renderExtent)}s.renderGeometry=new M(l),s.renderGeometry.localOrigin=this._overlays[e].renderLocalOrigin,this._drapeSourceRenderer.addGeometries([s.renderGeometry],L.UPDATE)}else n(),a.remove(s.material),s.material=null}_isScaleRangeLayer(){return"effectiveScaleRange"in this.layer}_isScaleRangeActive(){const e=this.layer;if(!this._isScaleRangeLayer())return!1;const{minScale:t,maxScale:i}=e.effectiveScaleRange;return H(t,i)}_clippedExtent(e,t){if("local"!==this.view.viewingMode)return R(t,e);const i=this.view.basemapTerrain;return i.ready?v(e,i.extent,t):R(t,e)}_suspendedChangeHandler(){this.suspended?this.clear():this.refreshDebounced()}async _waitFetchReady(e){await g((()=>this.view.stationary),e),c(e)}};e([u()],V.prototype,"layer",void 0),e([u()],V.prototype,"suspended",void 0),e([u({readOnly:!0})],V.prototype,"fullExtentInLocalViewSpatialReference",void 0),e([u()],V.prototype,"updating",void 0),V=e([p("esri.views.3d.layers.DynamicLayerView3D")],V);const z=V,F=_();export{z as default};
