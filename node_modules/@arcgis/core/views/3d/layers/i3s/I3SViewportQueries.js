/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{d as e,i as t,l as i,g as s,e as n,p as r,b as o,a}from"../../../../chunks/vec3.js";import{c as h}from"../../../../chunks/vec3f64.js";import{c}from"../../../../chunks/vec4.js";import{getReferenceEllipsoid as l}from"../../../../geometry/ellipsoidUtils.js";import{projectBoundingSphere as m}from"../../../../geometry/projection.js";import{getSphericalPCPF as u}from"../../../../geometry/spatialReferenceEllipsoidUtils.js";import{create as p,fromMatrix as _,intersectsSphere as d}from"../../../../geometry/support/frustum.js";import{isPlateCarree as g}from"../../../../geometry/support/spatialReferenceUtils.js";import{w as v}from"../../../../chunks/sphere.js";import{makeDehydratedPoint as b}from"../../../../layers/graphics/dehydratedFeatures.js";import{evaluateElevationAlignmentAtPoint as x}from"../graphics/elevationAlignmentUtils.js";import{ElevationContext as f}from"../graphics/ElevationContext.js";import{createContextWithoutExpressionSupport as R,extractExpressionInfo as M}from"../graphics/featureExpressionInfoUtils.js";import{LodMetric as C}from"./I3SNode.js";import{isValidMbs as D,isValidObb as S,transformObb as E,intersectBoundingRectWithMbs as P,MbsIntersectResult as O}from"./I3SUtil.js";import{create as L,computeOffsetObb as F,isVisible as j}from"../../support/orientedBoundingBox.js";const y=1e5;class B{constructor(e,t,i,s,n,r,o,a,c={}){this._indexSR=e,this._renderCoordsHelper=t,this._clippingArea=n,this._elevationProvider=r,this._viewingMode=o,this._options=c,this._frustum=p(),this._useFrustumCulling=!1,this._poi=h(),this._elevationContext=null,this.minDistance=1/0,this.maxDistance=0,this.maxLodLevel=2,this._tmpObb=L(),this._tmp1=h(),this._tmp2=h(),this._tmp3=h(),this._tmp0=h(),this._screenspaceErrorBias=c.screenspaceErrorBias||1,this._progressiveLoadFactor=c.progressiveLoadFactor||1,this.updateCamera(i,s),this.engineSR=this._renderCoordsHelper.spatialReference,this.updateElevationInfo(a),this._tmpPoint=b(0,0,0,e),this._isECEFOBBInLocalMode=this._indexSR.isWGS84&&(this.engineSR.isWebMercator||g(this.engineSR)),this._indexSREllipsoidRadius=l(this._indexSR).radius}updateElevationInfo(e){null!=e?(this._elevationContext=f.fromElevationInfo(e),this._elevationContext.updateFeatureExpressionInfoContext(R(M(e,!1)))):this._elevationContext=null}updateCamera(e,t){this._useFrustumCulling=t,t&&_(e.viewMatrix,e.projectionMatrix,this._frustum),this._screenSizeFactor=1/(e.perScreenPixelRatio/2),this._camPos=e.eye,this.minDistance=1/0,this.maxDistance=0}setPointOfInterest(e){this._poi=e}updateScreenSpaceErrorBias(e){const t=this._screenspaceErrorBias;return this._screenspaceErrorBias=e,t}updateClippingArea(e){this._clippingArea=e}getElevationRange(e){if(null==this._elevationContext)return null;const t=e.mbs;if(!t)return null;const i="relative-to-scene"===this._elevationContext.mode?"scene":"ground";if(this._elevationProvider.getSphereElevationBounds)return this._elevationProvider.getSphereElevationBounds(t,this._indexSR);const s=t[0],n=t[1],r=t[2],o=this._elevationProvider.getElevation(s,n,r,this._indexSR,i);return null!=o?{min:o,max:o}:null}getRenderMbs(e){const t=e.renderMbs;if(D(t))return t;if(e.mbs&&c(t,e.mbs),this._elevationContext&&e.elevationRange&&Number.isFinite(e.elevationRange.min)){let i=0,s=0;switch(this._elevationContext.mode){case"relative-to-ground":i=this._elevationContext.geometryZWithOffset(t[2],this._renderCoordsHelper)+e.elevationRange.min-t[2],s=e.elevationRange.max-e.elevationRange.min;break;case"on-the-ground":i=e.elevationRange.min-t[2],s=e.elevationRange.max-e.elevationRange.min}t[2]+=i+.5*s,t[3]+=.5*s}else this._elevationContext&&t[3]<y&&(this._tmpPoint.x=t[0],this._tmpPoint.y=t[1],this._tmpPoint.z=t[2],t[2]=x(this._tmpPoint,this._elevationProvider,this._elevationContext,this._renderCoordsHelper));return m(t,this._indexSR,t,this.engineSR),t}getVisibilityObb(e){if(null!=e.visibilityObb)return e.visibilityObb;const t=e.serviceObb,i=.01*this._indexSREllipsoidRadius;return null==t||!e.mbs||!S(t)||this._isECEFOBBInLocalMode&&t.halfSize.some((e=>e>i))?null:(e.serviceObbInRenderSR=this._computeRenderObb(t,e.serviceObbInRenderSR,e.mbs[3],e.elevationRange),e.serviceObbInRenderSR)}_computeRenderObb(e,t,i,s){if(null==t)t=L();else if(S(t))return t;let n=0,r=0;if(this._elevationContext&&null!=s&&Number.isFinite(s.min))switch(this._elevationContext.mode){case"relative-to-ground":n=this._elevationContext.geometryZWithOffset(e.center[2],this._renderCoordsHelper)+s.min-e.center[2],r=s.max-s.min;break;case"on-the-ground":n=s.min-e.center[2],r=s.max-s.min}else this._elevationContext&&i<y&&(this._tmpPoint.x=e.center[0],this._tmpPoint.y=e.center[1],this._tmpPoint.z=e.center[2],n=x(this._tmpPoint,this._elevationProvider,this._elevationContext,this._renderCoordsHelper)-e.center[2]);return r>0?(E(e,this._indexSR,this._tmpObb,this.engineSR,n),F(this._tmpObb,0,r,this._viewingMode,t)):E(e,this._indexSR,t,this.engineSR,n),t}isNodeVisible(e){const t=this.getRenderMbs(e);if(!this._isMBSinClippingArea(t))return!1;if(!this._useFrustumCulling)return!0;const i=this.getVisibilityObb(e);return null!=i?j(i,this._frustum):d(this._frustum,v(t))}isGeometryVisible(e){if(!this._useFrustumCulling)return!0;const t=e.geometryObb;return null!=t?j(t,this._frustum):this.isNodeVisible(e)}_isMBSinClippingArea(e){return null==this._clippingArea||P(this._clippingArea,e)!==O.OUTSIDE}_screenSpaceDiameterMbs(t,i){const s=this.getRenderMbs(t),n=Math.sqrt(e(s,this._camPos)),r=n-s[3];return this._updateMinMaxDistance(n),r<0?.5*Number.MAX_VALUE:i/r*this._screenSizeFactor}calcCameraDistance(e){return this.calcCameraDistanceToCenter(e)-this.getRenderMbs(e)[3]}calcCameraDistanceToCenter(e){const i=this.getRenderMbs(e),s=t(i,this._camPos);return this._updateMinMaxDistance(s),s}calcAngleDependentLoD(e){const s=this.getRenderMbs(e),n=s[3],r=(Math.abs(s[0]*(s[0]-this._camPos[0])+s[1]*(s[1]-this._camPos[1])+s[2]*(s[2]-this._camPos[2]))/i(s)+n)/t(s,this._camPos);return Math.min(1,r)}hasLOD(e){return e.lodMetric!==C.None}_getDistancePlanarMode(e,t){const i=e[0]-t[0],s=e[1]-t[1],n=e[2]-t[2],r=i*i+s*s,o=t[3];if(r<=o*o)return Math.abs(n);const a=Math.sqrt(r)-o;return Math.sqrt(n*n+a*a)}_getDistanceGlobeMode(h,c){const l=i(c),m=i(h)-l;s(this._tmp0,h,n(h,c)/r(h));const u=e(c,this._tmp0),p=c[3];if(u<=p*p)return Math.abs(m);{const e=s(this._tmp0,c,1/l),r=l,u=p*p/2/r,_=s(this._tmp1,e,r-u),d=h,g=o(this._tmp2,d,_),v=o(this._tmp2,g,s(this._tmp3,e,n(e,g))),b=a(this._tmp2,_,s(this._tmp2,v,p/i(v)));let x=t(d,b);if(m>=2e5){const t=o(this._tmp1,d,b);let s=n(t,e)/i(t);s<.08&&(s=1e-4),x/=s}return x}}_getDistance(e,t){return this.engineSR===u(this.engineSR)?this._getDistanceGlobeMode(e,t):this._getDistancePlanarMode(e,t)}_updateMinMaxDistance(e){e>0?(this.minDistance=Math.min(this.minDistance,e),this.maxDistance=Math.max(this.maxDistance,e)):(this.minDistance=0,this.maxDistance=Math.max(this.maxDistance,-e))}getLodLevel(e){if(e.lodMetric===C.None)return 0;if(0===e.childCount)return this.maxLodLevel;if(this._useFrustumCulling&&this._progressiveLoadFactor<1){const t=this._progressiveLoadFactor*this._screenspaceErrorBias,i=this._screenspaceErrorBias;return this.evaluateLODmetric(e,t)?this.evaluateLODmetric(e,i)?2:1:0}return this.evaluateLODmetric(e,this._screenspaceErrorBias)?this.maxLodLevel:0}evaluateLODmetric(e,t){switch(e.lodMetric){case C.ScreenSpaceRelative:{const i=this.getRenderMbs(e),s=this._getDistance(this._camPos,i),n=2*s/this._screenSizeFactor,r=s+i[3];return this._updateMinMaxDistance(r),e.maxError*t<=n}case C.MaxScreenThreshold:{let i=this._screenSpaceDiameterMbs(e,e.mbs[3]*t);return this._options.angleDependentLoD&&(i*=this.calcAngleDependentLoD(e)),i<e.maxError}case C.RemovedFeatureDiameter:return this._screenSpaceDiameterMbs(e,e.maxError)*t<10;case C.DistanceRangeFromDefaultCamera:return this.calcCameraDistance(e)>e.maxError*t}return!1}distToPOI(e){const i=this.getRenderMbs(e);return t(i,this._poi)-i[3]}distCameraToPOI(){return t(this._camPos,this._poi)}}export{B as default};
