/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import s from"../../../../core/Logger.js";import{property as i}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import{F as n}from"../../../../chunks/mat4.js";import{c as a}from"../../../../chunks/mat4f64.js";import{m as l}from"../../../../chunks/vec3.js";import{c}from"../../../../chunks/vec3f64.js";import{projectBoundingSphere as p}from"../../../../geometry/projection.js";import{empty as h,expand as m}from"../../../../geometry/support/aaBoundingRect.js";import{f as d}from"../../../../chunks/sphere.js";import{newIntersector as u}from"../../webgl-engine/lib/Intersector.js";import{StoreResults as f}from"../../webgl-engine/lib/IntersectorInterfaces.js";const v=h(),_=a(),g=d(0,0,0,0),x=c(),y=c(),E=c();let j=class extends(r.EventedMixin(t)){get spatialReference(){return this.view?.elevationProvider?.spatialReference}constructor(e){super(e),this._tmpEvent={spatialReference:null,extent:v,context:"scene"}}initialize(){this.view=this.layerView.view,this._renderCoordsHelper=this.view.renderCoordsHelper,this._intersector=u(this.view.state.viewingMode),this._intersector.options.store=f.MIN;const e=this.layerView.i3slayer.fullExtent;null==e?s.getLogger(this).error("I3SElevationProvider expected fullExtent on I3SLayer."):(this._zmin=e.zmin,this._zmax=e.zmax),this._tmpEvent.context=this.intersectionHandler.isGround?"ground":"scene"}getElevation(e,t,r,i){if(x[0]=e,x[1]=t,x[2]=r,!this._renderCoordsHelper.toRenderCoords(x,i,x))return s.getLogger(this).error("could not project point to compute elevation"),null;const o=this.layerView.elevationOffset,n=this._zmin+o,a=this._zmax+o;return this._renderCoordsHelper.setAltitude(y,a,x),this._renderCoordsHelper.setAltitude(E,n,x),this._intersector.reset(y,E,null),this.intersectionHandler.intersect(this._intersector,null,y,E),this._intersector.results.min.getIntersectionPoint(x)?this._renderCoordsHelper.getAltitude(x):null}getSphereElevationBounds(e,t){return p(e,t,g,this._renderCoordsHelper.spatialReference),this.layerView.getElevationRange(g)}layerChanged(){this.spatialReference&&(this._tmpEvent.extent=this._computeLayerExtent(),this._tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this._tmpEvent))}objectChanged(e){this.spatialReference&&(this._tmpEvent.extent=this._computeObjectExtent(e),this._tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this._tmpEvent))}_computeObjectExtent(e){return h(v),this._expandExtent(e,v),v}_computeLayerExtent(){h(v);for(const e of this.layerView.getVisibleNodes())this._expandExtent(e,v);return v}_expandExtent(e,t){const r=this.spatialReference;if(null==r)return;const s=this.layerView.getNodeComponentObb(e);if(null!=s){n(_,s.quaternion),_[12]=s.center[0],_[13]=s.center[1],_[14]=s.center[2];for(let e=0;e<8;++e)x[0]=1&e?s.halfSize[0]:-s.halfSize[0],x[1]=2&e?s.halfSize[1]:-s.halfSize[1],x[2]=4&e?s.halfSize[2]:-s.halfSize[2],l(x,x,_),this._renderCoordsHelper.fromRenderCoords(x,x,r),m(t,x,t)}}};e([i({constructOnly:!0})],j.prototype,"layerView",void 0),e([i({constructOnly:!0})],j.prototype,"intersectionHandler",void 0),e([i()],j.prototype,"view",void 0),e([i()],j.prototype,"spatialReference",null),j=e([o("esri.views.3d.layers.i3s.I3SElevationProvider")],j);const w=j;export{w as default};
