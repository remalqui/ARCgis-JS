/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import"../../../../geometry.js";import{throwIfAborted as e}from"../../../../core/promiseUtils.js";import{makeDehydratedPoint as o}from"../../../../layers/graphics/dehydratedFeatures.js";import{getGeometryEffectiveElevationInfo as t}from"../../../../support/elevationInfoUtils.js";import{evaluateElevationInfoAtPoint as r,SampleElevationInfo as n}from"./elevationAlignmentUtils.js";import{ElevationContext as s}from"./ElevationContext.js";import{extractExpressionInfo as i,createContext as a}from"./featureExpressionInfoUtils.js";import p from"../../../../geometry/SpatialReference.js";async function f(o,n,s,p,f){const{elevationProvider:d,renderCoordsHelper:j,spatialReference:u}=o,{elevationInfo:v}=n,y=i(v,!0),I=await a(y,u,f);e(f);const g=[],x=new Set,h=new Set;for(const{objectId:e,points:i}of p){const a=s(e);if(null==a){for(const e of i)g.push(e.z??0);x.add(e);continue}a.isDraped&&h.add(e);const p=a.graphic.geometry;c.setFromElevationInfo(t(p,v)),c.updateFeatureExpressionInfoContext(I,a.graphic,n),l.spatialReference=o.spatialReference;for(const{x:e,y:o,z:t}of i)l.x=e,l.y=o,l.z=t??0,r(l,d,c,j,m),g.push(m.z)}return{elevations:g,drapedObjectIds:h,failedObjectIds:x}}const c=new s,l=o(0,0,0,p.WGS84),m=new n;export{f as elevationAlignPointsInFeatures};
