/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import e from"../../../../core/Error.js";import{clone as t}from"../../../../core/lang.js";import{getMetersPerVerticalUnitForSR as s}from"../../../../core/unitUtils.js";import{e as r}from"../../../../chunks/earcut.js";import{b as n}from"../../../../chunks/mat3.js";import{c as i}from"../../../../chunks/mat3f64.js";import{a as o,p as a}from"../../../../chunks/mat4.js";import{c as l}from"../../../../chunks/mat4f64.js";import{c,n as h,s as m,b as p,f as g,m as d}from"../../../../chunks/vec3.js";import{g as u,c as f}from"../../../../chunks/vec3f64.js";import{computeTranslationToOriginAndRotation as y}from"../../../../geometry/projection.js";import{create as b,empty as _,expandWithBuffer as x,intersectsClippingArea as j}from"../../../../geometry/support/aaBoundingBox.js";import{newDoubleArray as S}from"../../../../geometry/support/DoubleArray.js";import{newIndexArray as P,getZeroIndexArray as E}from"../../../../geometry/support/Indices.js";import{t as w}from"../../../../chunks/vec32.js";import{makeVertexCandidate as v,makeEdgeCandidate as C}from"../../../../layers/graphics/data/SnappingCandidate.js";import{getDriverAxisSizeValue as L}from"../../../../renderers/support/renderingInfoUtils.js";import{ViewingMode as O}from"../../../ViewingMode.js";import{needsElevationUpdates3D as I,SampleElevationInfo as M}from"./elevationAlignmentUtils.js";import{ElevationContext as A}from"./ElevationContext.js";import{Graphics3DObject3DGraphicLayer as z}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DSymbolLayer as D}from"./Graphics3DSymbolLayer.js";import{validateSymbolLayerSize as R,computeCentroid as G}from"./graphicUtils.js";import{ApplyRendererDiffResult as B}from"./interfaces.js";import{geometryAsPolygon as U}from"./polygonUtils.js";import{createMaterial as T}from"../support/edgeUtils.js";import k from"../../support/debugFlags.js";import{SamplePosition as N}from"../../support/ElevationProvider.js";import{geometryToRenderInfo as V}from"../../support/renderInfoUtils/polygon.js";import{NormalType as H}from"../../webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js";import{Attribute as F}from"../../webgl-engine/lib/Attribute.js";import{CullFaceOptions as W}from"../../webgl-engine/lib/basicInterfaces.js";import{ContentObjectType as q}from"../../webgl-engine/lib/ContentObjectType.js";import{Geometry as Z}from"../../webgl-engine/lib/Geometry.js";import{isGeometryWithMapPositions as J}from"../../webgl-engine/lib/GeometryWithMapPositions.js";import{compressNormals as K}from"../../webgl-engine/lib/Normals.js";import{Object3D as Q}from"../../webgl-engine/lib/Object3D.js";import{VertexAttribute as X}from"../../webgl-engine/lib/VertexAttribute.js";import{DefaultMaterial as Y}from"../../webgl-engine/materials/DefaultMaterial.js";const $=["polygon","extent"];class ee extends D{constructor(e,t,s,r){super(e,t,s,r),this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const t=R(this._getSymbolSize());if(t)throw new e("graphics3dextrudesymbollayer:invalid-size",t)}const t=this.symbolLayer?.material?.color,s=this._getCombinedOpacityAndColor(t),r=u(s),n=s[3],i=n<1||this.needsDrivenTransparentPass,o={usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0,diffuse:r,ambient:r,opacity:n,transparent:i,cullFace:i?W.None:W.Back,hasVertexColors:!0,hasSlicePlane:this._context.slicePlaneEnabled,castShadows:this.symbolLayer.castShadows,offsetTransparentBackfaces:!0,normalType:H.Compressed};this._material=new Y(o),this._bottomMaterial=new Y({...o,cullFace:W.Back}),this._context.stage.add(this._material),this._context.stage.add(this._bottomMaterial)}destroy(){super.destroy(),this._material&&(this._context.stage.remove(this._material),this._context.stage.remove(this._bottomMaterial))}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,$,this.symbolLayer.type))return null;const s=this._getVertexOpacityAndColor(e.renderingInfo,255),r=this.setGraphicElevationContext(t,new A);return this._createAs3DShape(t,e.renderingInfo,s,r,t.uid)}layerOpacityChanged(e,t){const s=this.symbolLayer?.material?.color,r=this._getCombinedOpacity(s),n=r<1||this.needsDrivenTransparentPass;this._material.setParameters({opacity:r,transparent:n}),this._bottomMaterial.setParameters({opacity:r,transparent:n});const i=this._getLayerOpacity();e.forEach((e=>{const s=t(e);null!=s&&s.layerOpacityChanged(i,this._context.isAsync)}))}layerElevationInfoChanged(e,t){return this.updateGraphics3DGraphicElevationInfo(e,t,I)}slicePlaneEnabledChanged(e,t){return this._material.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),this._bottomMaterial.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),e.forEach((e=>{const s=t(e);null!=s&&s.slicePlaneEnabledChanged(this._context.slicePlaneEnabled,this._context.isAsync)})),!0}physicalBasedRenderingChanged(){return this._material.setParameters({usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0}),this._bottomMaterial.setParameters({usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0}),!0}_getExtrusionSize(e){let t;return t=e.size&&this._drivenProperties.size?L(e.size,2)??0:this._getSymbolSize(),t/=this._context.renderCoordsHelper.unitInMeters,t}applyRendererDiff(e,t){return this._drivenPropertiesChanged(t)?B.RecreateSymbol:B.RecreateGraphics}async queryForSnapping(e,r,n,i){const o=this._getExtrusionSize(n)*this._context.renderCoordsHelper.unitInMeters/s(r),{objectId:a,target:l}=e,c=t(l);switch(c.z=(c.z??0)+o,e.type){case"edge":{const{start:s,end:r}=e,n=t(s),i=t(r);return n.z=(n.z??0)+o,i.z=(i.z??0)+o,[C(a,c,1/0,n,i)]}case"vertex":return[v(a,c,1/0),C(a,l,1/0,l,c)];default:return[]}}_getSymbolSize(){return this.symbolLayer.size??1}_createAs3DShape(e,t,s,a,c){const h=U(e.geometry);if(null==h)return null;if(0===h.rings.length||!h.rings.some((e=>e.length>0)))return this._logGeometryValidationWarnings(h.rings,"rings","ExtrudeSymbol3DLayer"),null;const m=V(h,this._context.elevationProvider,this._context.renderCoordsHelper,a);this._logGeometryCreationWarnings(m,h.rings,"rings","ExtrudeSymbol3DLayer");const p=G(h);if(null==p)return null;const g=new Array,d=new Array,u=b(),E=l(),v=f(),C=this._context.renderCoordsHelper.viewingMode===O.Global;C||this._context.renderCoordsHelper.worldUpAtPosition(null,v),y(h.spatialReference,[p.x,p.y,0],E,this._context.renderCoordsHelper.spatialReference);const L=l();o(L,E);const M=i();n(M,L);const{polygons:A,mapPositions:D,position:R}=m;for(const n of A){const e=n.count;if(this._context.clippingExtent&&(_(u),x(u,n.mapPositions),!j(u,this._context.clippingExtent)))continue;const i=r(n.mapPositions,n.holeIndices,3);if(0===i.length)continue;const o=i.length,a=6*e,l=P(a+o),h=P(o),m=S(3*a),p=S(3*a),f=S(3*a),y=S(a);se(R,D,i,n,m,f,p,y,l,h,this._getExtrusionSize(t),v,C),w(m,m,L);const b=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:c,layerUid:this._context.layer.uid}),E=new je(m,f,K(p),y);g.push(te(this._material,l,l.length-h.length,E,s,b),te(this._bottomMaterial,h,0,E,s,b)),d.push(E.heights)}if(0===g.length)return null;const B=new Q({geometries:g,layerUid:this._context.layer.uid,graphicUid:c,isElevationSource:!0});B.transformation=E;const k=T(this.symbolLayer,{opacity:this._getLayerOpacity()}),N=null!=k?{baseMaterial:this._material,edgeMaterials:[k],properties:{mergeGeometries:!0,hasSlicePlane:this._context.slicePlaneEnabled}}:null,H=new z(this,B,g,null,null,((e,t,s,r,n)=>de(e,t,s,r,n,d)),a,N);return H.alignedSampledElevation=m.sampledElevation,H.needsElevationUpdates=I(a.mode),H}}function te(e,t,s,r,n,i){const o=E(t.length),a=[[X.POSITION,new F(r.positions,3,!0)],[X.NORMALCOMPRESSED,new F(r.normals,2,!0)],[X.COLOR,new F(n,4,!0)]],l=[[X.POSITION,t],[X.NORMALCOMPRESSED,t],[X.COLOR,o]];return new Z(e,a,l,r.elevation,q.Mesh,i,s)}function se(e,t,s,r,n,i,o,a,l,c,h,m,p){const g=s.length/3;let d=0,u=2*r.count;re(e,t,r.index,r.count,s,0,g,n,i,o,a,l,c,u,h,m,p);let f=2*r.count;u=0,oe(n,i,a,o,d,r.pathLengths[0],r.count,f,l,u,h),f+=4*r.pathLengths[0],u+=2*r.pathLengths[0],d+=r.pathLengths[0];for(let y=1;y<r.pathLengths.length;++y)oe(n,i,a,o,d,r.pathLengths[y],r.count,f,l,u,h),f+=4*r.pathLengths[y],u+=2*r.pathLengths[y],d+=r.pathLengths[y]}function re(e,t,s,r,n,i,o,a,l,m,p,g,d,u,f,y,b){c(fe,y);const _=f>0?1:-1;let x=3*s,j=0,S=3*j,P=r,E=3*P;for(let c=0;c<r;++c)b&&(fe[0]=e[x],fe[1]=e[x+1],fe[2]=e[x+2],h(fe,fe)),a[S]=e[x],a[S+1]=e[x+1],a[S+2]=e[x+2],l[S]=t[x],l[S+1]=t[x+1],l[S+2]=t[x+2],m[S]=-_*fe[0],m[S+1]=-_*fe[1],m[S+2]=-_*fe[2],p[j]=0,a[E]=e[x]+f*fe[0],a[E+1]=e[x+1]+f*fe[1],a[E+2]=e[x+2]+f*fe[2],l[E]=t[x],l[E+1]=t[x+1],l[E+2]=t[x+2],m[E]=_*fe[0],m[E+1]=_*fe[1],m[E+2]=_*fe[2],p[P]=f,S+=3,E+=3,x+=3,j+=1,P+=1;x=3*i,S=0,E=3*u;const w=f<0?_e:be,v=f<0?be:_e;for(let c=0;c<o;++c)d[S]=n[x+w[0]],d[S+1]=n[x+w[1]],d[S+2]=n[x+w[2]],g[E]=n[x+v[0]]+r,g[E+1]=n[x+v[1]]+r,g[E+2]=n[x+v[2]]+r,S+=3,E+=3,x+=3}function ne(e,t,s,r,n,i,o){r[i]=r[o],o*=3,e[i*=3]=e[o],e[i+1]=e[o+1],e[i+2]=e[o+2],t[i]=t[o],t[i+1]=t[o+1],t[i+2]=t[o+2],s[i]=n[0],s[i+1]=n[1],s[i+2]=n[2]}const ie=f();function oe(e,t,s,r,n,i,o,a,l,c,h){let m=n,p=n+1,g=n+o,d=n+o+1,u=a,f=a+1,y=a+2*i,b=a+2*i+1;h<0&&(m=n+o+1,d=n),c*=3;for(let _=0;_<i;++_)_===i-1&&(h>0?(p=n,d=n+o):(p=n,m=n+o)),pe(e,m,p,g,ie),ne(e,t,r,s,ie,u,m),ne(e,t,r,s,ie,f,p),ne(e,t,r,s,ie,y,g),ne(e,t,r,s,ie,b,d),l[c++]=u,l[c++]=y,l[c++]=b,l[c++]=u,l[c++]=b,l[c++]=f,m++,p++,g++,d++,u+=2,f+=2,y+=2,b+=2}const ae=f(),le=f(),ce=f(),he=f(),me=f();function pe(e,t,s,r,n){t*=3,s*=3,r*=3,m(ae,e[t++],e[t++],e[t++]),m(le,e[s++],e[s++],e[s++]),m(ce,e[r++],e[r++],e[r++]),p(he,le,ae),p(me,ce,ae),g(n,me,he),h(n,n)}const ge=f();function de(e,t,s,r,n,i){const o=e.stageObject,c=o.geometries,h=c.length,p="absolute-height"!==t.mode;let g=0;const u=o.transformation,f=a(l(),u);for(let a=0;a<h;a+=2){const e=c[a];if(!J(e))continue;const t=e.getMutableAttribute(X.POSITION).data,l=i[a/2],h=new N(e.mapPositions),y=t.length/3;let b=0,_=!1,x=0;for(let i=0;i<y;i++){ge[0]=t[b],ge[1]=t[b+1],ge[2]=t[b+2],r(h,ye),p&&(x+=ye.sampledElevation),k.TESTS_DISABLE_OPTIMIZATIONS?(m(ue,h.array[h.offset],h.array[h.offset+1],ye.z+l[b/3]),null!=s&&n.toRenderCoords(ue,s,ue),d(ue,ue,f)):(m(ue,t[b],t[b+1],t[b+2]),d(ue,ue,u),n.setAltitude(ue,ye.z+l[b/3]),d(ue,ue,f)),t[b]=ue[0],t[b+1]=ue[1],t[b+2]=ue[2];const e=xe/n.unitInMeters;(Math.abs(ge[0]-t[b])>=e||Math.abs(ge[1]-t[b+1])>=e||Math.abs(ge[2]-t[b+2])>=e)&&(_=!0),h.offset+=3,b+=3}_&&(e.invalidateBoundingInfo(),o.geometryVertexAttrsUpdated(c[a]),c[a+1].invalidateBoundingInfo(),o.geometryVertexAttrsUpdated(c[a+1])),g+=x/y}return g/h}const ue=f(),fe=f(),ye=new M,be=[0,2,1],_e=[0,1,2],xe=.01;class je{constructor(e,t,s,r){this.positions=e,this.elevation=t,this.normals=s,this.heights=r}}export{ee as Graphics3DExtrudeSymbolLayer};
