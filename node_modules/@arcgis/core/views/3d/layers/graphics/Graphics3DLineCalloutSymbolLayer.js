/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../../../../Color.js";import{pt2px as t}from"../../../../core/screenUtils.js";import{Z as r,a as i}from"../../../../chunks/vec2f64.js";import{c as n}from"../../../../chunks/vec3f64.js";import{c as a}from"../../../../chunks/vec4f64.js";import{textSymbolLayerSupportsVerticalOffset as s}from"../../../../symbols/callouts/calloutUtils.js";import{perObjectElevationAligner as o}from"./ElevationAligners.js";import{SymbolUpdateType as l,elevationModeChangeUpdateType as c,needsElevationUpdates2D as m}from"./elevationAlignmentUtils.js";import{ElevationContext as h}from"./ElevationContext.js";import d from"./Graphics3DGraphicCreationContext.js";import{Graphics3DObject3DGraphicLayer as p}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DObjectMetadata as u}from"./Graphics3DObjectMetadata.js";import{Graphics3DSymbolLayer as f}from"./Graphics3DSymbolLayer.js";import{computeCentroid as g}from"./graphicUtils.js";import{createStageObject as y,extendPointGraphicElevationContext as v}from"./pointUtils.js";import{emptySymbolComplexity as b}from"./symbolComplexity.js";import{Attribute as C}from"../../webgl-engine/lib/Attribute.js";import{ContentObjectType as O}from"../../webgl-engine/lib/ContentObjectType.js";import{Geometry as _}from"../../webgl-engine/lib/Geometry.js";import{VertexAttribute as x}from"../../webgl-engine/lib/VertexAttribute.js";import{LineCalloutMaterial as P,Parameters as j}from"../../webgl-engine/materials/LineCalloutMaterial.js";class E extends f{constructor(e,t){super(e,null,t,A),this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},this.ensureDrapedStatus(!1)}async doLoad(){this._material=new P(this._materialParameters),this._context.stage.add(this._material)}destroy(){super.destroy(),this._context.stage.remove(this._material),this._material=null}_perInstanceMaterialParameters(e){const t=this._materialParameters;return t.screenOffset=e.screenOffset||r,t.centerOffsetUnits=e.centerOffsetUnits||"world",t}get _materialParameters(){const r=new j,i=this.symbol,n=i.callout;if(r.color=null!=n.color?e.toUnitRGBA(n.color):[0,0,0,0],r.color[3]*=this._getLayerOpacity(),r.size=t(n.size||0),i.verticalOffset){const{screenLength:e,minWorldLength:n,maxWorldLength:a}=i.verticalOffset;r.verticalOffset={screenLength:t(e),minWorldLength:n||0,maxWorldLength:null!=a?a:1/0}}r.borderColor=null!=n.border&&null!=n.border.color?e.toUnitRGBA(n.border.color):null;const a="object"===i.symbolLayers.at(0).type,s="label-3d"===i.type;return r.occlusionTest=!a,r.shaderPolygonOffset=a?0:void 0,r.depthHUDAlignStart=s,r.hasSlicePlane=this._context.slicePlaneEnabled,r.screenSizePerspective=this._context.screenSizePerspectiveEnabled?this._context.sharedResources.screenSizePerspectiveSettings:null,r}_defaultElevationInfoNoZ(){return G}createGraphics3DGraphic(e){const t=e.renderingInfo,r=e.graphic,i=this.setGraphicElevationContext(r,new h,t.elevationOffset||0),n=t.symbol,a="on-the-ground"===this._elevationContext.mode&&("cim"===n.type||!n.symbolLayers.some((e=>"object"===e.type||"text"===e.type)));if("label-3d"!==n.type&&a)return null;if("point-3d"===n.type&&n.symbolLayers.every((e=>"text"===e.type&&!s(e))))return null;const o=g(r.geometry);return null==o?null:this._createAs3DShape(o,i,t,r.uid)}layerOpacityChanged(){this._material?.setParameters(this._materialParameters)}layerElevationInfoChanged(e,t,r){const i=this._elevationContext.mode,n=c(E.elevationModeChangeTypes,r,i);return n!==l.UPDATE||e.forEach((e=>{const r=t(e);null!=r&&this.updateGraphicElevationContext(e.graphic,r)})),n}slicePlaneEnabledChanged(){return this._material?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),!0}physicalBasedRenderingChanged(){return!0}setGraphicElevationContext(e,t,r=0){const i=super.setGraphicElevationContext(e,t);return i.addOffsetRenderUnits(r),i}updateGraphicElevationContext(e,t){this.setGraphicElevationContext(e,t.elevationContext,null!=t.metadata?t.metadata.elevationOffset:0),t.needsElevationUpdates=m(t.elevationContext.mode)}computeComplexity(){return{primitivesPerFeature:2,primitivesPerCoordinate:0,drawCallsPerFeature:0,estimated:!1,memory:b.memory}}_createVertexData(e){const{translation:t,centerOffset:r}=e,i=new C(t?[t[0],t[1],t[2]]:[0,0,0],3,!0),n=new C(r?[r[0],r[1],r[2],r[3]]:[0,0,0,1],4,!0);return[[x.POSITION,i],[x.NORMAL,new C([0,0,1],3,!0)],[x.AUXPOS1,n]]}_getOrCreateMaterial(e){const t=this._perInstanceMaterialParameters(e),r=P.uniqueMaterialIdentifier(t);if(this._material&&r===this._material.uniqueMaterialIdentifier)return{material:this._material,isUnique:!1};if(null!=e.materialCollection){let i=e.materialCollection.get(r);return null==i&&(i=new P(t),e.materialCollection.add(r,i)),{material:i,isUnique:!1}}return{material:new P(t),isUnique:!0}}_createAs3DShape(e,t,r,i){const n=this._context.layer.uid,a=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:i,layerUid:n}),s=this._getOrCreateMaterial(r),l=new _(s.material,this._createVertexData(r),w,null,O.Point,a),c=y(this._context,e,l,t,i);if(null==c)return null;const h=new p(this,c.object,[l],s.isUnique?[s.material]:null,null,o,t);return h.metadata=new u(r.elevationOffset),h.alignedSampledElevation=c.sampledElevation,h.needsElevationUpdates=m(t.mode),v(h,e,this._context.elevationProvider),h}}E.elevationModeChangeTypes={definedChanged:l.UPDATE,staysOnTheGround:l.UPDATE,onTheGroundChanged:l.RECREATE};const U=[0],w=[[x.POSITION,U],[x.NORMAL,U],[x.AUXPOS1,U]],G={mode:"relative-to-ground",offset:0},A={ignoreDrivers:!0,renderPriority:0,renderPriorityStep:1};class L{constructor(e,t,r=n(),s=a(),o=i(),l="world",c=0,m=null){this.renderer=e,this.symbol=t,this.translation=r,this.centerOffset=s,this.screenOffset=o,this.centerOffsetUnits=l,this.elevationOffset=c,this.materialCollection=m}}class S extends d{}export{E as Graphics3DLineCalloutSymbolLayer,S as LineCalloutCreationContext,L as LineCalloutSymbolLayerRenderingInfo};
