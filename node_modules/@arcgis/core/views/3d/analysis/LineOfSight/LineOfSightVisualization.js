/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as i}from"../../../../chunks/tslib.es6.js";import e from"../../../../Color.js";import t from"../../../../core/Accessor.js";import n from"../../../../core/Handles.js";import{makeHandle as o}from"../../../../core/handleUtils.js";import{destroyMaybe as s}from"../../../../core/maybe.js";import{initial as r}from"../../../../core/reactiveUtils.js";import{property as a}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as l}from"../../../../core/accessorSupport/decorators/subclass.js";import{c}from"../../../../chunks/mat4f64.js";import{b as u}from"../../../../chunks/vec3.js";import{g as d,c as m}from"../../../../chunks/vec3f64.js";import{WatchUpdatingTracking as h}from"../../../../core/support/WatchUpdatingTracking.js";import{LineOfSightVisualElement as p}from"./LineOfSightVisualElement.js";import{LineVisualElement as g}from"../../interactive/visualElements/LineVisualElement.js";import{PointVisualElement as v}from"../../interactive/visualElements/PointVisualElement.js";import{RenderOccludedFlag as f}from"../../webgl-engine/lib/Material.js";let b=class extends t{constructor(i){super(i),this._lineOfSightVisualElements=new Array,this._computationHandles=new n,this._updatingHandles=new h}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=s(this._updatingHandles),this._computationHandles=s(this._computationHandles),this._observerVisualElement=s(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get test(){return{disablePartialOcclusion:()=>{for(const i of this._lineOfSightVisualElements)i.visibleLineVisualElement.renderOccluded=f.Occlude,i.occludedLineVisualElement.renderOccluded=f.Occlude,i.undefinedLineVisualElement.renderOccluded=f.Occlude},visualizations:this._lineOfSightVisualElements}}get _configuration(){return this.analysisViewData.configuration}_createLineOfSightVisualization(){const i=this._configuration,t=this.view,n={view:t,attached:!0,width:i.outerWidth,innerWidth:i.innerWidth},o=e.toUnitRGBA(i.visibleOuterColor),s=e.toUnitRGBA(i.visibleInnerColor),r=e.toUnitRGBA(i.occludedOuterColor),a=e.toUnitRGBA(i.occludedInnerColor),l=e.toUnitRGBA(i.undefinedOuterColor),c=e.toUnitRGBA(i.undefinedInnerColor),u=new g({...n,color:o,innerColor:s}),d=new g({...n,color:r,innerColor:a}),m=new g({...n,color:l,innerColor:c}),h=new v({view:t,attached:!0,..._,size:8}),f=new p(u,d,m,h);return this._lineOfSightVisualElements.push(f),f}_destroyLineOfSightVisualization(i){i.destroy(),this._lineOfSightVisualElements.splice(this._lineOfSightVisualElements.indexOf(i),1)}_updateLineOfSightVisualization(i,t,n){const o=this._configuration,{computationResult:s,inputPoints:r}=i,{start:a,end:l,intersection:c,isValid:m,isTargetVisible:h}=s,{observer:p}=r,g=C;g[12]=p[0],g[13]=p[1],g[14]=p[2];const v=u(O,a,p),f=u(V,l,p),b=u(y,c,p),{visibleLineVisualElement:_,occludedLineVisualElement:E,undefinedLineVisualElement:w,targetVisualElement:A}=t,S=null==this.analysisViewData.elevationAlignedObserver||null==i.elevationAlignedTargetLocation,j=this.visible&&!S;_.visible=j,E.visible=j,w.visible=j,A.visible=j,A.attached=!n.interactiveAndEditable,j&&(_.geometry=null,E.geometry=null,w.geometry=null,A.geometry=i.elevationAlignedTargetLocation,m?h?(_.geometry=[[d(v),d(f)]],_.transform=g,_.color=e.toUnitRGBA(o.visibleOuterColor),A.color=e.toUnitRGBA(o.visibleInnerColor)):(_.geometry=[[d(v),d(b)]],_.transform=g,_.color=e.toUnitRGBA(o.occludedOuterColor),E.geometry=[[d(b),d(f)]],E.transform=g,A.color=e.toUnitRGBA(o.occludedInnerColor)):(w.geometry=[[d(v),d(f)]],w.transform=g,A.color=e.toUnitRGBA(o.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(i){const{computationResult:e}=i,{occludedOuterColor:t,visibleOuterColor:n}=this._configuration;return{computationResult:e,occludedOuterColor:t,visibleOuterColor:n,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(i){const e=this._computationHandles;if(e.has(i))return;const t=this._createLineOfSightVisualization();e.add([this._updatingHandles.add((()=>this._getLineOfSightVisualizationDependencies(i)),(e=>this._updateLineOfSightVisualization(i,t,e)),{initial:!0,equals:()=>!1}),o((()=>this._destroyLineOfSightVisualization(t)))],i)}_disconnectComputation(i){this._computationHandles.remove(i)}_connectComputations(){return this._updatingHandles.addOnCollectionChange((()=>this.analysisViewData.computations),(i=>this._onComputationsCollectionChange(i)),{initial:!0,final:!0})}_onComputationsCollectionChange({added:i,removed:e}){for(const t of e)this._disconnectComputation(t);for(const t of i)this._connectComputation(t)}_createObserverVisualization(){const i=e.toUnitRGBA(this._configuration.visibleInnerColor),t=new v({view:this.view,attached:!1,color:i,..._});this._observerVisualElement=t,this.addHandles(this._updatingHandles.add((()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible})),(({observer:i,interactiveAndEditable:e,visible:n})=>{null!=i&&!e&&n?(t.geometry=i,this._observerVisualElement.attached=!0):t.attached=!1}),r))}};i([a({constructOnly:!0})],b.prototype,"analysis",void 0),i([a({constructOnly:!0})],b.prototype,"analysisViewData",void 0),i([a({constructOnly:!0})],b.prototype,"view",void 0),i([a({readOnly:!0})],b.prototype,"visible",null),i([a()],b.prototype,"updating",null),i([a()],b.prototype,"interactiveAndEditable",null),i([a()],b.prototype,"test",null),i([a()],b.prototype,"_configuration",null),b=i([l("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],b);const _={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},O=m(),V=m(),y=m(),C=c();export{b as LineOfSightVisualization};
