/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import i from"../../../core/Accessor.js";import s from"../../../core/Collection.js";import o from"../../../core/Evented.js";import{destroyMaybe as r,applySome as e}from"../../../core/maybe.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{c as l}from"../../../chunks/vec3f64.js";import{AnalysisView3D as p}from"./AnalysisView3D.js";import{LineOfSightConfiguration as y}from"./LineOfSight/LineOfSightConfiguration.js";import{LineOfSightController as u}from"./LineOfSight/LineOfSightController.js";import{LineOfSightTool as h}from"./LineOfSight/LineOfSightTool.js";import{LineOfSightVisualization as c}from"./LineOfSight/LineOfSightVisualization.js";import{connectAnalysisViewToTool as m,removeAnalysisViewTool as d}from"../../analysis/analysisViewUtils.js";let g=class extends(p(o.EventedMixin(i))){constructor(t){super(t),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new s,this.elevationAlignedObserver=null,this.configuration=new y,this.observerEngineLocation=l(),this.cursorTarget=null,this.editable=!0}initialize(){const t=this.view,i=this.analysis;this._analysisController=new u({analysis:i,analysisViewData:this,view:t}),this._analysisVisualization=new c({analysis:i,analysisViewData:this,view:t}),this.addHandles([this._analysisController.on("result-changed",(t=>{t.target!==this.cursorTarget&&this.emit("result-changed",t)})),m(this,h)])}destroy(){d(this),this._analysisController=r(this._analysisController),this._analysisVisualization=r(this._analysisVisualization)}get results(){return this.computations.map((t=>t.result))}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return null!=this._analysisController&&this._analysisController.updating||null!=this._analysisVisualization&&this._analysisVisualization.updating}getResultForTarget(t){const i=this.computations.find((i=>i.target===t));return e(i,(t=>t.result))}get testInfo(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};t([n({readOnly:!0})],g.prototype,"type",void 0),t([n({constructOnly:!0,nonNullable:!0})],g.prototype,"analysis",void 0),t([n()],g.prototype,"tool",void 0),t([n({readOnly:!0})],g.prototype,"results",null),t([n()],g.prototype,"priority",null),t([n()],g.prototype,"computations",void 0),t([n()],g.prototype,"elevationAlignedObserver",void 0),t([n()],g.prototype,"configuration",void 0),t([n()],g.prototype,"observerEngineLocation",void 0),t([n()],g.prototype,"cursorTarget",void 0),t([n()],g.prototype,"updating",null),t([n()],g.prototype,"editable",void 0),t([n()],g.prototype,"_analysisController",void 0),t([n()],g.prototype,"_analysisVisualization",void 0),g=t([a("esri.views.3d.analysis.LineOfSightAnalysisView3D")],g);const f=g;export{f as default};
