/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{throwIfAborted as t,whenOrAbort as e}from"../../../core/promiseUtils.js";import{isSVG as r}from"../../../core/urlUtils.js";import{TextureCollection as s,TextureRequest as i}from"./TextureCollection.js";import{Texture as l}from"../webgl-engine/lib/Texture.js";import{TextureWrapMode as o}from"../../webgl/enums.js";class n extends s{constructor(t,e,r){super(e,r),this._streamDataRequester=t}async fromUrl(r,s,l){t(l);const o=null!=l?l.signal:null,n=this.makeUid(r,s);let h=this._textureRequests.get(n);if(!h){const t=new AbortController,e=this._streamDataRequester.request(r,"image",{uid:n,signal:t.signal});h=new i,h.abortController=t;const l=h;this._textureRequests.set(n,h),h.textureAsync=e.then((async t=>{const e=this._createTexture(r,t,s);return l.texture=e,l.abortController=null,this._stage.add(e),await this._stage.load(e),{uid:n,texture:e,release:()=>this._release(n)}}),(t=>{throw l.abortController=null,t}))}h.referenceCount++;try{return await e(h.textureAsync,o)}catch(a){throw this._release(n),a}}_createTexture(t,e,s){const i={width:e.width,height:e.height,wrap:{s:o.CLAMP_TO_EDGE,t:o.CLAMP_TO_EDGE},preMultiplyAlpha:!0};if(r(t)){if(s||0===e.width&&0===e.height){const t=e.width?e.height/e.width:1;s=s||64,t>1?(e.width=Math.round(s/t),e.height=s):(e.width=s,e.height=Math.round(s*t))}this._stage.renderView?.renderingContext.driverTest.svgPremultipliesAlpha.result&&(i.preMultiplyAlpha=!1)}return new l(e,i)}}export{n as StreamTextureCollection};
