/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import r from"../../../core/Evented.js";import{destroyMaybe as s}from"../../../core/maybe.js";import{createResolver as i,isAbortError as o}from"../../../core/promiseUtils.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{equals as l}from"../../../geometry/support/spatialReferenceUtils.js";import{ElevationQuery as h}from"../layers/graphics/ElevationQuery.js";let c=class extends(r.EventedMixin(t)){get spatialReference(){return this.view?.basemapTerrain?.spatialReference}constructor(e){super(e),this._im=new Array,this._ground=new Array,this._scene=new Array,this._handles=new Map,this.lastElevationQuery=null,this.elevationCacheEnabled=!1}destroy(){this._elevationQueryCached=s(this._elevationQueryCached)}get _elevationQuery(){return null==this._elevationQueryCached&&(this._elevationQueryCached=new h(this.view.resourceController.scheduler,this.view.spatialReference,(()=>this.view.map&&this.view.map.ground),{maximumAutoTileRequests:4})),this._elevationQueryCached}enableElevationCache(e){e||(this.lastElevationQuery=null),this.elevationCacheEnabled=e}getElevation(e,t,r,s,i){if(this.elevationCacheEnabled&&null!=this.lastElevationQuery){const o=this.lastElevationQuery;if(e===o.x&&t===o.y&&r===o.z&&l(s,o.spatialReference)&&i===o.queryContext)return o.result}let o=null;return o=u(o,this._im,e,t,r,s,i),null==o&&(o=u(o,this._ground,e,t,r,s,i)),"scene"===i&&(o=u(o,this._scene,e,t,r,s,i)),this.elevationCacheEnabled&&(this.lastElevationQuery={x:e,y:t,z:r,spatialReference:s,queryContext:i,result:o}),o}getSphereElevationBounds(e,t){let r=1/0,s=-1/0;for(const i of[this._im,this._ground,this._scene])i.forEach((i=>{if(i.getSphereElevationBounds){const o=i.getSphereElevationBounds(e,t);null!=o&&(r=Math.min(r,o.min),s=Math.max(s,o.max))}}));return{min:r,max:s}}queryElevation(e,t,r,s,n,a=null,l=0){const h=i();return this._elevationQuery.queryElevation(e,t,a,l).then((i=>{"scene"===n&&(i=u(i,this._scene,e,t,r,s,n)),h.resolve(i)})).catch((i=>{o(i)?h.reject(i):h.resolve(this.getElevation(e,t,r,s,n))})),h.promise}register(e,t){this._handles.set(t,t.on("elevation-change",(e=>this.emit("elevation-change",e)))),this._providersFromContext(e).push(t)}unregister(e){this._handles.has(e)&&(this._handles.get(e)?.remove(),this._handles.delete(e));for(const t of[this._im,this._ground,this._scene]){const r=t.indexOf(e);r>-1&&t.splice(r,1)}}_providersFromContext(e){switch(e){case"ground":return this._ground;case"im":return this._im;case"scene":return this._scene}}};function u(e,t,r,s,i,o,n){for(const a of t){const t=a.getElevation(r,s,i,o,n);null!=t&&(e=null!=e?Math.max(t,e):t)}return e}e([n({constructOnly:!0})],c.prototype,"view",void 0),e([n()],c.prototype,"spatialReference",null),c=e([a("esri.views.3d.support.CombinedElevationProvider")],c);export{c as CombinedElevationProvider};
