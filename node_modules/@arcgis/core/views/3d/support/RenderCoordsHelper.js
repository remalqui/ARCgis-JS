/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{rad2deg as t}from"../../../core/mathUtils.js";import{getMetersPerUnitForSR as e,getMetersPerCartesianUnitForSR as s}from"../../../core/unitUtils.js";import{s as o}from"../../../chunks/mat4.js";import{c as i}from"../../../chunks/vec3.js";import{isVec3 as r}from"../../../core/libs/gl-matrix-2/types/vec3.js";import{projectPointToVector as n,projectVectorToVector as a,projectVectorToDehydratedPoint as m,projectVectorToPoint as c}from"../../../geometry/projection.js";import{Axis as l}from"../../../geometry/support/Axis.js";import{create as d,setExtent as p,altitudeAt as h,setAltitudeAt as u,setAltitudeOfTransformation as f,normalAt as y,axisAt as S,elevate as g,intersectRayClosestSilhouette as _,intersectRay as j,createGlobal as w,createLocal as A}from"../../../geometry/support/coordinateSystem.js";import{intersectRay as C}from"../../../geometry/support/plane.js";import{angleAroundAxis as R}from"../../../geometry/support/vector.js";import{sv3d as M}from"../../../geometry/support/vectorStacks.js";import{isDehydratedPoint as P}from"../../../layers/graphics/dehydratedFeatureUtils.js";import{ViewingMode as v}from"../../ViewingMode.js";class U{constructor(t,e,s,o){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=s,this._coordinateSystem=o,this._tmpCoordinateSystem=d(o)}set extent(t){t&&p(this._coordinateSystem,t,this._coordinateSystem)}getAltitude(t){return h(this._coordinateSystem,t)}setAltitude(t,e,s=t){return u(this._coordinateSystem,s,e,t)}setAltitudeOfTransformation(t,e){f(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return y(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,s){return S(this._coordinateSystem,t,e,s)}basisMatrixAtPosition(t,e){const s=this.worldBasisAtPosition(t,l.X,M.get()),i=this.worldBasisAtPosition(t,l.Y,M.get()),r=this.worldBasisAtPosition(t,l.Z,M.get());return o(e,s[0],s[1],s[2],0,i[0],i[1],i[2],0,r[0],r[1],r[2],0,0,0,0,1),e}headingAtPosition(e,s){const o=this.worldUpAtPosition(e,M.get()),i=this.worldBasisAtPosition(e,l.Y,M.get()),r=R(s,i,o);return t(r)}intersectManifoldClosestSilhouette(t,e,s){return g(this._coordinateSystem,e,this._tmpCoordinateSystem),_(this._tmpCoordinateSystem,t,s),s}intersectManifold(t,e,s){g(this._coordinateSystem,e,this._tmpCoordinateSystem);const o=M.get();return j(this._tmpCoordinateSystem,t,o)?i(s,o):null}intersectInfiniteManifold(t,e,s){if(this.viewingMode===v.Global)return this.intersectManifold(t,e,s);g(this._coordinateSystem,e,this._tmpCoordinateSystem);const o=this._tmpCoordinateSystem.value,r=M.get();return C(o.plane,t,r)?i(s,r):null}toRenderCoords(t,e,s){return P(t)?n(t,e,this.spatialReference):a(t,e,s,this.spatialReference)}fromRenderCoords(t,e,s=null){return P(e)?(null!=s&&(e.spatialReference=s),m(t,this.spatialReference,e)):r(e)?a(t,this.spatialReference,e,s)?e:null:c(t,this.spatialReference,e)}static create(t,s){switch(t){case v.Local:return new U(v.Local,s,e(s),A());case v.Global:return new U(v.Global,s,1,w(s))}}static renderUnitScaleFactor(t,e){return s(t)/s(e)}}export{U as RenderCoordsHelper};
