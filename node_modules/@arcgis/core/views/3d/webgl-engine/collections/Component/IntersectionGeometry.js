/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{t}from"../../../../../chunks/vec3.js";import{c as o}from"../../../../../chunks/vec3f64.js";import{create as n}from"../../../../../geometry/support/aaBoundingBox.js";import{newFloatArray as s}from"../../../../../geometry/support/FloatArray.js";import{compactIndices as i,getContinuousIndexArray as e}from"../../../../../geometry/support/Indices.js";import{componentMinimalSizeForIntersectionData as r,ComponentIntersectionData as p}from"./ComponentIntersectionData.js";import{Attribute as m}from"../../lib/Attribute.js";import{getVisibility as c}from"../../lib/ComponentUtils.js";import{computeInvDir as a,intersectAabbInvDir as h,intersectTriangles as l}from"../../materials/internal/MaterialUtil.js";class f{constructor(t,o){this._components=o,this._indices=null!=t.indices?i(t.indices):e(t.positions.length/3),this._positions=t.positions,this._componentIntersectionData=new Array(o.count)}getComponentAabb(t,o){this._perComponentAabbs||(this._perComponentAabbs=this._computePerComponentAabbs());for(let n=0;n<6;n++)o[n]=this._perComponentAabbs[6*t+n];return o}getComponentPositions(t,o){o.indices=this._indices,o.data=this._positions,o.stride=3,o.startIndex=this._components.offsets[t],o.endIndex=this._components.offsets[t+1]}intersect(o,n,s,i,e,f,b){const d=new m(this._positions,3,!1,3),A=this._indices,C=this._components.offsets,g=a(o,n,_),j=o[2],y=n[2];this._components.visibility.forEachComponent((m=>{if(!c(this._components.pickability,m))return!0;const a=this.getComponentAabb(m,u);if(null!=f){const t=f[m];null!=e?e.componentOffset=t:(o[2]=j-t,n[2]=y-t)}if(null!=e&&e.applyToAabb(a),!h(a,o,g,s))return!0;const _=C[m]/3,I=C[m+1]/3,x=(o,n,s)=>b(m,o,t(n,n,i),s);return null==e&&I-_>r?(null==this._componentIntersectionData[m]&&(this._componentIntersectionData[m]=new p(this._indices,_,I,d)),this._componentIntersectionData[m].intersectRay({r0:o,r1:n},x)):l(o,n,_,I,A,d,void 0,e,x),!0}))}_computePerComponentAabbs(){const t=this._components.count,o=s(6*t),n=this._indices,i=this._positions,e=this._components.offsets;let r=0;for(let s=0;s<t;s++){const t=e[s],p=e[s+1];let m=1/0,c=1/0,a=1/0,h=-1/0,l=-1/0,f=-1/0;for(let o=t;o<p;o++){const t=3*n[o],s=i[t],e=i[t+1],r=i[t+2];m=Math.min(m,s),c=Math.min(c,e),a=Math.min(a,r),h=Math.max(h,s),l=Math.max(l,e),f=Math.max(f,r)}o[r++]=m,o[r++]=c,o[r++]=a,o[r++]=h,o[r++]=l,o[r++]=f}return o}get positions(){return this._positions}get indices(){return this._indices}}const _=o(),u=n();export{f as default};
