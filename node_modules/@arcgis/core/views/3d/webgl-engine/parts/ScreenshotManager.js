/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{disposeMaybe as e}from"../../../../core/maybe.js";import{createResolver as t}from"../../../../core/promiseUtils.js";import{d as r}from"../../../../chunks/vec4f64.js";import{RenderRequestType as s,Decorations as i}from"../lib/basicInterfaces.js";import{RenderState as n}from"../../../support/RenderState.js";import{resampleHermite as o}from"../../../support/screenshotUtils.js";import{PixelFormat as a,DataType as h,RenderbufferFormat as c}from"../../../webgl/enums.js";import{ensureAttachmentMaxSize as l,FramebufferObject as d}from"../../../webgl/FramebufferObject.js";import{RenderbufferDescriptor as f}from"../../../webgl/RenderbufferDescriptor.js";import{TextureDescriptor as m}from"../../../webgl/TextureDescriptor.js";import{createEmptyImageData as u}from"../../../../core/imageUtils.js";class p{constructor(e,t){this.parameters=e,this.frameHasDecorations=t}}class g{constructor(e,t,r,s){this._rctx=e,this._renderFunctions=t,this._forceCameraHook=r,this._disposeOffscreenBuffers=s,this.supersample=!0,this._screenshotQueue=new Array}destroy(){this._rctx=null}async takeScreenshot(e){await this._renderFunctions.prepareOverlay(),this._renderFunctions.requestRenderScene(s.BACKGROUND);const r=t();return this._screenshotQueue.push({settings:e,resolver:r}),r.promise}update(e,t){for(const r of this._screenshotQueue){if(null==this._rctx){r.resolver.reject();continue}const s={...r.settings,pixelRatio:r.settings.pixelRatio*e.parameters.camera.pixelRatio},i=this._renderScreenshot(e,s,t);r.resolver(i)}this._screenshotQueue.length=0}_renderScreenshotOverlay(e,t,r){e.width=t.width,e.height=t.height;const s=e.getContext("2d"),i=r.pixelRatio;return s.save(),s.translate(0,t.height),s.scale(1,-1),r.region&&s.translate(-r.region.x,-r.region.y),s.scale(i,i),t=this._renderFunctions.renderOverlay(e,t),s.restore(),t}_readbackScreenshot(e,t){return e.resample?this._readbackScreenshotResampled({...e,resample:e.resample},t):this._readbackScreenshotImmediate(e,t)}_readbackScreenshotResampled(e,t){const{framebufferWidth:r,framebufferHeight:s,region:i,resample:n}=e,c=this._ensureScreenshotEncodeCanvas();let l=u(r,s,c);this._rctx.gl.readPixels(0,0,r,s,a.RGBA,h.UNSIGNED_BYTE,new Uint8Array(l.data.buffer)),t(),l=this._renderScreenshotOverlay(c,l,{...e,region:void 0});const d=u(i.width,i.height,c);return o(l,d,!0,n.region.x,s-(n.region.y+n.region.height),n.region.width,n.region.height)}_readbackScreenshotImmediate(e,t){const{framebufferHeight:r,region:s}=e,i=this._ensureScreenshotEncodeCanvas(),n=u(s.width,s.height,i);return this._rctx.gl.readPixels(s.x,r-(s.y+s.height),s.width,s.height,a.RGBA,h.UNSIGNED_BYTE,new Uint8Array(n.data.buffer)),t(),this._renderScreenshotOverlay(i,n,e)}_renderScreenshot(t,s,o){let a=null;const h=t.parameters.camera,u={width:s.framebufferWidth,height:s.framebufferHeight};l(u,Math.min(this._rctx.parameters.maxTextureSize,this._rctx.parameters.maxRenderbufferSize));let p=!1;const g=s.disableDecorations&&t.frameHasDecorations,_=u.width!==h.fullWidth||u.height!==h.fullHeight,b=s.ignorePadding&&h.pixelRatio!==s.pixelRatio,x=_||g||b||s.objectAndLayerIdColor,w=s.objectAndLayerIdColor?new d(this._rctx,new m(u.width,u.height),new f(c.DEPTH_STENCIL,u.width,u.height)):null;if(x){const e=h.clone();if(s.ignorePadding){const t=r(e.padding);for(let r=0;r<4;r++)t[r]=Math.round(t[r]/e.pixelRatio*s.pixelRatio);e.padding=t}e.fullWidth=u.width,e.fullHeight=u.height,e.pixelRatio=s.pixelRatio;const t=h.fovX-e.fovX,l=h.fovY-e.fovY;t<0&&t<l?e.fovX=h.fovX:l<0&&l<t&&(e.fovY=h.fovY);const g={camera:e,contentCamera:e,mode:n.IDLE,alignPixelEnabled:!0,contentPixelRatio:e.pixelRatio};this._forceCameraHook(g),p=!0,a=new d(this._rctx,new m(u.width,u.height),new f(c.DEPTH_STENCIL,u.width,u.height));const _=s.disableDecorations?i.OFF:i.ON;this._renderFunctions.renderScene(a,w,g,_,o),this._disposeOffscreenBuffers()}const v=()=>{this._rctx.bindFramebuffer(null),e(a)},S=this._readbackScreenshot(s,v);v();let R=null;if(s.objectAndLayerIdColor){const t=()=>{this._rctx.bindFramebuffer(null),e(w)};this._rctx.bindFramebuffer(w),R=this._readbackScreenshot(s,t),this._rctx.bindFramebuffer(null),t()}if(x&&!this._rctx.contextAttributes.alpha)for(let e=3;e<S.data.length;e+=4)S.data[e]=255;if(R&&!this._rctx.contextAttributes.alpha)for(let e=3;e<R.data.length;e+=4)R.data[e]=255;return p&&this._forceCameraHook(t.parameters),[S,R]}_ensureScreenshotEncodeCanvas(){return this._screenshotEncodeCanvas||(this._screenshotEncodeCanvas=document.createElement("canvas")),this._screenshotEncodeCanvas}}export{p as ScreenshotContext,g as ScreenshotManager};
