/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{smoothstep as t,clamp as e}from"../../../../core/mathUtils.js";import{disposeMaybe as s,releaseMaybe as a}from"../../../../core/maybe.js";import{n as i,s as r,e as h}from"../../../../chunks/vec3.js";import{c as o}from"../../../../chunks/vec3f64.js";import{ViewingMode as c}from"../../../ViewingMode.js";import{ReadShadowMapDrawParameters as m}from"../core/shaderLibrary/shading/ReadShadowMap.glsl.js";import{createQuadVAO as n}from"./glUtil3D.js";import{ShadowHighlightPassParameters as _,ShadowHighlightTechnique as p}from"../shaders/ShadowHighlightTechnique.js";import{vertexCount as d}from"../../../webgl/Util.js";const u=.001953125,l=4e4,g=5e4;class w{constructor(t,e){this._rctx=t,this._viewingMode=e,this._maxOpacity=1,this._passParameters=new _,this._drawParameters=new m,this._vao=n(this._rctx)}get _technique(){return null==this._techniqueCached&&(this._techniqueCached=new p({rctx:this._rctx,viewingMode:this._viewingMode})),this._techniqueCached}render(t,e){if(!t.shadowMap.enabled||!t.linearDepthTexture||!this.isVisible)return;const s=this._technique;this._drawParameters.origin=t.camera.center,this._rctx.bindFramebuffer(e),this._rctx.bindTechnique(s,this._passParameters,t).bindDraw(this._drawParameters,t,this._passParameters),this._rctx.bindVAO(this._vao),this._rctx.drawArrays(s.primitiveType,0,d(this._vao,"geometry"))}get gpuMemoryUsage(){return this._vao?.memoryEstimate??0}setDefaultOptions(t){this._passParameters={...this._passParameters,...t},this._updateMaxOpacity()}updateParameters(s,a){this._passParameters.opacityElevation=1-t(l,g,s.relativeElevation);const o=this._viewingMode===c.Global?i(y,s.center):r(y,0,0,1),m=h(o,a);this._passParameters.dayNightTerminator=t(0,1,e(30*m,0,1))}dispose(){this._vao=s(this._vao),this._techniqueCached=a(this._techniqueCached)}get isVisible(){const{opacityElevation:t,dayNightTerminator:e}=this._passParameters;return this._maxOpacity*t*e>=u}_updateMaxOpacity(){const t=Math.max(this._passParameters.shadowOpacity,this._passParameters.occludedShadowOpacity);this._maxOpacity=t*this._passParameters.shadowColor[3]}}const y=o();export{w as ShadowHighlight};
