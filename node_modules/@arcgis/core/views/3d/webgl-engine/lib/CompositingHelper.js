/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{disposeMaybe as e}from"../../../../core/maybe.js";import{ChapmanAtmosphereTechniqueConfiguration as s}from"../../environment/ChapmanAtmosphereTechniqueConfiguration.js";import{createQuadVAO as t}from"./glUtil3D.js";import{A as r}from"../../../../chunks/AtmosphereCompositing.glsl.js";import{AtmosphereCompositingTechnique as i}from"../shaders/AtmosphereCompositingTechnique.js";import{C as o}from"../../../../chunks/Compositing.glsl.js";import{CompositingTechnique as a}from"../shaders/CompositingTechnique.js";import{CompositingTechniqueConfiguration as h,AlphaMode as n}from"../shaders/CompositingTechniqueConfiguration.js";import{H as m}from"../../../../chunks/HUDCompositing.glsl.js";import{HUDCompositingTechnique as c}from"../shaders/HUDCompositingTechnique.js";import{O as p}from"../../../../chunks/OITCompositing.glsl.js";import{OITCompositingTechnique as u}from"../shaders/OITCompositingTechnique.js";import{O as _}from"../../../../chunks/OverlayCompositing.glsl.js";import{OverlayCompositingTechnique as l}from"../shaders/OverlayCompositingTechnique.js";import{PrimitiveType as g}from"../../../webgl/enums.js";import{vertexCount as y}from"../../../webgl/Util.js";class d{constructor(e,t){this._rctx=e,this._techniqueRepository=t,this._configuration=new h,this._atmosphereConfiguration=new s,this._passParameters=new o,this._atmosphereParameters=new r,this._oitParameters=new p,this._hudParameters=new m,this._overlayParameters=new _}destroy(){this._vao=e(this._vao)}compositeOIT(e,s,t,r){this._oitParameters.colorTexture=s,this._oitParameters.alphaTexture=t,this._oitParameters.frontFaceTexture=r;const i=this._rctx,o=this._techniqueRepository.acquire(u);i.bindTechnique(o,this._oitParameters,e);const a=this._ensureVAO();i.bindVAO(a),i.drawArrays(g.TRIANGLE_STRIP,0,y(a,"geometry")),o.release()}compositeHUD(e,s){this._hudParameters.texture=s;const t=this._rctx,r=this._techniqueRepository.acquire(c);t.bindTechnique(r,this._hudParameters,e);const i=this._ensureVAO();t.bindVAO(i),t.drawArrays(g.TRIANGLE_STRIP,0,y(i,"geometry")),r.release()}compositeOverlay(e,s,t,r){this._overlayParameters.texture=s,this._overlayParameters.opacity=t,this._overlayParameters.overlayIndex=r;const i=this._rctx,o=this._techniqueRepository.acquire(l);i.bindTechnique(o,this._overlayParameters,e);const a=this._ensureVAO();i.bindVAO(a),i.drawArrays(g.TRIANGLE_STRIP,0,y(a,"geometry")),o.release()}compositeAtmosphere(e,s,t,r,o){const a=this._rctx;this._atmosphereParameters.texture=s,this._atmosphereParameters.depthTexture=t,this._atmosphereParameters.scale=r,this._atmosphereConfiguration.haze=o;const h=this._techniqueRepository.acquire(i,this._atmosphereConfiguration);a.bindTechnique(h,this._atmosphereParameters,e);const n=this._ensureVAO();a.bindVAO(n),a.drawArrays(g.TRIANGLE_STRIP,0,y(n,"geometry")),h.release()}composite(e,s,t=n.None,r=1){const i=this._rctx;this._configuration.alphaMode=t,this._configuration.hasOpacityFactor=1!==r,this._passParameters.texture=s,this._passParameters.opacity=r;const o=this._techniqueRepository.acquire(a,this._configuration);i.bindTechnique(o,this._passParameters,e);const h=this._ensureVAO();i.bindVAO(h),i.drawArrays(g.TRIANGLE_STRIP,0,y(h,"geometry")),o.release()}_ensureVAO(){return null==this._vao&&(this._vao=t(this._rctx)),this._vao}}export{d as default};
