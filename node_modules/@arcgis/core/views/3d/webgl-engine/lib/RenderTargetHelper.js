/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{nullifyNonNullableForDispose as e}from"../../../../core/maybe.js";import{generateUID as t}from"../../../../core/uid.js";import{PixelType as r,PixelFormat as s,TextureSamplingMode as i,TextureWrapMode as o}from"../../../webgl/enums.js";import{FramebufferObject as h}from"../../../webgl/FramebufferObject.js";import{Texture as a}from"../../../webgl/Texture.js";import{TextureDescriptor as d}from"../../../webgl/TextureDescriptor.js";const c={dataType:r.UNSIGNED_BYTE,internalFormat:s.RGBA},p={};class u{constructor(e){this._rctx=e,this._activeTargets=new Set,this._colorTextures=new Map,this._depthTextures=new Map,this._fbos=new Map}dispose(){this._depthTextures.forEach((e=>e.dispose())),this._depthTextures.clear(),this._colorTextures.forEach((e=>e.dispose())),this._colorTextures.clear(),this._fbos.forEach((e=>e.dispose())),this._fbos.clear(),this._activeTargets.clear()}disposeTargetResource(e){const t=e.id;this._activeTargets.has(t)&&(this._activeTargets.delete(t),this._disposeWithFramebuffers(this._depthTextures,t),this._disposeWithFramebuffers(this._colorTextures,t))}_disposeWithFramebuffers(e,t){const r=e.get(t);r&&(this._fbos.forEach(((e,t)=>{e.colorTexture!==r&&e.depthStencilAttachment!==r||(e.detachColorTexture(),e.detachDepthStencilTexture(),e.dispose(),this._fbos.delete(t))})),r.dispose(),e.delete(t))}_getDepthTexture(e,t,h){let c=this._depthTextures.get(e.id);if(!c||c.descriptor.width===t&&c.descriptor.height===h||(c.dispose(),c=null),!c){const p=new d(t,h);p.pixelFormat=s.DEPTH_STENCIL,p.dataType=r.UNSIGNED_INT_24_8,p.samplingMode=i.NEAREST,p.wrapMode=o.CLAMP_TO_EDGE,c=new a(this._rctx,p),this._depthTextures.set(e.id,c),this._activeTargets.add(e.id)}return c}getAllocatedDepthTexture(e){return this._depthTextures.get(e.id)}getColorTexture(t,r,s){let h=this._colorTextures.get(t.id);if(h&&(h.descriptor.width===r&&h.descriptor.height===s||(h.dispose(),h=e())),!h){const e=new d(r,s);e.internalFormat=t.internalFormat,e.dataType=t.dataType,e.samplingMode=null!=t.samplingMode?t.samplingMode:i.LINEAR,e.wrapMode=o.CLAMP_TO_EDGE,h=new a(this._rctx,e),this._colorTextures.set(t.id,h),this._activeTargets.add(t.id)}return h}getAllocatedColorTexture(e){return this._colorTextures.get(e.id)}registerDepthTarget(e={}){return{id:t(),...p,...e}}registerColorTarget(e={}){return{id:t(),...c,...e}}getFramebuffer(e,t,r,s){const i=this._getKey(r,s);let o=this._fbos.get(i);const a=this.getColorTexture(r,e,t),d=s?this._getDepthTexture(s,e,t):void 0;if(!o)return o=new h(this._rctx,a,d),this._fbos.set(i,o),o;return(o.width!==e||o.height!==t||o.colorTexture!==a||o.depthStencilAttachment!==d)&&(o.detachColorTexture(),o.detachDepthStencilTexture(),o.resize(e,t),o.attachColorTexture(a),o.attachDepthStencil(d)),o}_getKey(e,t){return`${e.id}_${t?t.id:"X"}_${e.name}${t?"_"+t.name:""}`}get gpuMemoryUsage(){let e=0;const t=new Set,r=r=>{t.has(r)||(t.add(r),e+=r.gpuMemoryUsage)};return this._colorTextures.forEach(r),this._depthTextures.forEach(r),e}}export{u as RenderTargetHelper};
