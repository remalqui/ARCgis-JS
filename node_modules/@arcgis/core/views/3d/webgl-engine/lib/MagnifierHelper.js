/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import s from"../../../../core/Accessor.js";import{createTask as r}from"../../../../core/asyncUtils.js";import t from"../../../../core/Evented.js";import i from"../../../../core/Handles.js";import{clamp as a}from"../../../../core/mathUtils.js";import{applySome as o}from"../../../../core/maybe.js";import{watch as n}from"../../../../core/reactiveUtils.js";import{createScreenPointArray as l,createRenderScreenPointArray as u,screenPointObjectToArray as m}from"../../../../core/screenUtils.js";import{isSVG as h}from"../../../../core/urlUtils.js";import{property as p}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import{subclass as c}from"../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as _}from"../../../../support/requestImageUtils.js";import{Pos2 as g}from"./DefaultVertexBufferLayouts.js";import{createQuadVAO as d}from"./glUtil3D.js";import{Program as f}from"./Program.js";import{VertexAttribute as T}from"./VertexAttribute.js";import{MagnifierPassParameters as v,build as k}from"../shaders/Magnifier.glsl.js";import{loadMagnifierResources as y}from"../../../magnifier/resources.js";import{PrimitiveType as S,BlendFactor as j,PixelFormat as x,TextureWrapMode as P}from"../../../webgl/enums.js";import{makePipelineState as L,simpleBlendingParams as R,defaultColorWriteParams as b}from"../../../webgl/renderState.js";import{Texture as w}from"../../../webgl/Texture.js";import{TextureDescriptor as A}from"../../../webgl/TextureDescriptor.js";let M=class extends s{constructor(){super(...arguments),this._handles=new i,this._magnifier=null,this._imageSources=null,this._imageLoadTask=null,this._resources=null,this._passParameters=new v,this.events=new t,this.attributeLocations=new Map([[T.POSITION,0]]),this._tmpScreenPoint=l(),this._tmpRenderPoint=u()}get updating(){return null==this._imageSources&&null!=this._imageLoadTask&&!this._imageLoadTask.task.finished}get magnifier(){return this._magnifier}set magnifier(e){if(e===this._magnifier)return;this._handles.removeAll(),this._magnifier=e;const s=()=>{this._updateResourceLoading(),this.events.emit("request-render")};null!=this._magnifier&&this._handles.add(n((()=>o(this._magnifier,(e=>e.version))),s)),s()}get enabled(){return null!=this._validMagnifier}get _validMagnifier(){return null!=this._magnifier&&this._magnifier.visible&&null!=this._magnifier.position&&this._magnifier.size>0?this._magnifier:null}get _factor(){return null!=this._magnifier&&this._magnifier.factor||1}destroy(){this._magnifier=null,this._handles.destroy(),null!=this._imageLoadTask&&(this._imageLoadTask.task.abort(),this._imageLoadTask=null),this._disposeResources()}render(e,s){const r=this._validMagnifier;if(null==r)return;const t=s.camera.pixelRatio,i=Math.ceil(t*r.size);if(this._updateResources(e,i),null==this._resources)return;const o=this._passParameters.textures,n=Math.ceil(1/this._factor*i);o.input.resize(n,n),m(r.position,this._tmpScreenPoint);const l=s.camera.screenToRender(this._tmpScreenPoint,this._tmpRenderPoint),u=s.camera.fullWidth,h=s.camera.fullHeight,p=.5*n,c=.5*n;l[0]=a(l[0],p,u-p-1),l[1]=a(l[1],c,h-c-1);const _=Math.floor(l[0]-p),g=Math.floor(l[1]-c),d=this._resources.program;d.bindTexture("textureInput",o.input),e.gl.copyTexImage2D(o.input.descriptor.target,0,o.input.descriptor.pixelFormat,_,g,n,n,0),this._passParameters.magnifier=r,e.useProgram(d),d.bindPass(this._passParameters,s),e.bindVAO(this._resources.vao),e.setPipelineState(this._resources.pipelineState),e.drawArrays(S.TRIANGLE_STRIP,0,4)}_updateResourceLoading(){const e=this._validMagnifier;if(null==e)return;const s=e.maskUrl,t=e.overlayUrl;null==this._imageLoadTask||this._imageLoadTask.maskUrl===s&&this._imageLoadTask.overlayUrl===t||(this._imageLoadTask.task.abort(),this._imageLoadTask=null,this._imageSources=null),null==this._imageSources&&null==this._imageLoadTask&&(this._imageLoadTask={maskUrl:s,overlayUrl:t,task:r((async e=>{const r=null==s||null==t?y(e):null,i=null!=s?_(s,{signal:e}):r.then((e=>e.mask)),a=null!=t?_(t,{signal:e}):r.then((e=>e.overlay));this._imageSources={mask:await i,overlay:await a},this._disposeResources(),this.events.emit("request-render")}))},this._imageLoadTask.task.promise.then((()=>this.notifyChange("updating")),(()=>this.notifyChange("updating"))))}_updateResources(e,s){if(!this.enabled)return void this._disposeResources();if(null!=this._resources){if(this._passParameters.textures.size!==s){const r=this._createTextureResources(e,s);if(null==r)return void this._disposeResources();this._disposeTextureResources(this._passParameters.textures),this._passParameters.textures=r}return}const r=this._createTextureResources(e,s);null!=r&&(this._resources={program:this._createProgram(e),vao:d(e,g,this.attributeLocations,0,1),pipelineState:L({blending:R(j.ONE,j.ONE_MINUS_SRC_ALPHA),depthTest:null,depthWrite:null,colorWrite:b})},this._passParameters.textures=r)}_disposeResources(){null!=this._resources&&(this._disposeTextureResources(this._passParameters.textures),this._resources.program.dispose(),this._resources.vao.dispose(),this._resources=null)}_disposeTextureResources(e){e.mask.dispose(),e.overlay.dispose(),e.input.dispose()}_createTextureResources(e,s){if(null==this._imageSources)return null;this._imageSources.overlay.width=s,this._imageSources.overlay.height=s,this._imageSources.mask.width=s,this._imageSources.mask.height=s;const r=new A;r.internalFormat=x.RGBA,r.wrapMode=P.CLAMP_TO_EDGE,r.flipped=!0,r.preMultiplyAlpha=!h(this._imageSources.overlay.src)||!e.driverTest.svgPremultipliesAlpha.result;const t=new w(e,r,this._imageSources.overlay);r.pixelFormat=r.internalFormat=x.ALPHA,r.preMultiplyAlpha=!1;const i=new w(e,r,this._imageSources.mask);r.pixelFormat=r.internalFormat=x.RGBA,r.flipped=!1;return{input:new w(e,r),mask:i,overlay:t,size:s}}_createProgram(e){return new f(e,k(),this.attributeLocations)}};e([p()],M.prototype,"_imageSources",void 0),e([p()],M.prototype,"_imageLoadTask",void 0),e([p({readOnly:!0})],M.prototype,"updating",null),M=e([c("esri/views/3d/webgl-engine/lib/MagnifierHelper")],M);export{M as MagnifierHelper};
