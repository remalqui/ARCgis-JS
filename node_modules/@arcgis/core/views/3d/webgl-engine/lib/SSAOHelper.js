/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{disposeMaybe as e}from"../../../../core/maybe.js";import{Milliseconds as s}from"../../../../core/time.js";import{s as t}from"../../../../chunks/vec2.js";import{createQuadVAO as r}from"./glUtil3D.js";import{SSAOBlurTechnique as i}from"./SSAOBlurTechnique.js";import{noiseData as a}from"./SSAONoiseData.js";import{SSAOTechnique as h}from"./SSAOTechnique.js";import{g as o}from"../../../../chunks/SSAO.glsl.js";import{SSAOPassParameters as n,BlurDrawParameters as u}from"../shaders/SSAOParameters.js";import{PrimitiveType as _,ClearBufferBit as l,TextureWrapMode as m,PixelFormat as c}from"../../../webgl/enums.js";import{FramebufferObject as p}from"../../../webgl/FramebufferObject.js";import{Texture as b}from"../../../webgl/Texture.js";import{TextureDescriptor as d}from"../../../webgl/TextureDescriptor.js";import{vertexCount as T}from"../../../webgl/Util.js";const O=2;class w{constructor(e,s,t,r){this._view=e,this._techniqueRepository=s,this._rctx=t,this._requestRender=r,this._quadVAO=null,this._passParameters=new n,this._drawParameters=new u}dispose(){this.enabled=!1,this._quadVAO=e(this._quadVAO)}destroy(){this.dispose()}disposeOffscreenBuffers(){this._ssaoFBO?.resize(0,0),this._blurFBO?.resize(0,0)}set enabled(e){e?this._enable():this._disable()}get enabled(){return null!=this._enableTime}get active(){return this.enabled&&this._ssaoTechnique.compiled&&this._blurTechnique.compiled}get colorTexture(){return this._ssaoFBO?.colorTexture}render(e,s,i,a){if(null==this._enableTime||null==i||null==a||null==this._ssaoFBO||null==this._blurFBO)return;if(!this.active)return this._enableTime=s,void this._requestRender();0===this._enableTime&&(this._enableTime=s);const h=this._rctx,n=e.camera,u=this._view.qualitySettings.fadeDuration,m=u>0?Math.min(u,s-this._enableTime)/u:1;this._passParameters.normalTexture=a,this._passParameters.depthTexture=i,this._passParameters.projScale=1/n.computeRenderPixelSizeAtDist(1),this._passParameters.intensity=4*f/o(n)**6*m;const c=n.fullViewport,p=c[2],b=c[3],d=p/O,w=b/O;this._ssaoFBO.resize(p,b),this._blurFBO.resize(d,w),null==this._quadVAO&&(this._quadVAO=r(this._rctx)),h.bindFramebuffer(this._ssaoFBO),h.setViewport(0,0,p,b);h.bindTechnique(this._ssaoTechnique,this._passParameters,e).bindDraw(this._drawParameters,e,this._passParameters),h.bindVAO(this._quadVAO);const q=T(this._quadVAO,"geometry");h.drawArrays(_.TRIANGLE_STRIP,0,q);const P=h.bindTechnique(this._blurTechnique,this._passParameters,e);h.setViewport(0,0,d,w),h.bindFramebuffer(this._blurFBO),this._drawParameters.colorTexture=this._ssaoFBO.colorTexture,t(this._drawParameters.blurSize,0,O/b),P.bindDraw(this._drawParameters,e,this._passParameters),h.setViewport(0,0,d,w),h.drawArrays(_.TRIANGLE_STRIP,0,q),h.bindFramebuffer(this._ssaoFBO),h.setViewport(0,0,p,b),h.setClearColor(1,1,1,0),h.clear(l.COLOR_BUFFER_BIT),h.setViewport(0,0,d,w),this._drawParameters.colorTexture=this._blurFBO.colorTexture,t(this._drawParameters.blurSize,O/p,0),P.bindDraw(this._drawParameters,e,this._passParameters),h.drawArrays(_.TRIANGLE_STRIP,0,q),h.setViewport(c[0],c[1],c[2],c[3]),m<1&&this._requestRender()}_enable(){if(null!=this._enableTime)return;const e=new d;e.wrapMode=m.CLAMP_TO_EDGE,this._ssaoFBO=new p(this._rctx,e),this._blurFBO=new p(this._rctx,e);const t=Uint8Array.from(atob(a),(e=>e.charCodeAt(0)));e.pixelFormat=c.RGB,e.wrapMode=m.REPEAT,e.hasMipmap=!0,e.width=32,e.height=32,this._passParameters.noiseTexture=new b(this._rctx,e,t),null==this._ssaoTechnique&&(this._ssaoTechnique=this._techniqueRepository.acquire(h)),null==this._blurTechnique&&(this._blurTechnique=this._techniqueRepository.acquire(i)),this._enableTime=s(0),this._requestRender()}_disable(){this._enableTime=null,this._passParameters.noiseTexture=e(this._passParameters.noiseTexture),this._blurFBO=e(this._blurFBO),this._ssaoFBO=e(this._ssaoFBO)}get gpuMemoryUsage(){return(this._blurFBO?.gpuMemoryUsage??0)+(this._ssaoFBO?.gpuMemoryUsage??0)}}const f=.5;export{w as SSAOHelper,O as blurSizePixels};
