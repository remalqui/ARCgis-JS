/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{OverlayIndex as e}from"../../../../terrain/interfaces.js";import{OverlaySource as r}from"../../../../terrain/Overlay.js";import{ReadShadowMapPassParameters as o}from"../shading/ReadShadowMap.glsl.js";import{BackgroundGrid as t}from"./BackgroundGrid.glsl.js";import{overlay as s}from"./Overlay.glsl.js";import{TileBlendInput as a}from"./TileBlendInput.js";import{FloatPassUniform as c}from"../../shaderModules/FloatPassUniform.js";import{glsl as n}from"../../shaderModules/interfaces.js";import{Texture2DPassUniform as i}from"../../shaderModules/Texture2DPassUniform.js";import{Uniform as d}from"../../shaderModules/Uniform.js";class l extends o{constructor(){super(...arguments),this.overlayOpacity=1,this.overlaySource=r.None}}function u(r,o){r.vertex.uniforms.add(new m("overlayTexOffset"),new m("overlayTexScale")),r.fragment.uniforms.add(new c("overlayOpacity",(e=>e.overlayOpacity)),new i("ovColorTex",((r,o)=>0===o.overlays.length?null:o.overlays[e.INNER].getColorTexture(r.overlaySource)))),s(r,o)}function f(e,r){const{vertex:o,fragment:s,varyings:c}=e;c.add("vtc","vec2"),o.uniforms.add(new m("texOffsetAndScale")),s.uniforms.add(new p("tex")),s.uniforms.add(new v("textureOpacities"));const i=r.textureFadingEnabled&&!r.renderOccluded;i&&(o.uniforms.add(new m("nextTexOffsetAndScale")),c.add("nvtc","vec2"),s.uniforms.add(new p("texNext")),s.uniforms.add(new v("nextTexOpacities")),s.uniforms.add(new x("fadeFactor")));const d=r.tileBlendInput===a.ColorComposite,l=r.tileBlendInput===a.GridComposite;l&&s.include(t),d&&s.uniforms.add(new v("backgroundColor")),o.code.add(n`
  void forwardTextureCoordinatesWithTransform(in vec2 uv) {
    vtc = uv * texOffsetAndScale.zw + texOffsetAndScale.xy;
    ${i?n`nvtc = uv * nextTexOffsetAndScale.zw + nextTexOffsetAndScale.xy;`:n``}
  }`),s.code.add(n`
    vec4 getColor(vec4 color, vec2 uv, vec3 opacities) {
      ${l||d?n`
              if (opacities.y <= 0.0) {
                return color * opacities.z * opacities.x;
              }
              vec4 bg = vec4(${d?n`backgroundColor`:n`gridColor(uv)`} * opacities.y, opacities.y);
              vec4 layer = color * opacities.z;
              return (bg * (1.0 - layer.a) + layer) * opacities.x;`:n`return color;`}
    }`),i?s.code.add(n`vec4 getTileColor() {
vec4 color = getColor(texture(tex, vtc), vtc, textureOpacities);
if (fadeFactor >= 1.0) {
return color;
}
vec4 nextColor = getColor(texture(texNext, nvtc), nvtc, nextTexOpacities);
return mix(nextColor, color, fadeFactor);
}`):s.code.add(n`vec4 getTileColor() {
return getColor(texture(tex, vtc), vtc, textureOpacities);
}`)}class x extends d{constructor(e){super(e,"float")}}class v extends d{constructor(e){super(e,"vec3")}}class m extends d{constructor(e){super(e,"vec4")}}class p extends d{constructor(e){super(e,"sampler2D")}}export{v as Float3Uniform,u as OverlayTerrain,l as OverlayTerrainPassParameters,f as TerrainTexture,p as Texture2DUniform};
