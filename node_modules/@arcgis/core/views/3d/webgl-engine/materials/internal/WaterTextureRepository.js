/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{getAssetUrl as r}from"../../../../../assets.js";import t from"../../../../../core/Accessor.js";import s from"../../../../../core/Logger.js";import{disposeMaybe as a}from"../../../../../core/maybe.js";import{property as o}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/accessorSupport/ensureType.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import{subclass as i}from"../../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as m}from"../../../../../support/requestImageUtils.js";import{NoParameters as p}from"../../core/shaderModules/interfaces.js";import{ResourceState as n}from"../../lib/basicInterfaces.js";import{TextureSamplingMode as l}from"../../../../webgl/enums.js";import{Texture as h}from"../../../../webgl/Texture.js";import{TextureDescriptor as u}from"../../../../webgl/TextureDescriptor.js";let c=class extends t{constructor(){super(...arguments),this._passParameters=new g,this._loading=0}get passParameters(){return this._passParameters}destroy(){this._passParameters.waveNormal=a(this._passParameters.waveNormal),this._passParameters.wavePertubation=a(this._passParameters.wavePertubation)}get updating(){return this._loading>0}ensureResources(e){if(this._loading>0)return n.LOADING;if(null!=this._passParameters.waveNormal&&null!=this._passParameters.wavePertubation)return n.LOADED;const t=new u;return t.samplingMode=l.LINEAR_MIPMAP_LINEAR,t.hasMipmap=!0,t.maxAnisotropy=8,++this._loading,m(r("esri/images/materials/water/normals.jpg")).then((r=>this._passParameters.waveNormal=new h(e,{...t,width:r.width,height:r.height},r))).catch((e=>s.getLogger(this).error("Failed to load water material normal texture.",e))).finally((()=>--this._loading)),++this._loading,m(r("esri/images/materials/water/perturbation.jpg")).then((r=>this._passParameters.wavePertubation=new h(e,{...t,width:r.width,height:r.height},r))).catch((e=>s.getLogger(this).error("Failed to load water material pertubation texture.",e))).finally((()=>--this._loading)),n.LOADING}};e([o()],c.prototype,"_loading",void 0),e([o({type:Boolean,readOnly:!0})],c.prototype,"updating",null),c=e([i("esri.views.3d.webgl-engine.materials.internal.WaterTextureRepository")],c);class g extends p{}export{g as WaterTexturePassParameters,c as WaterTextureRepository};
