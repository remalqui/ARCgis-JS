/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ViewingMode as t}from"../../../ViewingMode.js";import{ShaderOutput as o}from"../core/shaderLibrary/ShaderOutput.js";import{PBRMode as r}from"../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{WaterDistortionPassParameters as i}from"../core/shaderLibrary/shading/WaterDistortion.glsl.js";import{ReloadableShaderModule as s}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as a}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as n}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as p}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as l,oitBlending as c,oitDepthTest as d,oitDepthWrite as u,getOITPolygonOffset as h}from"../lib/OrderIndependentTransparency.js";import{Program as f}from"../lib/Program.js";import{TransparencyPassType as y}from"../lib/TransparencyPassType.js";import{DefaultTechniqueConfiguration as m}from"./DefaultTechniqueConfiguration.js";import{W as b}from"../../../../chunks/WaterSurface.glsl.js";import{makePipelineState as g,defaultDepthWriteParams as v,defaultColorWriteParams as j}from"../../../webgl/renderState.js";class T extends i{}class S extends a{initializeConfiguration(e,o){o.spherical=e.viewingMode===t.Global,o.doublePrecisionRequiresObfuscation=e.rctx.driverTest.doublePrecisionRequiresObfuscation.result}initializeProgram(e){return new f(e.rctx,S.shader.get().build(this.configuration),p)}_setPipelineState(e){const t=this.configuration,r=e===y.NONE,i=e===y.FrontFace;return g({blending:t.output!==o.Normal&&t.output!==o.Highlight&&t.output!==o.ObjectAndLayerIdColor&&t.transparent?r?l:c(e):null,depthTest:{func:d(e)},depthWrite:r?t.writeDepth?v:null:u(e),colorWrite:j,polygonOffset:r||i?null:h(t.enableOffset)})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}S.shader=new s(b,(()=>import("../shaders/WaterSurface.glsl.js")));class P extends m{constructor(){super(...arguments),this.output=o.Color,this.transparencyPassType=y.NONE,this.spherical=!1,this.receiveShadows=!1,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!1,this.hasScreenSpaceReflections=!1,this.doublePrecisionRequiresObfuscation=!1,this.hasCloudsReflections=!1,this.objectAndLayerIdColorInstanced=!1,this.isDraped=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}e([n({count:o.COUNT})],P.prototype,"output",void 0),e([n({count:y.COUNT})],P.prototype,"transparencyPassType",void 0),e([n()],P.prototype,"spherical",void 0),e([n()],P.prototype,"receiveShadows",void 0),e([n()],P.prototype,"hasSlicePlane",void 0),e([n()],P.prototype,"transparent",void 0),e([n()],P.prototype,"enableOffset",void 0),e([n()],P.prototype,"writeDepth",void 0),e([n()],P.prototype,"hasScreenSpaceReflections",void 0),e([n()],P.prototype,"doublePrecisionRequiresObfuscation",void 0),e([n()],P.prototype,"hasCloudsReflections",void 0),e([n()],P.prototype,"objectAndLayerIdColorInstanced",void 0),e([n()],P.prototype,"isDraped",void 0),e([n()],P.prototype,"hasMultipassTerrain",void 0),e([n()],P.prototype,"cullAboveGround",void 0),e([n({constValue:r.Water})],P.prototype,"pbrMode",void 0),e([n({constValue:!0})],P.prototype,"useCustomDTRExponentForWater",void 0),e([n({constValue:!0})],P.prototype,"highStepCount",void 0),e([n({constValue:!1})],P.prototype,"useFillLights",void 0);export{T as WaterMaterialPassParameters,S as WaterTechnique,P as WaterTechniqueConfiguration};
