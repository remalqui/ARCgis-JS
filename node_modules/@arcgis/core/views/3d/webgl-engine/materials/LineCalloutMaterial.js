/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{f as e}from"../../../../chunks/vec2f32.js";import{Z as t}from"../../../../chunks/vec2f64.js";import{newLayout as r}from"../../support/buffer/InterleavedLayout.js";import{ShaderOutput as i}from"../core/shaderLibrary/ShaderOutput.js";import{HUDSpace as s}from"../core/shaderLibrary/hud/HUD.glsl.js";import n from"../lib/GLMaterial.js";import{Material as a,MaterialParameters as o}from"../lib/Material.js";import{RenderSlot as u}from"../lib/RenderSlot.js";import{VertexAttribute as c}from"../lib/VertexAttribute.js";import{writePosition as f,writeNormal as l,writeBufferVec4 as h}from"./internal/bufferWriterUtils.js";import{LineCalloutTechnique as d}from"../shaders/LineCalloutTechnique.js";import{LineCalloutTechniqueConfiguration as m}from"../shaders/LineCalloutTechniqueConfiguration.js";class p extends a{get uniqueMaterialIdentifier(){return this._uniqueMaterialIdentifier}constructor(e){super(e,new O),this._configuration=new m,this._uniqueMaterialIdentifier=p.uniqueMaterialIdentifier(this.parameters)}getPassParameters(){return this.parameters}getConfiguration(e,t){const r=t?.slot!==u.LINE_CALLOUTS;return this._configuration.occlusionTestEnabled=this.parameters.occlusionTest,this._configuration.hasVerticalOffset=null!=this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=null!=this.parameters.screenSizePerspective,this._configuration.depthHudEnabled=r,this._configuration.depthHudAlignStartEnabled=!!this.parameters.depthHUDAlignStart,this._configuration.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits?s.Screen:s.World,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasMultipassGeometry=t.multipassGeometry.enabled,this._configuration}intersect(){}requiresSlot(e,t){if(t===i.Color)switch(e){case u.LINE_CALLOUTS:case u.LINE_CALLOUTS_HUD_DEPTH:return!0}return!1}createGLMaterial(e){return new g(e)}createBufferWriter(){return new L}validateParameters(e){const t=p.uniqueMaterialIdentifier(e);t!==this._uniqueMaterialIdentifier&&(this._uniqueMaterialIdentifier=t)}static uniqueMaterialIdentifier(e){return JSON.stringify({screenOffset:e.screenOffset||[0,0],centerOffsetUnits:e.centerOffsetUnits||"world"})}}class g extends n{beginSlot(e){return this.ensureTechnique(d,e)}}class O extends o{constructor(){super(...arguments),this.screenOffset=t,this.color=[0,0,0,1],this.size=1,this.occlusionTest=!1,this.shaderPolygonOffset=1e-5,this.depthHUDAlignStart=!1,this.centerOffsetUnits="world",this.hasSlicePlane=!1}}const S=r().vec3f(c.POSITION).vec3f(c.NORMAL).vec2f(c.UV0).vec4f(c.AUXPOS1),I=[e(0,0),e(1,0),e(0,1),e(1,0),e(1,1),e(0,1)];class L{constructor(){this.vertexBufferLayout=S}elementCount(e){return 6*e.indices.get(c.POSITION).length}write(e,t,r,i,s){f(r.indices.get(c.POSITION),r.vertexAttributes.get(c.POSITION).data,e,i.position,s,6),l(r.indices.get(c.NORMAL),r.vertexAttributes.get(c.NORMAL).data,t,i.normal,s,6),h(r.indices.get(c.AUXPOS1),r.vertexAttributes.get(c.AUXPOS1).data,i.auxpos1,s,6);for(let n=0;n<I.length;++n)i.uv0.setVec(s+n,I[n])}}export{p as LineCalloutMaterial,O as Parameters};
