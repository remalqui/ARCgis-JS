/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{f as o,c as t}from"../../../../chunks/vec3f64.js";import{ViewingMode as i}from"../../../ViewingMode.js";import{ShaderOutput as r}from"../core/shaderLibrary/ShaderOutput.js";import{PathVertexPositionPassParameters as s}from"../core/shaderLibrary/attributes/PathVertexPosition.glsl.js";import{NormalsDoubleSidedMode as n}from"../core/shaderLibrary/shading/Normals.glsl.js";import{PBRMode as a}from"../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{ReloadableShaderModule as l}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as p}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as c}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{blendingDefault as u,oitBlending as d,oitDepthTest as h,OITPolygonOffset as m}from"../lib/OrderIndependentTransparency.js";import{Program as v}from"../lib/Program.js";import{stencilWriteMaskOn as y,stencilBaseAllZerosParams as f}from"../lib/StencilUtils.js";import{TransparencyPassType as b}from"../lib/TransparencyPassType.js";import{VertexAttribute as g}from"../lib/VertexAttribute.js";import{DefaultTechniqueConfiguration as O}from"./DefaultTechniqueConfiguration.js";import{P}from"../../../../chunks/Path.glsl.js";import{makePipelineState as T,frontFaceCullingParams as j,defaultDepthWriteParams as S,defaultColorWriteParams as R}from"../../../webgl/renderState.js";const N=new Map([[g.POSITION,0],[g.PROFILERIGHT,1],[g.PROFILEUP,2],[g.PROFILEVERTEXANDNORMAL,3],[g.FEATUREVALUE,4]]);class C extends s{constructor(){super(...arguments),this.ambient=o(.2,.2,.2),this.diffuse=o(.8,.8,.8),this.specular=o(0,0,0),this.opacity=1,this.origin=t(),this.modelTransformation=null}}class E extends p{initializeConfiguration(e,o){o.spherical=e.viewingMode===i.Global,o.doublePrecisionRequiresObfuscation=e.rctx.driverTest.doublePrecisionRequiresObfuscation.result}initializeProgram(e){return new v(e.rctx,E.shader.get().build(this.configuration),N)}initializePipeline(){const e=this.configuration.transparencyPassType,o=this.configuration,t=e===b.NONE,i=e===b.FrontFace;return T({blending:o.output!==r.Color&&o.output!==r.Alpha||!o.transparent?null:t?u:d(e),culling:o.hasSlicePlane&&!o.transparent&&o.doubleSidedMode!==n.None?j:null,depthTest:{func:h(e)},depthWrite:t||i?S:null,colorWrite:R,stencilWrite:o.hasOccludees?y:null,stencilTest:o.hasOccludees?f:null,polygonOffset:t||i?null:m})}}E.shader=new l(P,(()=>import("../shaders/Path.glsl.js")));class M extends O{constructor(){super(...arguments),this.output=r.Color,this.doubleSidedMode=n.None,this.transparencyPassType=b.NONE,this.spherical=!1,this.receiveShadows=!1,this.receiveAmbientOcclusion=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.hasSlicePlane=!1,this.transparent=!1,this.hasOccludees=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1,this.doublePrecisionRequiresObfuscation=!1}}e([c({count:r.COUNT})],M.prototype,"output",void 0),e([c({count:n.COUNT})],M.prototype,"doubleSidedMode",void 0),e([c({count:b.COUNT})],M.prototype,"transparencyPassType",void 0),e([c()],M.prototype,"spherical",void 0),e([c()],M.prototype,"receiveShadows",void 0),e([c()],M.prototype,"receiveAmbientOcclusion",void 0),e([c()],M.prototype,"vvSize",void 0),e([c()],M.prototype,"vvColor",void 0),e([c()],M.prototype,"vvOpacity",void 0),e([c()],M.prototype,"hasSlicePlane",void 0),e([c()],M.prototype,"transparent",void 0),e([c()],M.prototype,"hasOccludees",void 0),e([c()],M.prototype,"hasMultipassTerrain",void 0),e([c()],M.prototype,"cullAboveGround",void 0),e([c()],M.prototype,"doublePrecisionRequiresObfuscation",void 0),e([c({constValue:a.Disabled})],M.prototype,"pbrMode",void 0),e([c({constValue:!0})],M.prototype,"hasVvInstancing",void 0),e([c({constValue:!1})],M.prototype,"useCustomDTRExponentForWater",void 0),e([c({constValue:!1})],M.prototype,"useFillLights",void 0);export{C as PathPassParameters,E as PathTechnique,M as PathTechniqueConfiguration,N as vertexAttributeLocations};
