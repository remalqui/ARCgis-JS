/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import{Cyclical as r,cyclicalPI as s}from"../../../core/Cyclical.js";import i from"../../../core/Handles.js";import has from"../../../core/has.js";import{clamp as a,deg2rad as n}from"../../../core/mathUtils.js";import{destroyMaybe as o}from"../../../core/maybe.js";import{watch as l,sync as h}from"../../../core/reactiveUtils.js";import{Milliseconds as c}from"../../../core/time.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/arrayUtils.js";import{subclass as u}from"../../../core/accessorSupport/decorators/subclass.js";import{c as p}from"../../../chunks/vec2.js";import{a as _,b as m,z as y,c as g,i as v}from"../../../chunks/vec3.js";import{c as f}from"../../../chunks/vec3f64.js";import{t as R,b as O,a as T}from"../../../chunks/vec4.js";import{c as w,f as x}from"../../../chunks/vec4f64.js";import{getReferenceEllipsoid as D}from"../../../geometry/ellipsoidUtils.js";import{projectVectorToVector as S}from"../../../geometry/projection.js";import{create as E,width as P,copy as M,center as U,height as C,intersection as b,contains as I,intersects as j,offset as N}from"../../../geometry/support/aaBoundingRect.js";import{create as A,wrap as G}from"../../../geometry/support/ray.js";import{b as k,e as L,t as H}from"../../../chunks/sphere.js";import{angleAroundAxis as q}from"../../../geometry/support/vector.js";import{y2lat as B}from"../../../geometry/support/webMercatorUtils.js";import{viewAngle as F}from"../state/utils/viewUtils.js";import V from"../support/debugFlags.js";import{PointGraphics as z}from"../support/debugUtils.js";import{OverlayIndex as W}from"./interfaces.js";import{OverlayStretch as Y}from"./Overlay.js";import{OverlayRenderer as X}from"./OverlayRenderer.js";import{RenderRequestType as K,ValidationState as Z}from"../webgl-engine/lib/basicInterfaces.js";import{newIntersector as J}from"../webgl-engine/lib/Intersector.js";import{fromValues as Q}from"../webgl-engine/lib/LocalOriginFactory.js";import{UpdateParameters as $}from"../webgl-engine/lib/Material.js";import{SortedRenderGeometryRenderer as ee}from"../webgl-engine/lib/SortedRenderGeometryRenderer.js";import{applyTextureResizeModulo as te}from"../webgl-engine/lib/textureUtils.js";import{removeLoadedShaderModules as re}from"../webgl-engine/parts/requireUtils.js";import{TaskPriority as se,noBudget as ie,Task as ae}from"../../support/Scheduler.js";const ne=[[-.1,-2,3.9,2],[-.1,-3.9,3.9,.1],[-2,-3.9,2,.1],[-3.9,-3.9,.1,.1],[-3.9,-2,.1,2],[-3.9,-.1,.1,3.9],[-2,-.1,2,3.9],[-.1,-.1,3.9,3.9]];let oe,le=class extends t{get running(){return this._placementDirty&&(this._drapeSources.size>0||this.view.graphics.length>0||V.OVERLAY_DRAW_DEBUG_TEXTURE)&&!!this._spatialReference&&!this.suspended&&this.surface.ready}get _isSpherical(){return this.view.state.isGlobal}get _worldToPCSRatio(){return null!=this._spatialReference&&this._spatialReference.isGeographic&&!this.view.state.isLocal?D(this._spatialReference).metersPerDegree:1}get suspended(){return this.surface.suspended}get updating(){return this.running||this.renderer.updating||this._contentUpdated}get hasHighlights(){return this.renderer.hasHighlights}get rendersOccluded(){return this.renderer.rendersOccluded}constructor(e){super(e),this._handles=new i,this._spatialReference=null,this._renderSR=null,this._overlaySREqualsRenderSR=!0,this._drapeSources=new Set,this._drapeTargets=new Set,this._placementDirty=!1,this._contentUpdated=!1,this._drawTexturesDirty=!1,this._drawTexturesAnimateDirty=!1,this._hasUnusedRenderTargets=!1,this._longitudeCyclical=null,this._latestOriginId=0,this._maxResolution=has("esri-mobile")?2048:4096,this._animationTimeLast=0,this._removeRenderOverlayCallback=()=>{}}initialize(){const e=this.view;this.renderer=new X({view:e,worldToPCSRatio:this._worldToPCSRatio,spatialReference:this._spatialReference});const t=()=>this.setDrawTexturesDirty();this._groundIntersector=J(this.view.state.viewingMode),this._groundIntersector.options.backfacesTerrain=!0,this._groundIntersector.options.invisibleTerrain=!0,this._groundIntersector.options.hud=!1,this._handles.add([this.renderer.events.on("has-highlights",(()=>{t(),this.notifyChange("hasHighlights")})),this.renderer.events.on("has-water",(t=>e._stage?.renderer.setParameters({hasOverlayWater:t}))),this.renderer.events.on("renders-occluded",(()=>{t(),this.notifyChange("rendersOccluded")})),this.renderer.events.on("content-changed",t),l((()=>e.state.camera.pixelRatio),t),l((()=>e.state.alignPixelEnabled),t),this.renderer.events.on("textures-disposed",(()=>this.updateOverlayResult())),l((()=>[e.pointsOfInterest?.renderPointOfView,e.pointsOfInterest?.centerOnSurfaceFrequent?.location]),(()=>this.setPlacementDirty())),l((()=>[e.state?.pixelRatio,e.state?.contentPixelRatio]),(()=>this.setPlacementDirty()),h),this.surface.on("elevation-change",(()=>this.setPlacementDirty())),e.on("resize",(()=>this.setPlacementDirty())),e.resourceController.scheduler.registerTask(se.OVERLAY,this),e._stage.renderView.events.on("force-camera-for-screenshot",(e=>{this._updateOverlays(ie,e.camera,K.BACKGROUND),this.renderer.hasOverlays&&this._drawOverlayTextures(this.renderer.overlays,K.BACKGROUND,e)}))]);let r=e=>this._renderOverlayCallback(e);this._removeRenderOverlayCallback=()=>{r=()=>{}},e._stage?.renderer.setParameters({renderOverlay:e=>r(e)})}_renderOverlayCallback(e){this._contentUpdated=!1;const t=this.renderer;t.processSyncDrapeSources(),t.hasOverlays&&(this._dispatchAnimationUpdate(e),this._drawOverlayTextures(t.overlays,K.UPDATE,this.view.state)),this._hasUnusedRenderTargets&&this._collectUnusedRenderTargetMemory()}destroy(){this._handles=o(this._handles),this._removeRenderOverlayCallback(),this.view?._stage?.renderer.setParameters({renderOverlay:()=>{}}),null!=oe&&(oe.hide(),oe=null)}get hasOverlays(){return this.renderer.hasOverlays}setSpatialReference(e){this._spatialReference=e,this.renderer.spatialReference=e,this._longitudeCyclical=null;const t=this.view.renderSpatialReference;null!=e&&null!=t?(this._renderSR=t,this._overlaySREqualsRenderSR=e.equals(this._renderSR),this._isSpherical&&(this._longitudeCyclical=e.isWebMercator?new r(-20037508.342787,20037508.342787):new r(-180,180),this.renderer.longitudeCyclical=this._longitudeCyclical),this.renderer&&(this.renderer.worldToPCSRatio=this._worldToPCSRatio)):this.renderer.disposeOverlays()}get gpuMemoryUsage(){return this.renderer.gpuMemoryUsage}registerDrapeSource(e,t,r){this._drapeSources.add(e),this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources);const s=this.renderer.createDrapeSourceRenderer(e,t,r);return this._updateDrapeSourceExtent(e),this._setContentDirty(),this.notifyChange("running"),s}registerGeometryDrapeSource(e){return this.registerDrapeSource(e,ee)}_updateDrapeSourceExtent(e){2===this.renderer.overlays.length&&null!=e.setDrapingExtent&&null!=this._spatialReference&&e.setDrapingExtent(this.renderer.overlays,this._spatialReference)}unregisterDrapeSource(e){this._drapeSources.has(e)&&(this._drapeSources.delete(e),this.renderer.removeDrapeSourceRenderer(e),this.renderer.ensureDrapeSources(this._drapeSources),this._setContentDirty(),this.notifyChange("running"))}registerDrapeTarget(e){this._drapeTargets.add(e),this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources)}updateOverlayResult(){this.view._stage?.renderer.setParameters({overlays:this.renderer.overlays})}unregisterDrapeTarget(e){this._drapeTargets.delete(e),this.renderer.ensureDrapeTargets(this._drapeTargets)}_setContentDirty(){this.setPlacementDirty(),this.setDrawTexturesDirty()}setPlacementDirty(){this._placementDirty=!0}runTask(e){return this._updateOverlays(e,this.view.state.contentCamera,K.UPDATE)}_updateOverlays(e,t,r){if(!this._spatialReference)return ae.YIELD;const s=this._computeOverlayResolution(t);this._computeOverlayExtents(t,s,ue);const i=P(ue.inner)/P(ue.outer);this.renderer.ensureOverlays(this._drapeTargets,this._drapeSources);const a=this._updateOverlay(W.INNER,ue.inner,s,1*ue.pixelRatioAdjustment,ue.mapUnitsPerPixel),n=this._updateOverlay(W.OUTER,ue.outer,s,i*ue.pixelRatioAdjustment,ue.mapUnitsPerPixel);a!==ye.EXTENT&&n!==ye.EXTENT||(this._drapeSources.forEach((e=>this._updateDrapeSourceExtent(e))),this.surface.updateTileOverlayParams(r)),a===ye.NONE&&n===ye.NONE||this.setDrawTexturesDirty(),this._placementDirty=!1,e.madeProgress()}_computeOverlayResolution(e){const t=this.view.state.contentPixelRatio,r=e.fullWidth/e.pixelRatio*t,s=e.fullHeight/e.pixelRatio*t,i=Math.ceil(1.5*Math.max(r,s));return Math.min(te(i),this._maxResolution)}_updateOverlay(e,t,r,s,i){if(0===this.renderer.overlays.length)return ye.NONE;const a=this.renderer.overlays[e],n=a.mapUnitsPerPixel;if(a.mapUnitsPerPixel=i,a.pixelRatio=s,he(t,a.extent)&&r===a.resolution)return n===i?ye.NONE:ye.RERENDER_ONLY;M(a.extent,t),a.resolution=r;const o=U(a.extent);return a.renderLocalOrigin=Q(o[0],o[1],0,"OV_"+this._latestOriginId++),ye.EXTENT}setTileParameters(e){const t=e.renderData.overlay;if(this.renderer.overlays.length>0){const r=this.renderer.overlays[W.INNER],s=this.renderer.overlays[W.OUTER],i=e.extent;this._rectInsideRect(r.extent,i)||this._rectanglesOverlap(i,r.extent)||this._rectanglesOverlap(i,s.extent)?(this._setTileOverlayData(i,W.INNER,t),this._setTileOverlayData(i,W.OUTER,t)):(this._clearTileOverlayData(W.INNER,t),this._clearTileOverlayData(W.OUTER,t))}else this._clearTileOverlayData(W.INNER,t),this._clearTileOverlayData(W.OUTER,t)}overlayPixelSizeInMapUnits(e){if(0===this.renderer.overlays.length)return 0;const t=this.renderer.overlays[W.INNER],r=this.renderer.overlays[W.OUTER],s=this._pointIsInExtent(e,t.extent)?t:r;return(s.extent[2]-s.extent[0])/s.resolution}_setTileOverlayData(e,t,r){if(0===this.renderer.overlays.length)return;const s=this.renderer.overlays[t].extent,i=P(s),a=C(s);let n=e[0];if(this._longitudeCyclical){n=this._longitudeCyclical.minimalMonotonic(s[0],n);const t=this._longitudeCyclical.minimalMonotonic(s[0],e[2]);n>t&&(n=t-(e[2]-e[0]))}r.setScale(t,P(e)/i,C(e)/a),r.setOffset(t,(n-s[0])/i,(e[1]-s[1])/a)}_clearTileOverlayData(e,t){t.setScale(e,-1,-1),t.setOffset(e,-1,-1)}async reloadShaders(){re(),await this.renderer.reloadShaders(),this.setDrawTexturesDirty(),this.runTask(ie)}_dispatchAnimationUpdate(e){const t=c(e-this._animationTimeLast);if(t>=this.surface.view._stage.renderer.animationTimestep||null!=this.view.state.forcedAnimationTime||this._drawTexturesDirty||this._drawTexturesAnimateDirty){const r=c(t/this.surface.view._stage.renderer.animationTimeDilation),s=new $(this.view.state.camera,r,this.view.state.forcedAnimationTime);this.renderer.updateAnimation(s)&&(this._drawTexturesAnimateDirty=!0),this._animationTimeLast=e}}setDrawTexturesDirty(){this.renderer.hasOverlays?(this._contentUpdated=!0,this._drawTexturesDirty=!0,this.view._stage.renderView.requestRender()):this.setPlacementDirty()}_intersectGroundFromView(e,t,r,s){const i=this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(e,me,t,r);if(null==i)return!1;const a=i.origin,n=_(de,i.origin,i.direction);return this._groundIntersector.reset(a,n,e),this._groundIntersector.intersect([]),this.view.basemapTerrain.intersect(this._groundIntersector,null,a,n),this._groundIntersector.results.min.getIntersectionPoint(s)}_findHorizonBasedPointOfInterest(e,t){let r=.5;const i=.55,n=this.view.renderCoordsHelper.getAltitude(e.eye),o=this.view.pointsOfInterest.centerOnSurfaceFrequent,l=1e-5,h=a(o.estimatedSurfaceAltitude,e.aboveGround?-1/0:n+l,e.aboveGround?n-l:1/0),c=e.aboveGround;if("global"===this.view.viewingMode){const t=de;k(L(H,D(this.view.spatialReference).radius+h),G(e.eye,e.viewForward),t),m(t,t,e.eye);const a=s.normalize(q(e.viewForward,t,e.viewRight))/e.fovY+.5,n=a<=0||a>=1?.5:i;r=c?n*a:a+n*(1-a)}else{const t=.5*Math.PI-Math.acos(-e.viewForward[2]),s=Math.tan(t),n=x(0,s,1,0),o=R(n,n,e.projectionMatrix)[1],l=a(.5+.5*o,0,1);r=1===l||0===l?.5:c?l*i:1-(1-l)*i}return!!this._intersectGroundFromView(e,.5,r,t)&&y(t,e.eye)<o.distance*o.distance}_computeOverlayExtents(e,t,r){const s=this.view.pointsOfInterest.centerOnSurfaceFrequent.renderLocation,i=f();this._findHorizonBasedPointOfInterest(e,i)||g(i,s),V.OVERLAY_SHOW_CENTER?(null==oe&&(oe=new z(this.view.graphics,"red")),oe.show(i,this._renderSR)):null!=oe&&oe.hide();const a=Math.max(.1,v(e.eye,i)),o=F(this.view.renderCoordsHelper,s,e.eye);this._overlaySREqualsRenderSR||S(i,this._renderSR,i,this._spatialReference);const l=this.surface.extent,h=!this._isSpherical&&null!=this._spatialReference&&this._spatialReference.isGeographic,c=h&&null!=this._spatialReference?1/D(this._spatialReference).metersPerDegree:1,d=this.view.state.contentPixelRatio,u=e.perScreenPixelRatio/d*a*c;r.mapUnitsPerPixel=u/this._worldToPCSRatio;let _=t*u/2*Y,m=!1,y=h?90:1/0;this._isSpherical&&null!=l&&null!=this._spatialReference&&(this._spatialReference.isWebMercator?(_/=Math.cos(B(i[1])),y=l[3]):(m=!0,_/=D(this._spatialReference).metersPerDegree,y=90),_>=y&&(_=y,i[1]=0,this._spatialReference.isWebMercator&&(i[0]=0)));let R=1;m&&(R=1/Math.max(.2,Math.cos(Math.abs(n(i[1])))),_*R>180&&(R=180/_),r.mapUnitsPerPixel*=R);const w=Math.log(2)/12;_=Math.exp(Math.round(Math.log(_)/w)*w);const x=_*R,E=32,U=.5*t/(E*x),C=.5*t/(E*_);i[0]=Math.round(i[0]*U)/U,i[1]=Math.round(i[1]*C)/C;const j=r.inner;j[0]=i[0]-x,j[1]=i[1]-_,j[2]=i[0]+x,j[3]=i[1]+_,this._isSpherical&&this._shiftExtentToFitBounds(j,1/0,y);const N=r.outer;if(6*x>P(l))M(N,l);else{if(Math.PI/2-Math.abs(o-Math.PI/2)<=.25*Math.PI)N[0]=j[0]-x,N[1]=j[1]-_,N[2]=j[2]+x,N[3]=j[3]+_;else{S(e.eye,this._renderSR,de,this._spatialReference),p(ce,i,de);let t=-Math.atan2(ce[1],ce[0])+.125*Math.PI;t<0&&(t+=2*Math.PI);const r=Math.floor(t/(.25*Math.PI));O(ce,ne[r],2*_),ce[0]*=R,ce[2]*=R,T(N,j,ce)}}if(this._isSpherical)N[0]=this._longitudeCyclical.clamp(N[0]),N[2]=this._longitudeCyclical.clamp(N[2]),N[1]=Math.max(N[1],-y),N[3]=Math.min(N[3],y);else{const e=b(j,l,pe),t=b(N,l,_e);I(e,t)&&(N[2]=N[0],N[3]=N[1])}const A=Math.abs(j[2]-j[0])/t;r.mapUnitsPerPixel=Math.max(r.mapUnitsPerPixel,A),r.pixelRatioAdjustment=r.mapUnitsPerPixel/A}_drawOverlayTextures(e,t,r){if(0===e.length||!this._drawTexturesDirty&&!this._drawTexturesAnimateDirty)return;const s=this._drawTexturesDirty;this._drawTexturesDirty=!1,this._drawTexturesAnimateDirty=!1;const i=this._drawOverlay(e[W.INNER],r),a=this._drawOverlay(e[W.OUTER],r);i!==Z.CHANGED&&a!==Z.CHANGED||this.surface.updateTileOverlayParams(K.UPDATE),this._collectUnusedRenderTargetMemory(),this.updateOverlayResult(),s?(this.surface.requestRender(t),t===K.UPDATE&&this.surface.requestUpdate()):this.surface.requestRender(K.BACKGROUND)}_drawOverlay(e,t){return this._longitudeCyclical?e.setupGeometryViewsCyclical(this._longitudeCyclical):e.setupGeometryViewsDirect(),e.draw(this.renderer,t)}_collectUnusedRenderTargetMemory(){this._hasUnusedRenderTargets=!1,this.renderer.hasOverlays&&(this._hasUnusedRenderTargets=this.renderer.collectUnusedRenderTargetMemory())}_rectanglesOverlap(e,t){return null!=e&&(this._longitudeCyclical?(this._longitudeCyclical.contains(t[0],t[2],e[0])||this._longitudeCyclical.contains(t[0],t[2],e[2])||this._longitudeCyclical.contains(e[0],e[2],t[0]))&&!(e[1]>t[3]||e[3]<t[1]):j(e,t))}_rectInsideRect(e,t){return null!=t&&(this._longitudeCyclical?this._longitudeCyclical.contains(e[0],e[2],t[0])&&this._longitudeCyclical.contains(e[0],e[2],t[2])&&t[1]>e[1]&&t[3]<e[3]:I(e,t))}_pointIsInExtent(e,t){if(this._longitudeCyclical)return this._longitudeCyclical.contains(t[0],t[2],e.x)&&e.y>=t[1]&&e.y<=t[3];const r=e.x,s=e.y;return r>t[0]&&r<t[2]&&s>t[1]&&s<t[3]}_shiftExtentToFitBounds(e,t,r){let s=0,i=0;e[0]<-t?s=e[0]+t:e[2]>t&&(s=t-e[2]),e[1]<-r?i=e[1]+r:e[3]>r&&(i=r-e[3]),N(e,s,i)}get test(){return{renderer:this.renderer,update:()=>this.runTask(ie)}}};function he(e,t){const r=1e-5,s=V.TESTS_DISABLE_OPTIMIZATIONS?0:r*Math.max(e[2]-e[0],e[3]-e[1],t[2]-t[0],t[3]-t[1]);return Math.abs(t[0]-e[0])<=s&&Math.abs(t[1]-e[1])<=s&&Math.abs(t[2]-e[2])<=s&&Math.abs(t[3]-e[3])<=s}e([d()],le.prototype,"_spatialReference",void 0),e([d({readOnly:!0})],le.prototype,"running",null),e([d()],le.prototype,"_placementDirty",void 0),e([d()],le.prototype,"_contentUpdated",void 0),e([d()],le.prototype,"_isSpherical",null),e([d()],le.prototype,"_worldToPCSRatio",null),e([d({autoDestroy:!0})],le.prototype,"renderer",void 0),e([d({constructOnly:!0})],le.prototype,"view",void 0),e([d({constructOnly:!0})],le.prototype,"surface",void 0),e([d()],le.prototype,"suspended",null),e([d()],le.prototype,"updating",null),e([d({type:Boolean})],le.prototype,"hasHighlights",null),e([d({type:Boolean})],le.prototype,"rendersOccluded",null),le=e([u("esri.views.3d.terrain.OverlayManager")],le);const ce=w(),de=f(),ue={inner:E(),outer:E(),mapUnitsPerPixel:0,pixelRatioAdjustment:1},pe=E(),_e=E(),me=A();var ye;!function(e){e[e.NONE=0]="NONE",e[e.EXTENT=1]="EXTENT",e[e.RERENDER_ONLY=2]="RERENDER_ONLY"}(ye||(ye={}));export{le as OverlayManager};
