/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import t from"../../../../../Color.js";import e from"../../../../../core/Evented.js";import{clamp as i}from"../../../../../core/mathUtils.js";import{w as r,r as a,k as o}from"../../../../../chunks/mat4.js";import{c as s}from"../../../../../chunks/mat4f64.js";import{j as n,b as l,n as p,e as u,f as c,g as m}from"../../../../../chunks/vec3.js";import{c as d,f as h}from"../../../../../chunks/vec3f64.js";import{Manipulator3D as f}from"../../Manipulator3D.js";import{createManipulatorMaterial as _}from"../../manipulatorUtils.js";import{RenderObject as j}from"../../RenderObject.js";import{screenToZConstrained as w}from"../dragEventPipeline3D.js";import{ManipulatorType as M}from"../ManipulatorType.js";import{getSettings as v}from"../settings.js";import{DISC_RADIUS as g}from"./config.js";import{Manipulation as y}from"./Manipulation.js";import{createGraphicMoveDragPipeline as b}from"./moveUtils.js";import{createTubeGeometry as z,createConeGeometry as U}from"../../../webgl-engine/lib/GeometryUtil.js";import{RenderOccludedFlag as O}from"../../../webgl-engine/lib/Material.js";import{createManipulatorDragEventPipeline as P,addScreenDelta as T}from"../../../../interactive/dragEventPipeline.js";import{ManipulatorStateFlags as A}from"../../../../interactive/interfaces.js";import{darken as E}from"../../../../support/colorUtils.js";class R extends y{constructor(t){super(),this._radius=g,this.events=new e,this._tool=t.tool,this._view=t.view,null!=t.radius&&(this._radius=t.radius),this._createManipulator(),this.forEachManipulator((t=>this._tool.manipulators.add(t)))}destroy(){this._manipulator.applyObjectTransform=S,this.forEachManipulator((t=>{this._tool.manipulators.remove(t),t.destroy()}))}forEachManipulator(t){t(this._manipulator,M.TRANSLATE_Z)}createGraphicDragPipeline(t,e,i){const r=e.graphic.geometry.spatialReference;return b(e,i,(e=>this.createDragPipeline(((i,r,a,o,s)=>(({steps:r,cancel:a}=t(i,r,a,o,s)),e(i,r,a))),r)),this._view.state.viewingMode)}createDragPipeline(t,e){const i=this._view;return P(this._manipulator,((r,a,o,s,n)=>{const l=a.next((t=>({...t,manipulatorType:M.TRANSLATE_Z}))).next(w(i,r.renderLocation,e)).next(T());t(r,l,o,s,n)}))}get radius(){return this._radius}set radius(t){t!==this._radius&&(this._radius=t,this._updateManipulator())}_updateManipulator(){const e=this._radius/g,i=v(this._view),n=i.zManipulator.height*e,l=i.zManipulator.coneHeight*e,p=i.zManipulator.coneWidth*e,u=i.zManipulator.width*e,c=[h(0,0,0),h(0,0,n)],m=[h(0,0,0),h(0,0,n+l)],d=t=>{const e=s();if(r(e,e,[0,0,n]),a(e,e,Math.PI/2),t){const i=1+2*t/p;o(e,e,[i,i,i])}return e},f=d(0),w=(e,r)=>{const a=E(i.zManipulator.color,r);return a.a*=e,t.toUnitRGBA(a)},M=_(w(1,.25),O.Occlude),y=_(w(1,0),O.Occlude),b=_(w(.7,0),i.zManipulator.renderOccluded),P=_(w(.85,0),i.zManipulator.renderOccluded),T=z(M,c,u/2,16,!1),R=U(M,l,p/2,16,!1);R.transformation=f,this._manipulator.renderObjects=[new j(R,A.Unfocused),new j(T,A.Unfocused),new j(R.instantiate({material:y}),A.Focused),new j(T.instantiate({material:y}),A.Focused),new j(R.instantiate({material:b}),A.Unfocused),new j(T.instantiate({material:b}),A.Unfocused),new j(R.instantiate({material:P}),A.Focused),new j(T.instantiate({material:P}),A.Focused)],this._manipulator.radius=u/2+2,this._manipulator.collisionType={type:"line",paths:[m]}}_createManipulator(){const t=this._view,e=v(t),r=new f({view:t,autoScaleRenderObjects:!1,worldSized:!1,selectable:!1,cursor:"ns-resize",elevationInfo:this.elevationInfo,worldOriented:!0,collisionPriority:1.6});r.applyObjectTransform=r=>{const a=t.state.camera,o=x;t.renderCoordsHelper.toRenderCoords(this._manipulator.elevationAlignedLocation,o);const s=n(a.eye,o),d=a.computeRenderPixelSizeAtDist(s),h=l(D,o,a.eye);p(h,h);const f=k;t.renderCoordsHelper.worldUpAtPosition(x,f);const _=Math.abs(u(h,f)),j=c(D,h,f),w=c(D,j,f),M=i(_,.01,1),v=1-Math.sqrt(1-M*M)/M/a.fullWidth,y=this._radius/g,b=e.zManipulator.width*y;m(w,p(w,w),(1/v-1)*s+d*b),r[12]-=D[0],r[13]-=D[1],r[14]-=D[2]},this._manipulator=r,this._updateManipulator()}get test(){return{manipulator:this._manipulator}}}const x=d(),D=d(),k=d(),S=()=>{};export{R as MoveZManipulation};
