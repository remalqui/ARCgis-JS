/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import t from"../../../../../Color.js";import{getAccentColor as e,getContrastColor as i,getOpacity as s}from"../../../../../core/analysisThemeUtils.js";import a from"../../../../../core/Handles.js";import{clone as n}from"../../../../../core/lang.js";import{destroyMaybe as l}from"../../../../../core/maybe.js";import{watch as r,sync as o}from"../../../../../core/reactiveUtils.js";import{screenPointObjectToArray as h}from"../../../../../core/screenUtils.js";import{c as u}from"../../../../../chunks/vec3f64.js";import{createSphereManipulator as d}from"../../manipulatorUtils.js";import{PickResult as _}from"../support/PickRequest.js";import{LaserlineVisualElement as p}from"../../visualElements/LaserlineVisualElement.js";import{newIntersector as c}from"../../../webgl-engine/lib/Intersector.js";import{StoreResults as g}from"../../../webgl-engine/lib/IntersectorInterfaces.js";import{ManipulatorCollection as m}from"../../../../interactive/ManipulatorCollection.js";class w{constructor(a){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._laserLine=null,this._cursorManipulator=null,this._listenerHandles=null,this._tempHandlePosition=u(),this._defaultStyle={laserLineGlowColor:t.toUnitRGB(e(.75)),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:t.toUnitRGB(i(.75)),laserLineInnerWidth:1,laserLineGlobalAlpha:s(.75),laserLineEnabled:!0,handleColor:t.toUnitRGBA(e(.5)),handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25};const{analysisViewData:l,manipulators:r,toolState:o,view:h,visible:_}=a;this._analysisViewData=l,this._toolState=o,null!=r?(this._manipulators=r,this._isManipulatorsOwner=!1):this._manipulators=new m,this._view=h;const w=this._style={...this._defaultStyle,...n(a.style)};this._intersector=c(h.state.viewingMode),this._intersector.options.store=g.MIN;const y=d(h,w.handleColor);y.available=!1,y.radius=w.handleRadius,y.interactive=!1,this._manipulators.add(y),this._cursorManipulator=y,this._laserLine=new p({view:h,attached:!0,style:{glowColor:w.laserLineGlowColor,glowWidth:w.laserLineGlowWidth,glowFalloff:w.laserLineGlowFalloff,innerColor:w.laserLineInnerColor,innerWidth:w.laserLineInnerWidth,globalAlpha:w.laserLineGlobalAlpha}}),this._updateVisibility(_||!0)}destroy(){this._listenerHandles=l(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=l(this._manipulators):this._manipulators=null,this._laserLine=l(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){const t=this._laserLine.testData;return{laserLineRenderer:null!=t?{heightManifoldEnabled:t.heightManifoldEnabled,heightManifoldTarget:t.heightManifoldTarget,pointDistanceEnabled:t.pointDistanceEnabled,pointDistanceOrigin:t.pointDistanceOrigin,pointDistanceTarget:t.pointDistanceTarget,lineVerticalPlaneEnabled:t.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(t){this._destroyed||this._visible===t||this._updateVisibility(t)}_updateVisibility(t){this._visible=t,this._laserLine.visible=t,t?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach((t=>this._removeVertexManipulator(t))),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(t,e){const i=this._manipulators.intersect(t,e);return null!=i?i.metadata:null}pick(t){const e=this._view.spatialReference,i=h(t.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(i,this._intersector);const s=this._intersector.results.min,a=u();if(!s.getIntersectionPoint(a))return null;const n=this._view.renderCoordsHelper.fromRenderCoords(a,e);return null==n?null:new _(a,n)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const t=d(this._view,this._style.handleColor);return t.radius=this._style.handleRadius,this._manipulators.add(t),t}_removeVertexManipulator(t){this._manipulators.remove(t)}_updateVertexManipulators(){const{viewData:t}=this._analysisViewData,e=this._analysisViewData.path?this._analysisViewData.path.vertices:[],i=this.vertexManipulators;y(i,e.length,(()=>this._createVertexManipulator()),(t=>this._removeVertexManipulator(t))),i.forEach(((i,s)=>{i.metadata=e[s],i.renderLocation=t.positionsRenderCoords[s],i.cursor=0===s&&"drawing"===this._toolState.polygonState?"crosshair":null})),"drawing"===this._toolState.polygonState&&null!=this._analysisViewData.cursorPoint?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.cursorPoint):this._cursorManipulator.available=!1}_getFocusPoint(){const{lastDraggedVertex:t}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return null!=this._analysisViewData.cursorPoint?this._analysisViewData.cursorPoint:null!=t?this._analysisViewData.path.getVertexPositionAsPoint(t):this._analysisViewData.path.lastPoint;case"editing":return null!=t?this._analysisViewData.path.getVertexPositionAsPoint(t):null;default:return this._analysisViewData.cursorPoint}}_updateLaserLine(){const t=this._style.laserLineEnabled&&"measured"!==this._toolState.polygonState&&this._toolState.active,e=this._getFocusPoint();if(t&&null!=e){const t=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(e,t),this._laserLine.heightManifoldTarget=t}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new a,this._listenerHandles.add([r((()=>this._toolState.polygonState),(()=>this._updateLaserLine())),r((()=>this._analysisViewData.viewData),(()=>this._updateAll()),o),r((()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.cursorPoint})),(()=>this._updateLaserLine())),r((()=>this._toolState.active),(()=>this._updateAll()))])}_destroyListeners(){this._listenerHandles=l(this._listenerHandles)}}function y(t,e,i,s){for(;t.length<e;)t.push(i());if(s)for(;t.length>e;){s(t.pop())}else t.length=e}export{w as default};
