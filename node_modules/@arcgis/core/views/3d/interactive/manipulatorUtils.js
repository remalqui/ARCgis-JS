/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{a as e}from"../../../chunks/mat4.js";import{b as t,f as r,m as n,n as o}from"../../../chunks/vec3.js";import{f as i}from"../../../chunks/vec4f64.js";import{sv3d as a,sm4d as c}from"../../../geometry/support/vectorStacks.js";import{hydrateGeometry as l}from"../../../layers/graphics/hydratedFeatures.js";import{Manipulator3D as s}from"./Manipulator3D.js";import{RenderObject as u}from"./RenderObject.js";import{computeCentroid as m}from"../layers/graphics/graphicUtils.js";import{Attribute as d}from"../webgl-engine/lib/Attribute.js";import{CullFaceOptions as p}from"../webgl-engine/lib/basicInterfaces.js";import{Geometry as f}from"../webgl-engine/lib/Geometry.js";import{createPolylineGeometry as g,createSphereGeometry as w}from"../webgl-engine/lib/GeometryUtil.js";import{RenderOccludedFlag as b}from"../webgl-engine/lib/Material.js";import{VertexAttribute as h}from"../webgl-engine/lib/VertexAttribute.js";import{ColorMaterial as j}from"../webgl-engine/materials/ColorMaterial.js";import{ImageMaterial as O}from"../webgl-engine/materials/ImageMaterial.js";import{NativeLineMaterial as M}from"../webgl-engine/materials/NativeLineMaterial.js";import{RibbonLineMaterial as y}from"../webgl-engine/materials/RibbonLineMaterial.js";import{ShadedColorMaterial as S}from"../webgl-engine/materials/ShadedColorMaterial.js";import{ManipulatorStateCustomFlags as v,ManipulatorStateFlags as A}from"../../interactive/interfaces.js";function F(e,t=b.OccludeAndTransparent,r=!0){const n=i(e[0],e[1],e[2],e.length>3?e[3]:1),o=e[3]<1,a=!o;return r?new S({color:n,transparent:o,writeDepth:a,cullFace:p.Back,renderOccluded:t}):new j({color:n,transparent:o,writeDepth:a,cullFace:p.Back,renderOccluded:t})}function k(e,t=b.OccludeAndTransparent){const r=i(e[0],e[1],e[2],4===e.length?e[3]:1);return new j({color:r,transparent:!0,writeDepth:!0,cullFace:p.Front,renderOccluded:t})}const I=Object.freeze({calloutLength:40,calloutWidth:1,discRadius:27,focusMultiplier:1.1});function R(e,t){const r=new s({view:e,autoScaleRenderObjects:!1,collisionPriority:1,metadata:t.metadata});return L(r,t),r}function L(e,t){const r=t.material??new O({transparent:!0,writeDepth:!1,textureId:t.texture?.id,renderOccluded:b.Opaque}),n=t.focusMultiplier??I.focusMultiplier,o=t.calloutLength??I.calloutLength,i=I.discRadius*(t.discScale??1),a=i*n,c=(e,t)=>{const r=[0,1,2,2,3,0];return new f(t,[[h.POSITION,new d([o-e,-e,0,o+e,-e,0,o+e,e,0,o-e,e,0],3,!0)],[h.UV0,new d([0,0,1,0,1,1,0,1],2,!0)]],[[h.POSITION,r],[h.UV0,r]])},l=t.calloutWidth??I.calloutWidth,s=new(l>1?y:M)({width:l,color:t.calloutColor,renderOccluded:b.OccludeAndTransparent}),m=g(s,[[0,0,0],[o-i,0,0]]),p=g(s,[[0,0,0],[o-a,0,0]]),w=t.customStateMask??v.None;e.collisionType={type:"disc",direction:[0,0,1],offset:[o,0,0]},e.focusMultiplier=n,e.metadata=t.metadata,e.radius=i,e.renderObjects=[new u(c(i,r),A.Unfocused|w),new u(m,A.Unfocused|w),new u(c(a,r),A.Focused|w),new u(p,A.Focused|w)]}function T(e,t,r=v.None){const n=F(t),o=[new u(w(n,1,32,32),r)];return new s({view:e,renderObjects:o})}const U=Object.freeze({autoScaleRenderObjects:!1,worldSized:!0});function D(o,i,l,s){const u=t(a.get(),o,l),m=N(u,r(a.get(),s,u),l,c.get());e(m,m);const d=n(a.get(),i,m);return Math.atan2(d[1],d[0])}function N(e,t,n,i){const c=o(a.get(),e),l=o(a.get(),t),s=r(a.get(),c,l);return i[0]=c[0],i[1]=c[1],i[2]=c[2],i[3]=0,i[4]=l[0],i[5]=l[1],i[6]=l[2],i[7]=0,i[8]=s[0],i[9]=s[1],i[10]=s[2],i[11]=0,i[12]=n[0],i[13]=n[1],i[14]=n[2],i[15]=1,i}function x(e,t){const r=e.getViewForGraphic(t);return null!=r&&"computeAttachmentOrigin"in r?r.computeAttachmentOrigin(t,e.spatialReference):null}function V(e,t,r){const n=x(e,r);null==n?z(t,r.geometry):t.elevationAlignedLocation=n}function z(e,t){if(null==t)return;const r="mesh"===t.type?t.anchor:m(t);null!=r&&(e.location=l(r))}export{D as calculateInputRotationTransform,N as calculateTranslateRotateFromBases,F as createManipulatorMaterial,k as createManipulatorOutlineMaterial,R as createRotateManipulator,T as createSphereManipulator,x as getGraphicAttachmentOrigin,V as placeAtGraphic,L as updateRotateManipulator,U as worldScaledManipulatorSettings};
