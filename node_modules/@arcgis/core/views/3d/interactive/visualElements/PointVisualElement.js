/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{clamp as e,nextHighestPowerOfTwo as t}from"../../../../core/mathUtils.js";import{s as r}from"../../../../chunks/vec3.js";import{c as i}from"../../../../chunks/vec3f64.js";import{g as s,c as o}from"../../../../chunks/vec4.js";import{f as n}from"../../../../chunks/vec4f64.js";import{projectVectorToVector as l}from"../../../../geometry/projection.js";import{expandWithBuffer as a}from"../../../../geometry/support/aaBoundingBox.js";import{sv3d as u}from"../../../../geometry/support/vectorStacks.js";import{VisualElementResources as c}from"./VisualElementResources.js";import{evaluateElevationAlignmentAtPoint as h}from"../../layers/graphics/elevationAlignmentUtils.js";import{ElevationContext as m}from"../../layers/graphics/ElevationContext.js";import{createTexture as p,DEFAULT_SYMBOL_SIZE_RATIO as _}from"../../support/engineContent/sdfPrimitives.js";import{createPointGeometry as g}from"../../webgl-engine/lib/GeometryUtil.js";import{VertexAttribute as d}from"../../webgl-engine/lib/VertexAttribute.js";import{HUDMaterial as f}from"../../webgl-engine/materials/HUDMaterial.js";class y{constructor(e){this.view=null,this._geometry=null,this._size=3,this._color=n(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=n(1,1,1,1),this._elevationInfo=null,this._resources=new c({view:e.view,createResources:e=>this._createResources(e),destroyResources:e=>this._destroyResources(e),recreateGeometry:(e,t)=>{e.geometry=this._recreateGeometry(t,e.material)}});let t=!0;for(const r in e)r in this?"attached"===r?t=e[r]??!1:this[r]=e[r]:console.error("Cannot set unknown property",r);this.attached=t}destroy(){this._resources.destroy()}get visible(){return this._resources.visible}set visible(e){this._resources.visible=e}get attached(){return this._resources.attached}set attached(e){this._resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._resources.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this._preferredTextureSize;this._size=e,t<this._preferredTextureSize?null!=this._resources&&this._resources.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(e){s(e,this._color)||(o(this._color,e),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,null!=this._resources&&this._resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){s(e,this._outlineColor)||(o(this._outlineColor,e),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this._resources&&this._resources.recreateGeometry()}_updateMaterial(){const e=this._resources.resources;null!=e&&e.material.setParameters(this._materialParameters(e.texture.id))}_updateSizeAttribute(){const e=this._resources.resources,t=this._resources.object;if(null==e||null==t)return;const r=e.geometry;if(null==r)return;const i=r.getMutableAttribute(d.SIZE).data,s=this._geometrySize;i[0]=s,i[1]=s,t.geometryVertexAttrsUpdated(t.geometries[0])}_materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:S,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get _geometrySize(){return this._size/v}_recreateGeometry(e,t){const r=this._createRenderGeometry(t);return null!=r&&e.addGeometry(r),r}_createResources(e){const t=p(this._primitive,this._preferredTextureSize),r=new f(this._materialParameters(t.id)),i=this._recreateGeometry(e,r);return{material:r,texture:t,geometry:i,forEach(e){e(t),e(r),null!=this.geometry&&e(this.geometry)}}}_destroyResources(e){e.geometry=null,e.material.dispose(),e.texture.dispose()}get _preferredTextureSize(){return e(t(2*this._geometrySize),16,128)}calculateMapBounds(e){if(null==this._resources.resources||null==this._resources.resources.geometry)return!1;const t=this._resources.resources.geometry.vertexAttributes.get(d.POSITION);return l(t.data,this.view.renderCoordsHelper.spatialReference,b,this.view.spatialReference),a(e,b),!0}_createRenderGeometry(e){const t=this.geometry;if(null==t)return null;const{renderCoordsHelper:i,elevationProvider:s}=this.view,o=h(t,s,m.fromElevationInfo(this.elevationInfo),i),n=r(u.get(),t.x,t.y,o),a=u.get();l(n,t.spatialReference,a,i.spatialReference);const c=this._geometrySize;return g(e,null,a,null,[c,c],[0,0,0,1])}}const v=_,S=[v/2,v/2,1-v/2,1-v/2],b=i();export{y as PointVisualElement};
