/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{earth as t}from"../../../geometry/support/Ellipsoid.js";import{distance as a}from"../../../geometry/support/pointUtils.js";import e from"./ExposurePoint.js";function i(t){const{camera:a,features:e,selectedPoint:i}=t;if(!e.length)return[];const s=h(a,i);return e.map(s)}function h(e,i){return i.z??=0,i.elevation??=0,h=>{const{hfovWeight:o,vfovWeight:r,distanceWeight:n}=s(h.attributes,e?"3D":"2D"),c=h.attributes,{cameraHeight:M,cameraHeading:l,cameraPitch:g,farDistance:f,horizontalFieldOfView:u,verticalFieldOfView:v}=c,b=c.geometry,W=180*Math.atan2(b.y-i.y,b.x-i.x)/Math.PI,m=a(i,b);let p=u,d=v,y=l,x=g;e&&(y=e.heading,x=e.tilt,p=180,d=180);let P=1;b.spatialReference.isWebMercator&&(P=1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*b.y/t.radius))));const D=Math.sqrt((Math.sqrt((i.x-b.x)**2+(i.y-b.y)**2)/P)**2+((i.z??0)-(i.elevation??0)-M)**2),q=90-180*Math.atan2(i.y-b.y,i.x-b.x)/Math.PI;let I=(Math.abs(q-y)>180?Math.abs(360-Math.abs(q-y)):Math.abs(q-y))/p;I=4*I+1;const z=180*Math.acos((c.cameraHeight-(i.z??0)+(i.elevation??0))/D)/Math.PI;let O=Math.abs(z-x)/d;O=4*O+1;let j=D/Math.sqrt(f**2+M**2);j=4*j+1;const w=l>180?l-360:l;return{suitability:o*I+r*O+n*j,trueSuitability:o*(4*(Math.abs(q-w)>180?Math.abs(360-Math.abs(q-w)):Math.abs(q-w)/p)+1)+r*(Math.abs(z-g)/d*4+1)+n*j,feature:h,angle:W,distance:m,vangle:Math.abs(180*Math.atan(m/M)/Math.PI)}}}function s(t,a){const i="isOblique"in t?t:new e(t),{isOblique:h,isSpherical:s,isNadir:o}=i;return s?{hfovWeight:"2D"===a?0:1,vfovWeight:"2D"===a?0:.6,distanceWeight:"2D"===a?1:.5}:o?{hfovWeight:.25,vfovWeight:1,distanceWeight:1}:h?{hfovWeight:1,vfovWeight:.25,distanceWeight:1}:{hfovWeight:1,vfovWeight:1,distanceWeight:1}}export{i as calculateSuitabilities};
