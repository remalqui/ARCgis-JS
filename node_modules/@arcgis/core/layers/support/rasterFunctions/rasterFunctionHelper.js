/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{toRGB as t}from"../../../core/colorUtils.js";import e from"../../../core/Error.js";import{clone as r}from"../../../core/lang.js";import n from"./AspectFunction.js";import o from"./BandArithmeticFunction.js";import s from"./ColormapFunction.js";import a from"./CompositeBandFunction.js";import i from"./ConvolutionFunction.js";import c from"./CurvatureFunction.js";import u from"./ExtractBandFunction.js";import m from"./LocalFunction.js";import l from"./MaskFunction.js";import p from"./NDVIFunction.js";import f from"./RemapFunction.js";import d from"./SlopeFunction.js";import g from"./StatisticsHistogramFunction.js";import b from"./StretchFunction.js";import y from"./TableFunction.js";const F=new Map;function j(t,e,r=["raster"],n=""){F.set(t,{desc:n,ctor:e,rasterArgumentNames:r})}function A(){const t=new Set;return F.forEach(((e,r)=>t.add(r))),t}function h(t,e){const{rasterFunctionArguments:r}=t;if(!r)return;(r.rasters||[r.raster]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&h(t,e))}))}function _(t,n){if(n=n??{},"function"in(t=r(t))&&"arguments"in t&&t.arguments){const r=V(t,new Map,n);if(k(r),!r.renderingRule)throw new e("raster-function-helper","Unsupported raster function json.");t=r.renderingRule}if("rasterFunction"in t)return S(t=N(t),n);throw new e("raster-function-helper","unsupported raster function json.")}function R(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}function C(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function N(t){const{rasterFunction:e,rasterFunctionArguments:r}=t,n={};for(const o in r){let t=r[o];const e=o.toLowerCase();if("rasters"===e&&Array.isArray(t))n.rasters=t.map((t=>C(t)?N(t):t));else switch(C(t)&&(t=N(t)),e){case"dra":n.dra=t;break;case"pspower":n.psPower=t;break;case"pszfactor":n.psZFactor=t;break;case"bandids":n.bandIds=t;break;default:n[o[0].toLowerCase()+o.slice(1)]=t}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function S(t,r){const{rasterFunction:n,rasterFunctionArguments:o}=t,s=t.outputPixelType?.toLowerCase();if(null==n||!F.has(n))throw new e("raster-function-helper",`unsupported raster function: ${n}`);const a=F.get(n),i=("function"==typeof a.ctor?a.ctor:a.ctor.default).fromJSON({...t,outputPixelType:s}),{rasterArgumentNames:c}=i,u=[],m=R(o,c),l="rasters"===c[0],p=[];for(let e=0;e<m.length;e++){const t=m[e];let n;null==t||"string"==typeof t&&t.startsWith("$")?u.push(r?.raster):"string"==typeof t?r[t]&&u.push(r[t]):"number"!=typeof t&&"rasterFunction"in t&&(n=S(t,r),l||(i.functionArguments[c[e]]=n),u.push(n)),l&&p.push(n??t)}if(l&&(i.functionArguments.rasters=p),r){i.sourceRasters=u;const t=r.raster?.url;t&&(i.mainPrimaryRasterId=t)}return i}function w(t,e){if(t&&e)for(const r in t){const n=t[r];n&&"object"==typeof n&&"type"in n&&("RasterFunctionTemplate"===n.type?w(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function v(t,r){if(!t||"object"!=typeof t)return t;const{value:n}=t;if(!n||"object"!=typeof n)return t.isDataset?"$$":n;if(Array.isArray(n))return 0===n.length?[]:n.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?v(t,r):t));if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&"Scalar"!==n.type)return"$$";if(!("type"in n))return n;let o=n;switch(n.type){case"Scalar":o=n.value;break;case"AlgorithmicColorRamp":o=D(n);break;case"MultiPartColorRamp":o={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(D)};break;case"ArgumentArray":if(n.elements?.length&&"RasterStatistics"!==n.elements[0].type){const t=[];for(let o=0;o<n.elements.length;o++){const s=n.elements[o],{type:a}=s;if(a)if("RasterFunctionTemplate"===a){const{renderingRule:e}=V(s,r);t.push(e),null!=s._object_id&&r.set(s._object_id,e)}else{if("RasterFunctionVariable"!==a)throw new e("raster-function-helper","unsupported raster function json.");{const e=v(s,r);t.push(e),null!=s._object_id&&r.set(s._object_id,e)}}else t.push(s)}o=t}else o=n.elements}return null!=n._object_id&&r.set(n._object_id,o),o}function D(e){const r=e.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:o}=e;if(!Array.isArray(n)){const{r:e,g:r,b:o}=t({h:n.Hue,s:n.Saturation,v:n.Value});n=[e,r,o,n.AlphaValue]}if(!Array.isArray(o)){const{r:e,g:r,b:n}=t({h:o.Hue,s:o.Saturation,v:o.Value});o=[e,r,n,o.AlphaValue]}return{type:"algorithmic",algorithm:r,fromColor:n,toColor:o}}function V(t,e,r){r&&w(t,r);const n={renderingRule:{},templates:e};return T(t,n),n}function T(t,e){if(!t||!e.renderingRule)return;const{renderingRule:r,templates:n}=e,{function:o,arguments:s,_object_id:a}=t;if(!o||!s)return;null!=a&&n.set(a,r),r.rasterFunction=o.type.replace("Function",""),r.outputPixelType=o.pixelType;const i={};r.rasterFunctionArguments=i;for(const c in s){if("type"===c||"object_id"===c||"_object_ref_id"===c)continue;const t=s[c];t&&"object"==typeof t&&"type"in t&&("RasterFunctionTemplate"===t.type||"RasterFunctionVariable"===t.type)?("RasterFunctionVariable"===t.type?i[c]=v(t,n):(r.rasterFunctionArguments[c]={},T(t,{renderingRule:r.rasterFunctionArguments[c],templates:n})),null!=t._object_id&&n.set(t._object_id,i[c])):i[c]=t}switch(i.DEM&&!i.Raster&&(i.Raster=i.DEM,delete i.DEM),r.rasterFunction){case"Stretch":x(i);break;case"Colormap":E(i);break;case"Convolution":M(i);break;case"Mask":$(i)}}function k(t){const{renderingRule:r,templates:n}=t;if("object"!=typeof r||!r?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:o}=r;for(const s in o){const t=o[s],r="_object_ref_id"===s?t:t&&"object"==typeof t&&"_object_ref_id"in t?t._object_ref_id:null;if(null==r)t&&"object"==typeof t&&(t.rasterFunctionArguments&&k({renderingRule:t,templates:n}),Array.isArray(t)&&t.forEach(((o,s)=>{if("object"==typeof o)if(null!=o._object_ref_id){if(!n.has(o._object_ref_id))throw new e("raster-function-helper",`unsupported raster function json. _object_ref_id: ${t} does not exist`);const a=n.get(r);a&&"object"==typeof a?Object.assign(o,a):t[s]=a}else k({renderingRule:o,templates:n})})));else{if(!n.has(r))throw new e("raster-function-helper",`unsupported raster function json. _object_ref_id: ${r} does not exist`);const t=n.get(r);"_object_ref_id"!==s?o[s]=t:t&&"object"==typeof t&&Object.assign(o,t)}}}function x(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function E(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}function M(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function $(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}F.set("Aspect",{desc:"Aspect Function",ctor:n,rasterArgumentNames:["raster"]}),F.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:o,rasterArgumentNames:["raster"]}),F.set("Colormap",{desc:"Colormap Function",ctor:s,rasterArgumentNames:["raster"]}),F.set("CompositeBand",{desc:"CompositeBand Function",ctor:a,rasterArgumentNames:["rasters"]}),F.set("Convolution",{desc:"Convolution Function",ctor:i,rasterArgumentNames:["raster"]}),F.set("ExtractBand",{desc:"ExtractBand Function",ctor:u,rasterArgumentNames:["raster"]}),F.set("Curvature",{desc:"Curvature Function",ctor:c,rasterArgumentNames:["raster"]}),F.set("Local",{desc:"Local Function",ctor:m,rasterArgumentNames:["rasters"]}),F.set("Mask",{desc:"Mask Function",ctor:l,rasterArgumentNames:["raster"]}),F.set("NDVI",{desc:"NDVI Function",ctor:p,rasterArgumentNames:["raster"]}),F.set("Remap",{desc:"Remap Function",ctor:f,rasterArgumentNames:["raster"]}),F.set("Slope",{desc:"Slope Function",ctor:d,rasterArgumentNames:["raster"]}),F.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:g,rasterArgumentNames:["raster"]}),F.set("Stretch",{desc:"Stretch Function",ctor:b,rasterArgumentNames:["raster"]}),F.set("Table",{desc:"Attribute Table Function",ctor:y,rasterArgumentNames:["raster"]});export{_ as create,h as getPrimaryRasterUrls,R as getRasterValues,A as getSupportedFunctions,j as register};
