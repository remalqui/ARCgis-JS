/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import r from"../../request.js";import o from"../../core/Handles.js";import{JSONSupport as s}from"../../core/JSONSupport.js";import{clone as t}from"../../core/lang.js";import{on as i,sync as a}from"../../core/reactiveUtils.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../core/accessorSupport/ensureType.js";import{reader as n}from"../../core/accessorSupport/decorators/reader.js";import{subclass as c}from"../../core/accessorSupport/decorators/subclass.js";import{persistable as l}from"../../core/accessorSupport/decorators/persistable.js";import m from"./PolygonCollection.js";import{f as u}from"../../chunks/persistableUrlUtils.js";var h;let g=h=class extends s{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new m,this._geometriesSource=null,this._handles=new o}initialize(){this._handles.add(i((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),a))}destroy(){this._handles.destroy()}readGeometries(e,r,o){Array.isArray(e)?this.geometries=m.fromJSON(e,o):this._geometriesSource={url:u(e,o),context:o}}async loadGeometries(e,o){if(null==this._geometriesSource)return;const{url:s,context:t}=this._geometriesSource,i=await r(s,{responseType:"json",signal:o?.signal}),a=e.toJSON(),p=i.data.map((e=>({...e,spatialReference:a})));this.geometries=m.fromJSON(p,t),this._geometriesSource=null}clone(){const e=new h({geometries:t(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};e([p({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],g.prototype,"spatialRelationship",void 0),e([p({type:m,nonNullable:!0,json:{write:!0}}),l({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],g.prototype,"geometries",void 0),e([n(["web-scene","portal-item"],"geometries")],g.prototype,"readGeometries",null),g=h=e([c("esri.layers.support.SceneFilter")],g);const d=g;export{d as default};
