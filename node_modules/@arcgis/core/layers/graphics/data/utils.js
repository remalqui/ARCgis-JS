/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{JSONMap as e}from"../../../core/jsonMap.js";import{getUnitString as t}from"../../../core/unitUtils.js";import{canProjectWithoutEngine as i}from"../../../geometry/projection.js";import{getGeometryExtent as r}from"../../../geometry/support/extentUtils.js";import{fromJSON as n,isExtent as o,isPolygon as s,isPolyline as l}from"../../../geometry/support/jsonUtils.js";import{normalizeCentralMeridian as a}from"../../../geometry/support/normalizeUtils.js";import{equals as m,isGeographic as u,isWebMercator as f,WGS84 as c}from"../../../geometry/support/spatialReferenceUtils.js";import{quantizeOptimizedGeometry as p,convertToPoint as y,generalizeOptimizedGeometry as g,removeZMValues as S,convertToPolyline as R,convertToPolygon as w,convertToMultipoint as h}from"../featureConversionUtils.js";import j from"../OptimizedGeometry.js";import{checkProjectionSupport as d,project as x}from"./projectionSupport.js";const U=new e({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"}),M=Object.freeze({}),O=new j,F=new j,N=new j,_={esriGeometryPoint:y,esriGeometryPolyline:R,esriGeometryPolygon:w,esriGeometryMultipoint:h};function G(e,t,i,r=e.hasZ,n=e.hasM){if(null==t)return null;const o=e.hasZ&&r,s=e.hasM&&n;if(i){const l=p(N,t,e.hasZ,e.hasM,"esriGeometryPoint",i,r,n);return y(l,o,s)}return y(t,o,s)}function P(e,t,i,r,n,o,s=t,l=i){const a=t&&s,m=i&&l,u=null!=r?"coords"in r?r:r.geometry:null;if(null==u)return null;if(n){let r=g(F,u,t,i,e,n,s,l);return o&&(r=p(N,r,a,m,e,o)),_[e]?.(r,a,m)??null}if(o){const r=p(N,u,t,i,e,o,s,l);return _[e]?.(r,a,m)??null}return S(O,u,t,i,s,l),_[e]?.(O,a,m)??null}async function v(e,t,i){const{outFields:r,orderByFields:n,groupByFieldsForStatistics:o,outStatistics:s}=e;if(r)for(let l=0;l<r.length;l++)r[l]=r[l].trim();if(n)for(let l=0;l<n.length;l++)n[l]=n[l].trim();if(o)for(let l=0;l<o.length;l++)o[l]=o[l].trim();if(s)for(let l=0;l<s.length;l++)s[l].onStatisticField&&(s[l].onStatisticField=s[l].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),z(e,t,i)}async function z(e,t,i){if(!e)return null;let{where:o}=e;if(e.where=o=o&&o.trim(),(!o||/^1 *= *1$/.test(o)||t&&t===o)&&(e.where=null),!e.geometry)return e;let s=await A(e);if(e.distance=0,e.units=null,"esriSpatialRelEnvelopeIntersects"===e.spatialRel){const{spatialReference:t}=e.geometry;s=r(s),s.spatialReference=t}if(s){await d(s.spatialReference,i),s=b(s,i);const t=(await a(n(s)))[0];if(null==t)throw M;const r="quantizationParameters"in e&&e.quantizationParameters?.tolerance||"maxAllowableOffset"in e&&e.maxAllowableOffset||0,o=r&&J(s,i)?{densificationStep:8*r}:void 0,l=t.toJSON(),m=await x(l,l.spatialReference,i,o);if(!m)throw M;m.spatialReference=i,e.geometry=m}return e}function J(e,t){if(!e)return!1;const r=e.spatialReference;return(o(e)||s(e)||l(e))&&!m(r,t)&&!i(r,t)}function b(e,t){const i=e.spatialReference;return J(e,t)&&o(e)?{spatialReference:i,rings:[[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]]}:e}async function A(e){const{distance:i,units:r}=e,n=e.geometry;if(null==i||"vertexAttributes"in n)return n;const o=n.spatialReference,s=r?U.fromJSON(r):t(o),l=o&&(u(o)||f(o))?n:await d(o,c).then((()=>x(n,c)));return(await B())(l.spatialReference,l,i,s)}async function B(){return(await import("../../../geometry/geometryEngineJSON.js")).geodesicBuffer}function Z(e){return e&&q in e?JSON.parse(JSON.stringify(e,E)):e}const q="_geVersion",E=(e,t)=>e!==q?t:void 0;export{M as QUERY_ENGINE_EMPTY_RESULT,Z as cleanFromGeometryEngine,P as getGeometry,v as normalizeQuery,z as normalizeQueryLike,G as transformCentroid};
