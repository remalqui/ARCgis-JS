/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../../../../core/Error.js";import{getJsonType as t,isPoint as i}from"../../../../geometry/support/jsonUtils.js";import{WGS84 as s}from"../../../../geometry/support/spatialReferenceUtils.js";import{convertFromFeatures as n,convertToFeature as r,convertFromFeature as a}from"../../featureConversionUtils.js";import{initialObjectId as l,findLastObjectIdFromFeatures as o}from"../../objectIdUtils.js";import u from"../../data/FeatureStore.js";import{checkProjectionSupport as d,project as p}from"../../data/projectionSupport.js";import{QueryEngine as f}from"../../data/QueryEngine.js";import{createDefaultAttributesFunction as c,createDrawingInfo as y,createDefaultTemplate as m}from"./clientSideDefaults.js";import{loadGeometryEngineForSimplify as h,createFeatureEditErrorResult as g,mixAttributes as I,createFeatureEditSuccessResult as b,simplify as F}from"./sourceUtils.js";import j from"../../../support/FieldsIndex.js";import{kebabDict as _}from"../../../support/fieldType.js";import{getFieldDefaultValue as E}from"../../../support/fieldUtils.js";const x=s,T={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:s},R={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function q(e){return i(e)?null!=e.z:!!e.hasZ}function w(e){return i(e)?null!=e.m:!!e.hasM}class D{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(t){const i=[],{features:s}=t,n=this._inferLayerProperties(s,t.fields),r=t.fields||[],a=null!=t.hasM?t.hasM:!!n.hasM,p=null!=t.hasZ?t.hasZ:!!n.hasZ,h=!t.spatialReference&&!n.spatialReference,g=h?x:t.spatialReference||n.spatialReference,I=h?T:null,b=t.geometryType||n.geometryType,F=!b;let q=t.objectIdField||n.objectIdField,w=t.timeInfo;if(!F&&(h&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!b))throw new e("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!q)throw new e("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(n.objectIdField&&q!==n.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${q}" doesn't match the field name "${n.objectIdField}", found in the provided fields`}),q=n.objectIdField),q&&!n.objectIdField){let e=null;r.some((t=>t.name===q&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):r.unshift({alias:q,name:q,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const l of r){if(null==l.name&&(l.name=l.alias),null==l.alias&&(l.alias=l.name),!l.name)throw new e("feature-layer:invalid-field-name","field name is missing",{field:l});if(l.name===q&&(l.type="esriFieldTypeOID"),!_.jsonValues.includes(l.type))throw new e("feature-layer:invalid-field-type",`invalid type for field "${l.name}"`,{field:l})}const D={};for(const e of r)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){const t=E(e);void 0!==t&&(D[e.name]=t)}if(this._fieldsIndex=new j(r),this._createDefaultAttributes=c(D,q),w){if(w.startTimeField){const e=this._fieldsIndex.get(w.startTimeField);e?(w.startTimeField=e.name,e.type="esriFieldTypeDate"):w.startTimeField=null}if(w.endTimeField){const e=this._fieldsIndex.get(w.endTimeField);e?(w.endTimeField=e.name,e.type="esriFieldTypeDate"):w.endTimeField=null}if(w.trackIdField){const e=this._fieldsIndex.get(w.trackIdField);e?w.trackIdField=e.name:(w.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:w}}))}w.startTimeField||w.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:w}}),w=null)}const O={warnings:i,featureErrors:[],layerDefinition:{...R,drawingInfo:y(b),templates:m(D),extent:I,geometryType:b,objectIdField:q,fields:r,hasZ:p,hasM:a,timeInfo:w},assignedObjectIds:{}};if(this._queryEngine=new f({fields:r,geometryType:b,hasM:a,hasZ:p,objectIdField:q,spatialReference:g,featureStore:new u({geometryType:b,hasM:a,hasZ:p}),timeInfo:w,cacheSpatialQueries:!0}),!s||!s.length)return this._nextObjectId=l,O;const S=o(q,s);return this._nextObjectId=S+1,await d(s,g),this._loadInitialFeatures(O,s)}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([h(t,i),d(e.adds,t),d(e.updates,t)]),this._applyEdits(e)}queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_inferLayerProperties(e,i){let s,n,r=null,a=null,l=null;for(const o of e){const e=o.geometry;if(null!=e&&(r||(r=t(e)),a||(a=e.spatialReference),null==s&&(s=q(e)),null==n&&(n=w(e)),r&&a&&null!=s&&null!=n))break}if(i&&i.length){let e=null;i.some((t=>{const i="esriFieldTypeOID"===t.type,s=!t.type&&t.name&&"objectid"===t.name.toLowerCase();return e=t,i||s}))&&(l=e.name)}return{geometryType:r,spatialReference:a,objectIdField:l,hasM:n,hasZ:s}}async _loadInitialFeatures(e,i){const{geometryType:s,hasM:r,hasZ:a,objectIdField:l,spatialReference:o,featureStore:u}=this._queryEngine,d=[];for(const n of i){if(null!=n.uid&&(e.assignedObjectIds[n.uid]=-1),n.geometry&&s!==t(n.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const i=this._createDefaultAttributes(),r=I(this._fieldsIndex,i,n.attributes,!0,e.warnings);r?e.featureErrors.push(r):(this._assignObjectId(i,n.attributes,!0),n.attributes=i,null!=n.uid&&(e.assignedObjectIds[n.uid]=n.attributes[l]),null!=n.geometry&&(n.geometry=p(n.geometry,n.geometry.spatialReference,o)),d.push(n))}u.addMany(n([],d,s,a,r,l));const{fullExtent:f,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=f,c){const{start:t,end:i}=c;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}async _applyEdits(e){const{adds:t,updates:i,deletes:s}=e,n={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(n,t),i&&i.length&&this._applyUpdateEdits(n,i),s&&s.length){for(const e of s)n.deleteResults.push(b(e));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:r,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:r,timeExtent:a,featureEditResults:n}}_applyAddEdits(e,i){const{addResults:s}=e,{geometryType:r,hasM:a,hasZ:l,objectIdField:o,spatialReference:u,featureStore:d}=this._queryEngine,f=[];for(const n of i){if(n.geometry&&r!==t(n.geometry)){s.push(g("Incorrect geometry type."));continue}const i=this._createDefaultAttributes(),a=I(this._fieldsIndex,i,n.attributes);if(a)s.push(a);else{if(this._assignObjectId(i,n.attributes),n.attributes=i,null!=n.uid){const t=n.attributes[o];e.uidToObjectId[n.uid]=t}if(null!=n.geometry){const e=n.geometry.spatialReference??u;n.geometry=p(F(n.geometry,e),e,u)}f.push(n),s.push(b(n.attributes[o]))}}d.addMany(n([],f,r,l,a,o))}_applyUpdateEdits({updateResults:e},i){const{geometryType:s,hasM:n,hasZ:l,objectIdField:o,spatialReference:u,featureStore:d}=this._queryEngine;for(const f of i){const{attributes:i,geometry:c}=f,y=i&&i[o];if(null==y){e.push(g(`Identifier field ${o} missing`));continue}if(!d.has(y)){e.push(g(`Feature with object id ${y} missing`));continue}const m=r(d.getFeature(y),s,l,n);if(null!=c){if(s!==t(c)){e.push(g("Incorrect geometry type."));continue}const i=c.spatialReference??u;m.geometry=p(F(c,i),i,u)}if(i){const t=I(this._fieldsIndex,m.attributes,i);if(t){e.push(t);continue}}d.add(a(m,s,l,n,o)),e.push(b(y))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&t&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++}}export{D as default};
