/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../core/Error.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import"../core/accessorSupport/ensureType.js";import"../core/arrayUtils.js";import"../core/has.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import a from"./FeatureLayer.js";function i(e){return(r,t,o)=>{if(!r)return null;const a=r[0].orientedImageryProperties;return a?.[e]??null}}let s=class extends a{constructor(){super(...arguments),this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery"}get effectiveElevationSource(){const{elevationSource:e,demPathPrefix:r,demPathSuffix:t}=this;if(!e?.url?.trim())return e;let o=e.url.trim();return r?.trim()&&(o=`${r.trim()}/${o}`),t?.trim()&&(o+=`/${t.trim()}`),{...e,url:o}}_verifySource(){if(super._verifySource(),"point"!==this.geometryType)throw new r("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};e([t({json:{type:Number,write:!0,read:{source:"layers",reader:i("cameraHeading")}}})],s.prototype,"cameraHeading",void 0),e([t({json:{type:Number,write:!0,read:{source:"layers",reader:i("cameraHeight")}}})],s.prototype,"cameraHeight",void 0),e([t({json:{type:Number,write:!0,read:{source:"layers",reader:i("cameraPitch")}}})],s.prototype,"cameraPitch",void 0),e([t({json:{type:Number,write:!0,read:{source:"layers",reader:i("cameraRoll")}}})],s.prototype,"cameraRoll",void 0),e([t({json:{type:Number,write:!0,read:{source:"layers",reader:i("coveragePercent")}}})],s.prototype,"coveragePercent",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("demPathPrefix")}}})],s.prototype,"demPathPrefix",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("demPathSuffix")}}})],s.prototype,"demPathSuffix",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("depthImagePathPrefix")}}})],s.prototype,"depthImagePathPrefix",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("depthImagePathSuffix")}}})],s.prototype,"depthImagePathSuffix",void 0),e([t({json:{type:Number,write:!0,read:{source:"layers",reader:i("farDistance")}}})],s.prototype,"farDistance",void 0),e([t({json:{write:!0}})],s.prototype,"geometryType",void 0),e([t({json:{type:Number,write:!0,read:{source:"layers",reader:i("horizontalFieldOfView")}}})],s.prototype,"horizontalFieldOfView",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("horizontalMeasurementUnit")}}})],s.prototype,"horizontalMeasurementUnit",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("imagePathPrefix")}}})],s.prototype,"imagePathPrefix",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("imagePathSuffix")}}})],s.prototype,"imagePathSuffix",void 0),e([t({json:{type:Number,write:!0,read:{source:"layers",reader:i("imageRotation")}}})],s.prototype,"imageRotation",void 0),e([t({type:Number,json:{write:!0,read:{source:"layers",reader:i("maximumDistance")}}})],s.prototype,"maximumDistance",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("nearDistance")}}})],s.prototype,"nearDistance",void 0),e([t({type:["OrientedImageryLayer"]})],s.prototype,"operationalLayerType",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("orientedImageryType")}}})],s.prototype,"orientedImageryType",void 0),e([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],s.prototype,"type",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("verticalFieldOfView")}}})],s.prototype,"verticalFieldOfView",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("verticalMeasurementUnit")}}})],s.prototype,"verticalMeasurementUnit",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("videoPathPrefix")}}})],s.prototype,"videoPathPrefix",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("videoPathSuffix")}}})],s.prototype,"videoPathSuffix",void 0),e([t({json:{write:!0,read:{source:"layers",reader:i("elevationSource")}}})],s.prototype,"elevationSource",void 0),e([t()],s.prototype,"effectiveElevationSource",null),s=e([o("esri.layers.OrientedImageryLayer")],s);const d=s;export{d as default};
