/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../../../Color.js";import"../../../symbols.js";import"../../../core/has.js";import t from"../../../core/Error.js";import{formatDate as n,convertDateFormatToIntlOptions as o}from"../../../intl/date.js";import{round as l}from"../../../renderers/support/numberUtils.js";import i from"../../../renderers/support/pointCloud/PointSizeSplatAlgorithm.js";import s from"../../heuristics/outline.js";import r from"../../statistics/classBreaks.js";import a from"../../statistics/summaryStatistics.js";import{defaultBasemapGroups as u,getBasemapId as m,getBasemapGroup as c}from"../../support/utils.js";import f from"../../../symbols/edges/SketchEdges3D.js";import d from"../../../symbols/edges/SolidEdges3D.js";import{getBackgroundColorTheme as p}from"../../../views/support/colorUtils.js";import y from"../../../symbols/MeshSymbol3D.js";import h from"../../../symbols/FillSymbol3DLayer.js";import b from"../../../symbols/SimpleFillSymbol.js";import w from"../../../symbols/PolygonSymbol3D.js";import g from"../../../symbols/ExtrudeSymbol3DLayer.js";import D from"../../../symbols/SimpleLineSymbol.js";import j from"../../../symbols/LineSymbol3D.js";import S from"../../../symbols/LineSymbol3DLayer.js";import v from"../../../symbols/PathSymbol3DLayer.js";import x from"../../../symbols/SimpleMarkerSymbol.js";import z from"../../../symbols/PointSymbol3D.js";import V from"../../../symbols/IconSymbol3DLayer.js";import L from"../../../symbols/ObjectSymbol3DLayer.js";const k=/^(\d+(\.\d+)?)\s*(%)$/i,U=[0,0,0,.4],T=["hours","minutes","seconds"],F=[...u.light,...u.dark];function I(e,t,l){if("string"==typeof e){const t=l.getField(e);if(t&&"date"===t.type)return t.alias||t.name}else if("number"==typeof e||e instanceof Date){const l=null!=t&&T.includes(t)?"short-date-short-time":"short-date";return n(e,o(l))}return e}function B(e,t,n){return e+t>0&&0>e-t&&n<0?0:e}function M(e,t,n,o,l){const i="90-10"===n&&t?{min:t.classBreakInfos[0].maxValue,max:t.classBreakInfos[t.classBreakInfos.length-1].minValue,avg:null,stddev:null}:e,{avg:s,stddev:r,min:a,max:u}=i,m=C(i,!!o,l??!0);let c=m?m[0]:a,f=m?m[1]:u;return m?{minDataValue:c,maxDataValue:f,defaultValuesUsed:!0}:("above"===n?c=B(s,r,a):"below"===n&&(f=B(s,r,a)),{minDataValue:c,maxDataValue:f,defaultValuesUsed:!1})}function C(e,t,n){let o,l;const i=P({statistics:e,isDate:t});return i.defaultValuesUsed?(o=i.min,l=i.max):!n||null!=e.avg&&e.stddev||(o=e.min,l=e.max),null!=o&&null!=l?[o,l]:null}function P(e){let t,n,o=e&&e.statistics;if(o||(o={}),null==o.min)if(e.isDate){const e=E();t=e[0],n=e[1]}else t=0,n=100;else if(o.min===o.max)if(e.isDate){const e=E(o.min);t=e[0],n=e[1]}else o.min<0?(t=2*o.min,n=0):o.min>0?(t=0,n=2*o.min):(t=0,n=100);return{min:null!=t?t:o.min,max:null!=n?n:o.max,defaultValuesUsed:null!=t||null!=n}}function E(e){const t=("number"==typeof e?new Date(e):new Date).getUTCFullYear();let n=Date.UTC(t,0,1,12,0,0,0),o=Date.UTC(t,11,31,12,0,0,0);return"number"==typeof e&&(e<n&&(n=e),e>o&&(o=e)),[n,o]}function A(t,n){const o=[],l=t.length;for(let i=0;i<n;i++)o.push(new e(t[i%l]));return o}function R({minDataValue:e,maxDataValue:t,defaultValuesUsed:n},o,l,i=!0){return n||"above"===l||"below"===l||"90-10"===l?q(e,t,5):N(o,i)}function Y(e,t){const{avg:n,stddev:o}=e,i=e.min,s=e.max;if(null==n||null==o){const[n,o]=C(e,t,!0);return q(n,o,5)}const r=B(n,o,i),a=s-r,u=r-i,m=Math.max(a,u);return l([r-m,r-m/2,r,m/2+r,r+m],{strictBounds:!0})}function W(e,t){const{min:n,max:o}=t,[i,s,r,a,u]=e,m=null!=n&&i<n,c=null!=o&&u>o;if(null==n||null==o||!m&&!c)return e;const f=m?n:i,d=c?o:u;return l([f,m?f+(r-f)/2:s,r,c?r+(d-r)/2:a,d],{strictBounds:!0})}function q(e,t,n){const o=(t-e)/(n-1),i=[e];for(let l=1;l<=n-2;l++)i.push(e+l*o);return i.push(t),l(i,{strictBounds:!0})}function N({min:e,max:t,avg:n,stddev:o},i=!0){if(null==e||null==t||null==n||null==o)return[];let s=n-o,r=n+o;s<e&&(s=e),r>t&&(r=t),i&&(n=s+(r-s)/2);let a=l([s,r],{strictBounds:!0});return s=a[0],r=a[1],a=[s,s+(n-s)/2,n,n+(r-n)/2,r],l(a,{strictBounds:!0})}function O(e,t,n){switch(t){case"point":case"multipoint":return n?"noDataSize"in e?e.noDataSize:null:"size"in e?e.size:null;case"polyline":return n?"noDataWidth"in e?e.noDataWidth:null:"width"in e?e.width:null;case"polygon":return"size"in e?e.size:null;default:return}}function $(e,t,n){switch(t){case"point":case"multipoint":case"polygon":{if(!("outline"in e))return null;const t={color:e.outline.color,width:e.outline.width};if(null!=n&&t.color){const e=t.color.clone();e.a=n,t.color=e}return t}default:return}}function G(e,t){const{type:n,size:o,color:l,outline:i}=t;let s;switch(e){case"point":case"multipoint":if("2d"===n)s=new x({color:l,size:o,outline:{color:i.color,width:i.width}});else if("3d-flat"===n)s=new z({symbolLayers:[new V({size:o,resource:{primitive:"circle"},material:{color:l},outline:{color:i.color,size:i.width}})]});else if(n?.includes("3d-volumetric")){const e="3d-volumetric-uniform"===n,i=new L({height:o,resource:{primitive:e?"sphere":"cylinder"},material:{color:l}});e||(i.width=t.widthAndDepth,i.depth=t.widthAndDepth),s=new z({symbolLayers:[i]})}break;case"polyline":"2d"===n?s=new D({color:l,width:o}):"3d-flat"===n?s=new j({symbolLayers:[new S({size:o,material:{color:l}})]}):"3d-volumetric"===n&&(s=new j({symbolLayers:[new v({width:"number"==typeof o?o:parseFloat(o),height:"number"==typeof o?o:parseFloat(o),material:{color:l}})]}));break;case"polygon":"2d"===n?s=new b({color:l,outline:{color:i.color,width:i.width}}):"3d-flat"===n?s=new w({symbolLayers:[new h({material:{color:l},outline:{color:i.color,size:i.width}})]}):"3d-volumetric"===n&&(s=new w({symbolLayers:[new g({size:o,material:{color:l}})]}));break;case"mesh":{const e=t.meshInfo?.colorMixMode,n=t.meshInfo?.edgesType;s=new y({symbolLayers:[new h({material:{color:l,colorMixMode:e||null},edges:"solid"===n?new d({color:U}):"sketch"===n?new f({color:U}):null})]});break}}return s}function H(e,n,o){const l=J({layer:e,fields:n});if(l.length)return new t(o,"Unknown fields: "+l.join(", ")+". You can only use fields defined in the layer schema");const i=K({layer:e,fields:n});return i.length?new t(o,"Unsupported fields: "+i.join(", ")+". You can only use fields that are accessible to the renderer i.e. FieldUsageInfo.supportsRenderer must be true"):void 0}function J(e){const t=e.layer;return e.fields.filter((e=>!t.getField(e)))}function K(e){const t=e.layer;return e.fields.filter((e=>{const n=t.getFieldUsageInfo(e);return!n||!n.supportsRenderer}))}async function Q(e,t){const n={layer:e.layer,view:e.view,signal:e.signal},[o,l]=await Promise.all([r(e).catch(oe),t?s(n).catch(oe):null]),i=C({min:o?.minValue,max:o?.maxValue,avg:null,stddev:null},!1,!1);return{result:i?await r({...e,classificationMethod:"equal-interval",numClasses:1,analyzeData:!1,minValue:i[0],maxValue:i[1],normalizationTotal:i[0]+i[1]}):o,defaultValuesUsed:!!i,outlineResult:l}}function X(e){return a(e)}function Z(e,t){let{minSize:n,maxSize:o}=e;if("height"===t){n=((o-n)/2+n)/(2*2.3),o*=2}return{minSize:n,maxSize:o}}function _(e){return k.test(e)}function ee(e){if(null==e)return;const t=e.match(k),n=Number(t[1]);return"%"===t[3]?new i({scaleFactor:n/100}):void 0}function te(e,t,n,o){e.startTime=t instanceof Date?t.getTime():t,e.endTime=n instanceof Date?n.getTime():n,e.units=o,e.field="string"==typeof t?t:"string"==typeof n?n:null}async function ne(e,t){let n=null,o=null;if(!e&&!t)return{basemapId:n,basemapTheme:o};if(!e&&t&&(e=t&&t.map?.basemap),e&&(n=m(e,F,!1),n)){const e=c(n);null!=e&&(o=e)}return n||"2d"!==t?.type||(o=await p(t),null!=o&&(n="dark"===o?"dark-gray":"gray")),{basemapId:n,basemapTheme:o}}function oe(e){const t=e.name?.toLowerCase();if(!t||t?.includes(":insufficient-info")||t?.includes(":insufficient-data"))return null;throw e}export{W as clampAboveAndBelowStopValues,A as createColors,R as createDataValues,q as createDefaultStopValues,N as createStopValues,Y as createStopValuesForAboveBelow,G as createSymbol,oe as errorCallback,I as formatDate,B as getBaseValueForAboveBelow,ne as getBasemapInfo,Q as getClassBreaks,M as getDataRange,C as getDefaultDataRange,ee as getPointSizeAlgorithm,Z as getSizeRangeForAxis,X as getSummaryStatistics,$ as getSymbolOutlineFromScheme,O as getSymbolSizeFromScheme,_ as isValidPointSize,te as updateAgeRendererAuthoringInfoVV,H as verifyBasicFieldValidity};
