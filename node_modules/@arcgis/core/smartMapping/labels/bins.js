/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import"../../intl.js";import e from"../../core/Error.js";import{createLabelExpressionForAggregateField as r,createLabelClass as n}from"./support/utils.js";import{aggregateCountField as t}from"../support/binningUtils.js";import{fetchMessageBundle as i}from"../../intl/messages.js";async function o(r){const{layer:n,renderer:t}=r;if(await n.load(),"binning"!==n.featureReduction?.type)throw new e("bins-label-schemes:invalid-parameters","featureReduction type of the layer is not valid");const i=t||n.featureReduction.renderer;if(!i)throw new e("bins-label-schemes:invalid-parameters","'renderer' is not valid");return{layer:n,renderer:i}}function s(e,r){const n=r.featureReduction;if("fields"in n)for(const t of n.fields)if(t.name.toLowerCase()===e.toLowerCase())return t;return null}async function a(e,t,i,o){const a=s(e,t);if(!a)return null;const l=r(t,i,a,o);return{name:`binning-${e}`,labelingInfo:[n(l,!0)],fieldName:e}}function l(e){let r=[];const n=e.featureReduction;return"fields"in n&&(r=n.fields.map((e=>e.name))),r}async function f(e){const[{renderer:r,layer:n},s]=await Promise.all([o(e),i("esri/smartMapping/t9n/smartMapping")]),f=await a(t,n),c=[],u=l(n).filter((e=>e.toLowerCase()!==t.toLowerCase()));for(const t of u){const e=await a(t,n,r,s.clusters.predominantNoneValue);e&&c.push(e)}return{primaryScheme:f,secondarySchemes:c}}export{f as getLabelSchemes};
