/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import i from"../../core/Error.js";import{numericTypes as e,isDateField as r}from"../../layers/support/fieldUtils.js";import{verifyBasicFieldValidity as s,verifyFieldType as a,verifyFilterValidty as o}from"./support/utils.js";import{verifyBinningParams as t}from"../support/binningUtils.js";import{getNormalizationType as n,getFieldsList as l}from"../support/utils.js";import{binningCapableLayerTypes as p,defaultSupportedLayerTypes as m,createLayerAdapter as f,getLayerTypeLabels as d}from"../support/adapters/support/layerUtils.js";const h=["date",...e];async function u(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new i("histogram:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("histogram:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&t(e,"histogram");const{layer:u,...w}=e,c=e.forBinning?p:m,g=f(u,c,e.forBinning);if(!g)throw new i("histogram:invalid-parameters","'layer' must be one of these types: "+d(c).join(", "));const v={layerAdapter:g,...w};v.normalizationType=n(v);const x=null!=v.signal?{signal:v.signal}:null;await g.load(x);const E=v.valueExpression||v.sqlExpression,y=v.field,q=y?g.getField(y):null,j=!v.classificationMethod||"equal-interval"===v.classificationMethod,z=await l({field:y,normalizationField:v.normalizationField,valueExpression:v.valueExpression}),M=s(g,z,"histogram:invalid-parameters");if(M)throw M;if(q){const e=a(g,q,"histogram:invalid-parameters",h);if(e)throw e;if(r(q)){if(v.normalizationType)throw new i("histogram:invalid-parameters","Normalization is not allowed for date fields");if(!j)throw new i("histogram:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed for date fields")}}else if(E){if(v.normalizationType)throw new i("histogram:invalid-parameters","Normalization is not allowed when 'valueExpression' or 'sqlExpression' is specified");if(!j)throw new i("histogram:invalid-parameters","'classificationMethod' other than 'equal-interval' is not allowed when 'valueExpression' or 'sqlExpression' is specified")}const B=o(v.filter,"histogram:invalid-parameters");if(B)throw B;return v}async function w(i){const{layerAdapter:e,...r}=await u(i);return e.histogram(r)}export{w as default};
