/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{pickRandom as t}from"../../../core/arrayUtils.js";import r from"../../../core/Error.js";import{assertIsSome as i}from"../../../core/maybe.js";import{throwIfAborted as s}from"../../../core/promiseUtils.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/has.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import{isHostedAgolService as o}from"../../../layers/support/arcgisLayerUrl.js";import{isNumericField as l,isDateField as u}from"../../../layers/support/fieldUtils.js";import{generateRenderer as m}from"../../../rest/generateRenderer.js";import c from"../../../rest/support/GenerateRendererParameters.js";import h from"../../../rest/support/StatisticDefinition.js";import p from"../../../rest/support/UniqueValueDefinition.js";import{getArcadeForPredominantCategory as d,getSQLForPredominantCategoryName as f}from"../../statistics/support/predominanceUtils.js";import{mergeWhereClauses as y,getSQLFilterForNormalization as F,getRangeExpr as S}from"../../statistics/support/utils.js";import{WorkerClient as g}from"../../statistics/support/WorkerClient.js";import{FIELD_DELIMITER as v}from"../utils.js";import w from"./InMemoryLayerAdapter.js";import{ensureFeaturesJSON as x,getSummaryStatsQuery as _,getSummaryStatisticsFromFeatureSet as z,getUVQuery as E,getUniqueValuesFromFeatureSet as q,msSinceUnixEpochSQL as T,getFieldExpr as L,defaultNumBins as V,updateQueryWithFeatureFilter as j,getHistogramFromFeatureSet as Q,generateBinParams as b,getDomainsForFields as R,getBins as N,getPredominantCategoriesFromUVInfos as C,getMissingFields as M}from"./support/utils.js";import{processSummaryStatisticsResult as I,createUVResult as B,getEqualIntervalBins as $,createClassBreaksDefinition as k,resolveCBResult as D}from"../../../statistics/utils.js";const O=5,G=2e4,P=4e5;let A=class extends w{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){const e=this.layer;if(!e.get("capabilities.query.supportsStatistics")||"multipatch"===this.geometryType&&!o(e.url)&&e.version<10.5)throw new r(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then((e=>e.features))}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(x)}_summaryStatsFromGenRend(e){const t=e.normalizationType,r=e.normalizationField;return this.classBreaks({field:e.field,numClasses:O,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:"field"===t?r:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then((e=>{let t,r,i;if(e.classBreakInfos?.some((e=>(e.hasAvg&&(t=e),!!t))),t){const e=t.maxValue-t.minValue;r=t.minValue+e/2,i=4*e}const s={min:e.minValue,max:e.maxValue,avg:r,stddev:i};return I(s)}))}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),"percent-of-total"===e.normalizationType&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const r=_(this,e,t),i=await this.layer.queryFeatures(r,{signal:e.signal}),s=z(i,t);return I(s)}_uvFromGenRenderer(e,t){const r=e.field??void 0,i=new p;i.attributeField=r;const s=new c;return s.classificationDefinition=i,this.generateRenderer(s,e.signal).then((e=>{const t={},i=this.getField(r);return e.uniqueValues.forEach((e=>{let r=e.value;null!=r&&""!==r&&("string"!=typeof r||""!==r.trim()&&"<null>"!==r.toLowerCase())||(r=null),null==t[r]?t[r]={count:e.count,data:l(i)&&r?Number(r):r}:t[r].count=t[r].count+e.count})),{count:t}})).then((r=>B(r,[t],e.returnAllCodedValues)))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(E(this,e),{signal:e.signal}))).then((t=>q(t,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:v,view:e.view,signal:e.signal}))).then((r=>B(r,t,e.returnAllCodedValues,v)))}_calcBinsSQL(e,t,r){const i=[],s=t.length;return t.forEach(((t,a)=>{const[n,o]=t;let l=null;l=0!==a||r?a!==s-1||r?y(`${e} >= ${n}`,`${e} ${a===s-1?" <= ":" < "} ${o}`):`${e} >= ${n}`:`${e} < ${o}`,i.push("WHEN ("+l+") THEN "+(a+1))})),["CASE",i.join(" "),"ELSE 0","END"].join(" ")}_getNormalizationTotal(e,t,r,i){return e&&"percent-of-total"===t?this.summaryStatistics({field:e,filter:r,signal:i}).then((e=>e.sum)):Promise.resolve(null)}_getQueryParamsForExpr(e,t){const r=e.valueExpression||e.sqlExpression,i=e.signal;if(!r){const{field:r,normalizationType:s,normalizationField:a}=e,n=r?this.getField(r):null,o=u(n),l={field:r,normalizationType:s,normalizationField:a,normalizationTotal:t,layer:this};return{sqlExpression:o?T(this,r):L(l),sqlWhere:o?null:e.sqlWhere||F({field:r,normalizationType:s,normalizationField:a}),filter:e.filter,signal:i}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:i}}_getDataRange(e,t,r){return null!=t&&null!=r?Promise.resolve({min:t,max:r}):this.summaryStatistics(e).then((e=>({min:e.min,max:e.max})))}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then((t=>{const r=this._getQueryParamsForExpr(e,t);return this._getDataRange(r,e.minValue,e.maxValue).then((i=>{const s=i.min,a=i.max;if(null==s||null==a)return{bins:[],minValue:s,maxValue:a,normalizationTotal:t};const n=e.numBins||V,o=$(s,a,n),l=this._calcBinsSQL(r.sqlExpression,o,null!=e.minValue&&null!=e.maxValue),u=new h({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),m=this.layer.createQuery();return m.where=y(m.where,r.sqlWhere),m.sqlFormat="standard",m.outStatistics=[u],m.groupByFieldsForStatistics=[l],m.orderByFields=[l],j(m,e.filter),this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(m,{signal:r.signal}))).then((e=>Q(e,s,a,n,t)))}))}))}_binParamsFromGenRend(e,t){const{field:r,normalizationType:i,normalizationField:s,signal:a}=e,n=F({field:r,normalizationType:i,normalizationField:s}),o=new c({classificationDefinition:k({field:r,normalizationType:i,normalizationField:s,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numBins||V}),where:y(n,t)});return this.generateRenderer(o,a).then((e=>{const{normalizationTotal:t,classBreaks:a}=e;return b({field:r,normalizationType:i,normalizationField:s,normalizationTotal:t,classBreaks:a,where:n,layer:this})}))}_classBreaksFromGenRend(e){const{field:t,normalizationType:r,normalizationField:i,normalizationTotal:s,signal:a}=e,n=F({field:t,normalizationType:r,normalizationField:i}),o=L({field:t,normalizationType:r,normalizationField:i,normalizationTotal:s,layer:this}),l=S(o,e.minValue,e.maxValue),u=k({field:t,normalizationType:r,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||O}),m=new c;return m.classificationDefinition=u,m.where=y(n,l),this.generateRenderer(m,a).then((t=>D(t,e.classificationMethod)))}async summaryStatistics(e){const{field:t,normalizationType:i,sqlExpression:a,view:n,features:o,useFeaturesInView:l}=e,m=t?this.getField(t):null,c=u(m),h=e.valueExpression||a,p=h&&!a,d=this._hasLocalSource||o||l,f=n&&"3d"===n.type;if(d||p)return p||o||l||f?this._summaryStatsFromMemory(e,m):this._summaryStatsFromClientQuery(e,c);if(!this.supportsSQLExpression&&(c||h||"natural-log"===i||"square-root"===i))throw new r(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(i&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,c)).catch((()=>(s(e.signal),this._summaryStatsFromMemory(e,m))))}async uniqueValues(e){const{valueExpression:t,sqlExpression:r,features:i,useFeaturesInView:a,signal:n}=e,o=t&&(!r||!this.supportsSQLExpression),l=this._hasLocalSource||i||a||o,u=e.view,m=u&&"3d"===u.type,c=await R(e,this);return l?o||i||a||m?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c):this._uvFromServiceQuery(e,c).catch((t=>(s(n),!e.field||e.field2||e.field3||e.filter?t:this._uvFromGenRenderer(e,c[0])))).catch((()=>(s(n),m?this._uvFromMemory(e,c):this._uvFromClientQuery(e,c))))}async histogram(e){const{field:t,normalizationType:i,normalizationField:s,classificationMethod:a,view:n,filter:o,signal:l}=e,m=t?this.getField(t):null,c=u(m),h=e.valueExpression||e.sqlExpression,p=h&&!e.sqlExpression,d=this._hasLocalSource||e.features||e.useFeaturesInView||p,f=this.supportsSQLExpression,y=!a||"equal-interval"===a,F=e.minValue,g=e.maxValue,v=null!=F&&null!=g,w=e.numBins||V;if(d)return this._histogramFromMemory(e);if((h||f)&&y){if(!f&&(h||"natural-log"===i||"square-root"===i))throw new r(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(c&&y)throw new r(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return i||!y?this._binParamsFromGenRend(e).then((a=>{if(!v)return N(this,a,t,w,n,o,l);if(F>a.max||g<a.min)throw new r(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(y)return N(this,{min:F,max:g,sqlExpr:a.sqlExpr,excludeZerosExpr:a.excludeZerosExpr},t,w,n,o,l);{const r={field:t,normalizationType:i,normalizationField:s,normalizationTotal:a.normTotal,layer:this},u=L(r),m=S(u,F,g);return this._binParamsFromGenRend(e,m).then((e=>N(this,e,t,w,n,o,l)))}})):this._histogramForField(e)}async classBreaks(e){const t=!1!==e.analyzeData,r=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;if(t&&r)return this._classBreaksFromMemory(e);return(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch((()=>(s(e.signal),this._classBreaksFromMemory(e))))}async queryFeatureCount(e){if(this._hasLocalSource)throw new r(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,i=t.createQuery();return i.where=y(i.where,e.whereClause),j(i,e.filter),t.queryFeatureCount(i,{signal:e.signal})}async generateRenderer(e,t){const i=this.layer;if(this._hasLocalSource||i.version<10.1)throw new r(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const s=i.createQuery();return e.where=y(e.where,s.where),m(i.parsedUrl.path,{source:i.dynamicDataSource??void 0,gdbVersion:i.gdbVersion??void 0},e,{signal:t})}async heatmapStatistics(e){const{field:t,fieldOffset:r,view:i,signal:s}=e;return(t&&null==r?this.summaryStatistics({field:t,view:i,signal:s}):Promise.resolve(null)).then((t=>{let i=r||0;if(t){const{count:e,min:r,max:s}=t;e?r===s&&0===r?i=1:s<=0?i="abs":r<0&&(i=-1.01*r):i=1}return this._heatmapStatsFromMemory(e,i).then((e=>({...e,summaryStatistics:t,fieldOffset:i})))}))}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new r(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:i,signal:s}=e,a=d(t),n=f(t),o=i&&this._hasLocalSource?await this._uvFromMemory({valueExpression:a,view:i,signal:s}):await this._uvFromServiceQuery({sqlExpression:n.expression,valueExpression:a,signal:s});return C(o.uniqueValueInfos,t)}async getSampleFeatures(e,r){const{view:a,sampleSize:n,requiredFields:o,returnGeometry:l,filter:u,signal:m}=e,c=this.layer.createQuery(),h=1,p="json"===r;c.outSpatialReference=e.spatialReference||a&&a.spatialReference,c.returnGeometry=!!l,c.outFields=o,j(c,u);let d=[],f=!1;if(a)try{const e=await a.whenLayerView(this.layer);if(f=!M(this,o,e).length,f&&(d=await this._fetchFeaturesFromMemory(e,c,m,r),d.length&&null!=n&&n>0&&n<=d.length))return t(d,n,h)}catch(y){s(m)}try{if(this._hasLocalSource)return f?d:p?this._fetchFeaturesJSONFromService(c,m):this._fetchFeaturesFromService(c,m);const r=await this.queryFeatureCount({view:a,filter:u,signal:m}),s=this.layer.capabilities.query.maxRecordCount;let o=-1===n?r:n;if(o=s&&o>s?s:o,r<=d.length||d.length>=s)return d;i(a,"FeatureLayerAdapter: must have a view");const l=a.extent.width/a.width/a.scale*P;if(c.maxAllowableOffset=e.resolution||l,r<=o)return p?this._fetchFeaturesJSONFromService(c,m):this._fetchFeaturesFromService(c,m);if(r<=G){const e=this.layer.createQuery();j(e,u);const r=await this.layer.queryObjectIds();return c.objectIds=t(r,o,h),p?this._fetchFeaturesJSONFromService(c,m):this._fetchFeaturesFromService(c,m)}return this.layer.get("capabilities.query.supportsPagination")&&(c.num=Math.min(o,G)),p?this._fetchFeaturesJSONFromService(c,m):this._fetchFeaturesFromService(c,m)}catch(y){return s(m),d}}load(e){const t=this.layer.load(e).then((async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=t.get("capabilities.query.supportsSqlExpression"),this._hasLocalSource=!t.url&&!!t.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent=t.fullExtent,this.workerClient=g.getInstance(),await this.workerClient.open(e.signal)}));return this.addResolvingPromise(t),Promise.resolve(this)}};e([a({constructOnly:!0})],A.prototype,"layer",void 0),A=e([n("esri.smartMapping.support.adapters.FeatureLayerAdapter")],A);const U=A;export{U as default};
