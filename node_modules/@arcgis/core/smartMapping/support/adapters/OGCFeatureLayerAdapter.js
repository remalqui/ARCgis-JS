/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{pickRandom as t}from"../../../core/arrayUtils.js";import r from"../../../core/Error.js";import{whenOnce as s}from"../../../core/reactiveUtils.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/has.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{isDateField as i}from"../../../layers/support/fieldUtils.js";import{getArcadeForPredominantCategory as o}from"../../statistics/support/predominanceUtils.js";import{mergeWhereClauses as n}from"../../statistics/support/utils.js";import{WorkerClient as u}from"../../statistics/support/WorkerClient.js";import{FIELD_DELIMITER as l}from"../utils.js";import p from"./FeatureLayerAdapter.js";import{getSummaryStatsQuery as c,getSummaryStatisticsFromFeatureSet as d,getUVQuery as f,getUniqueValuesFromFeatureSet as m,getDomainsForFields as y,getPredominantCategoriesFromUVInfos as h,getMissingFields as w}from"./support/utils.js";import{processSummaryStatisticsResult as g,createUVResult as F}from"../../../statistics/utils.js";let v=class extends p{constructor(e){super(e)}async _waitForLayerViewUpdate(e){if(!e)throw new r("ogc-feature-layer-adapter:insufficient-data","layerView is required to fetch the features");await s((()=>!e.updating))}async _summaryStatsFromClientQuery(e,t){const{signal:a,view:i}=e;if(!i)throw new r("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const o=c(this,e,t),n=await i.whenLayerView(this.layer);await s((()=>!n.updating),a);const u=await n.queryFeatures(o,{signal:a}),l=d(u,t);return g(l)}async _uvFromClientQuery(e,t){const{signal:a,view:i}=e;if(!i)throw new r("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const o=f(this,e),n=await i.whenLayerView(this.layer);await s((()=>!n.updating),a);const u=await n.queryFeatures(o,{signal:a}),p=await m(u,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:l,view:e.view,signal:e.signal});return F(p,t,e.returnAllCodedValues,l)}summaryStatistics(e){const{field:t,valueExpression:s,sqlExpression:a,features:o,view:n}=e,u=t?this.getField(t):null,l=i(u),p=!!s,c="3d"===n?.type;if(!s&&a&&!this.supportsSQLExpression)throw new r("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return p||o||c?this._summaryStatsFromMemory(e,u):this._summaryStatsFromClientQuery(e,l)}async uniqueValues(e){const{valueExpression:t,sqlExpression:s,features:a,view:i}=e,o=await y(e,this),n=!!t,u="3d"===i?.type;if(!t&&s&&!this.supportsSQLExpression)throw new r("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return n||a||u?this._uvFromMemory(e,o):this._uvFromClientQuery(e,o)}histogram(e){const{features:t,valueExpression:s,normalizationType:a,sqlExpression:i}=e,o=t||!!s;if(!s&&i&&!this.supportsSQLExpression)throw new r("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return o||a?this._histogramFromMemory(e):this._histogramForField(e)}classBreaks(e){return!1!==e.analyzeData?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:i}=e;if(!a)throw new r("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const o=this.layer.createQuery();o.where=n(o.where,t);const u=await a.whenLayerView(this.layer);return await s((()=>!u.updating),i),u.queryFeatureCount(o,{signal:i})}generateRenderer(e,t){throw new r("ogc-feature-layer-adapter:not-supported","OGCFeatureLayer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:r,signal:s}=e,a=o(t),i=await this._uvFromMemory({valueExpression:a,view:r,signal:s});return h(i.uniqueValueInfos,t)}async getSampleFeatures(e,s){const{view:a,sampleSize:i,requiredFields:o,returnGeometry:n,signal:u}=e,l=this.layer.createQuery(),p=1;if(l.outSpatialReference=e.spatialReference||a&&a.spatialReference,l.returnGeometry=!!n,l.outFields=o,!a)throw new r("ogc-feature-layer-adapter:not-supported","view is required to get sample features for OGCFeatureLayer");const c=await a.whenLayerView(this.layer);if(w(this,o,c).length)throw new r("ogc-feature-layer-adapter:not-supported","Required fields need to be passed in the outFields for OGCFeatureLayer");const d=await this._fetchFeaturesFromMemory(c,l,u,s),f=null!=i&&i>0&&i<=d.length?i:d.length;return t(d,f,p)}load(e){const t=this.layer.load(e).then((async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=t.get("capabilities.query.supportsSqlExpression"),this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent=t.fullExtent,this.workerClient=u.getInstance(),await this.workerClient.open(e.signal)}));return this.addResolvingPromise(t),Promise.resolve(this)}};v=e([a("esri.smartMapping.support.adapters.OGCFeatureLayerAdapter")],v);const q=v;export{q as default};
