/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../../Color.js";import{isSome as o}from"../../core/arrayUtils.js";import{createColors as t}from"../renderers/support/utils.js";import n from"./support/colors.js";import{createThemes as r,getThemesforBasemap as a,getRawSchemes as i,filterSchemesByName as s,filterSchemesByTag as m}from"./support/symbologyUtils.js";const c={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"}},l=["vibrant-rainbow","cat-dark","predominant-v2","predominant-v1","predominance-race","desert-blooms","tropical-bliss","under-the-sea","ocean-bay","cat-light","predominant-v4","predominance-money","predominant-v3","predominance-race-ethnic","pastel-chalk","predominance-rainbow","predominance-sequence"],p=r({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for visualizing features using the density of randomly placed dots.",schemes:{default:{light:{primary:"predominant-v5",secondary:l,common:{outline:c.light,fillOpacity:.8}},dark:{primary:"predominant-v5",secondary:l,common:{outline:c.dark,fillOpacity:.8}}}}}}});function u(e){return a(p,e)}function d(e){const t="default",n=i({basemap:e.basemap,basemapTheme:e.basemapTheme,theme:p.get(t)});if(!n)return;const{schemesInfo:r,basemapId:a,basemapTheme:s}=n,m=r.common,c=e.numColors;return{primaryScheme:b(r.primary,m,c),secondarySchemes:r.secondary.map((e=>b(e,m,c))).filter(o),basemapId:a,basemapTheme:s}}function f(e){return s(e.name,d(e))}function h(e){return m(e.includedTags,e.excludedTags,d(e))}function y(o){if(!o)return;const t={...o};return t.tags=[...t.tags],t.colors&&(t.colors=t.colors.map((o=>new e(o)))),t.outline&&(t.outline={color:t.outline.color&&new e(t.outline.color),width:t.outline.width}),t}function b(e,o,r){const a=n[e];if(!a)return;return g({name:a.name,tags:a.tags,colors:a[r]||t(a.stops,r),opacity:o.fillOpacity,outline:o.outline})}function g(o){return{name:o.name,tags:[...o.tags],colors:o.colors.map((o=>new e(o))),outline:{color:new e(o.outline.color),width:o.outline.width},opacity:o.opacity}}export{y as cloneScheme,f as getSchemeByName,d as getSchemes,h as getSchemesByTag,u as getThemes};
